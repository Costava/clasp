The ./build.sh script allows advanced installs that:
- pull in and build cando
- pull in and build jupyter (currently implies cando)
- can put the quicklisp library into a machine-wide directory,
  /opt/clasp/lib/quicklisp.  This is typically needed when
  building clasp for distribution to other people
- can configure compilation so that fasl files live alongside the lisp
  files (namely in /opt/clasp/lib/quicklisp), not in ~/.cache.
  This is typically needed when building clasp for distribution to
  other people and it is broken for everybody else.

If you don't want any of that just use ./waf directly as before.


If you use build.sh then you configure it by creating the non-existing
file ./env-local.sh.  It overrides values in the distributed
env-default.sh.  You should not directly modify the latter because
that creates a git diff.

Control variables:

  To prevent this script from touching the git trees:
    CLASP_BUILD_NO_UPDATES=1
  You need to have checked out git trees.  Neither new
  checkouts not updates will happen.  That applies to all
  git trees under control of lib.sh.  At this time it does
  not apply to sub-trees of Clasp such as SICL.


%%

Config examples:

%%

By default build.sh is configured via env-default.sh to pull in cando
and all quicklisp modules later needed jupyter.  The point about the
latter is that compilation is very slow, so it is taken care of when
building clasp.

By default it also places quicklisp not(!) in the user's homedir and
compiles fasl files in the place where the Lisp files live.

So env looks like this:

export ASDF_OUTPUT_TRANSLATIONS=/:
export CLASP_QUICKLISP_DIRECTORY=/opt/clasp/lib/quicklisp
export CLASP_WANT_CANDO=1
export CLASP_WANT_JUPYTER=1

%%

If you want cando and jupyter, but you want this thing not to change
anything about where quicklisp and fasl files go it looks like this:

export CLASP_QUICKLISP_HOMEDIR=1
export CLASP_WANT_CANDO=1
export CLASP_WANT_JUPYTER=1

Obviously you can't distribute the result.

%%

This configuration makes ./build.sh ... behave like ./waf ...

export CLASP_QUICKLISP_HOMEDIR=1
export CLASP_WANT_CANDO=""
export CLASP_WANT_JUPYTER=""

%%

NOTES:

- if you want kill a variable that is set in env-default.sh in
  env-local.sh set it to the empty string:
    CLASP_WANT_CANDO=""
  you do not have to unset it

- normally turning a feature on works with a "1" in the variable.
  For turning things off please use the empty string, not "0",
  (although that probably works right now)

- I did not review the code whether it works correctly if you set
  these variables in your interactive shell.  Please set them in
  env-local.sh
