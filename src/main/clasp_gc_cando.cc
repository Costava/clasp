#ifdef GC_DECLARE_FORWARDS
 class Vector3;
 namespace geom {
    class Color_O;
    class ComplexVectorCoordinate_O;
    class SimpleMDArrayCoordinate_O;
    class BoundingCuboid_O;
    class SimpleVectorCoordinate_O;
    class GeomExposer_O;
    class OMatrix_O;
    class OVector3_O;
    class OVector2_O;
    class MDArrayCoordinate_O;
 };
 namespace clbind {
    class DummyCreator_O;
    class ClassRep_O;
    class ClassRegistry_O;
 };
 namespace core {
    class ComplexVector_byte32_t_O;
    class ClassHolder_O;
    class Bignum_O;
    class SimpleMDArray_byte32_t_O;
    class SimpleVector_double_O;
    class LogicalPathname_O;
    class CatchEnvironment_O;
    class ComplexVector_byte4_t_O;
    class FdSet_O;
    class Lisp_O;
    class VaList_dummy_O;
    class ComplexVector_int32_t_O;
    class NativeVector_float_O;
    class SymbolToEnumConverter_O;
    class DerivableCxxObject_O;
    class SimpleVector_int16_t_O;
    class ClassRepCreator_O;
    class ClosureWithSlots_O;
    class ComplexVector_byte2_t_O;
    class ObjectFile_O;
    class MDArray_int2_t_O;
    class SynonymStream_O;
    class Ratio_O;
    class FuncallableInstance_O;
    class MacroletEnvironment_O;
    class SymbolMacroletEnvironment_O;
    class ConcatenatedStream_O;
    class LambdaListHandler_O;
    class HashTableEqualp_O;
    class HashTableEq_O;
    class DerivableCxxClassCreator_O;
    class FunctionValueEnvironment_O;
    class SimpleMDArray_byte2_t_O;
    class SimpleString_O;
    class SimpleMDArray_int64_t_O;
    class SymbolStorage;
    class SimpleVector_O;
    class StringOutputStream_O;
    class FuncallableInstanceCreator_O;
    class MDArray_byte8_t_O;
    class Real_O;
    class AtomicT_Holder_O;
    class HashTableEql_O;
    class SimpleMDArray_int2_t_O;
    class Function_O;
    class MDArrayCharacter_O;
    class Rational_O;
    class FileStream_O;
    class SimpleMDArray_byte8_t_O;
    class RuntimeVisibleEnvironment_O;
    class IOFileStream_O;
    class WeakPointer_O;
    class MDArray_double_O;
    class TranslationFunctor_O;
    class SimpleVector_int64_t_O;
    class Float_O;
    class SimpleMDArray_byte4_t_O;
    class FileScope_O;
    class ComplexVector_int64_t_O;
    class Pointer_O;
    class MDArray_byte16_t_O;
    class CxxObject_O;
    class GlueEnvironment_O;
    class NativeVector_double_O;
    class SingleDispatchMethod_O;
    class RequiredArgument;
    class Null_O;
    class MDArray_byte4_t_O;
    class Array_O;
    class Symbol_O;
    class SimpleCharacterString_O;
    class SimpleMDArrayCharacter_O;
    class NativeVector_int_O;
    class SpecialForm_O;
    class TagbodyEnvironment_O;
    class Character_dummy_O;
    class MDArray_byte32_t_O;
    class ComplexVector_byte64_t_O;
    class SimpleMDArray_int8_t_O;
    class LoadTimeValues_O;
    class SharpEqualWrapper_O;
    class MDArray_fixnum_O;
    class SimpleVector_int4_t_O;
    class SimpleVector_float_O;
    class ComplexVector_fixnum_O;
    class SimpleVector_byte8_t_O;
    class Readtable_O;
    class FunctionContainerEnvironment_O;
    class SimpleVector_int8_t_O;
    class SimpleBitVector_O;
    class PosixTime_O;
    class LexicalEnvironment_O;
    class DirectoryIterator_O;
    class MDArray_byte2_t_O;
    class SingleDispatchCxxEffectiveMethodFunction_O;
    class Exposer_O;
    class ActivationFrame_O;
    class SimpleMDArrayT_O;
    class SimpleMDArray_int16_t_O;
    class Serializer_O;
    class MDArray_O;
    class SimpleBaseString_O;
    class SimpleVector_byte64_t_O;
    class SimpleVector_byte16_t_O;
    class BitVectorNs_O;
    class CoreExposer_O;
    class SimpleMDArray_byte64_t_O;
    class HashTableEqual_O;
    class PosixTimeDuration_O;
    class Unused_dummy_O;
    class SmallMap_O;
    class Instance_O;
    class BlockEnvironment_O;
    class ComplexVector_size_t_O;
    class General_O;
    class BroadcastStream_O;
    class ExternalObject_O;
    class UserData_O;
    class MDArrayBaseChar_O;
    class Rack_O;
    class WeakKeyHashTable_O;
    class MDArray_int4_t_O;
    class Cons_O;
    class SingleDispatchMethodFunction_O;
    class MDArray_int8_t_O;
    class AuxArgument;
    class Fixnum_dummy_O;
    class SmallMultimap_O;
    class MDArray_int64_t_O;
    class SimpleMDArray_size_t_O;
    class MDArray_int32_t_O;
    class Sigset_O;
    class StringStream_O;
    class DoubleFloat_O;
    class UnwindProtectEnvironment_O;
    class StrNs_O;
    class CxxMethodFunction_O;
    class Environment_O;
    class ValueEnvironment_O;
    class SingleFloat_dummy_O;
    class KeywordArgument;
    class AnsiStream_O;
    class SingleDispatchGenericFunctionClosure_O;
    class SimpleVector_byte32_t_O;
    class SimpleVector_fixnum_O;
    class MDArray_byte64_t_O;
    class SimpleVector_int2_t_O;
    class SimpleMDArray_float_O;
    class RandomState_O;
    class ComplexVector_int16_t_O;
    class SingleDispatchEffectiveMethodFunction_O;
    class Complex_O;
    class SimpleMDArray_double_O;
    class SimpleVector_int32_t_O;
    class SimpleMDArray_int4_t_O;
    class ComplexVector_int8_t_O;
    class ValueFrame_O;
    class ComplexVector_T_O;
    class MDArray_int16_t_O;
    class ComplexVector_int4_t_O;
    class LongFloat_O;
    class FunctionFrame_O;
    class StringInputStream_O;
    class RecursiveDirectoryIterator_O;
    class ComplexVector_int2_t_O;
    class AtomicFixnumHolder_O;
    class ComplexVector_byte16_t_O;
    class MDArrayBit_O;
    class SimpleMDArrayBit_O;
    class HashTableBase_O;
    class EchoStream_O;
    class StrWNs_O;
    class ComplexVector_double_O;
    class Scope_O;
    class IOStreamStream_O;
    class InstanceCreator_O;
    class Path_O;
    class CompileTimeEnvironment_O;
    class SimpleVector_byte4_t_O;
    class Str8Ns_O;
    class Pathname_O;
    class SimpleMDArray_byte16_t_O;
    class AbstractSimpleVector_O;
    class Cache_O;
    class T_O;
    class Number_O;
    class ShortFloat_O;
    class CacheRecord;
    class SymbolClassHolderPair;
    class SimpleMDArray_O;
    class Stream_O;
    class SimpleMDArrayBaseChar_O;
    class Package_O;
    class FileStatus_O;
    class SimpleVector_size_t_O;
    class InvocationHistoryFrameIterator_O;
    class HashTable_O;
    class OptionalArgument;
    class ComplexVector_byte8_t_O;
    class StandardClassCreator_O;
    class ComplexVector_float_O;
    class SourcePosInfo_O;
    class MDArray_float_O;
    class IntArray_O;
    class DirectoryEntry_O;
    class MDArrayT_O;
    class LightUserData_O;
    class Record_O;
    class Integer_O;
    class SimpleMDArray_int32_t_O;
    class ComplexVector_O;
    class SimpleMDArray_fixnum_O;
    class SimpleVector_byte2_t_O;
    class MultiStringBuffer_O;
    class MDArray_size_t_O;
    class TwoWayStream_O;
 };
 namespace chem {
    class SketchFunction_O;
    class Root_O;
    class FFVdw_O;
    class StepReport_O;
    class ConformationCollection_O;
    class RestrainedPiBond_O;
    class FixedNonbondRestraint;
    class NumericalFunction_O;
    class RingCoupling_O;
    class StatusTracker_O;
    class EnergyAtom;
    class RestrainedExoCyclicAtom_O;
    class EnergyComponent_O;
    class RestraintChiral_O;
    class Coupling_O;
    class Matter_O;
    class Stereoisomer_O;
    class PdbWriter_O;
    class TrajectoryFrame_O;
    class Oligomer_O;
    class PlugWithMates_O;
    class PdbMonomerConnectivity_O;
    class BondMatcher_O;
    class EntityNameSetWithCap_O;
    class Topology_O;
    class BondListMatchNode_O;
    class ConformationExplorerEntry_O;
    class PdbReader_O;
    class SpanningLoop_O;
    class AtomTable_O;
    class StereoisomerVirtualAtom_O;
    class CipPrioritizer_O;
    class EnergyImproperRestraint;
    class IterateResidues_O;
    class ProperTorsion_O;
    class VirtualSphere_O;
    class ConstitutionVirtualAtom_O;
    class EnergyNonbond;
    class ResidueList_O;
    class EntityNameSet_O;
    class BeyondThresholdFixedNonbondRestraint;
    class SuperposeEngine_O;
    class TwisterDriver_O;
    class SmartsRoot_O;
    class RestraintDistance_O;
    class ResidueTest_O;
    class EnergySketchStretch;
    class FFParameterBaseDb_O;
    class Command_O;
    class StereoConfiguration_O;
    class FFNonbondCrossTermTable_O;
    class Plug_O;
    class MonomerContext_O;
    class CDFragment_O;
    class IterateBonds_O;
    class RingFinder_O;
    class FFItorDb_O;
    class AtomOrBondMatchNode_O;
    class ResidueOut;
    class EnergyStretch_O;
    class AntechamberBondToAtomTest_O;
    class SearchStatistics_O;
    class Aggregate_O;
    class PdbMonomerDatabase_O;
    class AntechamberFocusAtomMatch_O;
    class InfoDb_O;
    class FFPtor_O;
    class Twister_O;
    class FFVdwDb_O;
    class EnergyFunction_O;
    class MinimizerLog_O;
    class MonomerCoordinates_O;
    class RepresentedEntityNameSet_O;
    class GenericOctree_O;
    class RigidBodyAtomInfo;
    class FFParameter_O;
    class AtomPdbRec;
    class Restraint_O;
    class ChemInfoMatch_O;
    class AtomIndexer_O;
    class CalculatePositionRelativeToOrigin_O;
    class ZMatrixEntry_O;
    class StereoInformation_O;
    class AddIonOctree_O;
    class SpecificContextSet_O;
    class CDNode_O;
    class OligomerPart_Base_O;
    class JumpPlug_O;
    class Angle_O;
    class MacroModelFile_O;
    class BondList_O;
    class ConformationExplorer_O;
    class Mate_O;
    class Logical_O;
    class RigidBodyEnergyFunction_O;
    class EnergyAngle;
    class AtomReference_O;
    class CoordinateSystem_O;
    class SuperposableConformationCollection_O;
    class Bond_O;
    class EnergyPointToLineRestraint_O;
    class EnergyOutOfZPlane;
    class ChemInfoGraph_O;
    class FFItor_O;
    class EnergyRigidBodyComponent_O;
    class EnergyOutOfZPlane_O;
    class EnergyChiralRestraint;
    class BondTest_O;
    class MessageReport_O;
    class CDText_O;
    class KeyEntry;
    class CandoDatabase_O;
    class EnergyStretch;
    class ChemExposer_O;
    class RestraintAngle_O;
    class ConformationExplorerMatch_O;
    class StereoisomerAtoms_O;
    class AbstractLargeSquareMatrix_O;
    class FFBaseDb_O;
    class EntityNameSetBase_O;
    class EnergyAnchorRestraint;
    class Rotamer_O;
    class ZMatrixAngleInternal_O;
    class ImproperTorsion_O;
    class Constitution_O;
    class ZMatrixBondInternal_O;
    class EnergyDihedral_O;
    class AtomInfo;
    class EnergyPeriodicBoundaryConditionsNonbond_O;
    class CalculatePositionUsingInternals_O;
    class CalculatePositionAlongBond_O;
    class FrameRecognizer_O;
    class ConformationExplorerEntryStage_O;
    class OligomerPart_Link_O;
    class AfterMatchBondToAtomTest_O;
    class OriginPlug_O;
    class VirtualAtom_O;
    class AGVertex_O;
    class FFNonbond_O;
    class RestraintFixedNonbond_O;
    class Trajectory_O;
    class EnergyRigidBodyStaple;
    class ForceField_O;
    class AtomReferenceBase_O;
    class SuperposeSelectedAtoms_O;
    class CalculatePosition_O;
    class Residue_O;
    class EnergySketchNonbond_O;
    class EnergyNonbond_O;
    class FFNonbondDb_O;
    class IterateRestraints_O;
    class FFStretch_O;
    class EnergyDihedral;
    class RingClosingMate_O;
    class ConformationCollectionEntry_O;
    class ScoringFunction_O;
    class Chain_O;
    class RootMatchNode_O;
    class WildElementDict_O;
    class ForceMatchReport_O;
    class ZMatrixDihedralInternal_O;
    class ComplexRestraint_O;
    class FFPtorDb_O;
    class DirectionalCoupling_O;
    class IterateAtoms_O;
    class AntechamberRoot_O;
    class RestraintDihedral_O;
    class InPlug_O;
    class RestraintAnchor_O;
    class CombinedForceField_O;
    class CDBond_O;
    class ConstitutionBond_O;
    class Branch_O;
    class FFStretchDb_O;
    class ConstitutionAtoms_O;
    class EnergyRigidBodyStaple_O;
    class Monomer_O;
    class Structure_Old_ListEntry_O;
    class FFTypeRule_O;
    class FFAngleDb_O;
    class BondToAtomTest_O;
    class MoleculeGraph_O;
    class BondLogical_O;
    class StructureComparer_O;
    class BoundingBox_O;
    class ChemInfoNode_O;
    class EstimateStretch;
    class ConstitutionAtom_O;
    class FFAngle_O;
    class EnergyAnchorRestraint_O;
    class AtomTest_O;
    class ReadAmberParameters_O;
    class AGEdge_O;
    class Entity_O;
    class OctNode_O;
    class Structure_Old_List_O;
    class EnergyFixedNonbondRestraint_O;
    class EnergySketchNonbond;
    class OligomerPart_Monomer_O;
    class MonomerPack_O;
    class EnergyChiralRestraint_O;
    class EnergySketchStretch_O;
    class FullLargeSquareMatrix_O;
    class Dimacs_O;
    class ReportBase_O;
    class Molecule_O;
    class ChemDraw_O;
    class SpecificContext_O;
    class Minimizer_O;
    class MapOfMonomerNamesToAtomIndexers_O;
    class ZMatrixInternal_O;
    class Alias_O;
    class FFTypesDb_O;
    class IterateMatter_O;
    class EnergyImproperRestraint_O;
    class StereoisomerAtom_O;
    class AtomIdToAtomMap_O;
    class ZMatrix_O;
    class Atom_O;
    class Isoname_O;
    class OutPlug_O;
    class SparseLargeSquareMatrix_O;
    class EnergyRigidBodyNonbond_O;
    class BondMatchNode_O;
    class PathMessage_O;
    class EnergyAngle_O;
 };
 namespace asttooling {
    class DerivableMatchCallback;
    class AsttoolingExposer_O;
    class DerivableSyntaxOnlyAction;
    class DerivableFrontendActionFactory;
    class DerivableASTFrontendAction;
    class AstVisitor_O;
 };
 namespace mpip {
    class Mpi_O;
 };
 namespace units {
    class Dimension_O;
    class NamedUnit_O;
    class Unit_O;
    class Quantity_O;
    class UnitsExposer_O;
 };
 namespace clasp_ffi {
    class ForeignTypeSpec_O;
    class ForeignData_O;
 };
 namespace llvmo {
    class PointerType_O;
    class GlobalValue_O;
    class UnaryInstruction_O;
    class SequentialType_O;
    class LLVMTargetMachine_O;
    class TargetSubtargetInfo_O;
    class Pass_O;
    class SwitchInst_O;
    class Attribute_O;
    class ExecutionEngine_O;
    class ImmutablePass_O;
    class DICompositeType_O;
    class BlockAddress_O;
    class MCSubtargetInfo_O;
    class DIVariable_O;
    class ArrayType_O;
    class DISubprogram_O;
    class PassManager_O;
    class MDBuilder_O;
    class AtomicRMWInst_O;
    class AttributeSet_O;
    class LandingPadInst_O;
    class Instruction_O;
    class DebugLoc_O;
    class StoreInst_O;
    class ConstantDataSequential_O;
    class DIDerivedType_O;
    class UnreachableInst_O;
    class JITDylib_O;
    class Type_O;
    class FunctionType_O;
    class ReturnInst_O;
    class TargetPassConfig_O;
    class IRBuilderBase_O;
    class Argument_O;
    class APFloat_O;
    class APInt_O;
    class DIBuilder_O;
    class DIBasicType_O;
    class FunctionCallee_O;
    class Constant_O;
    class EngineBuilder_O;
    class BasicBlock_O;
    class DataLayout_O;
    class DIFile_O;
    class VAArgInst_O;
    class MDNode_O;
    class DILexicalBlockBase_O;
    class ClaspJIT_O;
    class IRBuilder_O;
    class DIType_O;
    class Function_O;
    class ResumeInst_O;
    class MetadataAsValue_O;
    class DISubroutineType_O;
    class ConstantStruct_O;
    class LoadInst_O;
    class PassManagerBase_O;
    class StructLayout_O;
    class CompositeType_O;
    class ConstantInt_O;
    class Metadata_O;
    class Value_O;
    class ThreadSafeContext_O;
    class TargetMachine_O;
    class NamedMDNode_O;
    class Triple_O;
    class TargetOptions_O;
    class ConstantDataArray_O;
    class DINodeArray_O;
    class GlobalVariable_O;
    class DINode_O;
    class LLVMContext_O;
    class ConstantFP_O;
    class PassManagerBuilder_O;
    class IntegerType_O;
    class FunctionPassManager_O;
    class CallInst_O;
    class InvokeInst_O;
    class DIExpression_O;
    class Module_O;
    class Target_O;
    class StructType_O;
    class VectorType_O;
    class ConstantExpr_O;
    class ConstantPointerNull_O;
    class ValueAsMetadata_O;
    class AtomicCmpXchgInst_O;
    class FenceInst_O;
    class User_O;
    class TargetLibraryInfoWrapperPass_O;
    class DILocalVariable_O;
    class ModulePass_O;
    class DITypeRefArray_O;
    class DILexicalBlock_O;
    class DILocalScope_O;
    class InsertPoint_O;
    class CallBase_O;
    class UndefValue_O;
    class FunctionPass_O;
    class DICompileUnit_O;
    class MDString_O;
    class DILocation_O;
    class PHINode_O;
    class ConstantArray_O;
    class IndirectBrInst_O;
    class DIScope_O;
    class AllocaInst_O;
    class BranchInst_O;
    class Linker_O;
 };
 namespace mp {
    class ConditionVariable_O;
    class RecursiveMutex_O;
    class Mutex_O;
    class SharedMutex_O;
    class Process_O;
 };
 namespace kinematics {
    class MonomerId_O;
    class RootBondedJoint_O;
    class RingClosingMonomerNode_O;
    class JointTemplate_O;
    class BondedJointTemplate_O;
    class ChiList_O;
    class FoldTree_O;
    class DelayedBondedJoint_O;
    class RotamerSetBase_O;
    class DelayedBondedJointTemplate_O;
    class BackboneDependentRotamerSet_O;
    class BondedJoint_O;
    class KinematicsExposer_O;
    class MonomerBaseNode_O;
    class Rotamer_O;
    class RootBondedJointTemplate_O;
    class Joint_O;
    class OriginJumpJoint_O;
    class AtomTree_O;
    class JumpJoint_O;
    class RotamerSet_O;
    class BondId_O;
    class CheckpointJoint_O;
    class ChainNode_O;
    class AggregateNode_O;
    class Checkpoint_O;
    class MonomerNode_O;
    class ChiDihedral_O;
    class Conformation_O;
    class CheckpointOutPlugJoint_O;
    class BackboneDependentRotamerLibrary_O;
 };
 namespace adapt {
    class ObjectSet_O;
    class IndexedObjectBag_O;
    class StringSet_O;
    class StringList_O;
    class IterateCons_O;
    class SymbolList_O;
    class AdaptExposer_O;
    class QDomNode_O;
    class SymbolSet_O;
 };
#endif // GC_DECLARE_FORWARDS
#if defined(GC_STAMP)
// Attempted to assign stamp to class asttooling::DerivableMatchCallback due to inherit from clang::ast_matchers::MatchFinder::MatchCallback but it already has one due to inheritance from core::T_O
// Attempted to assign stamp to class clbind::Derivable<clang::ast_matchers::MatchFinder::MatchCallback> due to inherit from clang::ast_matchers::MatchFinder::MatchCallback but it already has one due to inheritance from core::T_O
// Attempted to assign stamp to class asttooling::DerivableFrontendActionFactory due to inherit from clang::tooling::ToolAction but it already has one due to inheritance from core::T_O
// Attempted to assign stamp to class clbind::Derivable<clang::tooling::FrontendActionFactory> due to inherit from clang::tooling::ToolAction but it already has one due to inheritance from core::T_O
// Attempted to assign stamp to class asttooling::DerivableASTFrontendAction due to inherit from clang::FrontendAction but it already has one due to inheritance from core::T_O
// Attempted to assign stamp to class clbind::Derivable<clang::ASTFrontendAction> due to inherit from clang::FrontendAction but it already has one due to inheritance from core::T_O
// Attempted to assign stamp to class asttooling::DerivableSyntaxOnlyAction due to inherit from clang::FrontendAction but it already has one due to inheritance from core::T_O
// Attempted to assign stamp to class clbind::Derivable<clang::SyntaxOnlyAction> due to inherit from clang::FrontendAction but it already has one due to inheritance from core::T_O
// Attempted to assign stamp to class asttooling::DerivableASTFrontendAction due to inherit from core::T_O but it already has one due to inheritance from core::DerivableCxxObject_O
// Attempted to assign stamp to class clbind::Derivable<clang::ASTFrontendAction> due to inherit from core::T_O but it already has one due to inheritance from core::DerivableCxxObject_O
// Attempted to assign stamp to class asttooling::DerivableMatchCallback due to inherit from core::T_O but it already has one due to inheritance from core::DerivableCxxObject_O
// Attempted to assign stamp to class clbind::Derivable<clang::ast_matchers::MatchFinder::MatchCallback> due to inherit from core::T_O but it already has one due to inheritance from core::DerivableCxxObject_O
// Attempted to assign stamp to class asttooling::DerivableSyntaxOnlyAction due to inherit from core::T_O but it already has one due to inheritance from core::DerivableCxxObject_O
// Attempted to assign stamp to class clbind::Derivable<clang::SyntaxOnlyAction> due to inherit from core::T_O but it already has one due to inheritance from core::DerivableCxxObject_O
// Attempted to assign stamp to class asttooling::DerivableFrontendActionFactory due to inherit from core::T_O but it already has one due to inheritance from core::DerivableCxxObject_O
// Attempted to assign stamp to class clbind::Derivable<clang::tooling::FrontendActionFactory> due to inherit from core::T_O but it already has one due to inheritance from core::DerivableCxxObject_O
STAMP_null = ADJUST_STAMP(0), 
STAMP_core__T_O = ADJUST_STAMP(7), // Stamp(1)  wtag(3)
STAMP_core__Unused_dummy_O = ADJUST_STAMP(11), // Stamp(2)  wtag(3)
STAMP_core__General_O = ADJUST_STAMP(15), // Stamp(3)  wtag(3)
STAMP_core__MultiStringBuffer_O = ADJUST_STAMP(19), // Stamp(4)  wtag(3)
STAMP_core__LambdaListHandler_O = ADJUST_STAMP(23), // Stamp(5)  wtag(3)
STAMP_llvmo__AttributeSet_O = ADJUST_STAMP(27), // Stamp(6)  wtag(3)
STAMP_core__AtomicT_Holder_O = ADJUST_STAMP(31), // Stamp(7)  wtag(3)
STAMP_core__Pointer_O = ADJUST_STAMP(35), // Stamp(8)  wtag(3)
STAMP_clasp_ffi__ForeignData_O = ADJUST_STAMP(39), // Stamp(9)  wtag(3)
STAMP_core__CxxObject_O = ADJUST_STAMP(43), // Stamp(10)  wtag(3)
STAMP_kinematics__ChiList_O = ADJUST_STAMP(47), // Stamp(11)  wtag(3)
STAMP_chem__NumericalFunction_O = ADJUST_STAMP(51), // Stamp(12)  wtag(3)
STAMP_kinematics__FoldTree_O = ADJUST_STAMP(55), // Stamp(13)  wtag(3)
STAMP_chem__StatusTracker_O = ADJUST_STAMP(59), // Stamp(14)  wtag(3)
STAMP_kinematics__RotamerSetBase_O = ADJUST_STAMP(63), // Stamp(15)  wtag(3)
STAMP_kinematics__BackboneDependentRotamerSet_O = ADJUST_STAMP(67), // Stamp(16)  wtag(3)
STAMP_kinematics__RotamerSet_O = ADJUST_STAMP(71), // Stamp(17)  wtag(3)
STAMP_chem__EnergyComponent_O = ADJUST_STAMP(75), // Stamp(18)  wtag(3)
STAMP_chem__EnergyStretch_O = ADJUST_STAMP(79), // Stamp(19)  wtag(3)
STAMP_chem__EnergyRigidBodyComponent_O = ADJUST_STAMP(83), // Stamp(20)  wtag(3)
STAMP_chem__EnergyRigidBodyStaple_O = ADJUST_STAMP(87), // Stamp(21)  wtag(3)
STAMP_chem__EnergyRigidBodyNonbond_O = ADJUST_STAMP(91), // Stamp(22)  wtag(3)
STAMP_chem__EnergyOutOfZPlane_O = ADJUST_STAMP(95), // Stamp(23)  wtag(3)
STAMP_chem__EnergySketchNonbond_O = ADJUST_STAMP(99), // Stamp(24)  wtag(3)
STAMP_chem__EnergyChiralRestraint_O = ADJUST_STAMP(103), // Stamp(25)  wtag(3)
STAMP_chem__EnergyPointToLineRestraint_O = ADJUST_STAMP(107), // Stamp(26)  wtag(3)
STAMP_chem__EnergyDihedral_O = ADJUST_STAMP(111), // Stamp(27)  wtag(3)
STAMP_chem__EnergyNonbond_O = ADJUST_STAMP(115), // Stamp(28)  wtag(3)
STAMP_chem__EnergyPeriodicBoundaryConditionsNonbond_O = ADJUST_STAMP(119), // Stamp(29)  wtag(3)
STAMP_chem__EnergyAnchorRestraint_O = ADJUST_STAMP(123), // Stamp(30)  wtag(3)
STAMP_chem__EnergyFixedNonbondRestraint_O = ADJUST_STAMP(127), // Stamp(31)  wtag(3)
STAMP_chem__EnergySketchStretch_O = ADJUST_STAMP(131), // Stamp(32)  wtag(3)
STAMP_chem__EnergyImproperRestraint_O = ADJUST_STAMP(135), // Stamp(33)  wtag(3)
STAMP_chem__EnergyAngle_O = ADJUST_STAMP(139), // Stamp(34)  wtag(3)
STAMP_chem__Matter_O = ADJUST_STAMP(143), // Stamp(35)  wtag(3)
STAMP_chem__Aggregate_O = ADJUST_STAMP(147), // Stamp(36)  wtag(3)
STAMP_chem__Atom_O = ADJUST_STAMP(151), // Stamp(37)  wtag(3)
STAMP_chem__VirtualAtom_O = ADJUST_STAMP(155), // Stamp(38)  wtag(3)
STAMP_chem__Residue_O = ADJUST_STAMP(159), // Stamp(39)  wtag(3)
STAMP_chem__Molecule_O = ADJUST_STAMP(163), // Stamp(40)  wtag(3)
STAMP_chem__PdbWriter_O = ADJUST_STAMP(167), // Stamp(41)  wtag(3)
STAMP_chem__TrajectoryFrame_O = ADJUST_STAMP(171), // Stamp(42)  wtag(3)
STAMP_llvmo__MDBuilder_O = ADJUST_STAMP(175), // Stamp(43)  wtag(3)
STAMP_chem__Topology_O = ADJUST_STAMP(179), // Stamp(44)  wtag(3)
STAMP_chem__AtomTable_O = ADJUST_STAMP(183), // Stamp(45)  wtag(3)
STAMP_chem__CipPrioritizer_O = ADJUST_STAMP(187), // Stamp(46)  wtag(3)
STAMP_adapt__IndexedObjectBag_O = ADJUST_STAMP(191), // Stamp(47)  wtag(3)
STAMP_chem__VirtualSphere_O = ADJUST_STAMP(195), // Stamp(48)  wtag(3)
STAMP_chem__TwisterDriver_O = ADJUST_STAMP(199), // Stamp(49)  wtag(3)
STAMP_core__NativeVector_double_O = ADJUST_STAMP(203), // Stamp(50)  wtag(3)
STAMP_chem__RingFinder_O = ADJUST_STAMP(207), // Stamp(51)  wtag(3)
STAMP_llvmo__FunctionCallee_O = ADJUST_STAMP(211), // Stamp(52)  wtag(3)
STAMP_kinematics__Joint_O = ADJUST_STAMP(215), // Stamp(53)  wtag(3)
STAMP_kinematics__JumpJoint_O = ADJUST_STAMP(219), // Stamp(54)  wtag(3)
STAMP_kinematics__OriginJumpJoint_O = ADJUST_STAMP(223), // Stamp(55)  wtag(3)
STAMP_kinematics__BondedJoint_O = ADJUST_STAMP(227), // Stamp(56)  wtag(3)
STAMP_kinematics__RootBondedJoint_O = ADJUST_STAMP(231), // Stamp(57)  wtag(3)
STAMP_kinematics__DelayedBondedJoint_O = ADJUST_STAMP(235), // Stamp(58)  wtag(3)
STAMP_chem__SearchStatistics_O = ADJUST_STAMP(239), // Stamp(59)  wtag(3)
STAMP_chem__PdbMonomerDatabase_O = ADJUST_STAMP(243), // Stamp(60)  wtag(3)
STAMP_chem__Twister_O = ADJUST_STAMP(247), // Stamp(61)  wtag(3)
STAMP_chem__MonomerCoordinates_O = ADJUST_STAMP(251), // Stamp(62)  wtag(3)
STAMP_chem__FFParameter_O = ADJUST_STAMP(255), // Stamp(63)  wtag(3)
STAMP_chem__FFVdw_O = ADJUST_STAMP(259), // Stamp(64)  wtag(3)
STAMP_chem__FFStretch_O = ADJUST_STAMP(263), // Stamp(65)  wtag(3)
STAMP_chem__FFPtor_O = ADJUST_STAMP(267), // Stamp(66)  wtag(3)
STAMP_chem__FFItor_O = ADJUST_STAMP(271), // Stamp(67)  wtag(3)
STAMP_chem__FFNonbond_O = ADJUST_STAMP(275), // Stamp(68)  wtag(3)
STAMP_chem__FFAngle_O = ADJUST_STAMP(279), // Stamp(69)  wtag(3)
STAMP_chem__Restraint_O = ADJUST_STAMP(283), // Stamp(70)  wtag(3)
STAMP_chem__RestraintChiral_O = ADJUST_STAMP(287), // Stamp(71)  wtag(3)
STAMP_chem__RestraintDistance_O = ADJUST_STAMP(291), // Stamp(72)  wtag(3)
STAMP_chem__RestraintAngle_O = ADJUST_STAMP(295), // Stamp(73)  wtag(3)
STAMP_chem__RestraintAnchor_O = ADJUST_STAMP(299), // Stamp(74)  wtag(3)
STAMP_chem__RestraintFixedNonbond_O = ADJUST_STAMP(303), // Stamp(75)  wtag(3)
STAMP_chem__RestraintDihedral_O = ADJUST_STAMP(307), // Stamp(76)  wtag(3)
STAMP_chem__AtomIndexer_O = ADJUST_STAMP(311), // Stamp(77)  wtag(3)
STAMP_geom__BoundingCuboid_O = ADJUST_STAMP(315), // Stamp(78)  wtag(3)
STAMP_chem__StereoInformation_O = ADJUST_STAMP(319), // Stamp(79)  wtag(3)
STAMP_chem__AddIonOctree_O = ADJUST_STAMP(323), // Stamp(80)  wtag(3)
STAMP_chem__CDNode_O = ADJUST_STAMP(327), // Stamp(81)  wtag(3)
STAMP_chem__OligomerPart_Base_O = ADJUST_STAMP(331), // Stamp(82)  wtag(3)
STAMP_chem__OligomerPart_Link_O = ADJUST_STAMP(335), // Stamp(83)  wtag(3)
STAMP_chem__OligomerPart_Monomer_O = ADJUST_STAMP(339), // Stamp(84)  wtag(3)
STAMP_kinematics__BondId_O = ADJUST_STAMP(343), // Stamp(85)  wtag(3)
STAMP_core__Serializer_O = ADJUST_STAMP(347), // Stamp(86)  wtag(3)
STAMP_chem__CoordinateSystem_O = ADJUST_STAMP(351), // Stamp(87)  wtag(3)
STAMP_chem__Bond_O = ADJUST_STAMP(355), // Stamp(88)  wtag(3)
STAMP_chem__CandoDatabase_O = ADJUST_STAMP(359), // Stamp(89)  wtag(3)
STAMP_chem__AbstractLargeSquareMatrix_O = ADJUST_STAMP(363), // Stamp(90)  wtag(3)
STAMP_chem__SparseLargeSquareMatrix_O = ADJUST_STAMP(367), // Stamp(91)  wtag(3)
STAMP_chem__FullLargeSquareMatrix_O = ADJUST_STAMP(371), // Stamp(92)  wtag(3)
STAMP_chem__FFBaseDb_O = ADJUST_STAMP(375), // Stamp(93)  wtag(3)
STAMP_chem__FFParameterBaseDb_O = ADJUST_STAMP(379), // Stamp(94)  wtag(3)
STAMP_chem__FFItorDb_O = ADJUST_STAMP(383), // Stamp(95)  wtag(3)
STAMP_chem__FFStretchDb_O = ADJUST_STAMP(387), // Stamp(96)  wtag(3)
STAMP_chem__FFAngleDb_O = ADJUST_STAMP(391), // Stamp(97)  wtag(3)
STAMP_chem__FFNonbondDb_O = ADJUST_STAMP(395), // Stamp(98)  wtag(3)
STAMP_chem__FFPtorDb_O = ADJUST_STAMP(399), // Stamp(99)  wtag(3)
STAMP_chem__FFVdwDb_O = ADJUST_STAMP(403), // Stamp(100)  wtag(3)
STAMP_chem__FFTypesDb_O = ADJUST_STAMP(407), // Stamp(101)  wtag(3)
STAMP_chem__AGVertex_O = ADJUST_STAMP(411), // Stamp(102)  wtag(3)
STAMP_chem__ForceField_O = ADJUST_STAMP(415), // Stamp(103)  wtag(3)
STAMP_chem__AtomReferenceBase_O = ADJUST_STAMP(419), // Stamp(104)  wtag(3)
STAMP_chem__AtomReference_O = ADJUST_STAMP(423), // Stamp(105)  wtag(3)
STAMP_chem__ScoringFunction_O = ADJUST_STAMP(427), // Stamp(106)  wtag(3)
STAMP_chem__EnergyFunction_O = ADJUST_STAMP(431), // Stamp(107)  wtag(3)
STAMP_chem__SketchFunction_O = ADJUST_STAMP(435), // Stamp(108)  wtag(3)
STAMP_chem__RigidBodyEnergyFunction_O = ADJUST_STAMP(439), // Stamp(109)  wtag(3)
STAMP_chem__WildElementDict_O = ADJUST_STAMP(443), // Stamp(110)  wtag(3)
STAMP_llvmo__DITypeRefArray_O = ADJUST_STAMP(447), // Stamp(111)  wtag(3)
STAMP_geom__OVector3_O = ADJUST_STAMP(451), // Stamp(112)  wtag(3)
STAMP_geom__OVector2_O = ADJUST_STAMP(455), // Stamp(113)  wtag(3)
STAMP_chem__Structure_Old_ListEntry_O = ADJUST_STAMP(459), // Stamp(114)  wtag(3)
STAMP_chem__FFTypeRule_O = ADJUST_STAMP(463), // Stamp(115)  wtag(3)
STAMP_adapt__QDomNode_O = ADJUST_STAMP(467), // Stamp(116)  wtag(3)
STAMP_mp__SharedMutex_O = ADJUST_STAMP(471), // Stamp(117)  wtag(3)
STAMP_chem__ConstitutionAtom_O = ADJUST_STAMP(475), // Stamp(118)  wtag(3)
STAMP_chem__ConstitutionVirtualAtom_O = ADJUST_STAMP(479), // Stamp(119)  wtag(3)
STAMP_chem__ReadAmberParameters_O = ADJUST_STAMP(483), // Stamp(120)  wtag(3)
STAMP_chem__AGEdge_O = ADJUST_STAMP(487), // Stamp(121)  wtag(3)
STAMP_chem__Entity_O = ADJUST_STAMP(491), // Stamp(122)  wtag(3)
STAMP_chem__Stereoisomer_O = ADJUST_STAMP(495), // Stamp(123)  wtag(3)
STAMP_chem__EntityNameSetBase_O = ADJUST_STAMP(499), // Stamp(124)  wtag(3)
STAMP_chem__EntityNameSetWithCap_O = ADJUST_STAMP(503), // Stamp(125)  wtag(3)
STAMP_chem__Mate_O = ADJUST_STAMP(507), // Stamp(126)  wtag(3)
STAMP_chem__RingClosingMate_O = ADJUST_STAMP(511), // Stamp(127)  wtag(3)
STAMP_chem__EntityNameSet_O = ADJUST_STAMP(515), // Stamp(128)  wtag(3)
STAMP_chem__RepresentedEntityNameSet_O = ADJUST_STAMP(519), // Stamp(129)  wtag(3)
STAMP_chem__MonomerPack_O = ADJUST_STAMP(523), // Stamp(130)  wtag(3)
STAMP_chem__Constitution_O = ADJUST_STAMP(527), // Stamp(131)  wtag(3)
STAMP_chem__Monomer_O = ADJUST_STAMP(531), // Stamp(132)  wtag(3)
STAMP_chem__OctNode_O = ADJUST_STAMP(535), // Stamp(133)  wtag(3)
STAMP_chem__Structure_Old_List_O = ADJUST_STAMP(539), // Stamp(134)  wtag(3)
STAMP_kinematics__BackboneDependentRotamerLibrary_O = ADJUST_STAMP(543), // Stamp(135)  wtag(3)
STAMP_chem__ReportBase_O = ADJUST_STAMP(547), // Stamp(136)  wtag(3)
STAMP_chem__StepReport_O = ADJUST_STAMP(551), // Stamp(137)  wtag(3)
STAMP_chem__MessageReport_O = ADJUST_STAMP(555), // Stamp(138)  wtag(3)
STAMP_chem__ForceMatchReport_O = ADJUST_STAMP(559), // Stamp(139)  wtag(3)
STAMP_chem__ChemDraw_O = ADJUST_STAMP(563), // Stamp(140)  wtag(3)
STAMP_chem__ZMatrixInternal_O = ADJUST_STAMP(567), // Stamp(141)  wtag(3)
STAMP_chem__ZMatrixBondInternal_O = ADJUST_STAMP(571), // Stamp(142)  wtag(3)
STAMP_chem__ZMatrixDihedralInternal_O = ADJUST_STAMP(575), // Stamp(143)  wtag(3)
STAMP_chem__ZMatrixAngleInternal_O = ADJUST_STAMP(579), // Stamp(144)  wtag(3)
STAMP_chem__StereoisomerAtom_O = ADJUST_STAMP(583), // Stamp(145)  wtag(3)
STAMP_chem__StereoisomerVirtualAtom_O = ADJUST_STAMP(587), // Stamp(146)  wtag(3)
STAMP_chem__ZMatrix_O = ADJUST_STAMP(591), // Stamp(147)  wtag(3)
STAMP_chem__Isoname_O = ADJUST_STAMP(595), // Stamp(148)  wtag(3)
STAMP_chem__PathMessage_O = ADJUST_STAMP(599), // Stamp(149)  wtag(3)
STAMP_kinematics__MonomerId_O = ADJUST_STAMP(603), // Stamp(150)  wtag(3)
STAMP_kinematics__JointTemplate_O = ADJUST_STAMP(607), // Stamp(151)  wtag(3)
STAMP_kinematics__BondedJointTemplate_O = ADJUST_STAMP(611), // Stamp(152)  wtag(3)
STAMP_kinematics__DelayedBondedJointTemplate_O = ADJUST_STAMP(615), // Stamp(153)  wtag(3)
STAMP_kinematics__RootBondedJointTemplate_O = ADJUST_STAMP(619), // Stamp(154)  wtag(3)
STAMP_geom__Color_O = ADJUST_STAMP(623), // Stamp(155)  wtag(3)
STAMP_chem__ConformationCollection_O = ADJUST_STAMP(627), // Stamp(156)  wtag(3)
STAMP_chem__SuperposableConformationCollection_O = ADJUST_STAMP(631), // Stamp(157)  wtag(3)
STAMP_core__NativeVector_float_O = ADJUST_STAMP(635), // Stamp(158)  wtag(3)
STAMP_chem__Coupling_O = ADJUST_STAMP(639), // Stamp(159)  wtag(3)
STAMP_chem__RingCoupling_O = ADJUST_STAMP(643), // Stamp(160)  wtag(3)
STAMP_chem__DirectionalCoupling_O = ADJUST_STAMP(647), // Stamp(161)  wtag(3)
STAMP_adapt__ObjectSet_O = ADJUST_STAMP(651), // Stamp(162)  wtag(3)
STAMP_chem__Oligomer_O = ADJUST_STAMP(655), // Stamp(163)  wtag(3)
STAMP_chem__PdbMonomerConnectivity_O = ADJUST_STAMP(659), // Stamp(164)  wtag(3)
STAMP_units__Dimension_O = ADJUST_STAMP(663), // Stamp(165)  wtag(3)
STAMP_chem__ConformationExplorerEntry_O = ADJUST_STAMP(667), // Stamp(166)  wtag(3)
STAMP_mp__ConditionVariable_O = ADJUST_STAMP(671), // Stamp(167)  wtag(3)
STAMP_chem__PdbReader_O = ADJUST_STAMP(675), // Stamp(168)  wtag(3)
STAMP_chem__SpanningLoop_O = ADJUST_STAMP(679), // Stamp(169)  wtag(3)
STAMP_chem__ProperTorsion_O = ADJUST_STAMP(683), // Stamp(170)  wtag(3)
STAMP_chem__ResidueList_O = ADJUST_STAMP(687), // Stamp(171)  wtag(3)
STAMP_chem__SuperposeEngine_O = ADJUST_STAMP(691), // Stamp(172)  wtag(3)
STAMP_chem__SuperposeSelectedAtoms_O = ADJUST_STAMP(695), // Stamp(173)  wtag(3)
STAMP_adapt__StringSet_O = ADJUST_STAMP(699), // Stamp(174)  wtag(3)
STAMP_chem__Command_O = ADJUST_STAMP(703), // Stamp(175)  wtag(3)
STAMP_chem__StereoConfiguration_O = ADJUST_STAMP(707), // Stamp(176)  wtag(3)
STAMP_kinematics__MonomerBaseNode_O = ADJUST_STAMP(711), // Stamp(177)  wtag(3)
STAMP_kinematics__AggregateNode_O = ADJUST_STAMP(715), // Stamp(178)  wtag(3)
STAMP_kinematics__ChainNode_O = ADJUST_STAMP(719), // Stamp(179)  wtag(3)
STAMP_kinematics__MonomerNode_O = ADJUST_STAMP(723), // Stamp(180)  wtag(3)
STAMP_kinematics__RingClosingMonomerNode_O = ADJUST_STAMP(727), // Stamp(181)  wtag(3)
STAMP_chem__FFNonbondCrossTermTable_O = ADJUST_STAMP(731), // Stamp(182)  wtag(3)
STAMP_chem__Plug_O = ADJUST_STAMP(735), // Stamp(183)  wtag(3)
STAMP_chem__JumpPlug_O = ADJUST_STAMP(739), // Stamp(184)  wtag(3)
STAMP_chem__PlugWithMates_O = ADJUST_STAMP(743), // Stamp(185)  wtag(3)
STAMP_chem__InPlug_O = ADJUST_STAMP(747), // Stamp(186)  wtag(3)
STAMP_chem__OutPlug_O = ADJUST_STAMP(751), // Stamp(187)  wtag(3)
STAMP_chem__OriginPlug_O = ADJUST_STAMP(755), // Stamp(188)  wtag(3)
STAMP_kinematics__Rotamer_O = ADJUST_STAMP(759), // Stamp(189)  wtag(3)
STAMP_chem__MonomerContext_O = ADJUST_STAMP(763), // Stamp(190)  wtag(3)
STAMP_chem__CDFragment_O = ADJUST_STAMP(767), // Stamp(191)  wtag(3)
STAMP_units__Unit_O = ADJUST_STAMP(771), // Stamp(192)  wtag(3)
STAMP_units__NamedUnit_O = ADJUST_STAMP(775), // Stamp(193)  wtag(3)
STAMP_adapt__StringList_O = ADJUST_STAMP(779), // Stamp(194)  wtag(3)
STAMP_core__NativeVector_int_O = ADJUST_STAMP(783), // Stamp(195)  wtag(3)
STAMP_chem__InfoDb_O = ADJUST_STAMP(787), // Stamp(196)  wtag(3)
STAMP_chem__MinimizerLog_O = ADJUST_STAMP(791), // Stamp(197)  wtag(3)
STAMP_chem__GenericOctree_O = ADJUST_STAMP(795), // Stamp(198)  wtag(3)
STAMP_kinematics__AtomTree_O = ADJUST_STAMP(799), // Stamp(199)  wtag(3)
STAMP_units__Quantity_O = ADJUST_STAMP(803), // Stamp(200)  wtag(3)
STAMP_chem__ChemInfoMatch_O = ADJUST_STAMP(807), // Stamp(201)  wtag(3)
STAMP_chem__ZMatrixEntry_O = ADJUST_STAMP(811), // Stamp(202)  wtag(3)
STAMP_chem__SpecificContextSet_O = ADJUST_STAMP(815), // Stamp(203)  wtag(3)
STAMP_chem__Angle_O = ADJUST_STAMP(819), // Stamp(204)  wtag(3)
STAMP_chem__MacroModelFile_O = ADJUST_STAMP(823), // Stamp(205)  wtag(3)
STAMP_chem__BondList_O = ADJUST_STAMP(827), // Stamp(206)  wtag(3)
STAMP_chem__ConformationExplorer_O = ADJUST_STAMP(831), // Stamp(207)  wtag(3)
STAMP_chem__ChemInfoGraph_O = ADJUST_STAMP(835), // Stamp(208)  wtag(3)
STAMP_chem__CDText_O = ADJUST_STAMP(839), // Stamp(209)  wtag(3)
STAMP_llvmo__DINodeArray_O = ADJUST_STAMP(843), // Stamp(210)  wtag(3)
STAMP_kinematics__Checkpoint_O = ADJUST_STAMP(847), // Stamp(211)  wtag(3)
STAMP_kinematics__CheckpointJoint_O = ADJUST_STAMP(851), // Stamp(212)  wtag(3)
STAMP_kinematics__CheckpointOutPlugJoint_O = ADJUST_STAMP(855), // Stamp(213)  wtag(3)
STAMP_chem__ConformationExplorerMatch_O = ADJUST_STAMP(859), // Stamp(214)  wtag(3)
STAMP_chem__StereoisomerAtoms_O = ADJUST_STAMP(863), // Stamp(215)  wtag(3)
STAMP_chem__Rotamer_O = ADJUST_STAMP(867), // Stamp(216)  wtag(3)
STAMP_chem__ImproperTorsion_O = ADJUST_STAMP(871), // Stamp(217)  wtag(3)
STAMP_adapt__SymbolList_O = ADJUST_STAMP(875), // Stamp(218)  wtag(3)
STAMP_chem__FrameRecognizer_O = ADJUST_STAMP(879), // Stamp(219)  wtag(3)
STAMP_chem__ConformationExplorerEntryStage_O = ADJUST_STAMP(883), // Stamp(220)  wtag(3)
STAMP_chem__Trajectory_O = ADJUST_STAMP(887), // Stamp(221)  wtag(3)
STAMP_chem__CalculatePosition_O = ADJUST_STAMP(891), // Stamp(222)  wtag(3)
STAMP_chem__CalculatePositionRelativeToOrigin_O = ADJUST_STAMP(895), // Stamp(223)  wtag(3)
STAMP_chem__CalculatePositionUsingInternals_O = ADJUST_STAMP(899), // Stamp(224)  wtag(3)
STAMP_chem__CalculatePositionAlongBond_O = ADJUST_STAMP(903), // Stamp(225)  wtag(3)
STAMP_geom__OMatrix_O = ADJUST_STAMP(907), // Stamp(226)  wtag(3)
STAMP_chem__ConformationCollectionEntry_O = ADJUST_STAMP(911), // Stamp(227)  wtag(3)
STAMP_chem__ComplexRestraint_O = ADJUST_STAMP(915), // Stamp(228)  wtag(3)
STAMP_chem__RestrainedExoCyclicAtom_O = ADJUST_STAMP(919), // Stamp(229)  wtag(3)
STAMP_chem__RestrainedPiBond_O = ADJUST_STAMP(923), // Stamp(230)  wtag(3)
STAMP_mp__Mutex_O = ADJUST_STAMP(927), // Stamp(231)  wtag(3)
STAMP_mp__RecursiveMutex_O = ADJUST_STAMP(931), // Stamp(232)  wtag(3)
STAMP_chem__CombinedForceField_O = ADJUST_STAMP(935), // Stamp(233)  wtag(3)
STAMP_chem__CDBond_O = ADJUST_STAMP(939), // Stamp(234)  wtag(3)
STAMP_chem__ConstitutionBond_O = ADJUST_STAMP(943), // Stamp(235)  wtag(3)
STAMP_kinematics__ChiDihedral_O = ADJUST_STAMP(947), // Stamp(236)  wtag(3)
STAMP_chem__ConstitutionAtoms_O = ADJUST_STAMP(951), // Stamp(237)  wtag(3)
STAMP_kinematics__Conformation_O = ADJUST_STAMP(955), // Stamp(238)  wtag(3)
STAMP_chem__MoleculeGraph_O = ADJUST_STAMP(959), // Stamp(239)  wtag(3)
STAMP_chem__StructureComparer_O = ADJUST_STAMP(963), // Stamp(240)  wtag(3)
STAMP_chem__BoundingBox_O = ADJUST_STAMP(967), // Stamp(241)  wtag(3)
STAMP_chem__ChemInfoNode_O = ADJUST_STAMP(971), // Stamp(242)  wtag(3)
STAMP_chem__BondMatcher_O = ADJUST_STAMP(975), // Stamp(243)  wtag(3)
STAMP_chem__BondTest_O = ADJUST_STAMP(979), // Stamp(244)  wtag(3)
STAMP_chem__BondLogical_O = ADJUST_STAMP(983), // Stamp(245)  wtag(3)
STAMP_chem__BondMatchNode_O = ADJUST_STAMP(987), // Stamp(246)  wtag(3)
STAMP_chem__AtomOrBondMatchNode_O = ADJUST_STAMP(991), // Stamp(247)  wtag(3)
STAMP_chem__Root_O = ADJUST_STAMP(995), // Stamp(248)  wtag(3)
STAMP_chem__SmartsRoot_O = ADJUST_STAMP(999), // Stamp(249)  wtag(3)
STAMP_chem__AntechamberRoot_O = ADJUST_STAMP(1003), // Stamp(250)  wtag(3)
STAMP_chem__ResidueTest_O = ADJUST_STAMP(1007), // Stamp(251)  wtag(3)
STAMP_chem__AntechamberFocusAtomMatch_O = ADJUST_STAMP(1011), // Stamp(252)  wtag(3)
STAMP_chem__Logical_O = ADJUST_STAMP(1015), // Stamp(253)  wtag(3)
STAMP_chem__AtomTest_O = ADJUST_STAMP(1019), // Stamp(254)  wtag(3)
STAMP_chem__BondToAtomTest_O = ADJUST_STAMP(1023), // Stamp(255)  wtag(3)
STAMP_chem__AntechamberBondToAtomTest_O = ADJUST_STAMP(1027), // Stamp(256)  wtag(3)
STAMP_chem__BondListMatchNode_O = ADJUST_STAMP(1031), // Stamp(257)  wtag(3)
STAMP_chem__Chain_O = ADJUST_STAMP(1035), // Stamp(258)  wtag(3)
STAMP_chem__Branch_O = ADJUST_STAMP(1039), // Stamp(259)  wtag(3)
STAMP_chem__RootMatchNode_O = ADJUST_STAMP(1043), // Stamp(260)  wtag(3)
STAMP_chem__AfterMatchBondToAtomTest_O = ADJUST_STAMP(1047), // Stamp(261)  wtag(3)
STAMP_chem__Dimacs_O = ADJUST_STAMP(1051), // Stamp(262)  wtag(3)
STAMP_chem__SpecificContext_O = ADJUST_STAMP(1055), // Stamp(263)  wtag(3)
STAMP_chem__Minimizer_O = ADJUST_STAMP(1059), // Stamp(264)  wtag(3)
STAMP_adapt__SymbolSet_O = ADJUST_STAMP(1063), // Stamp(265)  wtag(3)
STAMP_chem__MapOfMonomerNamesToAtomIndexers_O = ADJUST_STAMP(1067), // Stamp(266)  wtag(3)
STAMP_chem__Alias_O = ADJUST_STAMP(1071), // Stamp(267)  wtag(3)
STAMP_chem__AtomIdToAtomMap_O = ADJUST_STAMP(1075), // Stamp(268)  wtag(3)
STAMP_mp__Process_O = ADJUST_STAMP(1079), // Stamp(269)  wtag(3)
STAMP_core__SingleDispatchMethod_O = ADJUST_STAMP(1083), // Stamp(270)  wtag(3)
STAMP_core__Iterator_O = ADJUST_STAMP(1087), // Stamp(271)  wtag(3)
STAMP_core__DirectoryIterator_O = ADJUST_STAMP(1091), // Stamp(272)  wtag(3)
STAMP_chem__IterateRestraints_O = ADJUST_STAMP(1095), // Stamp(273)  wtag(3)
STAMP_adapt__IterateCons_O = ADJUST_STAMP(1099), // Stamp(274)  wtag(3)
STAMP_core__RecursiveDirectoryIterator_O = ADJUST_STAMP(1103), // Stamp(275)  wtag(3)
STAMP_chem__IterateMatter_O = ADJUST_STAMP(1107), // Stamp(276)  wtag(3)
STAMP_chem__IterateResidues_O = ADJUST_STAMP(1111), // Stamp(277)  wtag(3)
STAMP_chem__IterateBonds_O = ADJUST_STAMP(1115), // Stamp(278)  wtag(3)
STAMP_chem__IterateAtoms_O = ADJUST_STAMP(1119), // Stamp(279)  wtag(3)
STAMP_core__Symbol_O = ADJUST_STAMP(1123), // Stamp(280)  wtag(3)
STAMP_core__Null_O = ADJUST_STAMP(1127), // Stamp(281)  wtag(3)
STAMP_core__SharpEqualWrapper_O = ADJUST_STAMP(1131), // Stamp(282)  wtag(3)
STAMP_llvmo__ClaspJIT_O = ADJUST_STAMP(1135), // Stamp(283)  wtag(3)
STAMP_core__Exposer_O = ADJUST_STAMP(1139), // Stamp(284)  wtag(3)
STAMP_units__UnitsExposer_O = ADJUST_STAMP(1143), // Stamp(285)  wtag(3)
STAMP_core__CoreExposer_O = ADJUST_STAMP(1147), // Stamp(286)  wtag(3)
STAMP_geom__GeomExposer_O = ADJUST_STAMP(1151), // Stamp(287)  wtag(3)
STAMP_adapt__AdaptExposer_O = ADJUST_STAMP(1155), // Stamp(288)  wtag(3)
STAMP_kinematics__KinematicsExposer_O = ADJUST_STAMP(1159), // Stamp(289)  wtag(3)
STAMP_chem__ChemExposer_O = ADJUST_STAMP(1163), // Stamp(290)  wtag(3)
STAMP_asttooling__AsttoolingExposer_O = ADJUST_STAMP(1167), // Stamp(291)  wtag(3)
STAMP_core__PosixTimeDuration_O = ADJUST_STAMP(1171), // Stamp(292)  wtag(3)
STAMP_clasp_ffi__ForeignTypeSpec_O = ADJUST_STAMP(1175), // Stamp(293)  wtag(3)
STAMP_core__SmallMap_O = ADJUST_STAMP(1179), // Stamp(294)  wtag(3)
STAMP_core__Instance_O = ADJUST_STAMP(1181), // Stamp(295)  wtag(1)
STAMP_clbind__ClassRep_O = ADJUST_STAMP(1185), // Stamp(296)  wtag(1)
STAMP_core__DerivableCxxObject_O = ADJUST_STAMP(1188), // Stamp(297)  wtag(0)
STAMP_mpip__Mpi_O = ADJUST_STAMP(1195), // Stamp(298)  wtag(3)
STAMP_core__Sigset_O = ADJUST_STAMP(1199), // Stamp(299)  wtag(3)
STAMP_core__Environment_O = ADJUST_STAMP(1203), // Stamp(300)  wtag(3)
STAMP_core__GlueEnvironment_O = ADJUST_STAMP(1207), // Stamp(301)  wtag(3)
STAMP_core__LexicalEnvironment_O = ADJUST_STAMP(1211), // Stamp(302)  wtag(3)
STAMP_core__CompileTimeEnvironment_O = ADJUST_STAMP(1215), // Stamp(303)  wtag(3)
STAMP_core__CatchEnvironment_O = ADJUST_STAMP(1219), // Stamp(304)  wtag(3)
STAMP_core__SymbolMacroletEnvironment_O = ADJUST_STAMP(1223), // Stamp(305)  wtag(3)
STAMP_core__FunctionContainerEnvironment_O = ADJUST_STAMP(1227), // Stamp(306)  wtag(3)
STAMP_core__UnwindProtectEnvironment_O = ADJUST_STAMP(1231), // Stamp(307)  wtag(3)
STAMP_core__MacroletEnvironment_O = ADJUST_STAMP(1235), // Stamp(308)  wtag(3)
STAMP_core__RuntimeVisibleEnvironment_O = ADJUST_STAMP(1239), // Stamp(309)  wtag(3)
STAMP_core__TagbodyEnvironment_O = ADJUST_STAMP(1243), // Stamp(310)  wtag(3)
STAMP_core__BlockEnvironment_O = ADJUST_STAMP(1247), // Stamp(311)  wtag(3)
STAMP_core__FunctionValueEnvironment_O = ADJUST_STAMP(1251), // Stamp(312)  wtag(3)
STAMP_core__ValueEnvironment_O = ADJUST_STAMP(1255), // Stamp(313)  wtag(3)
STAMP_core__ActivationFrame_O = ADJUST_STAMP(1259), // Stamp(314)  wtag(3)
STAMP_core__ValueFrame_O = ADJUST_STAMP(1263), // Stamp(315)  wtag(3)
STAMP_core__FunctionFrame_O = ADJUST_STAMP(1267), // Stamp(316)  wtag(3)
STAMP_core__RandomState_O = ADJUST_STAMP(1271), // Stamp(317)  wtag(3)
STAMP_core__HashTableBase_O = ADJUST_STAMP(1275), // Stamp(318)  wtag(3)
STAMP_core__HashTable_O = ADJUST_STAMP(1279), // Stamp(319)  wtag(3)
STAMP_core__HashTableEqualp_O = ADJUST_STAMP(1283), // Stamp(320)  wtag(3)
STAMP_core__HashTableEq_O = ADJUST_STAMP(1287), // Stamp(321)  wtag(3)
STAMP_core__HashTableEqual_O = ADJUST_STAMP(1291), // Stamp(322)  wtag(3)
STAMP_core__HashTableEql_O = ADJUST_STAMP(1295), // Stamp(323)  wtag(3)
STAMP_core__WeakKeyHashTable_O = ADJUST_STAMP(1299), // Stamp(324)  wtag(3)
STAMP_llvmo__InsertPoint_O = ADJUST_STAMP(1303), // Stamp(325)  wtag(3)
STAMP_core__Number_O = ADJUST_STAMP(1307), // Stamp(326)  wtag(3)
STAMP_core__Real_O = ADJUST_STAMP(1311), // Stamp(327)  wtag(3)
STAMP_core__Rational_O = ADJUST_STAMP(1315), // Stamp(328)  wtag(3)
STAMP_core__Ratio_O = ADJUST_STAMP(1319), // Stamp(329)  wtag(3)
STAMP_core__Integer_O = ADJUST_STAMP(1323), // Stamp(330)  wtag(3)
STAMP_core__Bignum_O = ADJUST_STAMP(1327), // Stamp(331)  wtag(3)
STAMP_core__Fixnum_dummy_O = ADJUST_STAMP(1331), // Stamp(332)  wtag(3)
STAMP_core__Float_O = ADJUST_STAMP(1335), // Stamp(333)  wtag(3)
STAMP_core__DoubleFloat_O = ADJUST_STAMP(1339), // Stamp(334)  wtag(3)
STAMP_core__SingleFloat_dummy_O = ADJUST_STAMP(1343), // Stamp(335)  wtag(3)
STAMP_core__LongFloat_O = ADJUST_STAMP(1347), // Stamp(336)  wtag(3)
STAMP_core__ShortFloat_O = ADJUST_STAMP(1351), // Stamp(337)  wtag(3)
STAMP_core__Complex_O = ADJUST_STAMP(1355), // Stamp(338)  wtag(3)
STAMP_core__SourcePosInfo_O = ADJUST_STAMP(1359), // Stamp(339)  wtag(3)
STAMP_core__IntArray_O = ADJUST_STAMP(1363), // Stamp(340)  wtag(3)
STAMP_core__Record_O = ADJUST_STAMP(1367), // Stamp(341)  wtag(3)
STAMP_clbind__ClassRegistry_O = ADJUST_STAMP(1371), // Stamp(342)  wtag(3)
STAMP_core__ClassHolder_O = ADJUST_STAMP(1375), // Stamp(343)  wtag(3)
STAMP_core__WrappedPointer_O = ADJUST_STAMP(1378), // Stamp(344)  wtag(2)
STAMP_core__FdSet_O = ADJUST_STAMP(1383), // Stamp(345)  wtag(3)
STAMP_core__SymbolToEnumConverter_O = ADJUST_STAMP(1387), // Stamp(346)  wtag(3)
STAMP_llvmo__Attribute_O = ADJUST_STAMP(1391), // Stamp(347)  wtag(3)
STAMP_core__ObjectFile_O = ADJUST_STAMP(1395), // Stamp(348)  wtag(3)
STAMP_core__Function_O = ADJUST_STAMP(1399), // Stamp(349)  wtag(3)
STAMP_core__FuncallableInstance_O = ADJUST_STAMP(1401), // Stamp(350)  wtag(1)
STAMP_core__Creator_O = ADJUST_STAMP(1407), // Stamp(351)  wtag(3)
STAMP_core__FuncallableInstanceCreator_O = ADJUST_STAMP(1411), // Stamp(352)  wtag(3)
STAMP_clbind__ConstructorCreator_O = ADJUST_STAMP(1415), // Stamp(353)  wtag(3)
STAMP_clbind__DummyCreator_O = ADJUST_STAMP(1419), // Stamp(354)  wtag(3)
STAMP_core__InstanceCreator_O = ADJUST_STAMP(1423), // Stamp(355)  wtag(3)
STAMP_core__ClassRepCreator_O = ADJUST_STAMP(1427), // Stamp(356)  wtag(3)
STAMP_core__DerivableCxxClassCreator_O = ADJUST_STAMP(1431), // Stamp(357)  wtag(3)
STAMP_core__StandardClassCreator_O = ADJUST_STAMP(1435), // Stamp(358)  wtag(3)
STAMP_core__SpecialForm_O = ADJUST_STAMP(1439), // Stamp(359)  wtag(3)
STAMP_core__Closure_O = ADJUST_STAMP(1443), // Stamp(360)  wtag(3)
STAMP_core__SingleDispatchCxxEffectiveMethodFunction_O = ADJUST_STAMP(1447), // Stamp(361)  wtag(3)
STAMP_core__SingleDispatchMethodFunction_O = ADJUST_STAMP(1451), // Stamp(362)  wtag(3)
STAMP_core__CxxMethodFunction_O = ADJUST_STAMP(1455), // Stamp(363)  wtag(3)
STAMP_core__BuiltinClosure_O = ADJUST_STAMP(1459), // Stamp(364)  wtag(3)
STAMP_core__TranslationFunctor_O = ADJUST_STAMP(1463), // Stamp(365)  wtag(3)
STAMP_core__ClosureWithSlots_O = ADJUST_STAMP(1467), // Stamp(366)  wtag(3)
STAMP_core__SingleDispatchGenericFunctionClosure_O = ADJUST_STAMP(1471), // Stamp(367)  wtag(3)
STAMP_core__SingleDispatchEffectiveMethodFunction_O = ADJUST_STAMP(1475), // Stamp(368)  wtag(3)
STAMP_core__WeakPointer_O = ADJUST_STAMP(1479), // Stamp(369)  wtag(3)
STAMP_llvmo__DebugLoc_O = ADJUST_STAMP(1483), // Stamp(370)  wtag(3)
STAMP_core__Array_O = ADJUST_STAMP(1487), // Stamp(371)  wtag(3)
STAMP_core__MDArray_O = ADJUST_STAMP(1491), // Stamp(372)  wtag(3)
STAMP_core__template_Array_core__MDArray_int16_t_O_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__MDArray_O_ = ADJUST_STAMP(1495), // Stamp(373)  wtag(3)
STAMP_core__MDArray_int16_t_O = ADJUST_STAMP(1499), // Stamp(374)  wtag(3)
STAMP_core__template_Array_core__MDArray_int8_t_O_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__MDArray_O_ = ADJUST_STAMP(1503), // Stamp(375)  wtag(3)
STAMP_core__MDArray_int8_t_O = ADJUST_STAMP(1507), // Stamp(376)  wtag(3)
STAMP_core__template_Array_core__MDArray_int32_t_O_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__MDArray_O_ = ADJUST_STAMP(1511), // Stamp(377)  wtag(3)
STAMP_core__MDArray_int32_t_O = ADJUST_STAMP(1515), // Stamp(378)  wtag(3)
STAMP_core__template_Array_core__MDArray_byte4_t_O_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__MDArray_O_ = ADJUST_STAMP(1519), // Stamp(379)  wtag(3)
STAMP_core__MDArray_byte4_t_O = ADJUST_STAMP(1523), // Stamp(380)  wtag(3)
STAMP_core__template_Array_core__MDArray_float_O_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__MDArray_O_ = ADJUST_STAMP(1527), // Stamp(381)  wtag(3)
STAMP_core__MDArray_float_O = ADJUST_STAMP(1531), // Stamp(382)  wtag(3)
STAMP_core__template_Array_core__MDArray_size_t_O_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__MDArray_O_ = ADJUST_STAMP(1535), // Stamp(383)  wtag(3)
STAMP_core__MDArray_size_t_O = ADJUST_STAMP(1539), // Stamp(384)  wtag(3)
STAMP_core__template_Array_core__MDArray_byte8_t_O_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__MDArray_O_ = ADJUST_STAMP(1543), // Stamp(385)  wtag(3)
STAMP_core__MDArray_byte8_t_O = ADJUST_STAMP(1547), // Stamp(386)  wtag(3)
STAMP_core__template_Array_core__MDArray_int2_t_O_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__MDArray_O_ = ADJUST_STAMP(1551), // Stamp(387)  wtag(3)
STAMP_core__MDArray_int2_t_O = ADJUST_STAMP(1555), // Stamp(388)  wtag(3)
STAMP_core__template_Array_core__MDArray_fixnum_O_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__MDArray_O_ = ADJUST_STAMP(1559), // Stamp(389)  wtag(3)
STAMP_core__MDArray_fixnum_O = ADJUST_STAMP(1563), // Stamp(390)  wtag(3)
STAMP_core__template_Array_core__MDArrayBaseChar_O_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__MDArray_O_ = ADJUST_STAMP(1567), // Stamp(391)  wtag(3)
STAMP_core__MDArrayBaseChar_O = ADJUST_STAMP(1571), // Stamp(392)  wtag(3)
STAMP_core__template_Array_core__MDArray_byte64_t_O_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__MDArray_O_ = ADJUST_STAMP(1575), // Stamp(393)  wtag(3)
STAMP_core__MDArray_byte64_t_O = ADJUST_STAMP(1579), // Stamp(394)  wtag(3)
STAMP_core__template_Array_geom__MDArrayCoordinate_O_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__MDArray_O_ = ADJUST_STAMP(1583), // Stamp(395)  wtag(3)
STAMP_geom__MDArrayCoordinate_O = ADJUST_STAMP(1587), // Stamp(396)  wtag(3)
STAMP_core__template_Array_core__MDArrayT_O_core__SimpleMDArrayT_O_core__SimpleVector_O_core__MDArray_O_ = ADJUST_STAMP(1591), // Stamp(397)  wtag(3)
STAMP_core__MDArrayT_O = ADJUST_STAMP(1595), // Stamp(398)  wtag(3)
STAMP_core__SimpleMDArray_O = ADJUST_STAMP(1599), // Stamp(399)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1603), // Stamp(400)  wtag(3)
STAMP_core__SimpleMDArray_int8_t_O = ADJUST_STAMP(1607), // Stamp(401)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1611), // Stamp(402)  wtag(3)
STAMP_core__SimpleMDArray_byte32_t_O = ADJUST_STAMP(1615), // Stamp(403)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1619), // Stamp(404)  wtag(3)
STAMP_core__SimpleMDArray_int2_t_O = ADJUST_STAMP(1623), // Stamp(405)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1627), // Stamp(406)  wtag(3)
STAMP_core__SimpleMDArray_byte4_t_O = ADJUST_STAMP(1631), // Stamp(407)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1635), // Stamp(408)  wtag(3)
STAMP_core__SimpleMDArray_int32_t_O = ADJUST_STAMP(1639), // Stamp(409)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1643), // Stamp(410)  wtag(3)
STAMP_core__SimpleMDArray_float_O = ADJUST_STAMP(1647), // Stamp(411)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1651), // Stamp(412)  wtag(3)
STAMP_core__SimpleMDArray_int16_t_O = ADJUST_STAMP(1655), // Stamp(413)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1659), // Stamp(414)  wtag(3)
STAMP_core__SimpleMDArray_size_t_O = ADJUST_STAMP(1663), // Stamp(415)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1667), // Stamp(416)  wtag(3)
STAMP_core__SimpleMDArrayCharacter_O = ADJUST_STAMP(1671), // Stamp(417)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1675), // Stamp(418)  wtag(3)
STAMP_core__SimpleMDArray_byte2_t_O = ADJUST_STAMP(1679), // Stamp(419)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1683), // Stamp(420)  wtag(3)
STAMP_core__SimpleMDArray_byte16_t_O = ADJUST_STAMP(1687), // Stamp(421)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1691), // Stamp(422)  wtag(3)
STAMP_core__SimpleMDArrayBaseChar_O = ADJUST_STAMP(1695), // Stamp(423)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1699), // Stamp(424)  wtag(3)
STAMP_core__SimpleMDArray_byte64_t_O = ADJUST_STAMP(1703), // Stamp(425)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1707), // Stamp(426)  wtag(3)
STAMP_core__SimpleMDArray_double_O = ADJUST_STAMP(1711), // Stamp(427)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArrayT_O_core__SimpleVector_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1715), // Stamp(428)  wtag(3)
STAMP_core__SimpleMDArrayT_O = ADJUST_STAMP(1719), // Stamp(429)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1723), // Stamp(430)  wtag(3)
STAMP_core__SimpleMDArray_int4_t_O = ADJUST_STAMP(1727), // Stamp(431)  wtag(3)
STAMP_core__template_SimpleArray_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1731), // Stamp(432)  wtag(3)
STAMP_geom__SimpleMDArrayCoordinate_O = ADJUST_STAMP(1735), // Stamp(433)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1739), // Stamp(434)  wtag(3)
STAMP_core__SimpleMDArray_fixnum_O = ADJUST_STAMP(1743), // Stamp(435)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1747), // Stamp(436)  wtag(3)
STAMP_core__SimpleMDArrayBit_O = ADJUST_STAMP(1751), // Stamp(437)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1755), // Stamp(438)  wtag(3)
STAMP_core__SimpleMDArray_byte8_t_O = ADJUST_STAMP(1759), // Stamp(439)  wtag(3)
STAMP_core__template_SimpleArray_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1763), // Stamp(440)  wtag(3)
STAMP_core__SimpleMDArray_int64_t_O = ADJUST_STAMP(1767), // Stamp(441)  wtag(3)
STAMP_core__ComplexVector_O = ADJUST_STAMP(1771), // Stamp(442)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_double_O_core__SimpleVector_double_O_core__ComplexVector_O_ = ADJUST_STAMP(1775), // Stamp(443)  wtag(3)
STAMP_core__ComplexVector_double_O = ADJUST_STAMP(1779), // Stamp(444)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_int8_t_O_core__SimpleVector_int8_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1783), // Stamp(445)  wtag(3)
STAMP_core__ComplexVector_int8_t_O = ADJUST_STAMP(1787), // Stamp(446)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_T_O_core__SimpleVector_O_core__ComplexVector_O_ = ADJUST_STAMP(1791), // Stamp(447)  wtag(3)
STAMP_core__ComplexVector_T_O = ADJUST_STAMP(1795), // Stamp(448)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_int32_t_O_core__SimpleVector_int32_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1799), // Stamp(449)  wtag(3)
STAMP_core__ComplexVector_int32_t_O = ADJUST_STAMP(1803), // Stamp(450)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_byte16_t_O_core__SimpleVector_byte16_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1807), // Stamp(451)  wtag(3)
STAMP_core__ComplexVector_byte16_t_O = ADJUST_STAMP(1811), // Stamp(452)  wtag(3)
STAMP_core__template_Vector_geom__ComplexVectorCoordinate_O_geom__SimpleVectorCoordinate_O_core__ComplexVector_O_ = ADJUST_STAMP(1815), // Stamp(453)  wtag(3)
STAMP_geom__ComplexVectorCoordinate_O = ADJUST_STAMP(1819), // Stamp(454)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_byte4_t_O_core__SimpleVector_byte4_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1823), // Stamp(455)  wtag(3)
STAMP_core__ComplexVector_byte4_t_O = ADJUST_STAMP(1827), // Stamp(456)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_byte64_t_O_core__SimpleVector_byte64_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1831), // Stamp(457)  wtag(3)
STAMP_core__ComplexVector_byte64_t_O = ADJUST_STAMP(1835), // Stamp(458)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_int2_t_O_core__SimpleVector_int2_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1839), // Stamp(459)  wtag(3)
STAMP_core__ComplexVector_int2_t_O = ADJUST_STAMP(1843), // Stamp(460)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_float_O_core__SimpleVector_float_O_core__ComplexVector_O_ = ADJUST_STAMP(1847), // Stamp(461)  wtag(3)
STAMP_core__ComplexVector_float_O = ADJUST_STAMP(1851), // Stamp(462)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_int16_t_O_core__SimpleVector_int16_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1855), // Stamp(463)  wtag(3)
STAMP_core__ComplexVector_int16_t_O = ADJUST_STAMP(1859), // Stamp(464)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_int4_t_O_core__SimpleVector_int4_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1863), // Stamp(465)  wtag(3)
STAMP_core__ComplexVector_int4_t_O = ADJUST_STAMP(1867), // Stamp(466)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_size_t_O_core__SimpleVector_size_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1871), // Stamp(467)  wtag(3)
STAMP_core__ComplexVector_size_t_O = ADJUST_STAMP(1875), // Stamp(468)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_byte2_t_O_core__SimpleVector_byte2_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1879), // Stamp(469)  wtag(3)
STAMP_core__ComplexVector_byte2_t_O = ADJUST_STAMP(1883), // Stamp(470)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_byte8_t_O_core__SimpleVector_byte8_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1887), // Stamp(471)  wtag(3)
STAMP_core__ComplexVector_byte8_t_O = ADJUST_STAMP(1891), // Stamp(472)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_byte32_t_O_core__SimpleVector_byte32_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1895), // Stamp(473)  wtag(3)
STAMP_core__ComplexVector_byte32_t_O = ADJUST_STAMP(1899), // Stamp(474)  wtag(3)
STAMP_core__template_Vector_core__BitVectorNs_O_core__SimpleBitVector_O_core__ComplexVector_O_ = ADJUST_STAMP(1903), // Stamp(475)  wtag(3)
STAMP_core__BitVectorNs_O = ADJUST_STAMP(1907), // Stamp(476)  wtag(3)
STAMP_core__StrNs_O = ADJUST_STAMP(1911), // Stamp(477)  wtag(3)
STAMP_core__template_Vector_core__Str8Ns_O_core__SimpleBaseString_O_core__StrNs_O_ = ADJUST_STAMP(1915), // Stamp(478)  wtag(3)
STAMP_core__Str8Ns_O = ADJUST_STAMP(1919), // Stamp(479)  wtag(3)
STAMP_core__template_Vector_core__StrWNs_O_core__SimpleCharacterString_O_core__StrNs_O_ = ADJUST_STAMP(1923), // Stamp(480)  wtag(3)
STAMP_core__StrWNs_O = ADJUST_STAMP(1927), // Stamp(481)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_fixnum_O_core__SimpleVector_fixnum_O_core__ComplexVector_O_ = ADJUST_STAMP(1931), // Stamp(482)  wtag(3)
STAMP_core__ComplexVector_fixnum_O = ADJUST_STAMP(1935), // Stamp(483)  wtag(3)
STAMP_core__template_Vector_core__ComplexVector_int64_t_O_core__SimpleVector_int64_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1939), // Stamp(484)  wtag(3)
STAMP_core__ComplexVector_int64_t_O = ADJUST_STAMP(1943), // Stamp(485)  wtag(3)
STAMP_core__template_Array_core__MDArray_int64_t_O_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__MDArray_O_ = ADJUST_STAMP(1947), // Stamp(486)  wtag(3)
STAMP_core__MDArray_int64_t_O = ADJUST_STAMP(1951), // Stamp(487)  wtag(3)
STAMP_core__template_Array_core__MDArray_byte32_t_O_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__MDArray_O_ = ADJUST_STAMP(1955), // Stamp(488)  wtag(3)
STAMP_core__MDArray_byte32_t_O = ADJUST_STAMP(1959), // Stamp(489)  wtag(3)
STAMP_core__template_Array_core__MDArray_byte2_t_O_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__MDArray_O_ = ADJUST_STAMP(1963), // Stamp(490)  wtag(3)
STAMP_core__MDArray_byte2_t_O = ADJUST_STAMP(1967), // Stamp(491)  wtag(3)
STAMP_core__template_Array_core__MDArrayCharacter_O_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__MDArray_O_ = ADJUST_STAMP(1971), // Stamp(492)  wtag(3)
STAMP_core__MDArrayCharacter_O = ADJUST_STAMP(1975), // Stamp(493)  wtag(3)
STAMP_core__template_Array_core__MDArrayBit_O_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__MDArray_O_ = ADJUST_STAMP(1979), // Stamp(494)  wtag(3)
STAMP_core__MDArrayBit_O = ADJUST_STAMP(1983), // Stamp(495)  wtag(3)
STAMP_core__template_Array_core__MDArray_byte16_t_O_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__MDArray_O_ = ADJUST_STAMP(1987), // Stamp(496)  wtag(3)
STAMP_core__MDArray_byte16_t_O = ADJUST_STAMP(1991), // Stamp(497)  wtag(3)
STAMP_core__template_Array_core__MDArray_int4_t_O_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__MDArray_O_ = ADJUST_STAMP(1995), // Stamp(498)  wtag(3)
STAMP_core__MDArray_int4_t_O = ADJUST_STAMP(1999), // Stamp(499)  wtag(3)
STAMP_core__template_Array_core__MDArray_double_O_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__MDArray_O_ = ADJUST_STAMP(2003), // Stamp(500)  wtag(3)
STAMP_core__MDArray_double_O = ADJUST_STAMP(2007), // Stamp(501)  wtag(3)
STAMP_core__AbstractSimpleVector_O = ADJUST_STAMP(2011), // Stamp(502)  wtag(3)
STAMP_core__template_SimpleVector_core__SimpleVector_byte32_t_O_unsigned_int_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2015), // Stamp(503)  wtag(3)
STAMP_core__SimpleVector_byte32_t_O = ADJUST_STAMP(2019), // Stamp(504)  wtag(3)
STAMP_core__template_SimpleVector_core__SimpleVector_size_t_O_unsigned_long_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2023), // Stamp(505)  wtag(3)
STAMP_core__SimpleVector_size_t_O = ADJUST_STAMP(2027), // Stamp(506)  wtag(3)
STAMP_core__template_SimpleVector_core__SimpleVector_double_O_double_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2031), // Stamp(507)  wtag(3)
STAMP_core__SimpleVector_double_O = ADJUST_STAMP(2035), // Stamp(508)  wtag(3)
STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_int2_t_O_2_1_ = ADJUST_STAMP(2039), // Stamp(509)  wtag(3)
STAMP_core__SimpleVector_int2_t_O = ADJUST_STAMP(2043), // Stamp(510)  wtag(3)
STAMP_core__template_SimpleVector_core__SimpleVector_int64_t_O_long_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2047), // Stamp(511)  wtag(3)
STAMP_core__SimpleVector_int64_t_O = ADJUST_STAMP(2051), // Stamp(512)  wtag(3)
STAMP_core__template_SimpleVector_core__SimpleVector_int8_t_O_signed_char_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2055), // Stamp(513)  wtag(3)
STAMP_core__SimpleVector_int8_t_O = ADJUST_STAMP(2059), // Stamp(514)  wtag(3)
STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_byte4_t_O_4_0_ = ADJUST_STAMP(2063), // Stamp(515)  wtag(3)
STAMP_core__SimpleVector_byte4_t_O = ADJUST_STAMP(2067), // Stamp(516)  wtag(3)
STAMP_core__template_SimpleVector_geom__SimpleVectorCoordinate_O_Vector3_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2071), // Stamp(517)  wtag(3)
STAMP_geom__SimpleVectorCoordinate_O = ADJUST_STAMP(2075), // Stamp(518)  wtag(3)
STAMP_core__SimpleString_O = ADJUST_STAMP(2079), // Stamp(519)  wtag(3)
STAMP_core__template_SimpleVector_core__SimpleBaseString_O_unsigned_char_core__SimpleString_O_ = ADJUST_STAMP(2083), // Stamp(520)  wtag(3)
STAMP_core__SimpleBaseString_O = ADJUST_STAMP(2087), // Stamp(521)  wtag(3)
STAMP_core__template_SimpleVector_core__SimpleCharacterString_O_int_core__SimpleString_O_ = ADJUST_STAMP(2091), // Stamp(522)  wtag(3)
STAMP_core__SimpleCharacterString_O = ADJUST_STAMP(2095), // Stamp(523)  wtag(3)
STAMP_core__template_SimpleVector_core__SimpleVector_int16_t_O_short_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2099), // Stamp(524)  wtag(3)
STAMP_core__SimpleVector_int16_t_O = ADJUST_STAMP(2103), // Stamp(525)  wtag(3)
STAMP_core__template_SimpleVector_core__SimpleVector_byte16_t_O_unsigned_short_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2107), // Stamp(526)  wtag(3)
STAMP_core__SimpleVector_byte16_t_O = ADJUST_STAMP(2111), // Stamp(527)  wtag(3)
STAMP_core__template_SimpleBitUnitVector_core__SimpleBitVector_O_1_0_ = ADJUST_STAMP(2115), // Stamp(528)  wtag(3)
STAMP_core__SimpleBitVector_O = ADJUST_STAMP(2119), // Stamp(529)  wtag(3)
STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_int4_t_O_4_1_ = ADJUST_STAMP(2123), // Stamp(530)  wtag(3)
STAMP_core__SimpleVector_int4_t_O = ADJUST_STAMP(2127), // Stamp(531)  wtag(3)
STAMP_core__template_SimpleVector_core__SimpleVector_byte64_t_O_unsigned_long_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2131), // Stamp(532)  wtag(3)
STAMP_core__SimpleVector_byte64_t_O = ADJUST_STAMP(2135), // Stamp(533)  wtag(3)
STAMP_core__template_SimpleVector_core__SimpleVector_fixnum_O_long_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2139), // Stamp(534)  wtag(3)
STAMP_core__SimpleVector_fixnum_O = ADJUST_STAMP(2143), // Stamp(535)  wtag(3)
STAMP_core__template_SimpleVector_core__SimpleVector_float_O_float_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2147), // Stamp(536)  wtag(3)
STAMP_core__SimpleVector_float_O = ADJUST_STAMP(2151), // Stamp(537)  wtag(3)
STAMP_core__template_SimpleVector_core__SimpleVector_O_gctools__smart_ptr_core__T_O__core__AbstractSimpleVector_O_ = ADJUST_STAMP(2155), // Stamp(538)  wtag(3)
STAMP_core__SimpleVector_O = ADJUST_STAMP(2159), // Stamp(539)  wtag(3)
STAMP_core__template_SimpleVector_core__SimpleVector_byte8_t_O_unsigned_char_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2163), // Stamp(540)  wtag(3)
STAMP_core__SimpleVector_byte8_t_O = ADJUST_STAMP(2167), // Stamp(541)  wtag(3)
STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_byte2_t_O_2_0_ = ADJUST_STAMP(2171), // Stamp(542)  wtag(3)
STAMP_core__SimpleVector_byte2_t_O = ADJUST_STAMP(2175), // Stamp(543)  wtag(3)
STAMP_core__template_SimpleVector_core__SimpleVector_int32_t_O_int_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2179), // Stamp(544)  wtag(3)
STAMP_core__SimpleVector_int32_t_O = ADJUST_STAMP(2183), // Stamp(545)  wtag(3)
STAMP_core__Character_dummy_O = ADJUST_STAMP(2187), // Stamp(546)  wtag(3)
STAMP_llvmo__DataLayout_O = ADJUST_STAMP(2191), // Stamp(547)  wtag(3)
STAMP_core__LoadTimeValues_O = ADJUST_STAMP(2195), // Stamp(548)  wtag(3)
STAMP_core__Readtable_O = ADJUST_STAMP(2199), // Stamp(549)  wtag(3)
STAMP_core__PosixTime_O = ADJUST_STAMP(2203), // Stamp(550)  wtag(3)
STAMP_llvmo__StructLayout_O = ADJUST_STAMP(2207), // Stamp(551)  wtag(3)
STAMP_core__ExternalObject_O = ADJUST_STAMP(2211), // Stamp(552)  wtag(3)
STAMP_llvmo__Pass_O = ADJUST_STAMP(2215), // Stamp(553)  wtag(3)
STAMP_llvmo__ModulePass_O = ADJUST_STAMP(2219), // Stamp(554)  wtag(3)
STAMP_llvmo__ImmutablePass_O = ADJUST_STAMP(2223), // Stamp(555)  wtag(3)
STAMP_llvmo__TargetLibraryInfoWrapperPass_O = ADJUST_STAMP(2227), // Stamp(556)  wtag(3)
STAMP_llvmo__FunctionPass_O = ADJUST_STAMP(2231), // Stamp(557)  wtag(3)
STAMP_llvmo__MCSubtargetInfo_O = ADJUST_STAMP(2235), // Stamp(558)  wtag(3)
STAMP_llvmo__TargetSubtargetInfo_O = ADJUST_STAMP(2239), // Stamp(559)  wtag(3)
STAMP_llvmo__JITDylib_O = ADJUST_STAMP(2243), // Stamp(560)  wtag(3)
STAMP_llvmo__IRBuilderBase_O = ADJUST_STAMP(2247), // Stamp(561)  wtag(3)
STAMP_llvmo__IRBuilder_O = ADJUST_STAMP(2251), // Stamp(562)  wtag(3)
STAMP_llvmo__APInt_O = ADJUST_STAMP(2255), // Stamp(563)  wtag(3)
STAMP_llvmo__DIBuilder_O = ADJUST_STAMP(2259), // Stamp(564)  wtag(3)
STAMP_llvmo__EngineBuilder_O = ADJUST_STAMP(2263), // Stamp(565)  wtag(3)
STAMP_llvmo__PassManagerBase_O = ADJUST_STAMP(2267), // Stamp(566)  wtag(3)
STAMP_llvmo__PassManager_O = ADJUST_STAMP(2271), // Stamp(567)  wtag(3)
STAMP_llvmo__FunctionPassManager_O = ADJUST_STAMP(2275), // Stamp(568)  wtag(3)
STAMP_llvmo__Value_O = ADJUST_STAMP(2279), // Stamp(569)  wtag(3)
STAMP_llvmo__User_O = ADJUST_STAMP(2283), // Stamp(570)  wtag(3)
STAMP_llvmo__Instruction_O = ADJUST_STAMP(2287), // Stamp(571)  wtag(3)
STAMP_llvmo__StoreInst_O = ADJUST_STAMP(2291), // Stamp(572)  wtag(3)
STAMP_llvmo__UnreachableInst_O = ADJUST_STAMP(2295), // Stamp(573)  wtag(3)
STAMP_llvmo__ResumeInst_O = ADJUST_STAMP(2299), // Stamp(574)  wtag(3)
STAMP_llvmo__AtomicCmpXchgInst_O = ADJUST_STAMP(2303), // Stamp(575)  wtag(3)
STAMP_llvmo__FenceInst_O = ADJUST_STAMP(2307), // Stamp(576)  wtag(3)
STAMP_llvmo__CallBase_O = ADJUST_STAMP(2311), // Stamp(577)  wtag(3)
STAMP_llvmo__CallInst_O = ADJUST_STAMP(2315), // Stamp(578)  wtag(3)
STAMP_llvmo__InvokeInst_O = ADJUST_STAMP(2319), // Stamp(579)  wtag(3)
STAMP_llvmo__BranchInst_O = ADJUST_STAMP(2323), // Stamp(580)  wtag(3)
STAMP_llvmo__UnaryInstruction_O = ADJUST_STAMP(2327), // Stamp(581)  wtag(3)
STAMP_llvmo__VAArgInst_O = ADJUST_STAMP(2331), // Stamp(582)  wtag(3)
STAMP_llvmo__AllocaInst_O = ADJUST_STAMP(2335), // Stamp(583)  wtag(3)
STAMP_llvmo__LoadInst_O = ADJUST_STAMP(2339), // Stamp(584)  wtag(3)
STAMP_llvmo__SwitchInst_O = ADJUST_STAMP(2343), // Stamp(585)  wtag(3)
STAMP_llvmo__AtomicRMWInst_O = ADJUST_STAMP(2347), // Stamp(586)  wtag(3)
STAMP_llvmo__LandingPadInst_O = ADJUST_STAMP(2351), // Stamp(587)  wtag(3)
STAMP_llvmo__ReturnInst_O = ADJUST_STAMP(2355), // Stamp(588)  wtag(3)
STAMP_llvmo__PHINode_O = ADJUST_STAMP(2359), // Stamp(589)  wtag(3)
STAMP_llvmo__IndirectBrInst_O = ADJUST_STAMP(2363), // Stamp(590)  wtag(3)
STAMP_llvmo__Constant_O = ADJUST_STAMP(2367), // Stamp(591)  wtag(3)
STAMP_llvmo__GlobalValue_O = ADJUST_STAMP(2371), // Stamp(592)  wtag(3)
STAMP_llvmo__Function_O = ADJUST_STAMP(2375), // Stamp(593)  wtag(3)
STAMP_llvmo__GlobalVariable_O = ADJUST_STAMP(2379), // Stamp(594)  wtag(3)
STAMP_llvmo__BlockAddress_O = ADJUST_STAMP(2383), // Stamp(595)  wtag(3)
STAMP_llvmo__ConstantStruct_O = ADJUST_STAMP(2387), // Stamp(596)  wtag(3)
STAMP_llvmo__ConstantInt_O = ADJUST_STAMP(2391), // Stamp(597)  wtag(3)
STAMP_llvmo__ConstantFP_O = ADJUST_STAMP(2395), // Stamp(598)  wtag(3)
STAMP_llvmo__ConstantPointerNull_O = ADJUST_STAMP(2399), // Stamp(599)  wtag(3)
STAMP_llvmo__ConstantDataSequential_O = ADJUST_STAMP(2403), // Stamp(600)  wtag(3)
STAMP_llvmo__ConstantDataArray_O = ADJUST_STAMP(2407), // Stamp(601)  wtag(3)
STAMP_llvmo__ConstantExpr_O = ADJUST_STAMP(2411), // Stamp(602)  wtag(3)
STAMP_llvmo__UndefValue_O = ADJUST_STAMP(2415), // Stamp(603)  wtag(3)
STAMP_llvmo__ConstantArray_O = ADJUST_STAMP(2419), // Stamp(604)  wtag(3)
STAMP_llvmo__Argument_O = ADJUST_STAMP(2423), // Stamp(605)  wtag(3)
STAMP_llvmo__BasicBlock_O = ADJUST_STAMP(2427), // Stamp(606)  wtag(3)
STAMP_llvmo__MetadataAsValue_O = ADJUST_STAMP(2431), // Stamp(607)  wtag(3)
STAMP_llvmo__ThreadSafeContext_O = ADJUST_STAMP(2435), // Stamp(608)  wtag(3)
STAMP_llvmo__TargetMachine_O = ADJUST_STAMP(2439), // Stamp(609)  wtag(3)
STAMP_llvmo__LLVMTargetMachine_O = ADJUST_STAMP(2443), // Stamp(610)  wtag(3)
STAMP_llvmo__Triple_O = ADJUST_STAMP(2447), // Stamp(611)  wtag(3)
STAMP_llvmo__LLVMContext_O = ADJUST_STAMP(2451), // Stamp(612)  wtag(3)
STAMP_llvmo__PassManagerBuilder_O = ADJUST_STAMP(2455), // Stamp(613)  wtag(3)
STAMP_llvmo__ExecutionEngine_O = ADJUST_STAMP(2459), // Stamp(614)  wtag(3)
STAMP_llvmo__Type_O = ADJUST_STAMP(2463), // Stamp(615)  wtag(3)
STAMP_llvmo__FunctionType_O = ADJUST_STAMP(2467), // Stamp(616)  wtag(3)
STAMP_llvmo__IntegerType_O = ADJUST_STAMP(2471), // Stamp(617)  wtag(3)
STAMP_llvmo__CompositeType_O = ADJUST_STAMP(2475), // Stamp(618)  wtag(3)
STAMP_llvmo__SequentialType_O = ADJUST_STAMP(2479), // Stamp(619)  wtag(3)
STAMP_llvmo__PointerType_O = ADJUST_STAMP(2483), // Stamp(620)  wtag(3)
STAMP_llvmo__ArrayType_O = ADJUST_STAMP(2487), // Stamp(621)  wtag(3)
STAMP_llvmo__VectorType_O = ADJUST_STAMP(2491), // Stamp(622)  wtag(3)
STAMP_llvmo__StructType_O = ADJUST_STAMP(2495), // Stamp(623)  wtag(3)
STAMP_llvmo__TargetPassConfig_O = ADJUST_STAMP(2499), // Stamp(624)  wtag(3)
STAMP_llvmo__APFloat_O = ADJUST_STAMP(2503), // Stamp(625)  wtag(3)
STAMP_llvmo__Metadata_O = ADJUST_STAMP(2507), // Stamp(626)  wtag(3)
STAMP_llvmo__MDNode_O = ADJUST_STAMP(2511), // Stamp(627)  wtag(3)
STAMP_llvmo__DILocation_O = ADJUST_STAMP(2515), // Stamp(628)  wtag(3)
STAMP_llvmo__DINode_O = ADJUST_STAMP(2519), // Stamp(629)  wtag(3)
STAMP_llvmo__DIVariable_O = ADJUST_STAMP(2523), // Stamp(630)  wtag(3)
STAMP_llvmo__DILocalVariable_O = ADJUST_STAMP(2527), // Stamp(631)  wtag(3)
STAMP_llvmo__DIScope_O = ADJUST_STAMP(2531), // Stamp(632)  wtag(3)
STAMP_llvmo__DIFile_O = ADJUST_STAMP(2535), // Stamp(633)  wtag(3)
STAMP_llvmo__DILocalScope_O = ADJUST_STAMP(2539), // Stamp(634)  wtag(3)
STAMP_llvmo__DISubprogram_O = ADJUST_STAMP(2543), // Stamp(635)  wtag(3)
STAMP_llvmo__DILexicalBlockBase_O = ADJUST_STAMP(2547), // Stamp(636)  wtag(3)
STAMP_llvmo__DILexicalBlock_O = ADJUST_STAMP(2551), // Stamp(637)  wtag(3)
STAMP_llvmo__DICompileUnit_O = ADJUST_STAMP(2555), // Stamp(638)  wtag(3)
STAMP_llvmo__DIType_O = ADJUST_STAMP(2559), // Stamp(639)  wtag(3)
STAMP_llvmo__DICompositeType_O = ADJUST_STAMP(2563), // Stamp(640)  wtag(3)
STAMP_llvmo__DIDerivedType_O = ADJUST_STAMP(2567), // Stamp(641)  wtag(3)
STAMP_llvmo__DISubroutineType_O = ADJUST_STAMP(2571), // Stamp(642)  wtag(3)
STAMP_llvmo__DIBasicType_O = ADJUST_STAMP(2575), // Stamp(643)  wtag(3)
STAMP_llvmo__DIExpression_O = ADJUST_STAMP(2579), // Stamp(644)  wtag(3)
STAMP_llvmo__ValueAsMetadata_O = ADJUST_STAMP(2583), // Stamp(645)  wtag(3)
STAMP_llvmo__MDString_O = ADJUST_STAMP(2587), // Stamp(646)  wtag(3)
STAMP_llvmo__NamedMDNode_O = ADJUST_STAMP(2591), // Stamp(647)  wtag(3)
STAMP_llvmo__TargetOptions_O = ADJUST_STAMP(2595), // Stamp(648)  wtag(3)
STAMP_llvmo__Module_O = ADJUST_STAMP(2599), // Stamp(649)  wtag(3)
STAMP_llvmo__Target_O = ADJUST_STAMP(2603), // Stamp(650)  wtag(3)
STAMP_llvmo__Linker_O = ADJUST_STAMP(2607), // Stamp(651)  wtag(3)
STAMP_core__Rack_O = ADJUST_STAMP(2611), // Stamp(652)  wtag(3)
STAMP_core__SmallMultimap_O = ADJUST_STAMP(2615), // Stamp(653)  wtag(3)
STAMP_core__AtomicFixnumHolder_O = ADJUST_STAMP(2619), // Stamp(654)  wtag(3)
STAMP_core__Scope_O = ADJUST_STAMP(2623), // Stamp(655)  wtag(3)
STAMP_core__FileScope_O = ADJUST_STAMP(2627), // Stamp(656)  wtag(3)
STAMP_core__Path_O = ADJUST_STAMP(2631), // Stamp(657)  wtag(3)
STAMP_core__Pathname_O = ADJUST_STAMP(2635), // Stamp(658)  wtag(3)
STAMP_core__LogicalPathname_O = ADJUST_STAMP(2639), // Stamp(659)  wtag(3)
STAMP_core__Cache_O = ADJUST_STAMP(2643), // Stamp(660)  wtag(3)
STAMP_core__Stream_O = ADJUST_STAMP(2647), // Stamp(661)  wtag(3)
STAMP_core__AnsiStream_O = ADJUST_STAMP(2651), // Stamp(662)  wtag(3)
STAMP_core__SynonymStream_O = ADJUST_STAMP(2655), // Stamp(663)  wtag(3)
STAMP_core__StringStream_O = ADJUST_STAMP(2659), // Stamp(664)  wtag(3)
STAMP_core__StringOutputStream_O = ADJUST_STAMP(2663), // Stamp(665)  wtag(3)
STAMP_core__StringInputStream_O = ADJUST_STAMP(2667), // Stamp(666)  wtag(3)
STAMP_core__EchoStream_O = ADJUST_STAMP(2671), // Stamp(667)  wtag(3)
STAMP_core__ConcatenatedStream_O = ADJUST_STAMP(2675), // Stamp(668)  wtag(3)
STAMP_core__FileStream_O = ADJUST_STAMP(2679), // Stamp(669)  wtag(3)
STAMP_core__IOFileStream_O = ADJUST_STAMP(2683), // Stamp(670)  wtag(3)
STAMP_core__IOStreamStream_O = ADJUST_STAMP(2687), // Stamp(671)  wtag(3)
STAMP_core__BroadcastStream_O = ADJUST_STAMP(2691), // Stamp(672)  wtag(3)
STAMP_core__TwoWayStream_O = ADJUST_STAMP(2695), // Stamp(673)  wtag(3)
STAMP_core__Package_O = ADJUST_STAMP(2699), // Stamp(674)  wtag(3)
STAMP_core__FileStatus_O = ADJUST_STAMP(2703), // Stamp(675)  wtag(3)
STAMP_core__InvocationHistoryFrameIterator_O = ADJUST_STAMP(2707), // Stamp(676)  wtag(3)
STAMP_core__DirectoryEntry_O = ADJUST_STAMP(2711), // Stamp(677)  wtag(3)
STAMP_core__LightUserData_O = ADJUST_STAMP(2715), // Stamp(678)  wtag(3)
STAMP_core__UserData_O = ADJUST_STAMP(2719), // Stamp(679)  wtag(3)
STAMP_core__Cons_O = ADJUST_STAMP(2723), // Stamp(680)  wtag(3)
STAMP_core__VaList_dummy_O = ADJUST_STAMP(2727), // Stamp(681)  wtag(3)
STAMP_core__Lisp_O = ADJUST_STAMP(2731), // Stamp(682)  wtag(3)
STAMP_clang__RecursiveASTVisitor_asttooling__AstVisitor_O_ = ADJUST_STAMP(2735), // Stamp(683)  wtag(3)
STAMP_asttooling__AstVisitor_O = ADJUST_STAMP(2739), // Stamp(684)  wtag(3)
STAMP_gctools__GCContainer = ADJUST_STAMP(2743), // Stamp(685)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__ = ADJUST_STAMP(2747), // Stamp(686)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__ = ADJUST_STAMP(2751), // Stamp(687)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__EnergyChiralRestraint_ = ADJUST_STAMP(2755), // Stamp(688)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__ = ADJUST_STAMP(2759), // Stamp(689)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__ = ADJUST_STAMP(2763), // Stamp(690)  wtag(3)
STAMP_gctools__GCArray_moveable_short_ = ADJUST_STAMP(2767), // Stamp(691)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__ = ADJUST_STAMP(2771), // Stamp(692)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___ = ADJUST_STAMP(2775), // Stamp(693)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__ = ADJUST_STAMP(2779), // Stamp(694)  wtag(3)
STAMP_gctools__GCBitUnitArray_moveable_4_0_ = ADJUST_STAMP(2783), // Stamp(695)  wtag(3)
STAMP_gctools__GCVector_moveable_core__SymbolClassHolderPair_ = ADJUST_STAMP(2787), // Stamp(696)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___ = ADJUST_STAMP(2791), // Stamp(697)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__ = ADJUST_STAMP(2795), // Stamp(698)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___ = ADJUST_STAMP(2799), // Stamp(699)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__ = ADJUST_STAMP(2803), // Stamp(700)  wtag(3)
STAMP_gctools__GCArray_moveable_unsigned_char_ = ADJUST_STAMP(2807), // Stamp(701)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___ = ADJUST_STAMP(2811), // Stamp(702)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___ = ADJUST_STAMP(2815), // Stamp(703)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_ = ADJUST_STAMP(2819), // Stamp(704)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__ = ADJUST_STAMP(2823), // Stamp(705)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__EnergyAngle_ = ADJUST_STAMP(2827), // Stamp(706)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__ = ADJUST_STAMP(2831), // Stamp(707)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__ = ADJUST_STAMP(2835), // Stamp(708)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__ = ADJUST_STAMP(2839), // Stamp(709)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___ = ADJUST_STAMP(2843), // Stamp(710)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__ = ADJUST_STAMP(2847), // Stamp(711)  wtag(3)
STAMP_gctools__GCVector_moveable_core__OptionalArgument_ = ADJUST_STAMP(2851), // Stamp(712)  wtag(3)
STAMP_gctools__GCVector_moveable_core__KeywordArgument_ = ADJUST_STAMP(2855), // Stamp(713)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__KeyEntry_ = ADJUST_STAMP(2859), // Stamp(714)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___ = ADJUST_STAMP(2863), // Stamp(715)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__ = ADJUST_STAMP(2867), // Stamp(716)  wtag(3)
STAMP_gctools__GCArray_moveable_Vector3_ = ADJUST_STAMP(2871), // Stamp(717)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_ = ADJUST_STAMP(2875), // Stamp(718)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__ = ADJUST_STAMP(2879), // Stamp(719)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___ = ADJUST_STAMP(2883), // Stamp(720)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__ = ADJUST_STAMP(2887), // Stamp(721)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___ = ADJUST_STAMP(2891), // Stamp(722)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__EnergyImproperRestraint_ = ADJUST_STAMP(2895), // Stamp(723)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__ = ADJUST_STAMP(2899), // Stamp(724)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__ = ADJUST_STAMP(2903), // Stamp(725)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__ = ADJUST_STAMP(2907), // Stamp(726)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__ = ADJUST_STAMP(2911), // Stamp(727)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___ = ADJUST_STAMP(2915), // Stamp(728)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___ = ADJUST_STAMP(2919), // Stamp(729)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__ = ADJUST_STAMP(2923), // Stamp(730)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___ = ADJUST_STAMP(2927), // Stamp(731)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__ = ADJUST_STAMP(2931), // Stamp(732)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__ = ADJUST_STAMP(2935), // Stamp(733)  wtag(3)
STAMP_gctools__GCBitUnitArray_moveable_2_0_ = ADJUST_STAMP(2939), // Stamp(734)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__ = ADJUST_STAMP(2943), // Stamp(735)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__ = ADJUST_STAMP(2947), // Stamp(736)  wtag(3)
STAMP_gctools__GCBitUnitArray_moveable_1_0_ = ADJUST_STAMP(2951), // Stamp(737)  wtag(3)
STAMP_gctools__GCBitUnitArray_moveable_2_1_ = ADJUST_STAMP(2955), // Stamp(738)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__ = ADJUST_STAMP(2959), // Stamp(739)  wtag(3)
STAMP_gctools__GCVector_moveable_int_ = ADJUST_STAMP(2963), // Stamp(740)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___ = ADJUST_STAMP(2967), // Stamp(741)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__ = ADJUST_STAMP(2971), // Stamp(742)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__ = ADJUST_STAMP(2975), // Stamp(743)  wtag(3)
STAMP_gctools__GCArray_moveable_float_ = ADJUST_STAMP(2979), // Stamp(744)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__ = ADJUST_STAMP(2983), // Stamp(745)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__ = ADJUST_STAMP(2987), // Stamp(746)  wtag(3)
STAMP_gctools__GCVector_moveable_core__T_O___ = ADJUST_STAMP(2991), // Stamp(747)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__EnergyDihedral_ = ADJUST_STAMP(2995), // Stamp(748)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___ = ADJUST_STAMP(2999), // Stamp(749)  wtag(3)
STAMP_gctools__GCArray_moveable_unsigned_int_ = ADJUST_STAMP(3003), // Stamp(750)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__ = ADJUST_STAMP(3007), // Stamp(751)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__ = ADJUST_STAMP(3011), // Stamp(752)  wtag(3)
STAMP_gctools__GCVector_moveable_core__CacheRecord_ = ADJUST_STAMP(3015), // Stamp(753)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__ = ADJUST_STAMP(3019), // Stamp(754)  wtag(3)
STAMP_gctools__GCVector_moveable_double_ = ADJUST_STAMP(3023), // Stamp(755)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__ = ADJUST_STAMP(3027), // Stamp(756)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__ = ADJUST_STAMP(3031), // Stamp(757)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___ = ADJUST_STAMP(3035), // Stamp(758)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__ = ADJUST_STAMP(3039), // Stamp(759)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__AtomPdbRec_ = ADJUST_STAMP(3043), // Stamp(760)  wtag(3)
STAMP_gctools__GCVector_moveable_core__Cons_O_ = ADJUST_STAMP(3047), // Stamp(761)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__EnergySketchStretch_ = ADJUST_STAMP(3051), // Stamp(762)  wtag(3)
STAMP_gctools__GCArray_moveable_signed_char_ = ADJUST_STAMP(3055), // Stamp(763)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_ = ADJUST_STAMP(3059), // Stamp(764)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__ = ADJUST_STAMP(3063), // Stamp(765)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___ = ADJUST_STAMP(3067), // Stamp(766)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__ = ADJUST_STAMP(3071), // Stamp(767)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__ = ADJUST_STAMP(3075), // Stamp(768)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__EnergySketchNonbond_ = ADJUST_STAMP(3079), // Stamp(769)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__ = ADJUST_STAMP(3083), // Stamp(770)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__ = ADJUST_STAMP(3087), // Stamp(771)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__FixedNonbondRestraint_ = ADJUST_STAMP(3091), // Stamp(772)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__ = ADJUST_STAMP(3095), // Stamp(773)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__ = ADJUST_STAMP(3099), // Stamp(774)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__ = ADJUST_STAMP(3103), // Stamp(775)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___ = ADJUST_STAMP(3107), // Stamp(776)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__ = ADJUST_STAMP(3111), // Stamp(777)  wtag(3)
STAMP_gctools__GCArray_moveable_double_ = ADJUST_STAMP(3115), // Stamp(778)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___ = ADJUST_STAMP(3119), // Stamp(779)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___ = ADJUST_STAMP(3123), // Stamp(780)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__ = ADJUST_STAMP(3127), // Stamp(781)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__ = ADJUST_STAMP(3131), // Stamp(782)  wtag(3)
STAMP_gctools__GCVector_moveable_core__RequiredArgument_ = ADJUST_STAMP(3135), // Stamp(783)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__ = ADJUST_STAMP(3139), // Stamp(784)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__ = ADJUST_STAMP(3143), // Stamp(785)  wtag(3)
STAMP_gctools__GCBitUnitArray_moveable_4_1_ = ADJUST_STAMP(3147), // Stamp(786)  wtag(3)
STAMP_gctools__GCVector_moveable_core__SymbolStorage_ = ADJUST_STAMP(3151), // Stamp(787)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_ = ADJUST_STAMP(3155), // Stamp(788)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___ = ADJUST_STAMP(3159), // Stamp(789)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___ = ADJUST_STAMP(3163), // Stamp(790)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__ = ADJUST_STAMP(3167), // Stamp(791)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__ = ADJUST_STAMP(3171), // Stamp(792)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___ = ADJUST_STAMP(3175), // Stamp(793)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__ = ADJUST_STAMP(3179), // Stamp(794)  wtag(3)
STAMP_gctools__GCArray_moveable_unsigned_long_ = ADJUST_STAMP(3183), // Stamp(795)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__EnergyNonbond_ = ADJUST_STAMP(3187), // Stamp(796)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___ = ADJUST_STAMP(3191), // Stamp(797)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__AtomInfo_ = ADJUST_STAMP(3195), // Stamp(798)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__ = ADJUST_STAMP(3199), // Stamp(799)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__ = ADJUST_STAMP(3203), // Stamp(800)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__EnergyAtom_ = ADJUST_STAMP(3207), // Stamp(801)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___ = ADJUST_STAMP(3211), // Stamp(802)  wtag(3)
STAMP_gctools__GCArray_moveable_int_ = ADJUST_STAMP(3215), // Stamp(803)  wtag(3)
STAMP_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__ = ADJUST_STAMP(3219), // Stamp(804)  wtag(3)
STAMP_gctools__GCVector_moveable_core__AuxArgument_ = ADJUST_STAMP(3223), // Stamp(805)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__ResidueOut_ = ADJUST_STAMP(3227), // Stamp(806)  wtag(3)
STAMP_gctools__GCArray_moveable_long_ = ADJUST_STAMP(3231), // Stamp(807)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__ = ADJUST_STAMP(3235), // Stamp(808)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_ = ADJUST_STAMP(3239), // Stamp(809)  wtag(3)
STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___ = ADJUST_STAMP(3243), // Stamp(810)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__ = ADJUST_STAMP(3247), // Stamp(811)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__ = ADJUST_STAMP(3251), // Stamp(812)  wtag(3)
STAMP_gctools__GCVector_moveable_chem__EnergyStretch_ = ADJUST_STAMP(3255), // Stamp(813)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__ = ADJUST_STAMP(3259), // Stamp(814)  wtag(3)
STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__ = ADJUST_STAMP(3263), // Stamp(815)  wtag(3)
STAMP_gctools__GCArray_moveable_unsigned_short_ = ADJUST_STAMP(3267), // Stamp(816)  wtag(3)
STAMP_gctools__GCVector_moveable_float_ = ADJUST_STAMP(3271), // Stamp(817)  wtag(3)
STAMP_clang__FrontendAction = ADJUST_STAMP(3275), // Stamp(818)  wtag(3)
STAMP_clang__ASTFrontendAction = ADJUST_STAMP(3279), // Stamp(819)  wtag(3)
STAMP_clang__SyntaxOnlyAction = ADJUST_STAMP(3283), // Stamp(820)  wtag(3)
STAMP_clang__tooling__ToolAction = ADJUST_STAMP(3287), // Stamp(821)  wtag(3)
STAMP_clang__tooling__FrontendActionFactory = ADJUST_STAMP(3291), // Stamp(822)  wtag(3)
STAMP_clang__ast_matchers__MatchFinder__MatchCallback = ADJUST_STAMP(3295), // Stamp(823)  wtag(3)
// Unused CLEAVIR-ENVIRONMENT::NO-FUNCTION-INFO = 1484, 
// Unused CLASP-CLEAVIR-AST::DEBUG-MESSAGE-AST = 1811, 
// Unused CLEAVIR-IR::MULTIPLE-VALUE-CALL-INSTRUCTION = 1681, 
// Unused SWANK/CLASP::MAILBOX = 1874, 
// Unused CLEAVIR-GENERATE-AST::BINDING-MUST-BE-SYMBOL-OR-LIST = 1537, 
// Unused SWANK/BACKEND::ARGLIST = 1894, 
// Unused CLEAVIR-AST::FIXNUM-NOT-GREATER-AST = 1420, 
// Unused CLASP-CLEAVIR-AST::THROW-AST = 1810, 
// Unused SICL-ADDITIONAL-CONDITIONS::SLOT-OPTION-NAME-MUST-BE-SYMBOL = 1781, 
// Unused CONCRETE-SYNTAX-TREE::NULL-CST-REQUIRED = 1238, 
// Unused CLEAVIR-IR::FIXED-TO-MULTIPLE-INSTRUCTION = 1680, 
// Unused CONCRETE-SYNTAX-TREE::MACRO-LAMBDA-LIST = 1294, 
// Unused CLEAVIR-AST-TO-HIR::MISCONTEXT = 1693, 
// Unused CLASP-CLEAVIR-AST::FOREIGN-CALL-POINTER-AST = 1816, 
// Unused ECLECTOR.READER::SHARPSIGN-EQUALS-LABEL-DEFINED-MORE-THAN-ONCE = 1369, 
// Unused CLEAVIR-CODE-UTILITIES::REQUIRED-MUST-BE-VARIABLE = 1477, 
// Unused CORE::FRAME = 1084, 
// Unused CLEAVIR-KILDALL-TYPE-INFERENCE::TYPE-INFERENCE = 1705, 
// Unused CONCRETE-SYNTAX-TREE::DESTRUCTURING-LAMBDA-LIST = 1295, 
// Unused CORE::PPRINT-DISPATCH-ENTRY = 1186, 
// Unused CLEAVIR-AST::FIXNUM-EQUAL-AST = 1423, 
// Unused CLEAVIR-IR::THE-VALUES-INSTRUCTION = 1682, 
// Unused CLASP-ANALYZER::DEPENDENT-NAME-CTYPE = 1943, 
// Unused CLEAVIR-LIVENESS::LIVE-AFTER-MIXIN = 1704, 
// Unused CLEAVIR-METER::METER = 1377, 
// Unused CLEAVIR-CODE-UTILITIES::LAMBDA-LIST-KEYWORD-NOT-ALLOWED = 1455, 
// Unused CLASP-CLEAVIR-HIR::WRAPPED-STAMP-INSTRUCTION = 1851, 
// Unused CLANG-TOOL::MULTITOOL = 1907, 
// Unused ECLECTOR.READER::READ-OBJECT-TYPE-ERROR = 1321, 
// Unused CLANG-TOOL::COMPILATION-TOOL-DATABASE = 1898, 
// Unused CLASP-ANALYZER::ENUM-CTYPE = 1944, 
// Unused CLEAVIR-CODE-UTILITIES::ODD-NUMBER-OF-KEYWORD-ARGUMENTS = 1451, 
// Unused CLEAVIR-CST-TO-AST::SITUATIONS-MUST-BE-PROPER-LIST = 1580, 
// Unused ACCLIMATION::TIENG-VIET = 1227, 
// Unused CLEAVIR-METER::BASIC-METER = 1378, 
// Unused CLEAVIR-GENERATE-AST::FUNCTION-NAME-UNKNOWN = 1546, 
// Unused CLEAVIR-AST::FIXNUM-ADD-AST = 1417, 
// Unused CLASP-ANALYZER::POINTER-CTYPE = 1954, 
// Unused CLASP-CLEAVIR-AST::ARRAY-TOTAL-SIZE-AST = 1822, 
// Unused COMMON-LISP::METHOD = 1090, 
// Unused COMMON-LISP::TYPE-ERROR = 1117, 
// Unused CLEAVIR-AST::FLOAT-GREATER-AST = 1430, 
// Unused CLEAVIR-IR::RAW-FLOAT = 1714, 
// Unused CONCRETE-SYNTAX-TREE::EXPLICIT-MULTI-PARAMETER-GROUP = 1252, 
// Unused CLASP-CLEAVIR-AST::HEADER-STAMP-AST = 1825, 
// Unused CONCRETE-SYNTAX-TREE::DEFINE-MODIFY-MACRO-LAMBDA-LIST = 1299, 
// Unused CORE::SIMPLE-STREAM-ERROR = 1131, 
// Unused STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__OctNode_O__ = 667, 
// Unused CORE::UNRECOGNIZED-KEYWORD-ARGUMENT-ERROR = 1151, 
// Unused SICL-ADDITIONAL-CONDITIONS::UNKNOWN-CLASS-OPTION = 1795, 
// Unused EXT::STACK-OVERFLOW = 1112, 
// Unused COMMON-LISP::PACKAGE-ERROR = 1136, 
// Unused ECLECTOR.READER::READ-TIME-EVALUATION-INHIBITED = 1348, 
// Unused CONCRETE-SYNTAX-TREE::PARAMETER-GROUP = 1247, 
// Unused CLEAVIR-IR::ALLOCATION-MIXIN = 1620, 
// Unused CONCRETE-SYNTAX-TREE::DEFSETF-LAMBDA-LIST = 1297, 
// Unused CLASP-ANALYZER::STAMP = 1924, 
// Unused CLEAVIR-LIVENESS::LIVENESS = 1700, 
// Unused CLASP-CLEAVIR-HIR::DERIVABLE-STAMP-INSTRUCTION = 1852, 
// Unused CLEAVIR-GENERATE-AST::LAMBDA-MUST-BE-PROPER-LIST = 1534, 
// Unused CONCRETE-SYNTAX-TREE::IMPLICIT-PARAMETER-GROUP = 1250, 
// Unused CLEAVIR-GENERATE-AST::ODD-KEYWORD-PORTION-STYLE-WARNING = 1557, 
// Unused CLEAVIR-IR::STORE-TO-STATIC-ENVIRONMENT-INSTRUCTION = 1691, 
// Unused COMMON-LISP::STANDARD-METHOD = 1091, 
// Unused CLEAVIR-IR::SLOT-READ-INSTRUCTION = 1675, 
// Unused SICL-ADDITIONAL-CONDITIONS::EMPTY-BODY = 1796, 
// Unused CLEAVIR-AST::AST = 1380, 
// Unused CLASP-ANALYZER::CCLASS = 1913, 
// Unused CLEAVIR-AST::RETURN-FROM-AST = 1400, 
// Unused CLASP-CLEAVIR::CONTINUE-HIR = 1862, 
// Unused CLASP-CLEAVIR::CLASP-ORDINARY-LAMBDA-LIST = 1806, 
// Unused CLASP-CLEAVIR-HIR::HEADER-STAMP-INSTRUCTION = 1849, 
// Unused CLASP-ANALYZER::ROOTCLASSALLOC = 1921, 
// Unused CLEAVIR-CST-TO-AST::SETQ-MUST-HAVE-EVEN-NUMBER-OF-ARGUMENTS = 1592, 
// Unused SB-BSD-SOCKETS::NO-ADDRESS-ERROR = 1222, 
// Unused CLASP-ANALYZER::INSTANCE-VARIABLE = 1915, 
// Unused CORE::FORMAT-ERROR = 1157, 
// Unused CONCRETE-SYNTAX-TREE::WHOLE-PARAMETER-GROUP = 1268, 
// Unused CLEAVIR-IR::MULTIPLE-SUCCESSORS-MIXIN = 1618, 
// Unused CLEAVIR-PARTIAL-INLINING::WORKLIST-ITEM = 1710, 
// Unused ECLECTOR.READER::FEATURE-EXPRESSION-TYPE-ERROR = 1363, 
// Unused ECLECTOR.READER::NON-LIST-FOLLOWING-SHARPSIGN-S = 1358, 
// Unused CLEAVIR-IR::SYMBOL-VALUE-INSTRUCTION = 1645, 
// Unused COMPILER::COMPILER-MACRO-EXPANSION-ERROR-WARNING = 1195, 
// Unused CLEAVIR-IR::FIXNUM-LESS-INSTRUCTION = 1657, 
// Unused CLEAVIR-AST::FDEFINITION-AST = 1393, 
// Unused CLEAVIR-IR::DATUM = 1614, 
// Unused CLEAVIR-ENVIRONMENT::BLOCK-INFO = 1496, 
// Unused CLEAVIR-IR::MULTIPLE-TO-FIXED-INSTRUCTION = 1679, 
// Unused CORE::TAB = 1185, 
// Unused SB-BSD-SOCKETS::PROTOCOL-NOT-SUPPORTED-ERROR = 1213, 
// Unused CLEAVIR-CODE-UTILITIES::MALFORMED-DEFGENERIC-OPTIONAL = 1469, 
// Unused ECLECTOR.READER::SINGLE-FEATURE-EXPECTED = 1365, 
// Unused CONCRETE-SYNTAX-TREE::MULTI-PARAMETER-GROUP-MIXIN = 1249, 
// Unused COMMON-LISP::RESTART = 1100, 
// Unused COMMON-LISP::CELL-ERROR = 1138, 
// Unused CLEAVIR-AST::BLOCK-AST = 1399, 
// Unused CLASP-CLEAVIR-HIR::ARRAY-RANK-INSTRUCTION = 1847, 
// Unused CORE::FOREIGN-DATA = 1083, 
// Unused CLASP-CLEAVIR-AST::DEFCALLBACK-AST = 1817, 
// Unused EXT::CHARACTER-CODING-ERROR = 1162, 
// Unused SICL-ADDITIONAL-CONDITIONS::UNRECOGNIZED-KEYWORD-ARGUMENT = 1773, 
// Unused SICL-ADDITIONAL-CONDITIONS::SUPERCLASS-LIST-MUST-BE-PROPER-LIST = 1776, 
// Unused CLOS::INITARGS-UPDATER = 1096, 
// Unused CLASP-CLEAVIR-HIR::VECTOR-LENGTH-INSTRUCTION = 1843, 
// Unused COMMON-LISP::SIMPLE-ERROR = 1109, 
// Unused CLEAVIR-IR::RPLACD-INSTRUCTION = 1674, 
// Unused ECLECTOR.READER::TOO-MANY-ELEMENTS = 1355, 
// Unused EXT::CHARACTER-DECODING-ERROR = 1164, 
// Unused CLEAVIR-GENERATE-AST::NOT-ENOUGH-ARGUMENTS-STYLE-WARNING = 1555, 
// Unused CONCRETE-SYNTAX-TREE::RULE = 1302, 
// Unused CLASP-CLEAVIR::KEYWORD-VA-REST = 1805, 
// Unused CLEAVIR-COMPILATION-POLICY::UNKNOWN-OPTIMIZE-QUALITY = 1517, 
// Unused ECLECTOR.READER::UNQUOTE-SPLICING-AT-TOP = 1328, 
// Unused CLEAVIR-AST::CONSTANT-FDEFINITION-AST = 1394, 
// Unused CLEAVIR-IR::ENTER-INSTRUCTION = 1621, 
// Unused SICL-ADDITIONAL-CONDITIONS::FORM-MUST-BE-PROPER-LIST = 1756, 
// Unused CLEAVIR-ENVIRONMENT::NO-BLOCK-INFO = 1485, 
// Unused CLEAVIR-CODE-UTILITIES::WHOLE-MUST-BE-FOLLOWED-BY-VARIABLE = 1464, 
// Unused ECLECTOR.READER::INVALID-CONTEXT-FOR-BACKQUOTE = 1323, 
// Unused CLASP-ANALYZER::POD-OFFSET = 1971, 
// Unused CLEAVIR-IR::FIXNUM-SUB-INSTRUCTION = 1656, 
// Unused CLASP-CLEAVIR-AST::ARRAY-RANK-AST = 1823, 
// Unused CLEAVIR-IR::ENCLOSE-INSTRUCTION = 1622, 
// Unused CLASP-ANALYZER::ALLOC = 1917, 
// Unused CONCRETE-SYNTAX-TREE::BOA-LAMBDA-LIST = 1296, 
// Unused COMMON-LISP::FLOATING-POINT-UNDERFLOW = 1146, 
// Unused SWANK::OPTIONAL-ARG = 1897, 
// Unused CLEAVIR-ENVIRONMENT::VARIABLE-TYPE = 1507, 
// Unused CLEAVIR-GENERATE-AST::SOURCE-LOCATION = 1558, 
// Unused COMMON-LISP::FLOATING-POINT-INVALID-OPERATION = 1148, 
// Unused ACCLIMATION::SWEDISH = 1230, 
// Unused CLASP-CLEAVIR-HIR::LOAD-VALUES-INSTRUCTION = 1837, 
// Unused CLEAVIR-CST-TO-AST::FORM-MUST-BE-PROPER-LIST = 1579, 
// Unused COMMON-LISP::STORAGE-CONDITION = 1110, 
// Unused STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__AntechamberRoot_O__ = 638, 
// Unused COMMON-LISP::READER-ERROR = 1155, 
// Unused COMMON-LISP::PROGRAM-ERROR = 1125, 
// Unused STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O___gctools__smart_ptr_kinematics__MonomerNode_O_____ = 627, 
// Unused COMMON-LISP::VECTOR = 1077, 
// Unused CLEAVIR-IR::BOTH-OR-NO-INDIVIDUAL-SUCCESSORS-MUST-BE-GIVEN = 1732, 
// Unused SWANK/BACKEND::SLDB-CONDITION = 1873, 
// Unused CLEAVIR-GENERATE-AST::BODY = 1559, 
// Unused CONCRETE-SYNTAX-TREE::TARGET = 1301, 
// Unused EXT::SEGMENTATION-VIOLATION = 1111, 
// Unused CORE::LOGICAL-BLOCK = 1178, 
// Unused CLEAVIR-GENERATE-AST::BINDING-MUST-HAVE-LENGTH-ONE-OR-TWO = 1538, 
// Unused CLEAVIR-AST::SETQ-AST = 1401, 
// Unused CLEAVIR-CST-TO-AST::BINDINGS-MUST-BE-PROPER-LIST = 1586, 
// Unused SB-BSD-SOCKETS::NO-RECOVERY-ERROR = 1221, 
// Unused CLEAVIR-IR::SIDE-EFFECT-MIXIN = 1619, 
// Unused CLEAVIR-IR::THE-INSTRUCTION = 1637, 
// Unused CLEAVIR-IR::FLOAT-SQRT-INSTRUCTION = 1669, 
// Unused STAMP_gctools__GCBitUnitArray_moveable_1__false_ = 705, 
// Unused CLEAVIR-IR::INSTRUCTION = 1615, 
// Unused CLEAVIR-IR::FUNCALL-INSTRUCTION = 1632, 
// Unused CLEAVIR-AST::PROGN-AST = 1398, 
// Unused ECLECTOR.READER::SLOT-NAME-IS-NOT-A-SYMBOL = 1361, 
// Unused CLEAVIR-IR::UNREACHABLE-INSTRUCTION = 1630, 
// Unused SICL-ADDITIONAL-CONDITIONS::DECLARATIONS-NOT-ALLOWED-IN-BODY = 1761, 
// Unused SICL-ADDITIONAL-CONDITIONS::MALFORMED-DEFAULT-INITARGS-OPTION = 1791, 
// Unused CLEAVIR-IR::WRITE-CELL-INSTRUCTION = 1687, 
// Unused CLOS::STANDARD-EFFECTIVE-SLOT-DEFINITION = 1060, 
// Unused CONCRETE-SYNTAX-TREE::CST-ERROR = 1237, 
// Unused CLEAVIR-CODE-UTILITIES::SUSPECT-LAMBDA-LIST-KEYWORD = 1478, 
// Unused SWANK::FUZZY-MATCHING = 1891, 
// Unused CLEAVIR-AST::CALL-AST = 1395, 
// Unused CORE::FORMAT-WARNING-TOO-MANY-ARGUMENTS = 1159, 
// Unused ECLECTOR.PARSE-RESULT::PARSE-RESULT-CLIENT = 1372, 
// Unused CONCRETE-SYNTAX-TREE::KEY-PARAMETER-GROUP = 1256, 
// Unused CLEAVIR-IR::LEXICAL-LOCATION = 1624, 
// Unused CLEAVIR-IR::FLOAT-COS-INSTRUCTION = 1668, 
// Unused CONCRETE-SYNTAX-TREE::SUPPLIED-P-MIXIN = 1271, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-REST = 1283, 
// Unused CLEAVIR-GENERATE-AST::TOO-MANY-ARGUMENTS-WARNING = 1552, 
// Unused ECLECTOR.READER::FEATURE-EXPRESSION-TYPE-ERROR/READER = 1364, 
// Unused CLEAVIR-ENVIRONMENT::TAG-INFO = 1497, 
// Unused CONCRETE-SYNTAX-TREE::GENERIC-FUNCTION-OPTIONAL-PARAMETER-GROUP = 1260, 
// Unused CLEAVIR-GENERATE-AST::BINDINGS-MUST-BE-PROPER-LIST = 1536, 
// Unused CLASP-ANALYZER::CONTAINER-OFFSET = 1974, 
// Unused CLEAVIR-IR::READ-CELL-INSTRUCTION = 1686, 
// Unused CLEAVIR-CODE-UTILITIES::MALFORMED-ORDINARY-KEY = 1471, 
// Unused CLASP-ANALYZER::GLOBAL-VARIABLE = 1928, 
// Unused STAMP_gctools__GCVector_moveable_core__ExceptionEntry_ = 712, 
// Unused CORE::SIMPLE-FILE-ERROR = 1135, 
// Unused COMMON-LISP::STYLE-WARNING = 1107, 
// Unused CLEAVIR-IR::FLOAT-NOT-GREATER-INSTRUCTION = 1665, 
// Unused SICL-ADDITIONAL-CONDITIONS::DUPLICATE-CLASS-OPTION-NOT-ALLOWED = 1789, 
// Unused ECLECTOR.READER::UNQUOTE-SPLICING-IN-DOTTED-LIST = 1327, 
// Unused COMMON-LISP::STANDARD-OBJECT = 1062, 
// Unused CLEAVIR-CST-TO-AST::VARIABLE-MUST-BE-A-SYMBOL = 1589, 
// Unused SICL-ADDITIONAL-CONDITIONS::SICL-SYNTAX-ERROR = 1753, 
// Unused CONCRETE-SYNTAX-TREE::EARLEY-ITEM = 1304, 
// Unused CLEAVIR-AST::TAG-AST = 1403, 
// Unused CLASP-ANALYZER::GCVECTOR-OFFSET = 1977, 
// Unused CLEAVIR-CODE-UTILITIES::FUNCTION-BODY-MUST-BE-PROPER-LIST = 1480, 
// Unused CLEAVIR-IR::LOAD-FROM-STATIC-ENVIRONMENT-INSTRUCTION = 1690, 
// Unused SWANK::SINGLETHREADED-CONNECTION = 1879, 
// Unused CLANG-TOOL::COUNT-MATCH-CALLBACK = 1902, 
// Unused CONCRETE-SYNTAX-TREE::FORM-MIXIN = 1270, 
// Unused CLEAVIR-GENERATE-AST::ARGUMENT-MISMATCH-WARNING = 1523, 
// Unused CONCRETE-SYNTAX-TREE::GENERIC-FUNCTION-OPTIONAL-PARAMETER = 1278, 
// Unused COMMON-LISP::SERIOUS-CONDITION = 1103, 
// Unused CORE::CODE-BLOCK = 1082, 
// Unused CLEAVIR-CST-TO-AST::SPECIAL-SYMBOL-MACRO = 1595, 
// Unused ACCLIMATION::JAPANESE = 1232, 
// Unused CLEAVIR-ENVIRONMENT::SPECIAL-VARIABLE-INFO = 1488, 
// Unused CLEAVIR-AST::LEXICAL-AST = 1388, 
// Unused SICL-ADDITIONAL-CONDITIONS::TAGBODY-ELEMENT-MUST-BE-SYMBOL-INTEGER-OR-COMPOUND-FORM = 1769, 
// Unused CLEAVIR-KILDALL::INTERFUNCTION-MIXIN = 1699, 
// Unused CLEAVIR-KILDALL::ALIST-POOL-MIXIN = 1697, 
// Unused CLEAVIR-ENVIRONMENT::GLOBAL-FUNCTION-INFO = 1492, 
// Unused STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___ = 684, 
// Unused CLEAVIR-AST::COERCE-AST = 1436, 
// Unused CLASP-ANALYZER::CLASSALLOC = 1920, 
// Unused CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE = 1958, 
// Unused SICL-ADDITIONAL-CONDITIONS::SICL-UNBOUND-VARIABLE = 1740, 
// Unused CONCRETE-SYNTAX-TREE::DESTRUCTURING-REQUIRED-PARAMETER-GROUP = 1262, 
// Unused CLEAVIR-AST::MULTIPLE-VALUE-SETQ-AST = 1402, 
// Unused CLEAVIR-ENVIRONMENT::SPECIAL-OPERATOR-INFO = 1495, 
// Unused CORE::QUEUE = 1870, 
// Unused CLEAVIR-CST-TO-AST::EVAL-ERROR = 1610, 
// Unused CLEAVIR-AST::DYNAMIC-ENVIRONMENT-OUTPUT-AST-MIXIN = 1385, 
// Unused CLEAVIR-AST::IMMEDIATE-AST = 1386, 
// Unused ALEXANDRIA.0.DEV::SIMPLE-PARSE-ERROR = 1309, 
// Unused MP::LOCK = 1085, 
// Unused SB-BSD-SOCKETS::LOCAL-SOCKET = 1201, 
// Unused COMMON-LISP::WARNING = 1102, 
// Unused CLASP-ANALYZER::CONSTANT-ARRAY-OFFSET = 1973, 
// Unused CLANG-TOOL::MATCH-INFO = 1903, 
// Unused CLEAVIR-IR::PHI-INSTRUCTION = 1651, 
// Unused SICL-ADDITIONAL-CONDITIONS::DECLARATION-FOLLOWS-FORM-IN-BODY = 1762, 
// Unused ECLECTOR.READER::INVALID-CONTEXT-FOR-RIGHT-PARENTHESIS = 1333, 
// Unused CLEAVIR-HIR-TRANSFORMATIONS::DAG-NODE = 1707, 
// Unused GRAY::FUNDAMENTAL-CHARACTER-INPUT-STREAM = 1172, 
// Unused CLASP-CLEAVIR-HIR::THROW-INSTRUCTION = 1859, 
// Unused CLASP-CLEAVIR-AST::MULTIPLE-VALUE-FOREIGN-CALL-AST = 1814, 
// Unused ECLECTOR.READER::MULTIPLE-OBJECTS-FOLLOWING-CONSING-DOT = 1332, 
// Unused ACCLIMATION::LOCALE = 1223, 
// Unused CLASP-ANALYZER::RVALUE-REFERENCE-CTYPE = 1942, 
// Unused CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE = 1955, 
// Unused CLASP-CLEAVIR-AST::RACK-STAMP-AST = 1826, 
// Unused CLEAVIR-ENVIRONMENT::NO-INFO = 1482, 
// Unused CLEAVIR-IR::FLOAT-SIN-INSTRUCTION = 1667, 
// Unused CLEAVIR-CODE-UTILITIES::LAMBDA-LIST-KEYWORD-NOT-ALLOWED-IN-DOTTED-LAMBDA-LIST = 1456, 
// Unused SICL-ADDITIONAL-CONDITIONS::SICL-PROGRAM-STYLE-WARNING = 1755, 
// Unused SICL-ADDITIONAL-CONDITIONS::TOO-MANY-ARGUMENTS = 1772, 
// Unused ECLECTOR.READER::SYMBOL-DOES-NOT-EXIST = 1336, 
// Unused CLEAVIR-ENVIRONMENT::VARIABLE-IGNORE = 1509, 
// Unused CLEAVIR-CODE-UTILITIES::REST/BODY-MUST-BE-FOLLOWED-BY-VARIABLE = 1461, 
// Unused CLASP-ANALYZER::UNCLASSIFIED-TEMPLATE-SPECIALIZATION-CTYPE = 1950, 
// Unused CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE = 1962, 
// Unused CLASP-ANALYZER::BITUNIT-CTYPE = 1937, 
// Unused CLEAVIR-CODE-UTILITIES::LAMBDA-LIST-MUST-BE-LIST = 1452, 
// Unused CLEAVIR-IR::SIGNED-NOT-GREATER-INSTRUCTION = 1722, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-AUX = 1287, 
// Unused CLASP-CLEAVIR-HIR::ARRAY-DIMENSION-INSTRUCTION = 1848, 
// Unused CLASP-CLEAVIR-HIR::RACK-STAMP-INSTRUCTION = 1850, 
// Unused SICL-ADDITIONAL-CONDITIONS::SICL-CELL-ERROR = 1739, 
// Unused CLEAVIR-IR::MEMREF2-INSTRUCTION = 1716, 
// Unused CLEAVIR-IR::FIXNUMP-INSTRUCTION = 1643, 
// Unused GRAY::FUNDAMENTAL-INPUT-STREAM = 1168, 
// Unused CLASP-ANALYZER::TEMPLATE-TYPE-PARM-CTYPE = 1941, 
// Unused CLEAVIR-AST::THE-AST = 1406, 
// Unused CLASP-CLEAVIR-HIR::SAVE-VALUES-INSTRUCTION = 1836, 
// Unused SICL-ADDITIONAL-CONDITIONS::DOCUMENTATION-STRING-NOT-ALLOWED-IN-BODY = 1760, 
// Unused CLEAVIR-IR::SET-CONSTANT-SYMBOL-VALUE-INSTRUCTION = 1648, 
// Unused GRAY::FUNDAMENTAL-CHARACTER-OUTPUT-STREAM = 1173, 
// Unused CLEAVIR-AST::LOAD-TIME-VALUE-AST = 1408, 
// Unused CLEAVIR-IR::INITIALIZE-CLOSURE-INSTRUCTION = 1683, 
// Unused CLEAVIR-AST::FLOAT-DIV-AST = 1427, 
// Unused CLOSER-MOP::DEFMETHOD-WITHOUT-GENERIC-FUNCTION = 1312, 
// Unused CLOS::FUNCALLABLE-STANDARD-CLASS = 1074, 
// Unused CONCRETE-SYNTAX-TREE::ORDINARY-KEY-PARAMETER = 1275, 
// Unused CLEAVIR-GENERATE-AST::ARGUMENT-MISMATCH-STYLE-WARNING = 1524, 
// Unused CLEAVIR-IR::RETURN-INSTRUCTION = 1635, 
// Unused ECLECTOR.READER::OBJECT-MUST-FOLLOW-COMMA = 1326, 
// Unused CLEAVIR-AST::CAR-AST = 1437, 
// Unused CONCRETE-SYNTAX-TREE::PARSER = 1306, 
// Unused CONCRETE-SYNTAX-TREE::PARAMETER = 1269, 
// Unused CLASP-ANALYZER::PARALLEL-JOB = 1983, 
// Unused SICL-ADDITIONAL-CONDITIONS::DEPRECATED-EVAL-WHEN-SITUATION = 1798, 
// Unused CLASP-CLEAVIR-AST::NAMED-FUNCTION-AST = 1809, 
// Unused CLEAVIR-CODE-UTILITIES::ORDINARY-BODY-MUST-BE-PROPER-LIST = 1479, 
// Unused EXT::BUS-ERROR = 1115, 
// Unused CLOS::SLOT-DEFINITION = 1064, 
// Unused CLEAVIR-CST-TO-AST::IGNORED-VARIABLE-REFERENCED = 1577, 
// Unused SEQUENCE::PROTOCOL-UNIMPLEMENTED = 1176, 
// Unused ECLECTOR.READER::SYMBOL-IS-NOT-EXTERNAL = 1337, 
// Unused CLASP-ANALYZER::BUILTIN-CTYPE = 1945, 
// Unused CLEAVIR-AST::FUNCTION-AST = 1396, 
// Unused CLEAVIR-CODE-UTILITIES::WHOLE-MUST-APPEAR-FIRST = 1463, 
// Unused CLEAVIR-CODE-UTILITIES::MALFORMED-LAMBDA-LIST-PATTERN = 1476, 
// Unused CLEAVIR-CODE-UTILITIES::CODE-CONDITION = 1446, 
// Unused CLASP-CLEAVIR::CLASP-GLOBAL-ENVIRONMENT = 1802, 
// Unused CLEAVIR-IR::SIGNED-LESS-INSTRUCTION = 1721, 
// Unused CLEAVIR-AST::FIXNUM-SUB-AST = 1418, 
// Unused ACCLIMATION::SVENSKA = 1225, 
// Unused CLASP-ANALYZER::LOCAL-VARIABLE = 1930, 
// Unused CLASP-ANALYZER::NAMESPACE = 1982, 
// Unused CLEAVIR-CST-TO-AST::FUNCTION-NAME-NAMES-SPECIAL-OPERATOR = 1600, 
// Unused CONCRETE-SYNTAX-TREE::CONS-STRUCTURE-MISMATCH-ERROR = 1562, 
// Unused COMMON-LISP::METHOD-COMBINATION = 1068, 
// Unused CLEAVIR-CST-TO-AST::ODD-KEYWORD-PORTION-STYLE-WARNING = 1575, 
// Unused CLEAVIR-AST::FLOAT-SIN-AST = 1433, 
// Unused ECLECTOR.READTABLE::CHAR-MUST-BE-A-DISPATCHING-CHARACTER = 1316, 
// Unused SWANK/BACKEND::COMPILER-CONDITION = 1872, 
// Unused ECLECTOR.READER::NUMERIC-PARAMETER-NOT-SUPPLIED-BUT-REQUIRED = 1347, 
// Unused CLEAVIR-ENVIRONMENT::FUNCTION-IGNORE = 1510, 
// Unused CLASP-ANALYZER::INCOMPLETE-ARRAY-CTYPE = 1956, 
// Unused CLEAVIR-IR::OUTPUT-MUST-BE-GIVEN = 1729, 
// Unused ACCLIMATION::FRENCH = 1229, 
// Unused ECLECTOR.READER::STRUCTURE-TYPE-NAME-IS-NOT-A-SYMBOL = 1360, 
// Unused CLEAVIR-ENVIRONMENT::GLOBAL-MACRO-INFO = 1494, 
// Unused CLEAVIR-CST-TO-AST::FUNCTION-NAME-MUST-BE-PROPER-FUNCTION-NAME = 1585, 
// Unused CLEAVIR-AST::ASET-AST = 1444, 
// Unused CLASP-ANALYZER::GCARRAY-OFFSET = 1975, 
// Unused COMMON-LISP::CONTROL-ERROR = 1127, 
// Unused SICL-ADDITIONAL-CONDITIONS::MULTIPLE-ALLOCATION-OPTIONS-NOT-PERMITTED = 1784, 
// Unused CLASP-ANALYZER::CXXRECORD-CTYPE = 1957, 
// Unused CLASP-ANALYZER::GCARRAY-MOVEABLE-CTYPE = 1963, 
// Unused CLEAVIR-CST-TO-AST::NO-DEFAULT-METHOD = 1601, 
// Unused CONCRETE-SYNTAX-TREE::ECL = 1244, 
// Unused CORE::SEQUENCE-OUT-OF-BOUNDS = 1121, 
// Unused CLEAVIR-GENERATE-AST::INVALID-EVAL-WHEN-SITUATION = 1532, 
// Unused COMMON-LISP::PRINT-NOT-READABLE = 1152, 
// Unused CONCRETE-SYNTAX-TREE::NULL-STRUCTURE-MISMATCH-ERROR = 1561, 
// Unused SWANK::UNREADABLE-RESULT = 1884, 
// Unused SICL-ADDITIONAL-CONDITIONS::LOAD-TIME-VALUE-READ-ONLY-P-NOT-EVALUATED = 1799, 
// Unused COMMON-LISP::SIMPLE-TYPE-ERROR = 1122, 
// Unused CLEAVIR-IO::FILE-DOES-NOT-EXIST = 1375, 
// Unused SB-BSD-SOCKETS::OPERATION-NOT-PERMITTED-ERROR = 1212, 
// Unused CLOS::STANDARD-WRITER-METHOD = 1094, 
// Unused CLEAVIR-HIR-TRANSFORMATIONS::INTERIOR-NODE = 1709, 
// Unused CLEAVIR-IR::ONE-SUCCESSOR-MIXIN = 1617, 
// Unused EXT::ASSERT-ERROR = 1161, 
// Unused CLASP-CLEAVIR::CLASP = 1800, 
// Unused CONCRETE-SYNTAX-TREE::DEFTYPE-LAMBDA-LIST = 1298, 
// Unused CORE::CASE-FAILURE = 1123, 
// Unused CORE::SECTION-START = 1180, 
// Unused CONCRETE-SYNTAX-TREE::GRAMMAR = 1303, 
// Unused CLEAVIR-CODE-UTILITIES::BOTH-REST-AND-BODY-OCCUR-IN-LAMBDA-LIST = 1460, 
// Unused CLEAVIR-IR::SUCCESSOR1-MUST-BE-GIVEN = 1733, 
// Unused CLEAVIR-IR::CHARACTERP-INSTRUCTION = 1644, 
// Unused COMMON-LISP::FILE-ERROR = 1134, 
// Unused CLEAVIR-ENVIRONMENT::LEXICAL-VARIABLE = 1500, 
// Unused CLEAVIR-CODE-UTILITIES::ATOMIC-LAMBDA-LIST-TAIL-MUST-BE-VARIABLE = 1462, 
// Unused CONCRETE-SYNTAX-TREE::GENERIC-FUNCTION-KEY-PARAMETER = 1276, 
// Unused CONCRETE-SYNTAX-TREE::CLASP = 1243, 
// Unused CLEAVIR-AST::IF-AST = 1409, 
// Unused CORE::SIMPLE-PROGRAM-ERROR = 1126, 
// Unused CLEAVIR-ENVIRONMENT::VARIABLE-DYNAMIC-EXTENT = 1511, 
// Unused SICL-ADDITIONAL-CONDITIONS::ODD-NUMBER-OF-KEYWORD-ARGUMENTS = 1775, 
// Unused ECLECTOR.READER::NO-STRUCTURE-TYPE-NAME-FOUND = 1359, 
// Unused CLASP-CLEAVIR-HIR::FOREIGN-CALL-POINTER-INSTRUCTION = 1840, 
// Unused COMMON-LISP::END-OF-FILE = 1133, 
// Unused SWANK-TRACE-DIALOG::TRACE-ENTRY = 1889, 
// Unused COMPILER::UNDEFINED-TYPE-WARNING = 1193, 
// Unused CLEAVIR-IR::EQ-INSTRUCTION = 1641, 
// Unused CLANG-TOOL::SINGLE-TOOL = 1908, 
// Unused CLASP-CLEAVIR::CLASP-64BIT = 1801, 
// Unused SICL-ADDITIONAL-CONDITIONS::LISTS-MUST-HAVE-THE-SAME-LENGTH = 1745, 
// Unused STAMP_gctools__GCVector_moveable_core__DynamicBinding_ = 711, 
// Unused SICL-ADDITIONAL-CONDITIONS::AT-LEAST-ONE-ARGUMENT-REQUIRED = 1744, 
// Unused CONCRETE-SYNTAX-TREE::EARLEY-STATE = 1305, 
// Unused ECLECTOR.READER::END-OF-FILE = 1320, 
// Unused CLEAVIR-IR::TAILCALL-INSTRUCTION = 1634, 
// Unused SB-BSD-SOCKETS::BAD-FILE-DESCRIPTOR-ERROR = 1205, 
// Unused CLEAVIR-ENVIRONMENT::MACRO = 1504, 
// Unused SWANK/RPC::SWANK-READER-ERROR = 1877, 
// Unused CLASP-ANALYZER::STAMP-VALUE-GENERATOR = 1932, 
// Unused ECLECTOR.READER::OBJECT-MUST-FOLLOW-CONSING-DOT = 1331, 
// Unused CLEAVIR-CST-TO-AST::INCORRECT-NUMBER-OF-ARGUMENTS-STYLE-WARNING = 1573, 
// Unused CLEAVIR-CST-TO-AST::COMPILATION-STYLE-WARNING = 1566, 
// Unused CORE::DO-NOT-FUNCALL-SPECIAL-OPERATOR = 1149, 
// Unused CLEAVIR-HIR-TRANSFORMATIONS::FUNCTION-DAG = 1708, 
// Unused CLASP-ANALYZER::TEMPLATED-STAMP = 1926, 
// Unused CLEAVIR-AST::GO-AST = 1405, 
// Unused CLASP-ANALYZER::ABSTRACTALLOC = 1918, 
// Unused SICL-ADDITIONAL-CONDITIONS::DOCUMENTATION-OPTION-ONCE = 1793, 
// Unused CLEAVIR-AST::BOOLEAN-AST-MIXIN = 1381, 
// Unused CONCRETE-SYNTAX-TREE::SINGLETON-PARAMETER-GROUP = 1263, 
// Unused SB-BSD-SOCKETS::NETDB-INTERNAL-ERROR = 1217, 
// Unused CLEAVIR-AST::SIDE-EFFECT-FREE-AST-MIXIN = 1384, 
// Unused CLEAVIR-CODE-UTILITIES::INCORRECT-KEYWORD-ORDER = 1459, 
// Unused SICL-ADDITIONAL-CONDITIONS::METACLASS-OPTION-ONCE = 1794, 
// Unused CLEAVIR-ENVIRONMENT::SYMBOL-MACRO = 1502, 
// Unused COMMON-LISP::SEQUENCE = 1075, 
// Unused CLEAVIR-GENERATE-AST::VALUES-&REST-SYNTAX = 1528, 
// Unused SICL-ADDITIONAL-CONDITIONS::INVALID-KEYWORD-ARGUMENT = 1774, 
// Unused CLEAVIR-ENVIRONMENT::ENTRY = 1499, 
// Unused CLASP-CLEAVIR-AST::HEADER-STAMP-CASE-AST = 1818, 
// Unused CLASP-ANALYZER::GCBITUNITARRAY-OFFSET = 1976, 
// Unused CLASP-ANALYZER::ANALYSIS = 1933, 
// Unused CLEAVIR-GENERATE-AST::BLOCK-NAME-UNKNOWN = 1541, 
// Unused CLEAVIR-AST::FIXNUM-NOT-LESS-AST = 1422, 
// Unused CONCRETE-SYNTAX-TREE::GENERIC-FUNCTION-KEY-PARAMETER-GROUP = 1258, 
// Unused COMMON-LISP::BIT-VECTOR = 1080, 
// Unused CLASP-CLEAVIR-AST::VASLIST-LENGTH-AST = 1830, 
// Unused ECLECTOR.READTABLE::SUB-CHAR-MUST-NOT-BE-A-DECIMAL-DIGIT = 1315, 
// Unused CLEAVIR-IR::ASET-INSTRUCTION = 1678, 
// Unused CLEAVIR-CST-TO-AST::ODD-KEYWORD-PORTION-WARNING = 1574, 
// Unused CLASP-CLEAVIR-AST::PRECALC-VALUE-REFERENCE-AST = 1832, 
// Unused SICL-ADDITIONAL-CONDITIONS::BLOCK-TAG-MUST-BE-SYMBOL = 1757, 
// Unused CLEAVIR-IR::MEMSET2-INSTRUCTION = 1718, 
// Unused CLASP-ANALYZER::DEBUG-INFO = 1912, 
// Unused SICL-ADDITIONAL-CONDITIONS::SETQ-MUST-HAVE-EVEN-NUMBER-ARGUMENTS = 1767, 
// Unused CLEAVIR-AST::NO-VALUE-AST-MIXIN = 1382, 
// Unused CLEAVIR-IR::CONSTANT-SYMBOL-VALUE-INSTRUCTION = 1646, 
// Unused SICL-ADDITIONAL-CONDITIONS::MULTIPLE-DOCUMENTATION-STRINGS-IN-BODY = 1759, 
// Unused CLASP-ANALYZER::GCBITUNITARRAY-MOVEABLE-CTYPE = 1964, 
// Unused CLEAVIR-GENERATE-AST::SETQ-MUST-HAVE-EVEN-NUMBER-OF-ARGUMENTS = 1542, 
// Unused CLEAVIR-CST-TO-AST::MALFORMED-LAMBDA-LIST = 1603, 
// Unused ECLECTOR.BASE::STREAM-POSITION-READER-ERROR = 1313, 
// Unused SWANK-MACROSTEP::EXPANSION-IN-CONTEXT-FAILED = 1890, 
// Unused CLEAVIR-GENERATE-AST::FUNCTION-NAME-NAMES-SPECIAL-OPERATOR = 1549, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-WHOLE = 1289, 
// Unused SICL-ADDITIONAL-CONDITIONS::SICL-UNDEFINED-FUNCTION = 1741, 
// Unused CLASP-ANALYZER::CONTAINER = 1961, 
// Unused CLEAVIR-IR::MEMREF1-INSTRUCTION = 1715, 
// Unused CLEAVIR-ENVIRONMENT::OPTIMIZE = 1513, 
// Unused CLEAVIR-AST::SCOPE-AST = 1445, 
// Unused ECLECTOR.READER::SYMBOL-ACCESS-ERROR = 1335, 
// Unused GRAY::FUNDAMENTAL-CHARACTER-STREAM = 1170, 
// Unused ECLECTOR.READER::ARRAY-INITIALIZATION-ERROR = 1354, 
// Unused CLEAVIR-IR::UNWIND-INSTRUCTION = 1640, 
// Unused COMMON-LISP::STRING = 1078, 
// Unused CONCRETE-SYNTAX-TREE::SBCL = 1241, 
// Unused CLEAVIR-IR::CONSP-INSTRUCTION = 1642, 
// Unused EXT::SEQUENCE-STREAM = 1081, 
// Unused SB-BSD-SOCKETS::NETDB-SUCCESS-ERROR = 1218, 
// Unused CLEAVIR-IR::FLOAT-LESS-INSTRUCTION = 1664, 
// Unused CLEAVIR-ENVIRONMENT::NO-VARIABLE-INFO = 1483, 
// Unused CLEAVIR-CST-TO-AST::EVAL-STYLE-WARNING = 1612, 
// Unused CLEAVIR-CODE-UTILITIES::LAMBDA-LIST-TOO-MANY-PARAMETERS = 1457, 
// Unused CLEAVIR-CODE-UTILITIES::ENVIRONMENT-MUST-BE-FOLLOWED-BY-VARIABLE = 1465, 
// Unused CLASP-ANALYZER::LISPALLOC = 1919, 
// Unused CLEAVIR-IR::INPUT-INPUTS-MUTUALLY-EXCLUSIVE = 1728, 
// Unused CLOS::FUNCALLABLE-STANDARD-OBJECT = 1087, 
// Unused EXT::CHARACTER-ENCODING-ERROR = 1163, 
// Unused CLEAVIR-CST-TO-AST::COMPILER-MACRO-EXPANSION-WARNING = 1608, 
// Unused ACCLIMATION::DEUTSCH = 1226, 
// Unused CLEAVIR-ENVIRONMENT::LOCAL-FUNCTION-INFO = 1491, 
// Unused CLEAVIR-CST-TO-AST::SETQ-VAR-MUST-BE-SYMBOL = 1593, 
// Unused COMMON-LISP::BASE-STRING = 1079, 
// Unused CLASP-ANALYZER::POINTER-TO-RECORD-CTYPE = 1960, 
// Unused CLEAVIR-CODE-UTILITIES::MALFORMED-DESTRUCTURING-OPTIONAL = 1470, 
// Unused CORE::QUEUED-OP = 1179, 
// Unused CLEAVIR-AST::TOP-LEVEL-FUNCTION-AST = 1397, 
// Unused CLEAVIR-AST::CDR-AST = 1438, 
// Unused CONCRETE-SYNTAX-TREE::SPECIALIZED-LAMBDA-LIST = 1293, 
// Unused SICL-ADDITIONAL-CONDITIONS::INVALID-BOUDING-INDEXES = 1749, 
// Unused CONCRETE-SYNTAX-TREE::DEFINE-METHOD-COMBINATION-LAMBDA-LIST = 1300, 
// Unused SICL-ADDITIONAL-CONDITIONS::SICL-WARNING = 1735, 
// Unused CLEAVIR-AST::CONSTANT-AST = 1387, 
// Unused CLEAVIR-AST::FLOAT-SQRT-AST = 1435, 
// Unused CLASP-CLEAVIR-HIR::HEADER-STAMP-CASE-INSTRUCTION = 1842, 
// Unused CLEAVIR-GENERATE-AST::ODD-KEYWORD-PORTION = 1527, 
// Unused CLEAVIR-AST::CONSTANT-SYMBOL-VALUE-AST = 1390, 
// Unused COMMON-LISP::GENERIC-FUNCTION = 1088, 
// Unused CONCRETE-SYNTAX-TREE::ORDINARY-REST-PARAMETER-GROUP = 1265, 
// Unused CONCRETE-SYNTAX-TREE::REST-PARAMETER-GROUP = 1264, 
// Unused CLEAVIR-IR::CONSTANT-FDEFINITION-INSTRUCTION = 1650, 
// Unused CLEAVIR-ENVIRONMENT::SPECIAL-VARIABLE = 1501, 
// Unused CLEAVIR-CODE-UTILITIES::MALFORMED-DESTRUCTURING-TREE = 1475, 
// Unused CLEAVIR-CST-TO-AST::FUNCTION-NAME-NAMES-GLOBAL-MACRO = 1598, 
// Unused CLEAVIR-IO::MODEL-CONDITION = 1374, 
// Unused CLASP-ANALYZER::UNCLASSIFIED-CTYPE = 1946, 
// Unused CLASP-CLEAVIR-AST::VASLIST-POP-AST = 1829, 
// Unused CORE::FORMAT-WARNING-TOO-FEW-ARGUMENTS = 1158, 
// Unused CLEAVIR-IR::SLOT-WRITE-INSTRUCTION = 1676, 
// Unused CONCRETE-SYNTAX-TREE::AUX-PARAMETER-GROUP = 1259, 
// Unused CORE::INDENTATION = 1182, 
// Unused ECLECTOR.READER::INVALID-RADIX = 1352, 
// Unused CLEAVIR-IR::FETCH-INSTRUCTION = 1685, 
// Unused CLEAVIR-GENERATE-AST::LAMBDA-CALL-FIRST-SYMBOL-NOT-LAMBDA = 1551, 
// Unused CLEAVIR-GENERATE-AST::NOT-ENOUGH-ARGUMENTS = 1526, 
// Unused SWANK::CONNECTION = 1878, 
// Unused CLEAVIR-IR::IMMEDIATE-INPUT = 1626, 
// Unused CLEAVIR-CODE-UTILITIES::ENVIRONMENT-CAN-APPEAR-AT-MOST-ONCE = 1466, 
// Unused CLASP-CLEAVIR-AST::PRECALC-VECTOR-FUNCTION-AST = 1831, 
// Unused CLEAVIR-AST::FIXNUM-LESS-AST = 1419, 
// Unused CLEAVIR-AST-TO-HIR::CONTEXT = 1692, 
// Unused CLASP-CLEAVIR-HIR::ARRAY-TOTAL-SIZE-INSTRUCTION = 1846, 
// Unused CLASP-CLEAVIR-HIR::SETF-FDEFINITION-INSTRUCTION = 1858, 
// Unused CLEAVIR-IR::MEMSET1-INSTRUCTION = 1717, 
// Unused SICL-ADDITIONAL-CONDITIONS::INVALID-START-INDEX = 1750, 
// Unused CLEAVIR-AST::FLOAT-ADD-AST = 1424, 
// Unused GRAY::FUNDAMENTAL-STREAM = 1167, 
// Unused CLEAVIR-GENERATE-AST::FLET-FUNCTIONS-MUST-BE-PROPER-LIST = 1533, 
// Unused CLEAVIR-IR::UNSIGNED-NOT-GREATER-INSTRUCTION = 1726, 
// Unused SICL-ADDITIONAL-CONDITIONS::SICL-TYPE-ERROR = 1738, 
// Unused CLEAVIR-CST-TO-AST::COMPILER-MACRO-EXPANSION-ERROR = 1607, 
// Unused CLEAVIR-AST::SET-CONSTANT-SYMBOL-VALUE-AST = 1392, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-ALLOW-OTHER-KEYS = 1286, 
// Unused CLASP-CLEAVIR-AST::SETF-FDEFINITION-AST = 1808, 
// Unused SICL-ADDITIONAL-CONDITIONS::SLOT-OPTIONS-MUST-BE-EVEN = 1780, 
// Unused CLEAVIR-ENVIRONMENT::LOCAL-MACRO-INFO = 1493, 
// Unused CLEAVIR-CST-TO-AST::INCORRECT-NUMBER-OF-ARGUMENTS = 1568, 
// Unused CLEAVIR-AST::SLOT-READ-AST = 1441, 
// Unused COMMON-LISP::FLOATING-POINT-OVERFLOW = 1145, 
// Unused CLEAVIR-IR::CAR-INSTRUCTION = 1671, 
// Unused COMMON-LISP::SIMPLE-CONDITION = 1105, 
// Unused ECLECTOR.READER::INVALID-DEFAULT-FLOAT-FORMAT = 1353, 
// Unused CC-MIR::HEADERQ-INSTRUCTION = 1867, 
// Unused CLEAVIR-CODE-UTILITIES::LAMBDA-LIST = 1481, 
// Unused CLEAVIR-IR::DYNAMIC-ALLOCATION-INSTRUCTION = 1638, 
// Unused CLEAVIR-CST-TO-AST::ODD-KEYWORD-PORTION = 1569, 
// Unused CLEAVIR-CST-TO-AST::READ-ONLY-P-MUST-BE-BOOLEAN = 1590, 
// Unused SB-BSD-SOCKETS::OUT-OF-MEMORY-ERROR = 1210, 
// Unused COMMON-LISP::UNBOUND-VARIABLE = 1139, 
// Unused SB-BSD-SOCKETS::NETWORK-UNREACHABLE-ERROR = 1215, 
// Unused CLEAVIR-AST::MULTIPLE-VALUE-CALL-AST = 1410, 
// Unused COMMON-LISP::ERROR = 1104, 
// Unused CLEAVIR-LIVENESS::LIVENESS-MIXIN = 1702, 
// Unused CLASP-CLEAVIR-HIR::DISPLACED-INDEX-OFFSET-INSTRUCTION = 1845, 
// Unused CONCRETE-SYNTAX-TREE::EXPLICIT-PARAMETER-GROUP = 1251, 
// Unused SB-BSD-SOCKETS::NO-BUFFERS-ERROR = 1209, 
// Unused CLEAVIR-CST-TO-AST::BLOCK-NAME-MUST-BE-A-SYMBOL = 1578, 
// Unused SB-BSD-SOCKETS::HOST-NOT-FOUND-ERROR = 1219, 
// Unused CLEAVIR-ENVIRONMENT::INLINE-EXPANSION = 1515, 
// Unused CLEAVIR-AST::AREF-AST = 1443, 
// Unused CLASP-ANALYZER::MANAGER = 1980, 
// Unused COMMON-LISP::VARIABLE = 1927, 
// Unused ECLECTOR.READER::SINGLE-FEATURE-EXPECTED/READER = 1366, 
// Unused COMMON-LISP::CONDITION = 1101, 
// Unused CLEAVIR-IR::COERCE-INSTRUCTION = 1670, 
// Unused ECLECTOR.READER::TWO-PACKAGE-MARKERS-MUST-NOT-BE-FIRST = 1343, 
// Unused COMPILER::UNDEFINED-WARNING = 1190, 
// Unused CLEAVIR-GENERATE-AST::COMPILATION-WARNING = 1520, 
// Unused CLEAVIR-CODE-UTILITIES::MALFORMED-SPECIALIZED-REQUIRED = 1467, 
// Unused ECLECTOR.READER::REFERENCE-ERROR = 1368, 
// Unused CORE::ROW-MAJOR-OUT-OF-BOUNDS = 1119, 
// Unused CLEAVIR-ENVIRONMENT::NO-TAG-INFO = 1486, 
// Unused COMPILER::SIMPLE-COMPILER-WARNING = 1196, 
// Unused CLOS::FORWARD-REFERENCED-CLASS = 1071, 
// Unused SICL-ADDITIONAL-CONDITIONS::MALFORMED-SLOT-SPEC = 1778, 
// Unused CLASP-ANALYZER::CLASS-LAYOUT = 1923, 
// Unused CLEAVIR-AST::ONE-VALUE-AST-MIXIN = 1383, 
// Unused CLASP-CLEAVIR-HIR::DEBUG-MESSAGE-INSTRUCTION = 1834, 
// Unused COMMON-LISP::UNDEFINED-FUNCTION = 1141, 
// Unused CLOS::METAOBJECT = 1063, 
// Unused CLEAVIR-LIVENESS::LIVE-BEFORE-MIXIN = 1703, 
// Unused CONCRETE-SYNTAX-TREE::SINGLETON-PARAMETER-GROUP-MIXIN = 1248, 
// Unused CLEAVIR-IR::REMOVE-ACTIVATION-RECORD-INSTRUCTION = 1689, 
// Unused CLEAVIR-CST-TO-AST::FUNCTION-NAME-UNKNOWN = 1597, 
// Unused STAMP_gctools__GCVector_moveable_core__BacktraceEntry_ = 718, 
// Unused CORE::PRETTY-STREAM = 1177, 
// Unused CLANG-TOOL::GOOD-DUMP-MATCH-CALLBACK = 1900, 
// Unused CLASP-CLEAVIR-AST::DISPLACEMENT-AST = 1820, 
// Unused SWANK::MULTITHREADED-CONNECTION = 1880, 
// Unused COMMON-LISP::FLOATING-POINT-INEXACT = 1147, 
// Unused CLEAVIR-CST-TO-AST::INCORRECT-NUMBER-OF-ARGUMENTS-WARNING = 1572, 
// Unused CLASP-CLEAVIR-HIR::DISPLACEMENT-INSTRUCTION = 1844, 
// Unused SICL-ADDITIONAL-CONDITIONS::UNKNOWN-EVAL-WHEN-SITUATION = 1765, 
// Unused CONCRETE-SYNTAX-TREE::CCL = 1245, 
// Unused COMMON-LISP::PARSE-ERROR = 1153, 
// Unused CLEAVIR-AST::TAGBODY-AST = 1404, 
// Unused CLEAVIR-IR::CATCH-INSTRUCTION = 1639, 
// Unused SB-BSD-SOCKETS::SOCKET-TYPE-NOT-SUPPORTED-ERROR = 1214, 
// Unused CLASP-ANALYZER::CTYPE = 1936, 
// Unused CLEAVIR-GENERATE-AST::COMPILATION-PROGRAM-ERROR = 1519, 
// Unused CLEAVIR-IR::SET-SYMBOL-VALUE-INSTRUCTION = 1647, 
// Unused CLOS::STANDARD-DIRECT-SLOT-DEFINITION = 1061, 
// Unused CLEAVIR-ENVIRONMENT::BLOCK = 1505, 
// Unused CLASP-ANALYZER::SIMPLE-CTYPE = 1938, 
// Unused CLEAVIR-IR::FLOAT-SUB-INSTRUCTION = 1661, 
// Unused SICL-ADDITIONAL-CONDITIONS::MALFORMED-SLOTS-LIST = 1777, 
// Unused ACCLIMATION::VIETNAMESE = 1231, 
// Unused SICL-ADDITIONAL-CONDITIONS::FORM-TOO-LONG = 1764, 
// Unused SB-BSD-SOCKETS::ADDRESS-IN-USE-ERROR = 1203, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-BODY = 1284, 
// Unused CLEAVIR-IR::FUNCALL-NO-RETURN-INSTRUCTION = 1633, 
// Unused CLASP-CLEAVIR-AST::BIND-VA-LIST-AST = 1833, 
// Unused STAMP_gctools__GCBitUnitArray_moveable_4__false_ = 707, 
// Unused COMMON-LISP::UNBOUND-SLOT = 1140, 
// Unused CLEAVIR-ENVIRONMENT::FUNCTION-DYNAMIC-EXTENT = 1512, 
// Unused CORE::SIMPLE-PARSE-ERROR = 1154, 
// Unused ECLECTOR.READER::NO-SLOT-VALUE-FOUND = 1362, 
// Unused CLEAVIR-IR::SIGNED-SUB-INSTRUCTION = 1720, 
// Unused ECLECTOR.READER::END-OF-LIST = 1319, 
// Unused COMMON-LISP::SIMPLE-WARNING = 1106, 
// Unused CONCRETE-SYNTAX-TREE::CLIENT = 1240, 
// Unused SICL-ADDITIONAL-CONDITIONS::FORM-TOO-SHORT = 1763, 
// Unused CC-MIR::SAVE-FRAME-INSTRUCTION = 1868, 
// Unused CLEAVIR-IR::RAW-INTEGER = 1713, 
// Unused CLEAVIR-GENERATE-AST::ODD-KEYWORD-PORTION-WARNING = 1556, 
// Unused CLEAVIR-CST-TO-AST::ENCAPSULATED-CONDITION = 1567, 
// Unused CLEAVIR-AST::BIND-AST = 1415, 
// Unused STATIC-GFS::CONSTRUCTOR-CELL = 1097, 
// Unused CC-MIR::TYPED-LEXICAL-LOCATION = 1863, 
// Unused SWANK::INVOKE-DEFAULT-DEBUGGER = 1885, 
// Unused CLEAVIR-GENERATE-AST::NO-DEFAULT-METHOD = 1550, 
// Unused ECLECTOR.CONCRETE-SYNTAX-TREE::CST-CLIENT = 1373, 
// Unused CLANG-TOOL::DUMP-MATCH-CALLBACK = 1901, 
// Unused CLEAVIR-IR::ASSIGNMENT-INSTRUCTION = 1631, 
// Unused COMPILER::REDEFINED-FUNCTION-WARNING = 1194, 
// Unused CLEAVIR-ENVIRONMENT::FUNCTION-TYPE = 1508, 
// Unused CLEAVIR-CODE-UTILITIES::MULTIPLE-OCCURRENCES-OF-LAMBDA-LIST-KEYWORD = 1458, 
// Unused CLASP-ANALYZER::PROJECT = 1931, 
// Unused CLASP-ANALYZER::INSTANCE-FIELD = 1914, 
// Unused SB-BSD-SOCKETS::INVALID-ARGUMENT-ERROR = 1208, 
// Unused CLASP-ANALYZER::INSTANCE-ARRAY-ELEMENT = 1916, 
// Unused CLEAVIR-AST::FLOAT-COS-AST = 1434, 
// Unused CLEAVIR-CST-TO-AST::SETQ-CONSTANT-VARIABLE = 1594, 
// Unused CLEAVIR-IO::UNKNOWN-FILE-VERSION = 1376, 
// Unused CLEAVIR-ENVIRONMENT::FUNCTION = 1503, 
// Unused SICL-ADDITIONAL-CONDITIONS::ILLEGAL-SLOT-NAME = 1779, 
// Unused SICL-ADDITIONAL-CONDITIONS::AT-LEAST-ONE-LIST-REQUIRED = 1743, 
// Unused CLEAVIR-AST::EQ-AST = 1416, 
// Unused CLASP-ANALYZER::RECORD-CTYPE = 1951, 
// Unused CLEAVIR-IR::AREF-INSTRUCTION = 1677, 
// Unused CLANG-TOOL::CODE-MATCH-TIMER = 1899, 
// Unused CONCRETE-SYNTAX-TREE::CST = 1234, 
// Unused SICL-ADDITIONAL-CONDITIONS::CLASS-OPTION-NAME-MUST-BE-SYMBOL = 1788, 
// Unused STATIC-GFS::CELL-UPDATER = 1098, 
// Unused CLASP-ANALYZER::SIMPLE-STAMP = 1925, 
// Unused ACCLIMATION::LANGUAGE = 1224, 
// Unused CLEAVIR-IR::RAW-DATUM = 1712, 
// Unused CLASP-CLEAVIR-HIR::BIND-VA-LIST-INSTRUCTION = 1855, 
// Unused EXT::STORAGE-EXHAUSTED = 1113, 
// Unused CLEAVIR-IR::FLOAT-ADD-INSTRUCTION = 1660, 
// Unused CLEAVIR-AST::SET-SYMBOL-VALUE-AST = 1391, 
// Unused CLASP-ANALYZER::PARALLEL-RESULT = 1984, 
// Unused GRAY::FUNDAMENTAL-BINARY-OUTPUT-STREAM = 1175, 
// Unused CLEAVIR-CODE-UTILITIES::MALFORMED-AUX = 1474, 
// Unused CORE::CXX-CLASS = 1072, 
// Unused SB-BSD-SOCKETS::SOCKET-ERROR = 1202, 
// Unused CONCRETE-SYNTAX-TREE::LAMBDA-LIST-TYPE = 1290, 
// Unused SB-BSD-SOCKETS::SOCKET = 1199, 
// Unused CLEAVIR-AST::SYMBOL-VALUE-AST = 1389, 
// Unused SWANK::INSPECTOR-STATE = 1887, 
// Unused CLASP-CLEAVIR-HIR::DEFCALLBACK-INSTRUCTION = 1841, 
// Unused CORE::NEWLINE = 1181, 
// Unused CORE::PPRINT-DISPATCH-TABLE = 1187, 
// Unused ECLECTOR.READER::SHARPSIGN-INVALID = 1367, 
// Unused CLEAVIR-AST::RPLACD-AST = 1440, 
// Unused CONCRETE-SYNTAX-TREE::ORDINARY-OPTIONAL-PARAMETER = 1274, 
// Unused CLEAVIR-CST-TO-AST::VARIABLE-NAME-UNKNOWN = 1596, 
// Unused CC-MIR::SINGLE-FLOAT-P-INSTRUCTION = 1865, 
// Unused CLEAVIR-KILDALL::ITERATE-MIXIN = 1694, 
// Unused CONCRETE-SYNTAX-TREE::GENERIC-FUNCTION-LAMBDA-LIST = 1292, 
// Unused CLEAVIR-CST-TO-AST::INVALID-EVAL-WHEN-SITUATION = 1581, 
// Unused CLEAVIR-CST-TO-AST::LAMBDA-MUST-BE-PROPER-LIST = 1583, 
// Unused EXT::UNIX-SIGNAL-RECEIVED = 1116, 
// Unused CLEAVIR-IR::FDEFINITION-INSTRUCTION = 1649, 
// Unused CLEAVIR-GENERATE-AST::SETQ-VAR-MUST-BE-SYMBOL = 1543, 
// Unused CLASP-ANALYZER::ARRAY-OFFSET = 1972, 
// Unused CLEAVIR-IR::USE-INSTRUCTION = 1652, 
// Unused EXT::STREAM-DECODING-ERROR = 1166, 
// Unused CONCRETE-SYNTAX-TREE::ORDINARY-OPTIONAL-PARAMETER-GROUP = 1255, 
// Unused CLEAVIR-CODE-UTILITIES::FORM-MUST-BE-PROPER-LIST = 1447, 
// Unused CLASP-ANALYZER::FUNCTION-PROTO-CTYPE = 1939, 
// Unused CLEAVIR-IR::FIXNUM-ADD-INSTRUCTION = 1655, 
// Unused CLEAVIR-BASIC-BLOCKS::BASIC-BLOCK = 1734, 
// Unused ECLECTOR.READER::INCORRECT-INITIALIZATION-LENGTH = 1357, 
// Unused CLASP-ANALYZER::POINTER-OFFSET = 1970, 
// Unused CONCRETE-SYNTAX-TREE::ORDINARY-KEY-PARAMETER-GROUP = 1257, 
// Unused SICL-ADDITIONAL-CONDITIONS::BOTH-TEST-AND-TEST-NOT-GIVEN = 1742, 
// Unused SICL-ADDITIONAL-CONDITIONS::BODY-MUST-BE-PROPER-LIST = 1758, 
// Unused CLEAVIR-AST::FLOAT-EQUAL-AST = 1432, 
// Unused CLASP-CLEAVIR-HIR::FOREIGN-CALL-INSTRUCTION = 1839, 
// Unused CORE::WRONG-NUMBER-OF-ARGUMENTS = 1150, 
// Unused CLOS::EFFECTIVE-SLOT-DEFINITION = 1067, 
// Unused CLASP-CLEAVIR-HIR::VASLIST-LENGTH-INSTRUCTION = 1854, 
// Unused ECLECTOR.READTABLE::UNKNOWN-MACRO-SUB-CHARACTER = 1317, 
// Unused CLEAVIR-IR::FLOAT-EQUAL-INSTRUCTION = 1666, 
// Unused CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT = 1935, 
// Unused SB-BSD-SOCKETS::TRY-AGAIN-ERROR = 1220, 
// Unused CONCRETE-SYNTAX-TREE::CONS-CST-REQUIRED = 1239, 
// Unused CLASP-CLEAVIR-AST::DERIVABLE-STAMP-AST = 1828, 
// Unused CLASP-CLEAVIR-HIR::DEBUG-BREAK-INSTRUCTION = 1835, 
// Unused CLEAVIR-IR::BOTH-INDIVIDUAL-INPUTS-MUST-BE-GIVEN = 1730, 
// Unused SWANK::INSPECTOR-CHECKLIST = 1892, 
// Unused CONCRETE-SYNTAX-TREE::DESTRUCTURING-PARAMETER = 1280, 
// Unused CLEAVIR-GENERATE-AST::NOT-ENOUGH-ARGUMENTS-WARNING = 1554, 
// Unused CLASP-ANALYZER::STATIC-LOCAL-VARIABLE = 1929, 
// Unused ACCLIMATION::CONDITION = 1233, 
// Unused CLOS::DIRECT-SLOT-DEFINITION = 1066, 
// Unused COMPILER::COMPILED-PROGRAM-ERROR = 1188, 
// Unused CLANG-TOOL::WRONG-MATCHER = 1909, 
// Unused CLEAVIR-AST::DYNAMIC-ALLOCATION-AST = 1413, 
// Unused SWANK::SWANK-ERROR = 1881, 
// Unused CLEAVIR-IR::LOAD-TIME-VALUE-INPUT = 1627, 
// Unused CLEAVIR-AST::FLOAT-SUB-AST = 1425, 
// Unused CLEAVIR-IR::UNSIGNED-SUB-INSTRUCTION = 1724, 
// Unused ECLECTOR.READER::SYMBOL-NAME-MUST-NOT-END-WITH-PACKAGE-MARKER = 1341, 
// Unused CLEAVIR-GENERATE-AST::FUNCTION-NAME-NAMES-LOCAL-MACRO = 1548, 
// Unused SWANK::LCONS = 1886, 
// Unused SICL-ADDITIONAL-CONDITIONS::TOO-FEW-ARGUMENTS = 1771, 
// Unused CONCRETE-SYNTAX-TREE::ORDINARY-REQUIRED-PARAMETER-GROUP = 1253, 
// Unused STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__TopologyAtomInfo_O__ = 657, 
// Unused CONCRETE-SYNTAX-TREE::SIMPLE-VARIABLE = 1273, 
// Unused SB-BSD-SOCKETS::INTERRUPTED-ERROR = 1204, 
// Unused MP::RWLOCK = 1086, 
// Unused COMMON-LISP::DIVISION-BY-ZERO = 1144, 
// Unused CLEAVIR-CODE-UTILITIES::LAMBDA-LIST-MUST-NOT-BE-CIRCULAR = 1453, 
// Unused CLASP-CLEAVIR-AST::ARRAY-DIMENSION-AST = 1824, 
// Unused CONCRETE-SYNTAX-TREE::STRUCTURE-MISMATCH-ERROR = 1560, 
// Unused COMPILER::COMPILER-CONDITION = 1189, 
// Unused CLEAVIR-ENVIRONMENT::INLINE = 1514, 
// Unused COMMON-LISP::STANDARD-GENERIC-FUNCTION = 1089, 
// Unused SB-BSD-SOCKETS::NAME-SERVICE-ERROR = 1216, 
// Unused SB-BSD-SOCKETS::INET-SOCKET = 1200, 
// Unused CLOSER-MOP::STANDARD-GENERIC-FUNCTION = 1311, 
// Unused CLEAVIR-AST::RPLACA-AST = 1439, 
// Unused CORE::ARRAY-OUT-OF-BOUNDS = 1120, 
// Unused ECLECTOR.READER::UNINTERNED-SYMBOL-MUST-NOT-CONTAIN-PACKAGE-MARKER = 1345, 
// Unused SICL-ADDITIONAL-CONDITIONS::MULTIPLE-INITFORM-OPTIONS-NOT-PERMITTED = 1782, 
// Unused CONCRETE-SYNTAX-TREE::CONS-CST = 1236, 
// Unused CLASP-CLEAVIR::CLASP-CST-CLIENT = 1869, 
// Unused CLEAVIR-CODE-UTILITIES::TOO-MANY-ARGUMENTS = 1450, 
// Unused CLASP-ANALYZER::UNKNOWN-CTYPE = 1948, 
// Unused CLEAVIR-GENERATE-AST::FUNCTION-ARGUMENT-MUST-BE-FUNCTION-NAME-OR-LAMBDA-EXPRESSION = 1535, 
// Unused SICL-ADDITIONAL-CONDITIONS::GO-TAG-MUST-BE-SYMBOL-OR-INTEGER = 1766, 
// Unused CLEAVIR-ENVIRONMENT::SYMBOL-MACRO-INFO = 1490, 
// Unused CLEAVIR-ENVIRONMENT::CONSTANT-VARIABLE-INFO = 1489, 
// Unused CLEAVIR-IR::UNSIGNED-ADD-INSTRUCTION = 1723, 
// Unused GRAY::FUNDAMENTAL-BINARY-STREAM = 1171, 
// Unused COMPILER::UNDEFINED-FUNCTION-WARNING = 1192, 
// Unused CLEAVIR-GENERATE-AST::FUNCTION-NAME-NAMES-GLOBAL-MACRO = 1547, 
// Unused CLANG-TOOL::SOURCE-LOC-MATCH-CALLBACK = 1905, 
// Unused SICL-ADDITIONAL-CONDITIONS::SETQ-VARIABLE-MUST-BE-SYMBOL = 1768, 
// Unused CLEAVIR-CST-TO-AST::COMPILER-MACRO-EXPANSION-STYLE-WARNING = 1609, 
// Unused CLEAVIR-CST-TO-AST::RUN-TIME-PROGRAM-ERROR = 1570, 
// Unused EXT::STREAM-ENCODING-ERROR = 1165, 
// Unused CLASP-ANALYZER::UNSUPPORTED-TYPE = 1911, 
// Unused ECLECTOR.READER::NUMERIC-PARAMETER-SUPPLIED-BUT-IGNORED = 1346, 
// Unused CLEAVIR-COMPILATION-POLICY::BAD-OPTIMIZE-VALUE = 1516, 
// Unused CLEAVIR-CST-TO-AST::COMPILATION-PROGRAM-ERROR = 1564, 
// Unused SB-BSD-SOCKETS::HOST-ENT = 1198, 
// Unused GRAY::FUNDAMENTAL-OUTPUT-STREAM = 1169, 
// Unused CLEAVIR-IR::FLOAT-MUL-INSTRUCTION = 1662, 
// Unused ECLECTOR.READER::SYMBOL-SYNTAX-ERROR = 1338, 
// Unused CC-MIR::GENERALP-INSTRUCTION = 1866, 
// Unused CLEAVIR-CST-TO-AST::COMPILATION-WARNING = 1565, 
// Unused CLASP-ANALYZER::GCSTRING-OFFSET = 1978, 
// Unused ECLECTOR.READER::SYMBOL-CAN-HAVE-AT-MOST-TWO-PACKAGE-MARKERS = 1344, 
// Unused CLOS::STANDARD-ACCESSOR-METHOD = 1092, 
// Unused CLASP-ANALYZER::TEMPLATE-SPECIALIZATION-CTYPE = 1949, 
// Unused SICL-ADDITIONAL-CONDITIONS::MULTIPLE-DOCUMENTATION-OPTIONS-NOT-PERMITTED = 1783, 
// Unused CLASP-ANALYZER::TAGGED-POINTER-OFFSET = 1969, 
// Unused COMMON-LISP::STRUCTURE-OBJECT = 1095, 
// Unused ECLECTOR.READTABLE.SIMPLE::READTABLE = 1318, 
// Unused CLEAVIR-KILDALL::START-EVERYWHERE-MIXIN = 1695, 
// Unused ECLECTOR.READER::INVALID-CONSTITUENT-CHARACTER = 1339, 
// Unused ECLECTOR.READER::PACKAGE-DOES-NOT-EXIST = 1334, 
// Unused CLEAVIR-AST::FLOAT-NOT-GREATER-AST = 1429, 
// Unused CLASP-ANALYZER::CONTAINERALLOC = 1922, 
// Unused CLEAVIR-GENERATE-AST::VARIABLE-NAME-UNKNOWN = 1545, 
// Unused CLEAVIR-CST-TO-AST::FUNCTION-NAME-NAMES-LOCAL-MACRO = 1599, 
// Unused SICL-ADDITIONAL-CONDITIONS::WARN-BOTH-TEST-AND-TEST-NOT-GIVEN = 1746, 
// Unused CONCRETE-SYNTAX-TREE::ORDINARY-LAMBDA-LIST = 1291, 
// Unused CLEAVIR-IR::SIGNED-ADD-INSTRUCTION = 1719, 
// Unused CORE::CLOSED-STREAM = 1132, 
// Unused CLASP-CLEAVIR-AST::VECTOR-LENGTH-AST = 1819, 
// Unused SICL-ADDITIONAL-CONDITIONS::SLOT-DOCUMENTATION-OPTION-MUST-BE-STRING = 1786, 
// Unused CLEAVIR-IR::UNBOX-INSTRUCTION = 1654, 
// Unused CONCRETE-SYNTAX-TREE::SPECIALIZED-REQUIRED-PARAMETER = 1279, 
// Unused INTERPRET-AST::CANNOT-INTERPRET = 1861, 
// Unused CLEAVIR-PARTIAL-INLINING::BINDING-ASSIGNMENT-INSTRUCTION = 1711, 
// Unused STAMP_gctools__GCBitUnitArray_moveable_2__false_ = 706, 
// Unused CLEAVIR-CST-TO-AST::MACROEXPANSION-STYLE-WARNING = 1606, 
// Unused CLASP-CLEAVIR::FUNCTION-INFO = 1860, 
// Unused CLEAVIR-LIVENESS::LIVENESS-TRAVERSE = 1701, 
// Unused SWANK/GRAY::SLIME-OUTPUT-STREAM = 1875, 
// Unused SICL-ADDITIONAL-CONDITIONS::NUMERIC-CATCH-TAG = 1797, 
// Unused CLEAVIR-AST::UNREACHABLE-AST = 1414, 
// Unused CLASP-CLEAVIR::ABI-X86-64 = 1803, 
// Unused CLOS::SPECIALIZER = 1069, 
// Unused CLEAVIR-IR::RPLACA-INSTRUCTION = 1673, 
// Unused CLEAVIR-GENERATE-AST::VARIABLE-MUST-BE-A-SYMBOL = 1539, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-MIXIN = 1272, 
// Unused CLEAVIR-GENERATE-AST::ARGUMENT-MISMATCH = 1522, 
// Unused SB-BSD-SOCKETS::OPERATION-TIMEOUT-ERROR = 1207, 
// Unused CLANG-TOOL::NO-NODE-FOR-TAG-ERROR = 1906, 
// Unused ECLECTOR.READER::TOO-MANY-DOTS = 1329, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-OPTIONAL = 1282, 
// Unused CLEAVIR-GENERATE-AST::SITUATIONS-MUST-BE-PROPER-LIST = 1531, 
// Unused CLEAVIR-GENERATE-AST::READ-ONLY-P-MUST-BE-BOOLEAN = 1540, 
// Unused COMMON-LISP::STREAM-ERROR = 1130, 
// Unused SICL-ADDITIONAL-CONDITIONS::INVALID-END-INDEX = 1751, 
// Unused SB-BSD-SOCKETS::CONNECTION-REFUSED-ERROR = 1206, 
// Unused CLASP-CLEAVIR-HIR::NAMED-ENTER-INSTRUCTION = 1856, 
// Unused CLEAVIR-IR::BOX-INSTRUCTION = 1653, 
// Unused SICL-ADDITIONAL-CONDITIONS::LIST-AS-SEQUENCE-MUST-BE-PROPER = 1747, 
// Unused SICL-ADDITIONAL-CONDITIONS::DEFAULT-INITARGS-OPTION-ONCE = 1792, 
// Unused CORE::SIMPLE-READER-ERROR = 1156, 
// Unused ECLECTOR.READER::TWO-PACKAGE-MARKERS-MUST-BE-ADJACENT = 1342, 
// Unused CLEAVIR-GENERATE-AST::COMPILATION-STYLE-WARNING = 1521, 
// Unused CLEAVIR-CST-TO-AST::VALUES-&REST-SYNTAX = 1576, 
// Unused CLASP-ANALYZER::OFFSET = 1966, 
// Unused CLEAVIR-CST-TO-AST::BODY = 1613, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-KEY = 1285, 
// Unused CORE::BLOCK-START = 1183, 
// Unused CLEAVIR-ENVIRONMENT::TAG = 1506, 
// Unused SB-BSD-SOCKETS::OPERATION-NOT-SUPPORTED-ERROR = 1211, 
// Unused CLEAVIR-IR::CDR-INSTRUCTION = 1672, 
// Unused CLASP-ANALYZER::SMART-PTR-OFFSET = 1968, 
// Unused CLEAVIR-IR::TYPEQ-INSTRUCTION = 1636, 
// Unused COMPILER::SIMPLE-COMPILER-STYLE-WARNING = 1197, 
// Unused CLEAVIR-ENVIRONMENT::LEXICAL-VARIABLE-INFO = 1487, 
// Unused CLEAVIR-IR::VALUES-LOCATION = 1625, 
// Unused SICL-ADDITIONAL-CONDITIONS::SICL-PROGRAM-ERROR = 1752, 
// Unused CLOS::STANDARD-SLOT-DEFINITION = 1065, 
// Unused CLEAVIR-IR::EQUAL-INSTRUCTION = 1727, 
// Unused SICL-ADDITIONAL-CONDITIONS::CLASS-OPTION-MUST-BE-NON-EMPTY-LIST = 1787, 
// Unused CLASP-CLEAVIR-AST::DEBUG-BREAK-AST = 1812, 
// Unused CLEAVIR-CODE-UTILITIES::MALFORMED-DEFGENERIC-KEY = 1472, 
// Unused CLASP-ANALYZER::SMART-PTR-CTYPE = 1952, 
// Unused CLEAVIR-AST::FLOAT-NOT-LESS-AST = 1431, 
// Unused ECLECTOR.READER::READ-TIME-EVALUATION-ERROR = 1349, 
// Unused CLASP-CLEAVIR-AST::BASE-FOREIGN-CALL-AST = 1813, 
// Unused CLEAVIR-AST::SLOT-WRITE-AST = 1442, 
// Unused CC-MIR::CHARACTERP-INSTRUCTION = 1864, 
// Unused CLEAVIR-IR::FLOAT-DIV-INSTRUCTION = 1663, 
// Unused CLEAVIR-GENERATE-AST::SETQ-CONSTANT-VARIABLE = 1544, 
// Unused CLEAVIR-CODE-UTILITIES::MALFORMED-ORDINARY-OPTIONAL = 1468, 
// Unused CLASP-ANALYZER::TAGGED-POINTER-CTYPE = 1953, 
// Unused CLEAVIR-IR::FIXNUM-EQUAL-INSTRUCTION = 1659, 
// Unused CLEAVIR-COMPILATION-POLICY::NO-POLICY-COMPUTER = 1518, 
// Unused CLEAVIR-CODE-UTILITIES::INVALID-NUMBER-OF-ARGUMENTS = 1448, 
// Unused CLASP-ANALYZER::HNODE = 1934, 
// Unused CLEAVIR-ENVIRONMENT::OPTIMIZE-INFO = 1498, 
// Unused COMMON-LISP::LIST = 1076, 
// Unused CLEAVIR-ESCAPE::ESCAPE = 1706, 
// Unused CLEAVIR-KILDALL::BITSET-POOL-MIXIN = 1698, 
// Unused CLASP-CLEAVIR::CLASP-ORDINARY-REST-PARAMETER-GROUP = 1807, 
// Unused CLASP-ANALYZER::LVALUE-REFERENCE-CTYPE = 1940, 
// Unused CLEAVIR-AST::FIXNUM-GREATER-AST = 1421, 
// Unused STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Isoname_O__ = 637, 
// Unused CLASP-ANALYZER::INJECTED-CLASS-NAME-CTYPE = 1959, 
// Unused CLEAVIR-CST-TO-AST::FUNCTION-ARGUMENT-MUST-BE-FUNCTION-NAME-OR-LAMBDA-EXPRESSION = 1584, 
// Unused SWANK::%PACKAGE-SYMBOLS-CONTAINER = 1893, 
// Unused CLEAVIR-CST-TO-AST::BINDING-MUST-BE-SYMBOL-OR-LIST = 1587, 
// Unused CORE::SIMPLE-STYLE-WARNING = 1108, 
// Unused ECLECTOR.READER::BACKQUOTE-CONDITION = 1322, 
// Unused CORE::SIMPLE-CONTROL-ERROR = 1128, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-ENVIRONMENT = 1288, 
// Unused ALEXANDRIA.0.DEV::SIMPLE-READER-ERROR = 1308, 
// Unused SICL-ADDITIONAL-CONDITIONS::MALFORMED-METACLASS-OPTION = 1790, 
// Unused CLEAVIR-CODE-UTILITIES::MALFORMED-DESTRUCTURING-KEY = 1473, 
// Unused SICL-ADDITIONAL-CONDITIONS::SEQUENCE-ERROR-MIXIN = 1748, 
// Unused CLEAVIR-CODE-UTILITIES::LAMBDA-LIST-MUST-BE-PROPER-LIST = 1454, 
// Unused SICL-ADDITIONAL-CONDITIONS::SICL-ERROR = 1737, 
// Unused CLEAVIR-IR::SUCCESSOR-SUCCESSORS-MUTUALLY-EXCLUSIVE = 1731, 
// Unused CLEAVIR-CST-TO-AST::MACROEXPANSION-WARNING = 1605, 
// Unused CLEAVIR-CST-TO-AST::INCORRECT-NUMBER-OF-ARGUMENTS-ERROR = 1571, 
// Unused SWANK::KEYWORD-ARG = 1896, 
// Unused CONCRETE-SYNTAX-TREE::SICL = 1242, 
// Unused SWANK::ARGLIST-DUMMY = 1895, 
// Unused SICL-ADDITIONAL-CONDITIONS::MULTIPLE-TYPE-OPTIONS-NOT-PERMITTED = 1785, 
// Unused CONCRETE-SYNTAX-TREE::SPECIALIZED-REQUIRED-PARAMETER-GROUP = 1261, 
// Unused CONCRETE-SYNTAX-TREE::ENVIRONMENT-PARAMETER-GROUP = 1267, 
// Unused ACCLIMATION::ENGLISH = 1228, 
// Unused CORE::STD-CLASS = 1073, 
// Unused CONCRETE-SYNTAX-TREE::AUX-PARAMETER = 1277, 
// Unused CLEAVIR-GENERATE-AST::BLOCK-NAME-MUST-BE-A-SYMBOL = 1530, 
// Unused SWANK/BACKEND::NETWORK-ERROR = 1871, 
// Unused CLOS::STANDARD-READER-METHOD = 1093, 
// Unused CLEAVIR-IR::ADD-ACTIVATION-RECORD-INSTRUCTION = 1688, 
// Unused EXT::SOURCE-LOCATION = 1099, 
// Unused CLASP-ANALYZER::COPYABLE-OFFSET = 1967, 
// Unused ECLECTOR.READER::UNKNOWN-CHARACTER-NAME = 1350, 
// Unused CLEAVIR-CST-TO-AST::BLOCK-NAME-UNKNOWN = 1591, 
// Unused CLASP-ANALYZER::UNINTERESTING-CTYPE = 1947, 
// Unused ECLECTOR.READER::DIGIT-EXPECTED = 1351, 
// Unused SICL-ADDITIONAL-CONDITIONS::ARGUMENT-MISMATCH = 1770, 
// Unused CLEAVIR-GENERATE-AST::IGNORED-VARIABLE-REFERENCED = 1529, 
// Unused SWANK/GRAY::SLIME-INPUT-STREAM = 1876, 
// Unused CLASP-CLEAVIR-AST::WRAPPED-STAMP-AST = 1827, 
// Unused ECLECTOR.READER::SYMBOL-NAME-MUST-NOT-BE-ONLY-PACKAGE-MARKERS = 1340, 
// Unused CLEAVIR-CST-TO-AST::MACROEXPANSION-ERROR = 1604, 
// Unused CLEAVIR-CST-TO-AST::EVAL-WARNING = 1611, 
// Unused CLEAVIR-AST::MULTIPLE-VALUE-PROG1-AST = 1412, 
// Unused CLOS::EQL-SPECIALIZER = 1070, 
// Unused CLEAVIR-IR::NOP-INSTRUCTION = 1629, 
// Unused CLASP-ANALYZER::GCSTRING-MOVEABLE-CTYPE = 1965, 
// Unused CLEAVIR-IR::FIXNUM-NOT-GREATER-INSTRUCTION = 1658, 
// Unused CLEAVIR-GENERATE-AST::TOO-MANY-ARGUMENTS = 1525, 
// Unused STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___ = 677, 
// Unused CLASP-ANALYZER::DESTINATION = 1981, 
// Unused CLEAVIR-METER::SIZE-METER = 1379, 
// Unused CLEAVIR-CST-TO-AST::COMPILATION-CONDITION = 1563, 
// Unused CLANG-TOOL::CODE-MATCH-CALLBACK = 1904, 
// Unused CONCRETE-SYNTAX-TREE::ATOM-CST = 1235, 
// Unused CLEAVIR-IR::CONSTANT-INPUT = 1623, 
// Unused ALEXANDRIA.0.DEV::SIMPLE-PROGRAM-ERROR = 1310, 
// Unused CONCRETE-SYNTAX-TREE::OPTIONAL-PARAMETER-GROUP = 1254, 
// Unused CONCRETE-SYNTAX-TREE::DESTRUCTURING-REST-PARAMETER-GROUP = 1266, 
// Unused COMPILER::UNDEFINED-VARIABLE-WARNING = 1191, 
// Unused CLASP-CLEAVIR-HIR::VASLIST-POP-INSTRUCTION = 1853, 
// Unused SWANK::ISTATE = 1888, 
// Unused CLEAVIR-AST::FLOAT-LESS-AST = 1428, 
// Unused CLEAVIR-KILDALL::START-ENTER-MIXIN = 1696, 
// Unused CORE::SIMPLE-PACKAGE-ERROR = 1137, 
// Unused ECLECTOR.READTABLE::DISPATCH-MACRO-CHARACTER-ERROR = 1314, 
// Unused CLANG-TOOL::NODE-MATCHER-AMBIGUOUS-ERROR = 1910, 
// Unused CLEAVIR-AST::FLOAT-MUL-AST = 1426, 
// Unused COMMON-LISP::ARITHMETIC-ERROR = 1143, 
// Unused CLASP-ANALYZER::SPECIES = 1979, 
// Unused SICL-ADDITIONAL-CONDITIONS::SICL-PROGRAM-WARNING = 1754, 
// Unused CLASP-CLEAVIR-HIR::MULTIPLE-VALUE-FOREIGN-CALL-INSTRUCTION = 1838, 
// Unused CLEAVIR-CODE-UTILITIES::TOO-FEW-ARGUMENTS = 1449, 
// Unused EXT::UNDEFINED-CLASS = 1142, 
// Unused CLEAVIR-CST-TO-AST::LOCAL-FUNCTION-DEFINITION-MUST-BE-PROPER-LIST = 1582, 
// Unused ECLECTOR.READER::COMMA-NOT-INSIDE-BACKQUOTE = 1325, 
// Unused CORE::BLOCK-END = 1184, 
// Unused ECLECTOR.READER::SHARPSIGN-SHARPSIGN-UNDEFINED-LABEL = 1371, 
// Unused ALEXANDRIA.0.DEV::SIMPLE-STYLE-WARNING = 1307, 
// Unused EXT::INTERACTIVE-INTERRUPT = 1160, 
// Unused ECLECTOR.READER::NO-ELEMENTS-FOUND = 1356, 
// Unused CONCRETE-SYNTAX-TREE::LAMBDA-LIST-KEYWORD = 1281, 
// Unused CORE::OUT-OF-BOUNDS = 1118, 
// Unused CLOS::NO-APPLICABLE-METHOD-ERROR = 1124, 
// Unused CLEAVIR-CST-TO-AST::BINDING-MUST-HAVE-LENGTH-ONE-OR-TWO = 1588, 
// Unused SWANK::END-OF-REPL-INPUT = 1882, 
// Unused SWANK::CHANNEL = 1883, 
// Unused EXT::ILLEGAL-INSTRUCTION = 1114, 
// Unused CORE::OUT-OF-EXTENT-UNWIND = 1129, 
// Unused CONCRETE-SYNTAX-TREE::GRAMMAR-SYMBOL = 1246, 
// Unused CLASP-CLEAVIR-AST::FOREIGN-CALL-AST = 1815, 
// Unused CLEAVIR-IR::UNSIGNED-LESS-INSTRUCTION = 1725, 
// Unused CLASP-CLEAVIR::ABI-X86-32 = 1804, 
// Unused CLEAVIR-GENERATE-AST::TOO-MANY-ARGUMENTS-STYLE-WARNING = 1553, 
// Unused CLEAVIR-IR::NO-SUCCESSORS-MIXIN = 1616, 
// Unused SICL-ADDITIONAL-CONDITIONS::SICL-STYLE-WARNING = 1736, 
// Unused CLEAVIR-AST::VALUES-AST = 1411, 
// Unused CLEAVIR-AST::TYPEQ-AST = 1407, 
// Unused CLEAVIR-IR::CREATE-CELL-INSTRUCTION = 1684, 
// Unused GRAY::FUNDAMENTAL-BINARY-INPUT-STREAM = 1174, 
// Unused CLASP-CLEAVIR-HIR::PRECALC-VALUE-INSTRUCTION = 1857, 
// Unused ECLECTOR.READER::SHARPSIGN-EQUALS-ONLY-REFERS-TO-SELF = 1370, 
// Unused CLASP-CLEAVIR-AST::DISPLACED-INDEX-OFFSET-AST = 1821, 
// Unused CLEAVIR-IR::TOP-LEVEL-ENTER-INSTRUCTION = 1628, 
// Unused CLEAVIR-CST-TO-AST::LAMBDA-CALL-FIRST-SYMBOL-NOT-LAMBDA = 1602, 
// Unused ECLECTOR.READER::COMMA-SYNTAX-ERROR = 1324, 
// Unused ECLECTOR.READER::INVALID-CONTEXT-FOR-CONSING-DOT = 1330, 
  STAMP_max = 3295,

#endif // defined(GC_STAMP)
#if defined(GC_ENUM_NAMES)
register_stamp_name("STAMP_null",0); 
register_stamp_name("STAMP_core__T_O", ADJUST_STAMP(7));
register_stamp_name("STAMP_core__Unused_dummy_O", ADJUST_STAMP(11));
register_stamp_name("STAMP_core__General_O", ADJUST_STAMP(15));
register_stamp_name("STAMP_core__MultiStringBuffer_O", ADJUST_STAMP(19));
register_stamp_name("STAMP_core__LambdaListHandler_O", ADJUST_STAMP(23));
register_stamp_name("STAMP_llvmo__AttributeSet_O", ADJUST_STAMP(27));
register_stamp_name("STAMP_core__AtomicT_Holder_O", ADJUST_STAMP(31));
register_stamp_name("STAMP_core__Pointer_O", ADJUST_STAMP(35));
register_stamp_name("STAMP_clasp_ffi__ForeignData_O", ADJUST_STAMP(39));
register_stamp_name("STAMP_core__CxxObject_O", ADJUST_STAMP(43));
register_stamp_name("STAMP_kinematics__ChiList_O", ADJUST_STAMP(47));
register_stamp_name("STAMP_chem__NumericalFunction_O", ADJUST_STAMP(51));
register_stamp_name("STAMP_kinematics__FoldTree_O", ADJUST_STAMP(55));
register_stamp_name("STAMP_chem__StatusTracker_O", ADJUST_STAMP(59));
register_stamp_name("STAMP_kinematics__RotamerSetBase_O", ADJUST_STAMP(63));
register_stamp_name("STAMP_kinematics__BackboneDependentRotamerSet_O", ADJUST_STAMP(67));
register_stamp_name("STAMP_kinematics__RotamerSet_O", ADJUST_STAMP(71));
register_stamp_name("STAMP_chem__EnergyComponent_O", ADJUST_STAMP(75));
register_stamp_name("STAMP_chem__EnergyStretch_O", ADJUST_STAMP(79));
register_stamp_name("STAMP_chem__EnergyRigidBodyComponent_O", ADJUST_STAMP(83));
register_stamp_name("STAMP_chem__EnergyRigidBodyStaple_O", ADJUST_STAMP(87));
register_stamp_name("STAMP_chem__EnergyRigidBodyNonbond_O", ADJUST_STAMP(91));
register_stamp_name("STAMP_chem__EnergyOutOfZPlane_O", ADJUST_STAMP(95));
register_stamp_name("STAMP_chem__EnergySketchNonbond_O", ADJUST_STAMP(99));
register_stamp_name("STAMP_chem__EnergyChiralRestraint_O", ADJUST_STAMP(103));
register_stamp_name("STAMP_chem__EnergyPointToLineRestraint_O", ADJUST_STAMP(107));
register_stamp_name("STAMP_chem__EnergyDihedral_O", ADJUST_STAMP(111));
register_stamp_name("STAMP_chem__EnergyNonbond_O", ADJUST_STAMP(115));
register_stamp_name("STAMP_chem__EnergyPeriodicBoundaryConditionsNonbond_O", ADJUST_STAMP(119));
register_stamp_name("STAMP_chem__EnergyAnchorRestraint_O", ADJUST_STAMP(123));
register_stamp_name("STAMP_chem__EnergyFixedNonbondRestraint_O", ADJUST_STAMP(127));
register_stamp_name("STAMP_chem__EnergySketchStretch_O", ADJUST_STAMP(131));
register_stamp_name("STAMP_chem__EnergyImproperRestraint_O", ADJUST_STAMP(135));
register_stamp_name("STAMP_chem__EnergyAngle_O", ADJUST_STAMP(139));
register_stamp_name("STAMP_chem__Matter_O", ADJUST_STAMP(143));
register_stamp_name("STAMP_chem__Aggregate_O", ADJUST_STAMP(147));
register_stamp_name("STAMP_chem__Atom_O", ADJUST_STAMP(151));
register_stamp_name("STAMP_chem__VirtualAtom_O", ADJUST_STAMP(155));
register_stamp_name("STAMP_chem__Residue_O", ADJUST_STAMP(159));
register_stamp_name("STAMP_chem__Molecule_O", ADJUST_STAMP(163));
register_stamp_name("STAMP_chem__PdbWriter_O", ADJUST_STAMP(167));
register_stamp_name("STAMP_chem__TrajectoryFrame_O", ADJUST_STAMP(171));
register_stamp_name("STAMP_llvmo__MDBuilder_O", ADJUST_STAMP(175));
register_stamp_name("STAMP_chem__Topology_O", ADJUST_STAMP(179));
register_stamp_name("STAMP_chem__AtomTable_O", ADJUST_STAMP(183));
register_stamp_name("STAMP_chem__CipPrioritizer_O", ADJUST_STAMP(187));
register_stamp_name("STAMP_adapt__IndexedObjectBag_O", ADJUST_STAMP(191));
register_stamp_name("STAMP_chem__VirtualSphere_O", ADJUST_STAMP(195));
register_stamp_name("STAMP_chem__TwisterDriver_O", ADJUST_STAMP(199));
register_stamp_name("STAMP_core__NativeVector_double_O", ADJUST_STAMP(203));
register_stamp_name("STAMP_chem__RingFinder_O", ADJUST_STAMP(207));
register_stamp_name("STAMP_llvmo__FunctionCallee_O", ADJUST_STAMP(211));
register_stamp_name("STAMP_kinematics__Joint_O", ADJUST_STAMP(215));
register_stamp_name("STAMP_kinematics__JumpJoint_O", ADJUST_STAMP(219));
register_stamp_name("STAMP_kinematics__OriginJumpJoint_O", ADJUST_STAMP(223));
register_stamp_name("STAMP_kinematics__BondedJoint_O", ADJUST_STAMP(227));
register_stamp_name("STAMP_kinematics__RootBondedJoint_O", ADJUST_STAMP(231));
register_stamp_name("STAMP_kinematics__DelayedBondedJoint_O", ADJUST_STAMP(235));
register_stamp_name("STAMP_chem__SearchStatistics_O", ADJUST_STAMP(239));
register_stamp_name("STAMP_chem__PdbMonomerDatabase_O", ADJUST_STAMP(243));
register_stamp_name("STAMP_chem__Twister_O", ADJUST_STAMP(247));
register_stamp_name("STAMP_chem__MonomerCoordinates_O", ADJUST_STAMP(251));
register_stamp_name("STAMP_chem__FFParameter_O", ADJUST_STAMP(255));
register_stamp_name("STAMP_chem__FFVdw_O", ADJUST_STAMP(259));
register_stamp_name("STAMP_chem__FFStretch_O", ADJUST_STAMP(263));
register_stamp_name("STAMP_chem__FFPtor_O", ADJUST_STAMP(267));
register_stamp_name("STAMP_chem__FFItor_O", ADJUST_STAMP(271));
register_stamp_name("STAMP_chem__FFNonbond_O", ADJUST_STAMP(275));
register_stamp_name("STAMP_chem__FFAngle_O", ADJUST_STAMP(279));
register_stamp_name("STAMP_chem__Restraint_O", ADJUST_STAMP(283));
register_stamp_name("STAMP_chem__RestraintChiral_O", ADJUST_STAMP(287));
register_stamp_name("STAMP_chem__RestraintDistance_O", ADJUST_STAMP(291));
register_stamp_name("STAMP_chem__RestraintAngle_O", ADJUST_STAMP(295));
register_stamp_name("STAMP_chem__RestraintAnchor_O", ADJUST_STAMP(299));
register_stamp_name("STAMP_chem__RestraintFixedNonbond_O", ADJUST_STAMP(303));
register_stamp_name("STAMP_chem__RestraintDihedral_O", ADJUST_STAMP(307));
register_stamp_name("STAMP_chem__AtomIndexer_O", ADJUST_STAMP(311));
register_stamp_name("STAMP_geom__BoundingCuboid_O", ADJUST_STAMP(315));
register_stamp_name("STAMP_chem__StereoInformation_O", ADJUST_STAMP(319));
register_stamp_name("STAMP_chem__AddIonOctree_O", ADJUST_STAMP(323));
register_stamp_name("STAMP_chem__CDNode_O", ADJUST_STAMP(327));
register_stamp_name("STAMP_chem__OligomerPart_Base_O", ADJUST_STAMP(331));
register_stamp_name("STAMP_chem__OligomerPart_Link_O", ADJUST_STAMP(335));
register_stamp_name("STAMP_chem__OligomerPart_Monomer_O", ADJUST_STAMP(339));
register_stamp_name("STAMP_kinematics__BondId_O", ADJUST_STAMP(343));
register_stamp_name("STAMP_core__Serializer_O", ADJUST_STAMP(347));
register_stamp_name("STAMP_chem__CoordinateSystem_O", ADJUST_STAMP(351));
register_stamp_name("STAMP_chem__Bond_O", ADJUST_STAMP(355));
register_stamp_name("STAMP_chem__CandoDatabase_O", ADJUST_STAMP(359));
register_stamp_name("STAMP_chem__AbstractLargeSquareMatrix_O", ADJUST_STAMP(363));
register_stamp_name("STAMP_chem__SparseLargeSquareMatrix_O", ADJUST_STAMP(367));
register_stamp_name("STAMP_chem__FullLargeSquareMatrix_O", ADJUST_STAMP(371));
register_stamp_name("STAMP_chem__FFBaseDb_O", ADJUST_STAMP(375));
register_stamp_name("STAMP_chem__FFParameterBaseDb_O", ADJUST_STAMP(379));
register_stamp_name("STAMP_chem__FFItorDb_O", ADJUST_STAMP(383));
register_stamp_name("STAMP_chem__FFStretchDb_O", ADJUST_STAMP(387));
register_stamp_name("STAMP_chem__FFAngleDb_O", ADJUST_STAMP(391));
register_stamp_name("STAMP_chem__FFNonbondDb_O", ADJUST_STAMP(395));
register_stamp_name("STAMP_chem__FFPtorDb_O", ADJUST_STAMP(399));
register_stamp_name("STAMP_chem__FFVdwDb_O", ADJUST_STAMP(403));
register_stamp_name("STAMP_chem__FFTypesDb_O", ADJUST_STAMP(407));
register_stamp_name("STAMP_chem__AGVertex_O", ADJUST_STAMP(411));
register_stamp_name("STAMP_chem__ForceField_O", ADJUST_STAMP(415));
register_stamp_name("STAMP_chem__AtomReferenceBase_O", ADJUST_STAMP(419));
register_stamp_name("STAMP_chem__AtomReference_O", ADJUST_STAMP(423));
register_stamp_name("STAMP_chem__ScoringFunction_O", ADJUST_STAMP(427));
register_stamp_name("STAMP_chem__EnergyFunction_O", ADJUST_STAMP(431));
register_stamp_name("STAMP_chem__SketchFunction_O", ADJUST_STAMP(435));
register_stamp_name("STAMP_chem__RigidBodyEnergyFunction_O", ADJUST_STAMP(439));
register_stamp_name("STAMP_chem__WildElementDict_O", ADJUST_STAMP(443));
register_stamp_name("STAMP_llvmo__DITypeRefArray_O", ADJUST_STAMP(447));
register_stamp_name("STAMP_geom__OVector3_O", ADJUST_STAMP(451));
register_stamp_name("STAMP_geom__OVector2_O", ADJUST_STAMP(455));
register_stamp_name("STAMP_chem__Structure_Old_ListEntry_O", ADJUST_STAMP(459));
register_stamp_name("STAMP_chem__FFTypeRule_O", ADJUST_STAMP(463));
register_stamp_name("STAMP_adapt__QDomNode_O", ADJUST_STAMP(467));
register_stamp_name("STAMP_mp__SharedMutex_O", ADJUST_STAMP(471));
register_stamp_name("STAMP_chem__ConstitutionAtom_O", ADJUST_STAMP(475));
register_stamp_name("STAMP_chem__ConstitutionVirtualAtom_O", ADJUST_STAMP(479));
register_stamp_name("STAMP_chem__ReadAmberParameters_O", ADJUST_STAMP(483));
register_stamp_name("STAMP_chem__AGEdge_O", ADJUST_STAMP(487));
register_stamp_name("STAMP_chem__Entity_O", ADJUST_STAMP(491));
register_stamp_name("STAMP_chem__Stereoisomer_O", ADJUST_STAMP(495));
register_stamp_name("STAMP_chem__EntityNameSetBase_O", ADJUST_STAMP(499));
register_stamp_name("STAMP_chem__EntityNameSetWithCap_O", ADJUST_STAMP(503));
register_stamp_name("STAMP_chem__Mate_O", ADJUST_STAMP(507));
register_stamp_name("STAMP_chem__RingClosingMate_O", ADJUST_STAMP(511));
register_stamp_name("STAMP_chem__EntityNameSet_O", ADJUST_STAMP(515));
register_stamp_name("STAMP_chem__RepresentedEntityNameSet_O", ADJUST_STAMP(519));
register_stamp_name("STAMP_chem__MonomerPack_O", ADJUST_STAMP(523));
register_stamp_name("STAMP_chem__Constitution_O", ADJUST_STAMP(527));
register_stamp_name("STAMP_chem__Monomer_O", ADJUST_STAMP(531));
register_stamp_name("STAMP_chem__OctNode_O", ADJUST_STAMP(535));
register_stamp_name("STAMP_chem__Structure_Old_List_O", ADJUST_STAMP(539));
register_stamp_name("STAMP_kinematics__BackboneDependentRotamerLibrary_O", ADJUST_STAMP(543));
register_stamp_name("STAMP_chem__ReportBase_O", ADJUST_STAMP(547));
register_stamp_name("STAMP_chem__StepReport_O", ADJUST_STAMP(551));
register_stamp_name("STAMP_chem__MessageReport_O", ADJUST_STAMP(555));
register_stamp_name("STAMP_chem__ForceMatchReport_O", ADJUST_STAMP(559));
register_stamp_name("STAMP_chem__ChemDraw_O", ADJUST_STAMP(563));
register_stamp_name("STAMP_chem__ZMatrixInternal_O", ADJUST_STAMP(567));
register_stamp_name("STAMP_chem__ZMatrixBondInternal_O", ADJUST_STAMP(571));
register_stamp_name("STAMP_chem__ZMatrixDihedralInternal_O", ADJUST_STAMP(575));
register_stamp_name("STAMP_chem__ZMatrixAngleInternal_O", ADJUST_STAMP(579));
register_stamp_name("STAMP_chem__StereoisomerAtom_O", ADJUST_STAMP(583));
register_stamp_name("STAMP_chem__StereoisomerVirtualAtom_O", ADJUST_STAMP(587));
register_stamp_name("STAMP_chem__ZMatrix_O", ADJUST_STAMP(591));
register_stamp_name("STAMP_chem__Isoname_O", ADJUST_STAMP(595));
register_stamp_name("STAMP_chem__PathMessage_O", ADJUST_STAMP(599));
register_stamp_name("STAMP_kinematics__MonomerId_O", ADJUST_STAMP(603));
register_stamp_name("STAMP_kinematics__JointTemplate_O", ADJUST_STAMP(607));
register_stamp_name("STAMP_kinematics__BondedJointTemplate_O", ADJUST_STAMP(611));
register_stamp_name("STAMP_kinematics__DelayedBondedJointTemplate_O", ADJUST_STAMP(615));
register_stamp_name("STAMP_kinematics__RootBondedJointTemplate_O", ADJUST_STAMP(619));
register_stamp_name("STAMP_geom__Color_O", ADJUST_STAMP(623));
register_stamp_name("STAMP_chem__ConformationCollection_O", ADJUST_STAMP(627));
register_stamp_name("STAMP_chem__SuperposableConformationCollection_O", ADJUST_STAMP(631));
register_stamp_name("STAMP_core__NativeVector_float_O", ADJUST_STAMP(635));
register_stamp_name("STAMP_chem__Coupling_O", ADJUST_STAMP(639));
register_stamp_name("STAMP_chem__RingCoupling_O", ADJUST_STAMP(643));
register_stamp_name("STAMP_chem__DirectionalCoupling_O", ADJUST_STAMP(647));
register_stamp_name("STAMP_adapt__ObjectSet_O", ADJUST_STAMP(651));
register_stamp_name("STAMP_chem__Oligomer_O", ADJUST_STAMP(655));
register_stamp_name("STAMP_chem__PdbMonomerConnectivity_O", ADJUST_STAMP(659));
register_stamp_name("STAMP_units__Dimension_O", ADJUST_STAMP(663));
register_stamp_name("STAMP_chem__ConformationExplorerEntry_O", ADJUST_STAMP(667));
register_stamp_name("STAMP_mp__ConditionVariable_O", ADJUST_STAMP(671));
register_stamp_name("STAMP_chem__PdbReader_O", ADJUST_STAMP(675));
register_stamp_name("STAMP_chem__SpanningLoop_O", ADJUST_STAMP(679));
register_stamp_name("STAMP_chem__ProperTorsion_O", ADJUST_STAMP(683));
register_stamp_name("STAMP_chem__ResidueList_O", ADJUST_STAMP(687));
register_stamp_name("STAMP_chem__SuperposeEngine_O", ADJUST_STAMP(691));
register_stamp_name("STAMP_chem__SuperposeSelectedAtoms_O", ADJUST_STAMP(695));
register_stamp_name("STAMP_adapt__StringSet_O", ADJUST_STAMP(699));
register_stamp_name("STAMP_chem__Command_O", ADJUST_STAMP(703));
register_stamp_name("STAMP_chem__StereoConfiguration_O", ADJUST_STAMP(707));
register_stamp_name("STAMP_kinematics__MonomerBaseNode_O", ADJUST_STAMP(711));
register_stamp_name("STAMP_kinematics__AggregateNode_O", ADJUST_STAMP(715));
register_stamp_name("STAMP_kinematics__ChainNode_O", ADJUST_STAMP(719));
register_stamp_name("STAMP_kinematics__MonomerNode_O", ADJUST_STAMP(723));
register_stamp_name("STAMP_kinematics__RingClosingMonomerNode_O", ADJUST_STAMP(727));
register_stamp_name("STAMP_chem__FFNonbondCrossTermTable_O", ADJUST_STAMP(731));
register_stamp_name("STAMP_chem__Plug_O", ADJUST_STAMP(735));
register_stamp_name("STAMP_chem__JumpPlug_O", ADJUST_STAMP(739));
register_stamp_name("STAMP_chem__PlugWithMates_O", ADJUST_STAMP(743));
register_stamp_name("STAMP_chem__InPlug_O", ADJUST_STAMP(747));
register_stamp_name("STAMP_chem__OutPlug_O", ADJUST_STAMP(751));
register_stamp_name("STAMP_chem__OriginPlug_O", ADJUST_STAMP(755));
register_stamp_name("STAMP_kinematics__Rotamer_O", ADJUST_STAMP(759));
register_stamp_name("STAMP_chem__MonomerContext_O", ADJUST_STAMP(763));
register_stamp_name("STAMP_chem__CDFragment_O", ADJUST_STAMP(767));
register_stamp_name("STAMP_units__Unit_O", ADJUST_STAMP(771));
register_stamp_name("STAMP_units__NamedUnit_O", ADJUST_STAMP(775));
register_stamp_name("STAMP_adapt__StringList_O", ADJUST_STAMP(779));
register_stamp_name("STAMP_core__NativeVector_int_O", ADJUST_STAMP(783));
register_stamp_name("STAMP_chem__InfoDb_O", ADJUST_STAMP(787));
register_stamp_name("STAMP_chem__MinimizerLog_O", ADJUST_STAMP(791));
register_stamp_name("STAMP_chem__GenericOctree_O", ADJUST_STAMP(795));
register_stamp_name("STAMP_kinematics__AtomTree_O", ADJUST_STAMP(799));
register_stamp_name("STAMP_units__Quantity_O", ADJUST_STAMP(803));
register_stamp_name("STAMP_chem__ChemInfoMatch_O", ADJUST_STAMP(807));
register_stamp_name("STAMP_chem__ZMatrixEntry_O", ADJUST_STAMP(811));
register_stamp_name("STAMP_chem__SpecificContextSet_O", ADJUST_STAMP(815));
register_stamp_name("STAMP_chem__Angle_O", ADJUST_STAMP(819));
register_stamp_name("STAMP_chem__MacroModelFile_O", ADJUST_STAMP(823));
register_stamp_name("STAMP_chem__BondList_O", ADJUST_STAMP(827));
register_stamp_name("STAMP_chem__ConformationExplorer_O", ADJUST_STAMP(831));
register_stamp_name("STAMP_chem__ChemInfoGraph_O", ADJUST_STAMP(835));
register_stamp_name("STAMP_chem__CDText_O", ADJUST_STAMP(839));
register_stamp_name("STAMP_llvmo__DINodeArray_O", ADJUST_STAMP(843));
register_stamp_name("STAMP_kinematics__Checkpoint_O", ADJUST_STAMP(847));
register_stamp_name("STAMP_kinematics__CheckpointJoint_O", ADJUST_STAMP(851));
register_stamp_name("STAMP_kinematics__CheckpointOutPlugJoint_O", ADJUST_STAMP(855));
register_stamp_name("STAMP_chem__ConformationExplorerMatch_O", ADJUST_STAMP(859));
register_stamp_name("STAMP_chem__StereoisomerAtoms_O", ADJUST_STAMP(863));
register_stamp_name("STAMP_chem__Rotamer_O", ADJUST_STAMP(867));
register_stamp_name("STAMP_chem__ImproperTorsion_O", ADJUST_STAMP(871));
register_stamp_name("STAMP_adapt__SymbolList_O", ADJUST_STAMP(875));
register_stamp_name("STAMP_chem__FrameRecognizer_O", ADJUST_STAMP(879));
register_stamp_name("STAMP_chem__ConformationExplorerEntryStage_O", ADJUST_STAMP(883));
register_stamp_name("STAMP_chem__Trajectory_O", ADJUST_STAMP(887));
register_stamp_name("STAMP_chem__CalculatePosition_O", ADJUST_STAMP(891));
register_stamp_name("STAMP_chem__CalculatePositionRelativeToOrigin_O", ADJUST_STAMP(895));
register_stamp_name("STAMP_chem__CalculatePositionUsingInternals_O", ADJUST_STAMP(899));
register_stamp_name("STAMP_chem__CalculatePositionAlongBond_O", ADJUST_STAMP(903));
register_stamp_name("STAMP_geom__OMatrix_O", ADJUST_STAMP(907));
register_stamp_name("STAMP_chem__ConformationCollectionEntry_O", ADJUST_STAMP(911));
register_stamp_name("STAMP_chem__ComplexRestraint_O", ADJUST_STAMP(915));
register_stamp_name("STAMP_chem__RestrainedExoCyclicAtom_O", ADJUST_STAMP(919));
register_stamp_name("STAMP_chem__RestrainedPiBond_O", ADJUST_STAMP(923));
register_stamp_name("STAMP_mp__Mutex_O", ADJUST_STAMP(927));
register_stamp_name("STAMP_mp__RecursiveMutex_O", ADJUST_STAMP(931));
register_stamp_name("STAMP_chem__CombinedForceField_O", ADJUST_STAMP(935));
register_stamp_name("STAMP_chem__CDBond_O", ADJUST_STAMP(939));
register_stamp_name("STAMP_chem__ConstitutionBond_O", ADJUST_STAMP(943));
register_stamp_name("STAMP_kinematics__ChiDihedral_O", ADJUST_STAMP(947));
register_stamp_name("STAMP_chem__ConstitutionAtoms_O", ADJUST_STAMP(951));
register_stamp_name("STAMP_kinematics__Conformation_O", ADJUST_STAMP(955));
register_stamp_name("STAMP_chem__MoleculeGraph_O", ADJUST_STAMP(959));
register_stamp_name("STAMP_chem__StructureComparer_O", ADJUST_STAMP(963));
register_stamp_name("STAMP_chem__BoundingBox_O", ADJUST_STAMP(967));
register_stamp_name("STAMP_chem__ChemInfoNode_O", ADJUST_STAMP(971));
register_stamp_name("STAMP_chem__BondMatcher_O", ADJUST_STAMP(975));
register_stamp_name("STAMP_chem__BondTest_O", ADJUST_STAMP(979));
register_stamp_name("STAMP_chem__BondLogical_O", ADJUST_STAMP(983));
register_stamp_name("STAMP_chem__BondMatchNode_O", ADJUST_STAMP(987));
register_stamp_name("STAMP_chem__AtomOrBondMatchNode_O", ADJUST_STAMP(991));
register_stamp_name("STAMP_chem__Root_O", ADJUST_STAMP(995));
register_stamp_name("STAMP_chem__SmartsRoot_O", ADJUST_STAMP(999));
register_stamp_name("STAMP_chem__AntechamberRoot_O", ADJUST_STAMP(1003));
register_stamp_name("STAMP_chem__ResidueTest_O", ADJUST_STAMP(1007));
register_stamp_name("STAMP_chem__AntechamberFocusAtomMatch_O", ADJUST_STAMP(1011));
register_stamp_name("STAMP_chem__Logical_O", ADJUST_STAMP(1015));
register_stamp_name("STAMP_chem__AtomTest_O", ADJUST_STAMP(1019));
register_stamp_name("STAMP_chem__BondToAtomTest_O", ADJUST_STAMP(1023));
register_stamp_name("STAMP_chem__AntechamberBondToAtomTest_O", ADJUST_STAMP(1027));
register_stamp_name("STAMP_chem__BondListMatchNode_O", ADJUST_STAMP(1031));
register_stamp_name("STAMP_chem__Chain_O", ADJUST_STAMP(1035));
register_stamp_name("STAMP_chem__Branch_O", ADJUST_STAMP(1039));
register_stamp_name("STAMP_chem__RootMatchNode_O", ADJUST_STAMP(1043));
register_stamp_name("STAMP_chem__AfterMatchBondToAtomTest_O", ADJUST_STAMP(1047));
register_stamp_name("STAMP_chem__Dimacs_O", ADJUST_STAMP(1051));
register_stamp_name("STAMP_chem__SpecificContext_O", ADJUST_STAMP(1055));
register_stamp_name("STAMP_chem__Minimizer_O", ADJUST_STAMP(1059));
register_stamp_name("STAMP_adapt__SymbolSet_O", ADJUST_STAMP(1063));
register_stamp_name("STAMP_chem__MapOfMonomerNamesToAtomIndexers_O", ADJUST_STAMP(1067));
register_stamp_name("STAMP_chem__Alias_O", ADJUST_STAMP(1071));
register_stamp_name("STAMP_chem__AtomIdToAtomMap_O", ADJUST_STAMP(1075));
register_stamp_name("STAMP_mp__Process_O", ADJUST_STAMP(1079));
register_stamp_name("STAMP_core__SingleDispatchMethod_O", ADJUST_STAMP(1083));
register_stamp_name("STAMP_core__Iterator_O", ADJUST_STAMP(1087));
register_stamp_name("STAMP_core__DirectoryIterator_O", ADJUST_STAMP(1091));
register_stamp_name("STAMP_chem__IterateRestraints_O", ADJUST_STAMP(1095));
register_stamp_name("STAMP_adapt__IterateCons_O", ADJUST_STAMP(1099));
register_stamp_name("STAMP_core__RecursiveDirectoryIterator_O", ADJUST_STAMP(1103));
register_stamp_name("STAMP_chem__IterateMatter_O", ADJUST_STAMP(1107));
register_stamp_name("STAMP_chem__IterateResidues_O", ADJUST_STAMP(1111));
register_stamp_name("STAMP_chem__IterateBonds_O", ADJUST_STAMP(1115));
register_stamp_name("STAMP_chem__IterateAtoms_O", ADJUST_STAMP(1119));
register_stamp_name("STAMP_core__Symbol_O", ADJUST_STAMP(1123));
register_stamp_name("STAMP_core__Null_O", ADJUST_STAMP(1127));
register_stamp_name("STAMP_core__SharpEqualWrapper_O", ADJUST_STAMP(1131));
register_stamp_name("STAMP_llvmo__ClaspJIT_O", ADJUST_STAMP(1135));
register_stamp_name("STAMP_core__Exposer_O", ADJUST_STAMP(1139));
register_stamp_name("STAMP_units__UnitsExposer_O", ADJUST_STAMP(1143));
register_stamp_name("STAMP_core__CoreExposer_O", ADJUST_STAMP(1147));
register_stamp_name("STAMP_geom__GeomExposer_O", ADJUST_STAMP(1151));
register_stamp_name("STAMP_adapt__AdaptExposer_O", ADJUST_STAMP(1155));
register_stamp_name("STAMP_kinematics__KinematicsExposer_O", ADJUST_STAMP(1159));
register_stamp_name("STAMP_chem__ChemExposer_O", ADJUST_STAMP(1163));
register_stamp_name("STAMP_asttooling__AsttoolingExposer_O", ADJUST_STAMP(1167));
register_stamp_name("STAMP_core__PosixTimeDuration_O", ADJUST_STAMP(1171));
register_stamp_name("STAMP_clasp_ffi__ForeignTypeSpec_O", ADJUST_STAMP(1175));
register_stamp_name("STAMP_core__SmallMap_O", ADJUST_STAMP(1179));
register_stamp_name("STAMP_core__Instance_O", ADJUST_STAMP(1181));
register_stamp_name("STAMP_clbind__ClassRep_O", ADJUST_STAMP(1185));
register_stamp_name("STAMP_core__DerivableCxxObject_O", ADJUST_STAMP(1188));
register_stamp_name("STAMP_mpip__Mpi_O", ADJUST_STAMP(1195));
register_stamp_name("STAMP_core__Sigset_O", ADJUST_STAMP(1199));
register_stamp_name("STAMP_core__Environment_O", ADJUST_STAMP(1203));
register_stamp_name("STAMP_core__GlueEnvironment_O", ADJUST_STAMP(1207));
register_stamp_name("STAMP_core__LexicalEnvironment_O", ADJUST_STAMP(1211));
register_stamp_name("STAMP_core__CompileTimeEnvironment_O", ADJUST_STAMP(1215));
register_stamp_name("STAMP_core__CatchEnvironment_O", ADJUST_STAMP(1219));
register_stamp_name("STAMP_core__SymbolMacroletEnvironment_O", ADJUST_STAMP(1223));
register_stamp_name("STAMP_core__FunctionContainerEnvironment_O", ADJUST_STAMP(1227));
register_stamp_name("STAMP_core__UnwindProtectEnvironment_O", ADJUST_STAMP(1231));
register_stamp_name("STAMP_core__MacroletEnvironment_O", ADJUST_STAMP(1235));
register_stamp_name("STAMP_core__RuntimeVisibleEnvironment_O", ADJUST_STAMP(1239));
register_stamp_name("STAMP_core__TagbodyEnvironment_O", ADJUST_STAMP(1243));
register_stamp_name("STAMP_core__BlockEnvironment_O", ADJUST_STAMP(1247));
register_stamp_name("STAMP_core__FunctionValueEnvironment_O", ADJUST_STAMP(1251));
register_stamp_name("STAMP_core__ValueEnvironment_O", ADJUST_STAMP(1255));
register_stamp_name("STAMP_core__ActivationFrame_O", ADJUST_STAMP(1259));
register_stamp_name("STAMP_core__ValueFrame_O", ADJUST_STAMP(1263));
register_stamp_name("STAMP_core__FunctionFrame_O", ADJUST_STAMP(1267));
register_stamp_name("STAMP_core__RandomState_O", ADJUST_STAMP(1271));
register_stamp_name("STAMP_core__HashTableBase_O", ADJUST_STAMP(1275));
register_stamp_name("STAMP_core__HashTable_O", ADJUST_STAMP(1279));
register_stamp_name("STAMP_core__HashTableEqualp_O", ADJUST_STAMP(1283));
register_stamp_name("STAMP_core__HashTableEq_O", ADJUST_STAMP(1287));
register_stamp_name("STAMP_core__HashTableEqual_O", ADJUST_STAMP(1291));
register_stamp_name("STAMP_core__HashTableEql_O", ADJUST_STAMP(1295));
register_stamp_name("STAMP_core__WeakKeyHashTable_O", ADJUST_STAMP(1299));
register_stamp_name("STAMP_llvmo__InsertPoint_O", ADJUST_STAMP(1303));
register_stamp_name("STAMP_core__Number_O", ADJUST_STAMP(1307));
register_stamp_name("STAMP_core__Real_O", ADJUST_STAMP(1311));
register_stamp_name("STAMP_core__Rational_O", ADJUST_STAMP(1315));
register_stamp_name("STAMP_core__Ratio_O", ADJUST_STAMP(1319));
register_stamp_name("STAMP_core__Integer_O", ADJUST_STAMP(1323));
register_stamp_name("STAMP_core__Bignum_O", ADJUST_STAMP(1327));
register_stamp_name("STAMP_core__Fixnum_dummy_O", ADJUST_STAMP(1331));
register_stamp_name("STAMP_core__Float_O", ADJUST_STAMP(1335));
register_stamp_name("STAMP_core__DoubleFloat_O", ADJUST_STAMP(1339));
register_stamp_name("STAMP_core__SingleFloat_dummy_O", ADJUST_STAMP(1343));
register_stamp_name("STAMP_core__LongFloat_O", ADJUST_STAMP(1347));
register_stamp_name("STAMP_core__ShortFloat_O", ADJUST_STAMP(1351));
register_stamp_name("STAMP_core__Complex_O", ADJUST_STAMP(1355));
register_stamp_name("STAMP_core__SourcePosInfo_O", ADJUST_STAMP(1359));
register_stamp_name("STAMP_core__IntArray_O", ADJUST_STAMP(1363));
register_stamp_name("STAMP_core__Record_O", ADJUST_STAMP(1367));
register_stamp_name("STAMP_clbind__ClassRegistry_O", ADJUST_STAMP(1371));
register_stamp_name("STAMP_core__ClassHolder_O", ADJUST_STAMP(1375));
register_stamp_name("STAMP_core__WrappedPointer_O", ADJUST_STAMP(1378));
register_stamp_name("STAMP_core__FdSet_O", ADJUST_STAMP(1383));
register_stamp_name("STAMP_core__SymbolToEnumConverter_O", ADJUST_STAMP(1387));
register_stamp_name("STAMP_llvmo__Attribute_O", ADJUST_STAMP(1391));
register_stamp_name("STAMP_core__ObjectFile_O", ADJUST_STAMP(1395));
register_stamp_name("STAMP_core__Function_O", ADJUST_STAMP(1399));
register_stamp_name("STAMP_core__FuncallableInstance_O", ADJUST_STAMP(1401));
register_stamp_name("STAMP_core__Creator_O", ADJUST_STAMP(1407));
register_stamp_name("STAMP_core__FuncallableInstanceCreator_O", ADJUST_STAMP(1411));
register_stamp_name("STAMP_clbind__ConstructorCreator_O", ADJUST_STAMP(1415));
register_stamp_name("STAMP_clbind__DummyCreator_O", ADJUST_STAMP(1419));
register_stamp_name("STAMP_core__InstanceCreator_O", ADJUST_STAMP(1423));
register_stamp_name("STAMP_core__ClassRepCreator_O", ADJUST_STAMP(1427));
register_stamp_name("STAMP_core__DerivableCxxClassCreator_O", ADJUST_STAMP(1431));
register_stamp_name("STAMP_core__StandardClassCreator_O", ADJUST_STAMP(1435));
register_stamp_name("STAMP_core__SpecialForm_O", ADJUST_STAMP(1439));
register_stamp_name("STAMP_core__Closure_O", ADJUST_STAMP(1443));
register_stamp_name("STAMP_core__SingleDispatchCxxEffectiveMethodFunction_O", ADJUST_STAMP(1447));
register_stamp_name("STAMP_core__SingleDispatchMethodFunction_O", ADJUST_STAMP(1451));
register_stamp_name("STAMP_core__CxxMethodFunction_O", ADJUST_STAMP(1455));
register_stamp_name("STAMP_core__BuiltinClosure_O", ADJUST_STAMP(1459));
register_stamp_name("STAMP_core__TranslationFunctor_O", ADJUST_STAMP(1463));
register_stamp_name("STAMP_core__ClosureWithSlots_O", ADJUST_STAMP(1467));
register_stamp_name("STAMP_core__SingleDispatchGenericFunctionClosure_O", ADJUST_STAMP(1471));
register_stamp_name("STAMP_core__SingleDispatchEffectiveMethodFunction_O", ADJUST_STAMP(1475));
register_stamp_name("STAMP_core__WeakPointer_O", ADJUST_STAMP(1479));
register_stamp_name("STAMP_llvmo__DebugLoc_O", ADJUST_STAMP(1483));
register_stamp_name("STAMP_core__Array_O", ADJUST_STAMP(1487));
register_stamp_name("STAMP_core__MDArray_O", ADJUST_STAMP(1491));
register_stamp_name("STAMP_core__template_Array_core__MDArray_int16_t_O_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__MDArray_O_", ADJUST_STAMP(1495));
register_stamp_name("STAMP_core__MDArray_int16_t_O", ADJUST_STAMP(1499));
register_stamp_name("STAMP_core__template_Array_core__MDArray_int8_t_O_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__MDArray_O_", ADJUST_STAMP(1503));
register_stamp_name("STAMP_core__MDArray_int8_t_O", ADJUST_STAMP(1507));
register_stamp_name("STAMP_core__template_Array_core__MDArray_int32_t_O_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__MDArray_O_", ADJUST_STAMP(1511));
register_stamp_name("STAMP_core__MDArray_int32_t_O", ADJUST_STAMP(1515));
register_stamp_name("STAMP_core__template_Array_core__MDArray_byte4_t_O_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__MDArray_O_", ADJUST_STAMP(1519));
register_stamp_name("STAMP_core__MDArray_byte4_t_O", ADJUST_STAMP(1523));
register_stamp_name("STAMP_core__template_Array_core__MDArray_float_O_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__MDArray_O_", ADJUST_STAMP(1527));
register_stamp_name("STAMP_core__MDArray_float_O", ADJUST_STAMP(1531));
register_stamp_name("STAMP_core__template_Array_core__MDArray_size_t_O_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__MDArray_O_", ADJUST_STAMP(1535));
register_stamp_name("STAMP_core__MDArray_size_t_O", ADJUST_STAMP(1539));
register_stamp_name("STAMP_core__template_Array_core__MDArray_byte8_t_O_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__MDArray_O_", ADJUST_STAMP(1543));
register_stamp_name("STAMP_core__MDArray_byte8_t_O", ADJUST_STAMP(1547));
register_stamp_name("STAMP_core__template_Array_core__MDArray_int2_t_O_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__MDArray_O_", ADJUST_STAMP(1551));
register_stamp_name("STAMP_core__MDArray_int2_t_O", ADJUST_STAMP(1555));
register_stamp_name("STAMP_core__template_Array_core__MDArray_fixnum_O_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__MDArray_O_", ADJUST_STAMP(1559));
register_stamp_name("STAMP_core__MDArray_fixnum_O", ADJUST_STAMP(1563));
register_stamp_name("STAMP_core__template_Array_core__MDArrayBaseChar_O_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__MDArray_O_", ADJUST_STAMP(1567));
register_stamp_name("STAMP_core__MDArrayBaseChar_O", ADJUST_STAMP(1571));
register_stamp_name("STAMP_core__template_Array_core__MDArray_byte64_t_O_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__MDArray_O_", ADJUST_STAMP(1575));
register_stamp_name("STAMP_core__MDArray_byte64_t_O", ADJUST_STAMP(1579));
register_stamp_name("STAMP_core__template_Array_geom__MDArrayCoordinate_O_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__MDArray_O_", ADJUST_STAMP(1583));
register_stamp_name("STAMP_geom__MDArrayCoordinate_O", ADJUST_STAMP(1587));
register_stamp_name("STAMP_core__template_Array_core__MDArrayT_O_core__SimpleMDArrayT_O_core__SimpleVector_O_core__MDArray_O_", ADJUST_STAMP(1591));
register_stamp_name("STAMP_core__MDArrayT_O", ADJUST_STAMP(1595));
register_stamp_name("STAMP_core__SimpleMDArray_O", ADJUST_STAMP(1599));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1603));
register_stamp_name("STAMP_core__SimpleMDArray_int8_t_O", ADJUST_STAMP(1607));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1611));
register_stamp_name("STAMP_core__SimpleMDArray_byte32_t_O", ADJUST_STAMP(1615));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1619));
register_stamp_name("STAMP_core__SimpleMDArray_int2_t_O", ADJUST_STAMP(1623));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1627));
register_stamp_name("STAMP_core__SimpleMDArray_byte4_t_O", ADJUST_STAMP(1631));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1635));
register_stamp_name("STAMP_core__SimpleMDArray_int32_t_O", ADJUST_STAMP(1639));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__SimpleMDArray_O_", ADJUST_STAMP(1643));
register_stamp_name("STAMP_core__SimpleMDArray_float_O", ADJUST_STAMP(1647));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1651));
register_stamp_name("STAMP_core__SimpleMDArray_int16_t_O", ADJUST_STAMP(1655));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1659));
register_stamp_name("STAMP_core__SimpleMDArray_size_t_O", ADJUST_STAMP(1663));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__SimpleMDArray_O_", ADJUST_STAMP(1667));
register_stamp_name("STAMP_core__SimpleMDArrayCharacter_O", ADJUST_STAMP(1671));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1675));
register_stamp_name("STAMP_core__SimpleMDArray_byte2_t_O", ADJUST_STAMP(1679));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1683));
register_stamp_name("STAMP_core__SimpleMDArray_byte16_t_O", ADJUST_STAMP(1687));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__SimpleMDArray_O_", ADJUST_STAMP(1691));
register_stamp_name("STAMP_core__SimpleMDArrayBaseChar_O", ADJUST_STAMP(1695));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1699));
register_stamp_name("STAMP_core__SimpleMDArray_byte64_t_O", ADJUST_STAMP(1703));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__SimpleMDArray_O_", ADJUST_STAMP(1707));
register_stamp_name("STAMP_core__SimpleMDArray_double_O", ADJUST_STAMP(1711));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArrayT_O_core__SimpleVector_O_core__SimpleMDArray_O_", ADJUST_STAMP(1715));
register_stamp_name("STAMP_core__SimpleMDArrayT_O", ADJUST_STAMP(1719));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1723));
register_stamp_name("STAMP_core__SimpleMDArray_int4_t_O", ADJUST_STAMP(1727));
register_stamp_name("STAMP_core__template_SimpleArray_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__SimpleMDArray_O_", ADJUST_STAMP(1731));
register_stamp_name("STAMP_geom__SimpleMDArrayCoordinate_O", ADJUST_STAMP(1735));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__SimpleMDArray_O_", ADJUST_STAMP(1739));
register_stamp_name("STAMP_core__SimpleMDArray_fixnum_O", ADJUST_STAMP(1743));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__SimpleMDArray_O_", ADJUST_STAMP(1747));
register_stamp_name("STAMP_core__SimpleMDArrayBit_O", ADJUST_STAMP(1751));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1755));
register_stamp_name("STAMP_core__SimpleMDArray_byte8_t_O", ADJUST_STAMP(1759));
register_stamp_name("STAMP_core__template_SimpleArray_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1763));
register_stamp_name("STAMP_core__SimpleMDArray_int64_t_O", ADJUST_STAMP(1767));
register_stamp_name("STAMP_core__ComplexVector_O", ADJUST_STAMP(1771));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_double_O_core__SimpleVector_double_O_core__ComplexVector_O_", ADJUST_STAMP(1775));
register_stamp_name("STAMP_core__ComplexVector_double_O", ADJUST_STAMP(1779));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_int8_t_O_core__SimpleVector_int8_t_O_core__ComplexVector_O_", ADJUST_STAMP(1783));
register_stamp_name("STAMP_core__ComplexVector_int8_t_O", ADJUST_STAMP(1787));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_T_O_core__SimpleVector_O_core__ComplexVector_O_", ADJUST_STAMP(1791));
register_stamp_name("STAMP_core__ComplexVector_T_O", ADJUST_STAMP(1795));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_int32_t_O_core__SimpleVector_int32_t_O_core__ComplexVector_O_", ADJUST_STAMP(1799));
register_stamp_name("STAMP_core__ComplexVector_int32_t_O", ADJUST_STAMP(1803));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_byte16_t_O_core__SimpleVector_byte16_t_O_core__ComplexVector_O_", ADJUST_STAMP(1807));
register_stamp_name("STAMP_core__ComplexVector_byte16_t_O", ADJUST_STAMP(1811));
register_stamp_name("STAMP_core__template_Vector_geom__ComplexVectorCoordinate_O_geom__SimpleVectorCoordinate_O_core__ComplexVector_O_", ADJUST_STAMP(1815));
register_stamp_name("STAMP_geom__ComplexVectorCoordinate_O", ADJUST_STAMP(1819));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_byte4_t_O_core__SimpleVector_byte4_t_O_core__ComplexVector_O_", ADJUST_STAMP(1823));
register_stamp_name("STAMP_core__ComplexVector_byte4_t_O", ADJUST_STAMP(1827));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_byte64_t_O_core__SimpleVector_byte64_t_O_core__ComplexVector_O_", ADJUST_STAMP(1831));
register_stamp_name("STAMP_core__ComplexVector_byte64_t_O", ADJUST_STAMP(1835));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_int2_t_O_core__SimpleVector_int2_t_O_core__ComplexVector_O_", ADJUST_STAMP(1839));
register_stamp_name("STAMP_core__ComplexVector_int2_t_O", ADJUST_STAMP(1843));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_float_O_core__SimpleVector_float_O_core__ComplexVector_O_", ADJUST_STAMP(1847));
register_stamp_name("STAMP_core__ComplexVector_float_O", ADJUST_STAMP(1851));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_int16_t_O_core__SimpleVector_int16_t_O_core__ComplexVector_O_", ADJUST_STAMP(1855));
register_stamp_name("STAMP_core__ComplexVector_int16_t_O", ADJUST_STAMP(1859));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_int4_t_O_core__SimpleVector_int4_t_O_core__ComplexVector_O_", ADJUST_STAMP(1863));
register_stamp_name("STAMP_core__ComplexVector_int4_t_O", ADJUST_STAMP(1867));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_size_t_O_core__SimpleVector_size_t_O_core__ComplexVector_O_", ADJUST_STAMP(1871));
register_stamp_name("STAMP_core__ComplexVector_size_t_O", ADJUST_STAMP(1875));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_byte2_t_O_core__SimpleVector_byte2_t_O_core__ComplexVector_O_", ADJUST_STAMP(1879));
register_stamp_name("STAMP_core__ComplexVector_byte2_t_O", ADJUST_STAMP(1883));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_byte8_t_O_core__SimpleVector_byte8_t_O_core__ComplexVector_O_", ADJUST_STAMP(1887));
register_stamp_name("STAMP_core__ComplexVector_byte8_t_O", ADJUST_STAMP(1891));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_byte32_t_O_core__SimpleVector_byte32_t_O_core__ComplexVector_O_", ADJUST_STAMP(1895));
register_stamp_name("STAMP_core__ComplexVector_byte32_t_O", ADJUST_STAMP(1899));
register_stamp_name("STAMP_core__template_Vector_core__BitVectorNs_O_core__SimpleBitVector_O_core__ComplexVector_O_", ADJUST_STAMP(1903));
register_stamp_name("STAMP_core__BitVectorNs_O", ADJUST_STAMP(1907));
register_stamp_name("STAMP_core__StrNs_O", ADJUST_STAMP(1911));
register_stamp_name("STAMP_core__template_Vector_core__Str8Ns_O_core__SimpleBaseString_O_core__StrNs_O_", ADJUST_STAMP(1915));
register_stamp_name("STAMP_core__Str8Ns_O", ADJUST_STAMP(1919));
register_stamp_name("STAMP_core__template_Vector_core__StrWNs_O_core__SimpleCharacterString_O_core__StrNs_O_", ADJUST_STAMP(1923));
register_stamp_name("STAMP_core__StrWNs_O", ADJUST_STAMP(1927));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_fixnum_O_core__SimpleVector_fixnum_O_core__ComplexVector_O_", ADJUST_STAMP(1931));
register_stamp_name("STAMP_core__ComplexVector_fixnum_O", ADJUST_STAMP(1935));
register_stamp_name("STAMP_core__template_Vector_core__ComplexVector_int64_t_O_core__SimpleVector_int64_t_O_core__ComplexVector_O_", ADJUST_STAMP(1939));
register_stamp_name("STAMP_core__ComplexVector_int64_t_O", ADJUST_STAMP(1943));
register_stamp_name("STAMP_core__template_Array_core__MDArray_int64_t_O_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__MDArray_O_", ADJUST_STAMP(1947));
register_stamp_name("STAMP_core__MDArray_int64_t_O", ADJUST_STAMP(1951));
register_stamp_name("STAMP_core__template_Array_core__MDArray_byte32_t_O_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__MDArray_O_", ADJUST_STAMP(1955));
register_stamp_name("STAMP_core__MDArray_byte32_t_O", ADJUST_STAMP(1959));
register_stamp_name("STAMP_core__template_Array_core__MDArray_byte2_t_O_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__MDArray_O_", ADJUST_STAMP(1963));
register_stamp_name("STAMP_core__MDArray_byte2_t_O", ADJUST_STAMP(1967));
register_stamp_name("STAMP_core__template_Array_core__MDArrayCharacter_O_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__MDArray_O_", ADJUST_STAMP(1971));
register_stamp_name("STAMP_core__MDArrayCharacter_O", ADJUST_STAMP(1975));
register_stamp_name("STAMP_core__template_Array_core__MDArrayBit_O_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__MDArray_O_", ADJUST_STAMP(1979));
register_stamp_name("STAMP_core__MDArrayBit_O", ADJUST_STAMP(1983));
register_stamp_name("STAMP_core__template_Array_core__MDArray_byte16_t_O_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__MDArray_O_", ADJUST_STAMP(1987));
register_stamp_name("STAMP_core__MDArray_byte16_t_O", ADJUST_STAMP(1991));
register_stamp_name("STAMP_core__template_Array_core__MDArray_int4_t_O_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__MDArray_O_", ADJUST_STAMP(1995));
register_stamp_name("STAMP_core__MDArray_int4_t_O", ADJUST_STAMP(1999));
register_stamp_name("STAMP_core__template_Array_core__MDArray_double_O_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__MDArray_O_", ADJUST_STAMP(2003));
register_stamp_name("STAMP_core__MDArray_double_O", ADJUST_STAMP(2007));
register_stamp_name("STAMP_core__AbstractSimpleVector_O", ADJUST_STAMP(2011));
register_stamp_name("STAMP_core__template_SimpleVector_core__SimpleVector_byte32_t_O_unsigned_int_core__AbstractSimpleVector_O_", ADJUST_STAMP(2015));
register_stamp_name("STAMP_core__SimpleVector_byte32_t_O", ADJUST_STAMP(2019));
register_stamp_name("STAMP_core__template_SimpleVector_core__SimpleVector_size_t_O_unsigned_long_core__AbstractSimpleVector_O_", ADJUST_STAMP(2023));
register_stamp_name("STAMP_core__SimpleVector_size_t_O", ADJUST_STAMP(2027));
register_stamp_name("STAMP_core__template_SimpleVector_core__SimpleVector_double_O_double_core__AbstractSimpleVector_O_", ADJUST_STAMP(2031));
register_stamp_name("STAMP_core__SimpleVector_double_O", ADJUST_STAMP(2035));
register_stamp_name("STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_int2_t_O_2_1_", ADJUST_STAMP(2039));
register_stamp_name("STAMP_core__SimpleVector_int2_t_O", ADJUST_STAMP(2043));
register_stamp_name("STAMP_core__template_SimpleVector_core__SimpleVector_int64_t_O_long_core__AbstractSimpleVector_O_", ADJUST_STAMP(2047));
register_stamp_name("STAMP_core__SimpleVector_int64_t_O", ADJUST_STAMP(2051));
register_stamp_name("STAMP_core__template_SimpleVector_core__SimpleVector_int8_t_O_signed_char_core__AbstractSimpleVector_O_", ADJUST_STAMP(2055));
register_stamp_name("STAMP_core__SimpleVector_int8_t_O", ADJUST_STAMP(2059));
register_stamp_name("STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_byte4_t_O_4_0_", ADJUST_STAMP(2063));
register_stamp_name("STAMP_core__SimpleVector_byte4_t_O", ADJUST_STAMP(2067));
register_stamp_name("STAMP_core__template_SimpleVector_geom__SimpleVectorCoordinate_O_Vector3_core__AbstractSimpleVector_O_", ADJUST_STAMP(2071));
register_stamp_name("STAMP_geom__SimpleVectorCoordinate_O", ADJUST_STAMP(2075));
register_stamp_name("STAMP_core__SimpleString_O", ADJUST_STAMP(2079));
register_stamp_name("STAMP_core__template_SimpleVector_core__SimpleBaseString_O_unsigned_char_core__SimpleString_O_", ADJUST_STAMP(2083));
register_stamp_name("STAMP_core__SimpleBaseString_O", ADJUST_STAMP(2087));
register_stamp_name("STAMP_core__template_SimpleVector_core__SimpleCharacterString_O_int_core__SimpleString_O_", ADJUST_STAMP(2091));
register_stamp_name("STAMP_core__SimpleCharacterString_O", ADJUST_STAMP(2095));
register_stamp_name("STAMP_core__template_SimpleVector_core__SimpleVector_int16_t_O_short_core__AbstractSimpleVector_O_", ADJUST_STAMP(2099));
register_stamp_name("STAMP_core__SimpleVector_int16_t_O", ADJUST_STAMP(2103));
register_stamp_name("STAMP_core__template_SimpleVector_core__SimpleVector_byte16_t_O_unsigned_short_core__AbstractSimpleVector_O_", ADJUST_STAMP(2107));
register_stamp_name("STAMP_core__SimpleVector_byte16_t_O", ADJUST_STAMP(2111));
register_stamp_name("STAMP_core__template_SimpleBitUnitVector_core__SimpleBitVector_O_1_0_", ADJUST_STAMP(2115));
register_stamp_name("STAMP_core__SimpleBitVector_O", ADJUST_STAMP(2119));
register_stamp_name("STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_int4_t_O_4_1_", ADJUST_STAMP(2123));
register_stamp_name("STAMP_core__SimpleVector_int4_t_O", ADJUST_STAMP(2127));
register_stamp_name("STAMP_core__template_SimpleVector_core__SimpleVector_byte64_t_O_unsigned_long_core__AbstractSimpleVector_O_", ADJUST_STAMP(2131));
register_stamp_name("STAMP_core__SimpleVector_byte64_t_O", ADJUST_STAMP(2135));
register_stamp_name("STAMP_core__template_SimpleVector_core__SimpleVector_fixnum_O_long_core__AbstractSimpleVector_O_", ADJUST_STAMP(2139));
register_stamp_name("STAMP_core__SimpleVector_fixnum_O", ADJUST_STAMP(2143));
register_stamp_name("STAMP_core__template_SimpleVector_core__SimpleVector_float_O_float_core__AbstractSimpleVector_O_", ADJUST_STAMP(2147));
register_stamp_name("STAMP_core__SimpleVector_float_O", ADJUST_STAMP(2151));
register_stamp_name("STAMP_core__template_SimpleVector_core__SimpleVector_O_gctools__smart_ptr_core__T_O__core__AbstractSimpleVector_O_", ADJUST_STAMP(2155));
register_stamp_name("STAMP_core__SimpleVector_O", ADJUST_STAMP(2159));
register_stamp_name("STAMP_core__template_SimpleVector_core__SimpleVector_byte8_t_O_unsigned_char_core__AbstractSimpleVector_O_", ADJUST_STAMP(2163));
register_stamp_name("STAMP_core__SimpleVector_byte8_t_O", ADJUST_STAMP(2167));
register_stamp_name("STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_byte2_t_O_2_0_", ADJUST_STAMP(2171));
register_stamp_name("STAMP_core__SimpleVector_byte2_t_O", ADJUST_STAMP(2175));
register_stamp_name("STAMP_core__template_SimpleVector_core__SimpleVector_int32_t_O_int_core__AbstractSimpleVector_O_", ADJUST_STAMP(2179));
register_stamp_name("STAMP_core__SimpleVector_int32_t_O", ADJUST_STAMP(2183));
register_stamp_name("STAMP_core__Character_dummy_O", ADJUST_STAMP(2187));
register_stamp_name("STAMP_llvmo__DataLayout_O", ADJUST_STAMP(2191));
register_stamp_name("STAMP_core__LoadTimeValues_O", ADJUST_STAMP(2195));
register_stamp_name("STAMP_core__Readtable_O", ADJUST_STAMP(2199));
register_stamp_name("STAMP_core__PosixTime_O", ADJUST_STAMP(2203));
register_stamp_name("STAMP_llvmo__StructLayout_O", ADJUST_STAMP(2207));
register_stamp_name("STAMP_core__ExternalObject_O", ADJUST_STAMP(2211));
register_stamp_name("STAMP_llvmo__Pass_O", ADJUST_STAMP(2215));
register_stamp_name("STAMP_llvmo__ModulePass_O", ADJUST_STAMP(2219));
register_stamp_name("STAMP_llvmo__ImmutablePass_O", ADJUST_STAMP(2223));
register_stamp_name("STAMP_llvmo__TargetLibraryInfoWrapperPass_O", ADJUST_STAMP(2227));
register_stamp_name("STAMP_llvmo__FunctionPass_O", ADJUST_STAMP(2231));
register_stamp_name("STAMP_llvmo__MCSubtargetInfo_O", ADJUST_STAMP(2235));
register_stamp_name("STAMP_llvmo__TargetSubtargetInfo_O", ADJUST_STAMP(2239));
register_stamp_name("STAMP_llvmo__JITDylib_O", ADJUST_STAMP(2243));
register_stamp_name("STAMP_llvmo__IRBuilderBase_O", ADJUST_STAMP(2247));
register_stamp_name("STAMP_llvmo__IRBuilder_O", ADJUST_STAMP(2251));
register_stamp_name("STAMP_llvmo__APInt_O", ADJUST_STAMP(2255));
register_stamp_name("STAMP_llvmo__DIBuilder_O", ADJUST_STAMP(2259));
register_stamp_name("STAMP_llvmo__EngineBuilder_O", ADJUST_STAMP(2263));
register_stamp_name("STAMP_llvmo__PassManagerBase_O", ADJUST_STAMP(2267));
register_stamp_name("STAMP_llvmo__PassManager_O", ADJUST_STAMP(2271));
register_stamp_name("STAMP_llvmo__FunctionPassManager_O", ADJUST_STAMP(2275));
register_stamp_name("STAMP_llvmo__Value_O", ADJUST_STAMP(2279));
register_stamp_name("STAMP_llvmo__User_O", ADJUST_STAMP(2283));
register_stamp_name("STAMP_llvmo__Instruction_O", ADJUST_STAMP(2287));
register_stamp_name("STAMP_llvmo__StoreInst_O", ADJUST_STAMP(2291));
register_stamp_name("STAMP_llvmo__UnreachableInst_O", ADJUST_STAMP(2295));
register_stamp_name("STAMP_llvmo__ResumeInst_O", ADJUST_STAMP(2299));
register_stamp_name("STAMP_llvmo__AtomicCmpXchgInst_O", ADJUST_STAMP(2303));
register_stamp_name("STAMP_llvmo__FenceInst_O", ADJUST_STAMP(2307));
register_stamp_name("STAMP_llvmo__CallBase_O", ADJUST_STAMP(2311));
register_stamp_name("STAMP_llvmo__CallInst_O", ADJUST_STAMP(2315));
register_stamp_name("STAMP_llvmo__InvokeInst_O", ADJUST_STAMP(2319));
register_stamp_name("STAMP_llvmo__BranchInst_O", ADJUST_STAMP(2323));
register_stamp_name("STAMP_llvmo__UnaryInstruction_O", ADJUST_STAMP(2327));
register_stamp_name("STAMP_llvmo__VAArgInst_O", ADJUST_STAMP(2331));
register_stamp_name("STAMP_llvmo__AllocaInst_O", ADJUST_STAMP(2335));
register_stamp_name("STAMP_llvmo__LoadInst_O", ADJUST_STAMP(2339));
register_stamp_name("STAMP_llvmo__SwitchInst_O", ADJUST_STAMP(2343));
register_stamp_name("STAMP_llvmo__AtomicRMWInst_O", ADJUST_STAMP(2347));
register_stamp_name("STAMP_llvmo__LandingPadInst_O", ADJUST_STAMP(2351));
register_stamp_name("STAMP_llvmo__ReturnInst_O", ADJUST_STAMP(2355));
register_stamp_name("STAMP_llvmo__PHINode_O", ADJUST_STAMP(2359));
register_stamp_name("STAMP_llvmo__IndirectBrInst_O", ADJUST_STAMP(2363));
register_stamp_name("STAMP_llvmo__Constant_O", ADJUST_STAMP(2367));
register_stamp_name("STAMP_llvmo__GlobalValue_O", ADJUST_STAMP(2371));
register_stamp_name("STAMP_llvmo__Function_O", ADJUST_STAMP(2375));
register_stamp_name("STAMP_llvmo__GlobalVariable_O", ADJUST_STAMP(2379));
register_stamp_name("STAMP_llvmo__BlockAddress_O", ADJUST_STAMP(2383));
register_stamp_name("STAMP_llvmo__ConstantStruct_O", ADJUST_STAMP(2387));
register_stamp_name("STAMP_llvmo__ConstantInt_O", ADJUST_STAMP(2391));
register_stamp_name("STAMP_llvmo__ConstantFP_O", ADJUST_STAMP(2395));
register_stamp_name("STAMP_llvmo__ConstantPointerNull_O", ADJUST_STAMP(2399));
register_stamp_name("STAMP_llvmo__ConstantDataSequential_O", ADJUST_STAMP(2403));
register_stamp_name("STAMP_llvmo__ConstantDataArray_O", ADJUST_STAMP(2407));
register_stamp_name("STAMP_llvmo__ConstantExpr_O", ADJUST_STAMP(2411));
register_stamp_name("STAMP_llvmo__UndefValue_O", ADJUST_STAMP(2415));
register_stamp_name("STAMP_llvmo__ConstantArray_O", ADJUST_STAMP(2419));
register_stamp_name("STAMP_llvmo__Argument_O", ADJUST_STAMP(2423));
register_stamp_name("STAMP_llvmo__BasicBlock_O", ADJUST_STAMP(2427));
register_stamp_name("STAMP_llvmo__MetadataAsValue_O", ADJUST_STAMP(2431));
register_stamp_name("STAMP_llvmo__ThreadSafeContext_O", ADJUST_STAMP(2435));
register_stamp_name("STAMP_llvmo__TargetMachine_O", ADJUST_STAMP(2439));
register_stamp_name("STAMP_llvmo__LLVMTargetMachine_O", ADJUST_STAMP(2443));
register_stamp_name("STAMP_llvmo__Triple_O", ADJUST_STAMP(2447));
register_stamp_name("STAMP_llvmo__LLVMContext_O", ADJUST_STAMP(2451));
register_stamp_name("STAMP_llvmo__PassManagerBuilder_O", ADJUST_STAMP(2455));
register_stamp_name("STAMP_llvmo__ExecutionEngine_O", ADJUST_STAMP(2459));
register_stamp_name("STAMP_llvmo__Type_O", ADJUST_STAMP(2463));
register_stamp_name("STAMP_llvmo__FunctionType_O", ADJUST_STAMP(2467));
register_stamp_name("STAMP_llvmo__IntegerType_O", ADJUST_STAMP(2471));
register_stamp_name("STAMP_llvmo__CompositeType_O", ADJUST_STAMP(2475));
register_stamp_name("STAMP_llvmo__SequentialType_O", ADJUST_STAMP(2479));
register_stamp_name("STAMP_llvmo__PointerType_O", ADJUST_STAMP(2483));
register_stamp_name("STAMP_llvmo__ArrayType_O", ADJUST_STAMP(2487));
register_stamp_name("STAMP_llvmo__VectorType_O", ADJUST_STAMP(2491));
register_stamp_name("STAMP_llvmo__StructType_O", ADJUST_STAMP(2495));
register_stamp_name("STAMP_llvmo__TargetPassConfig_O", ADJUST_STAMP(2499));
register_stamp_name("STAMP_llvmo__APFloat_O", ADJUST_STAMP(2503));
register_stamp_name("STAMP_llvmo__Metadata_O", ADJUST_STAMP(2507));
register_stamp_name("STAMP_llvmo__MDNode_O", ADJUST_STAMP(2511));
register_stamp_name("STAMP_llvmo__DILocation_O", ADJUST_STAMP(2515));
register_stamp_name("STAMP_llvmo__DINode_O", ADJUST_STAMP(2519));
register_stamp_name("STAMP_llvmo__DIVariable_O", ADJUST_STAMP(2523));
register_stamp_name("STAMP_llvmo__DILocalVariable_O", ADJUST_STAMP(2527));
register_stamp_name("STAMP_llvmo__DIScope_O", ADJUST_STAMP(2531));
register_stamp_name("STAMP_llvmo__DIFile_O", ADJUST_STAMP(2535));
register_stamp_name("STAMP_llvmo__DILocalScope_O", ADJUST_STAMP(2539));
register_stamp_name("STAMP_llvmo__DISubprogram_O", ADJUST_STAMP(2543));
register_stamp_name("STAMP_llvmo__DILexicalBlockBase_O", ADJUST_STAMP(2547));
register_stamp_name("STAMP_llvmo__DILexicalBlock_O", ADJUST_STAMP(2551));
register_stamp_name("STAMP_llvmo__DICompileUnit_O", ADJUST_STAMP(2555));
register_stamp_name("STAMP_llvmo__DIType_O", ADJUST_STAMP(2559));
register_stamp_name("STAMP_llvmo__DICompositeType_O", ADJUST_STAMP(2563));
register_stamp_name("STAMP_llvmo__DIDerivedType_O", ADJUST_STAMP(2567));
register_stamp_name("STAMP_llvmo__DISubroutineType_O", ADJUST_STAMP(2571));
register_stamp_name("STAMP_llvmo__DIBasicType_O", ADJUST_STAMP(2575));
register_stamp_name("STAMP_llvmo__DIExpression_O", ADJUST_STAMP(2579));
register_stamp_name("STAMP_llvmo__ValueAsMetadata_O", ADJUST_STAMP(2583));
register_stamp_name("STAMP_llvmo__MDString_O", ADJUST_STAMP(2587));
register_stamp_name("STAMP_llvmo__NamedMDNode_O", ADJUST_STAMP(2591));
register_stamp_name("STAMP_llvmo__TargetOptions_O", ADJUST_STAMP(2595));
register_stamp_name("STAMP_llvmo__Module_O", ADJUST_STAMP(2599));
register_stamp_name("STAMP_llvmo__Target_O", ADJUST_STAMP(2603));
register_stamp_name("STAMP_llvmo__Linker_O", ADJUST_STAMP(2607));
register_stamp_name("STAMP_core__Rack_O", ADJUST_STAMP(2611));
register_stamp_name("STAMP_core__SmallMultimap_O", ADJUST_STAMP(2615));
register_stamp_name("STAMP_core__AtomicFixnumHolder_O", ADJUST_STAMP(2619));
register_stamp_name("STAMP_core__Scope_O", ADJUST_STAMP(2623));
register_stamp_name("STAMP_core__FileScope_O", ADJUST_STAMP(2627));
register_stamp_name("STAMP_core__Path_O", ADJUST_STAMP(2631));
register_stamp_name("STAMP_core__Pathname_O", ADJUST_STAMP(2635));
register_stamp_name("STAMP_core__LogicalPathname_O", ADJUST_STAMP(2639));
register_stamp_name("STAMP_core__Cache_O", ADJUST_STAMP(2643));
register_stamp_name("STAMP_core__Stream_O", ADJUST_STAMP(2647));
register_stamp_name("STAMP_core__AnsiStream_O", ADJUST_STAMP(2651));
register_stamp_name("STAMP_core__SynonymStream_O", ADJUST_STAMP(2655));
register_stamp_name("STAMP_core__StringStream_O", ADJUST_STAMP(2659));
register_stamp_name("STAMP_core__StringOutputStream_O", ADJUST_STAMP(2663));
register_stamp_name("STAMP_core__StringInputStream_O", ADJUST_STAMP(2667));
register_stamp_name("STAMP_core__EchoStream_O", ADJUST_STAMP(2671));
register_stamp_name("STAMP_core__ConcatenatedStream_O", ADJUST_STAMP(2675));
register_stamp_name("STAMP_core__FileStream_O", ADJUST_STAMP(2679));
register_stamp_name("STAMP_core__IOFileStream_O", ADJUST_STAMP(2683));
register_stamp_name("STAMP_core__IOStreamStream_O", ADJUST_STAMP(2687));
register_stamp_name("STAMP_core__BroadcastStream_O", ADJUST_STAMP(2691));
register_stamp_name("STAMP_core__TwoWayStream_O", ADJUST_STAMP(2695));
register_stamp_name("STAMP_core__Package_O", ADJUST_STAMP(2699));
register_stamp_name("STAMP_core__FileStatus_O", ADJUST_STAMP(2703));
register_stamp_name("STAMP_core__InvocationHistoryFrameIterator_O", ADJUST_STAMP(2707));
register_stamp_name("STAMP_core__DirectoryEntry_O", ADJUST_STAMP(2711));
register_stamp_name("STAMP_core__LightUserData_O", ADJUST_STAMP(2715));
register_stamp_name("STAMP_core__UserData_O", ADJUST_STAMP(2719));
register_stamp_name("STAMP_core__Cons_O", ADJUST_STAMP(2723));
register_stamp_name("STAMP_core__VaList_dummy_O", ADJUST_STAMP(2727));
register_stamp_name("STAMP_core__Lisp_O", ADJUST_STAMP(2731));
register_stamp_name("STAMP_clang__RecursiveASTVisitor_asttooling__AstVisitor_O_", ADJUST_STAMP(2735));
register_stamp_name("STAMP_asttooling__AstVisitor_O", ADJUST_STAMP(2739));
register_stamp_name("STAMP_gctools__GCContainer", ADJUST_STAMP(2743));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__", ADJUST_STAMP(2747));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__", ADJUST_STAMP(2751));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__EnergyChiralRestraint_", ADJUST_STAMP(2755));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__", ADJUST_STAMP(2759));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__", ADJUST_STAMP(2763));
register_stamp_name("STAMP_gctools__GCArray_moveable_short_", ADJUST_STAMP(2767));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__", ADJUST_STAMP(2771));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___", ADJUST_STAMP(2775));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__", ADJUST_STAMP(2779));
register_stamp_name("STAMP_gctools__GCBitUnitArray_moveable_4_0_", ADJUST_STAMP(2783));
register_stamp_name("STAMP_gctools__GCVector_moveable_core__SymbolClassHolderPair_", ADJUST_STAMP(2787));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___", ADJUST_STAMP(2791));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__", ADJUST_STAMP(2795));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___", ADJUST_STAMP(2799));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__", ADJUST_STAMP(2803));
register_stamp_name("STAMP_gctools__GCArray_moveable_unsigned_char_", ADJUST_STAMP(2807));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___", ADJUST_STAMP(2811));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___", ADJUST_STAMP(2815));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_", ADJUST_STAMP(2819));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__", ADJUST_STAMP(2823));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__EnergyAngle_", ADJUST_STAMP(2827));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__", ADJUST_STAMP(2831));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__", ADJUST_STAMP(2835));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__", ADJUST_STAMP(2839));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___", ADJUST_STAMP(2843));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__", ADJUST_STAMP(2847));
register_stamp_name("STAMP_gctools__GCVector_moveable_core__OptionalArgument_", ADJUST_STAMP(2851));
register_stamp_name("STAMP_gctools__GCVector_moveable_core__KeywordArgument_", ADJUST_STAMP(2855));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__KeyEntry_", ADJUST_STAMP(2859));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___", ADJUST_STAMP(2863));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__", ADJUST_STAMP(2867));
register_stamp_name("STAMP_gctools__GCArray_moveable_Vector3_", ADJUST_STAMP(2871));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_", ADJUST_STAMP(2875));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__", ADJUST_STAMP(2879));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___", ADJUST_STAMP(2883));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__", ADJUST_STAMP(2887));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___", ADJUST_STAMP(2891));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__EnergyImproperRestraint_", ADJUST_STAMP(2895));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__", ADJUST_STAMP(2899));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__", ADJUST_STAMP(2903));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__", ADJUST_STAMP(2907));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__", ADJUST_STAMP(2911));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___", ADJUST_STAMP(2915));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___", ADJUST_STAMP(2919));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__", ADJUST_STAMP(2923));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___", ADJUST_STAMP(2927));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__", ADJUST_STAMP(2931));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__", ADJUST_STAMP(2935));
register_stamp_name("STAMP_gctools__GCBitUnitArray_moveable_2_0_", ADJUST_STAMP(2939));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__", ADJUST_STAMP(2943));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__", ADJUST_STAMP(2947));
register_stamp_name("STAMP_gctools__GCBitUnitArray_moveable_1_0_", ADJUST_STAMP(2951));
register_stamp_name("STAMP_gctools__GCBitUnitArray_moveable_2_1_", ADJUST_STAMP(2955));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__", ADJUST_STAMP(2959));
register_stamp_name("STAMP_gctools__GCVector_moveable_int_", ADJUST_STAMP(2963));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___", ADJUST_STAMP(2967));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__", ADJUST_STAMP(2971));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__", ADJUST_STAMP(2975));
register_stamp_name("STAMP_gctools__GCArray_moveable_float_", ADJUST_STAMP(2979));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__", ADJUST_STAMP(2983));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__", ADJUST_STAMP(2987));
register_stamp_name("STAMP_gctools__GCVector_moveable_core__T_O___", ADJUST_STAMP(2991));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__EnergyDihedral_", ADJUST_STAMP(2995));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___", ADJUST_STAMP(2999));
register_stamp_name("STAMP_gctools__GCArray_moveable_unsigned_int_", ADJUST_STAMP(3003));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__", ADJUST_STAMP(3007));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__", ADJUST_STAMP(3011));
register_stamp_name("STAMP_gctools__GCVector_moveable_core__CacheRecord_", ADJUST_STAMP(3015));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__", ADJUST_STAMP(3019));
register_stamp_name("STAMP_gctools__GCVector_moveable_double_", ADJUST_STAMP(3023));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__", ADJUST_STAMP(3027));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__", ADJUST_STAMP(3031));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___", ADJUST_STAMP(3035));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__", ADJUST_STAMP(3039));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__AtomPdbRec_", ADJUST_STAMP(3043));
register_stamp_name("STAMP_gctools__GCVector_moveable_core__Cons_O_", ADJUST_STAMP(3047));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__EnergySketchStretch_", ADJUST_STAMP(3051));
register_stamp_name("STAMP_gctools__GCArray_moveable_signed_char_", ADJUST_STAMP(3055));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_", ADJUST_STAMP(3059));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__", ADJUST_STAMP(3063));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___", ADJUST_STAMP(3067));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__", ADJUST_STAMP(3071));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__", ADJUST_STAMP(3075));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__EnergySketchNonbond_", ADJUST_STAMP(3079));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__", ADJUST_STAMP(3083));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__", ADJUST_STAMP(3087));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__FixedNonbondRestraint_", ADJUST_STAMP(3091));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__", ADJUST_STAMP(3095));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__", ADJUST_STAMP(3099));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__", ADJUST_STAMP(3103));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___", ADJUST_STAMP(3107));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__", ADJUST_STAMP(3111));
register_stamp_name("STAMP_gctools__GCArray_moveable_double_", ADJUST_STAMP(3115));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___", ADJUST_STAMP(3119));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___", ADJUST_STAMP(3123));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__", ADJUST_STAMP(3127));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__", ADJUST_STAMP(3131));
register_stamp_name("STAMP_gctools__GCVector_moveable_core__RequiredArgument_", ADJUST_STAMP(3135));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__", ADJUST_STAMP(3139));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__", ADJUST_STAMP(3143));
register_stamp_name("STAMP_gctools__GCBitUnitArray_moveable_4_1_", ADJUST_STAMP(3147));
register_stamp_name("STAMP_gctools__GCVector_moveable_core__SymbolStorage_", ADJUST_STAMP(3151));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_", ADJUST_STAMP(3155));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___", ADJUST_STAMP(3159));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___", ADJUST_STAMP(3163));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__", ADJUST_STAMP(3167));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__", ADJUST_STAMP(3171));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___", ADJUST_STAMP(3175));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__", ADJUST_STAMP(3179));
register_stamp_name("STAMP_gctools__GCArray_moveable_unsigned_long_", ADJUST_STAMP(3183));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__EnergyNonbond_", ADJUST_STAMP(3187));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___", ADJUST_STAMP(3191));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__AtomInfo_", ADJUST_STAMP(3195));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__", ADJUST_STAMP(3199));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__", ADJUST_STAMP(3203));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__EnergyAtom_", ADJUST_STAMP(3207));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___", ADJUST_STAMP(3211));
register_stamp_name("STAMP_gctools__GCArray_moveable_int_", ADJUST_STAMP(3215));
register_stamp_name("STAMP_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__", ADJUST_STAMP(3219));
register_stamp_name("STAMP_gctools__GCVector_moveable_core__AuxArgument_", ADJUST_STAMP(3223));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__ResidueOut_", ADJUST_STAMP(3227));
register_stamp_name("STAMP_gctools__GCArray_moveable_long_", ADJUST_STAMP(3231));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__", ADJUST_STAMP(3235));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_", ADJUST_STAMP(3239));
register_stamp_name("STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___", ADJUST_STAMP(3243));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__", ADJUST_STAMP(3247));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__", ADJUST_STAMP(3251));
register_stamp_name("STAMP_gctools__GCVector_moveable_chem__EnergyStretch_", ADJUST_STAMP(3255));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__", ADJUST_STAMP(3259));
register_stamp_name("STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__", ADJUST_STAMP(3263));
register_stamp_name("STAMP_gctools__GCArray_moveable_unsigned_short_", ADJUST_STAMP(3267));
register_stamp_name("STAMP_gctools__GCVector_moveable_float_", ADJUST_STAMP(3271));
register_stamp_name("STAMP_clang__FrontendAction", ADJUST_STAMP(3275));
register_stamp_name("STAMP_clang__ASTFrontendAction", ADJUST_STAMP(3279));
register_stamp_name("STAMP_clang__SyntaxOnlyAction", ADJUST_STAMP(3283));
register_stamp_name("STAMP_clang__tooling__ToolAction", ADJUST_STAMP(3287));
register_stamp_name("STAMP_clang__tooling__FrontendActionFactory", ADJUST_STAMP(3291));
register_stamp_name("STAMP_clang__ast_matchers__MatchFinder__MatchCallback", ADJUST_STAMP(3295));

#endif // defined(GC_ENUM_NAMES)
#if defined(GC_DYNAMIC_CAST)
// STAMP_core__TwoWayStream_O
template <typename FP> struct Cast<core::TwoWayStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::TwoWayStream_O val -> 2695
      return (kindVal == ISA_ADJUST_STAMP(2695));
  };
};
// STAMP_chem__EnergyAngle_O
template <typename FP> struct Cast<chem::EnergyAngle_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyAngle_O val -> 139
      return (kindVal == ISA_ADJUST_STAMP(139));
  };
};
// STAMP_core__SimpleVector_byte2_t_O
template <typename FP> struct Cast<core::SimpleVector_byte2_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_byte2_t_O val -> 2175
      return (kindVal == ISA_ADJUST_STAMP(2175));
  };
};
// STAMP_gctools__GCVector_moveable_float_
template <typename FP> struct Cast<gctools::GCVector_moveable<float>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<float> val -> 3271
      return (kindVal == ISA_ADJUST_STAMP(3271));
  };
};
// STAMP_core__SimpleMDArray_fixnum_O
template <typename FP> struct Cast<core::SimpleMDArray_fixnum_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_fixnum_O val -> 1743
      return (kindVal == ISA_ADJUST_STAMP(1743));
  };
};
// STAMP_gctools__GCArray_moveable_unsigned_short_
template <typename FP> struct Cast<gctools::GCArray_moveable<unsigned short>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<unsigned short> val -> 3267
      return (kindVal == ISA_ADJUST_STAMP(3267));
  };
};
// STAMP_core__SimpleMDArray_int32_t_O
template <typename FP> struct Cast<core::SimpleMDArray_int32_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_int32_t_O val -> 1639
      return (kindVal == ISA_ADJUST_STAMP(1639));
  };
};
// STAMP_core__Integer_O
template <typename FP> struct Cast<core::Integer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Integer_O low high --> 1323 1331 
      return ((ISA_ADJUST_STAMP(1323) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1331)));
  };
};
// STAMP_chem__OutPlug_O
template <typename FP> struct Cast<chem::OutPlug_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::OutPlug_O val -> 751
      return (kindVal == ISA_ADJUST_STAMP(751));
  };
};
// STAMP_mp__Process_O
template <typename FP> struct Cast<mp::Process_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range mp::Process_O val -> 1079
      return (kindVal == ISA_ADJUST_STAMP(1079));
  };
};
// STAMP_core__LightUserData_O
template <typename FP> struct Cast<core::LightUserData_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::LightUserData_O low high --> 2715 2719 
      return ((ISA_ADJUST_STAMP(2715) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2719)));
  };
};
// STAMP_core__MDArrayT_O
template <typename FP> struct Cast<core::MDArrayT_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArrayT_O val -> 1595
      return (kindVal == ISA_ADJUST_STAMP(1595));
  };
};
// STAMP_core__DirectoryEntry_O
template <typename FP> struct Cast<core::DirectoryEntry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::DirectoryEntry_O val -> 2711
      return (kindVal == ISA_ADJUST_STAMP(2711));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>> val -> 3263
      return (kindVal == ISA_ADJUST_STAMP(3263));
  };
};
// STAMP_llvmo__Linker_O
template <typename FP> struct Cast<llvmo::Linker_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Linker_O val -> 2607
      return (kindVal == ISA_ADJUST_STAMP(2607));
  };
};
// STAMP_chem__AtomIdToAtomMap_O
template <typename FP> struct Cast<chem::AtomIdToAtomMap_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AtomIdToAtomMap_O val -> 1075
      return (kindVal == ISA_ADJUST_STAMP(1075));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>> val -> 3259
      return (kindVal == ISA_ADJUST_STAMP(3259));
  };
};
// STAMP_core__MDArray_float_O
template <typename FP> struct Cast<core::MDArray_float_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_float_O val -> 1531
      return (kindVal == ISA_ADJUST_STAMP(1531));
  };
};
// STAMP_chem__EnergyImproperRestraint_O
template <typename FP> struct Cast<chem::EnergyImproperRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyImproperRestraint_O val -> 135
      return (kindVal == ISA_ADJUST_STAMP(135));
  };
};
// STAMP_chem__IterateMatter_O
template <typename FP> struct Cast<chem::IterateMatter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::IterateMatter_O low high --> 1107 1119 
      return ((ISA_ADJUST_STAMP(1107) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1119)));
  };
};
// STAMP_chem__FFTypesDb_O
template <typename FP> struct Cast<chem::FFTypesDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFTypesDb_O val -> 407
      return (kindVal == ISA_ADJUST_STAMP(407));
  };
};
// STAMP_core__ComplexVector_float_O
template <typename FP> struct Cast<core::ComplexVector_float_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_float_O val -> 1851
      return (kindVal == ISA_ADJUST_STAMP(1851));
  };
};
// STAMP_core__StandardClassCreator_O
template <typename FP> struct Cast<core::StandardClassCreator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::StandardClassCreator_O val -> 1435
      return (kindVal == ISA_ADJUST_STAMP(1435));
  };
};
// STAMP_chem__Alias_O
template <typename FP> struct Cast<chem::Alias_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Alias_O val -> 1071
      return (kindVal == ISA_ADJUST_STAMP(1071));
  };
};
// STAMP_gctools__GCVector_moveable_chem__EnergyStretch_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyStretch>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyStretch> val -> 3255
      return (kindVal == ISA_ADJUST_STAMP(3255));
  };
};
// STAMP_chem__MapOfMonomerNamesToAtomIndexers_O
template <typename FP> struct Cast<chem::MapOfMonomerNamesToAtomIndexers_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::MapOfMonomerNamesToAtomIndexers_O val -> 1067
      return (kindVal == ISA_ADJUST_STAMP(1067));
  };
};
// STAMP_adapt__SymbolSet_O
template <typename FP> struct Cast<adapt::SymbolSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range adapt::SymbolSet_O val -> 1063
      return (kindVal == ISA_ADJUST_STAMP(1063));
  };
};
// STAMP_chem__Minimizer_O
template <typename FP> struct Cast<chem::Minimizer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Minimizer_O val -> 1059
      return (kindVal == ISA_ADJUST_STAMP(1059));
  };
};
// STAMP_chem__SpecificContext_O
template <typename FP> struct Cast<chem::SpecificContext_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SpecificContext_O val -> 1055
      return (kindVal == ISA_ADJUST_STAMP(1055));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>> val -> 3251
      return (kindVal == ISA_ADJUST_STAMP(3251));
  };
};
// STAMP_chem__Molecule_O
template <typename FP> struct Cast<chem::Molecule_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Molecule_O val -> 163
      return (kindVal == ISA_ADJUST_STAMP(163));
  };
};
// STAMP_core__InvocationHistoryFrameIterator_O
template <typename FP> struct Cast<core::InvocationHistoryFrameIterator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::InvocationHistoryFrameIterator_O val -> 2707
      return (kindVal == ISA_ADJUST_STAMP(2707));
  };
};
// STAMP_core__SimpleVector_size_t_O
template <typename FP> struct Cast<core::SimpleVector_size_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_size_t_O val -> 2027
      return (kindVal == ISA_ADJUST_STAMP(2027));
  };
};
// STAMP_kinematics__CheckpointOutPlugJoint_O
template <typename FP> struct Cast<kinematics::CheckpointOutPlugJoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::CheckpointOutPlugJoint_O val -> 855
      return (kindVal == ISA_ADJUST_STAMP(855));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>> val -> 3247
      return (kindVal == ISA_ADJUST_STAMP(3247));
  };
};
// STAMP_chem__Dimacs_O
template <typename FP> struct Cast<chem::Dimacs_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Dimacs_O val -> 1051
      return (kindVal == ISA_ADJUST_STAMP(1051));
  };
};
// STAMP_llvmo__DIScope_O
template <typename FP> struct Cast<llvmo::DIScope_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIScope_O low high --> 2531 2575 
      return ((ISA_ADJUST_STAMP(2531) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2575)));
  };
};
// STAMP_chem__FullLargeSquareMatrix_O
template <typename FP> struct Cast<chem::FullLargeSquareMatrix_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FullLargeSquareMatrix_O val -> 371
      return (kindVal == ISA_ADJUST_STAMP(371));
  };
};
// STAMP_core__FileStatus_O
template <typename FP> struct Cast<core::FileStatus_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FileStatus_O val -> 2703
      return (kindVal == ISA_ADJUST_STAMP(2703));
  };
};
// STAMP_chem__EnergySketchStretch_O
template <typename FP> struct Cast<chem::EnergySketchStretch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergySketchStretch_O val -> 131
      return (kindVal == ISA_ADJUST_STAMP(131));
  };
};
// STAMP_llvmo__IndirectBrInst_O
template <typename FP> struct Cast<llvmo::IndirectBrInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::IndirectBrInst_O val -> 2363
      return (kindVal == ISA_ADJUST_STAMP(2363));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>> val -> 3243
      return (kindVal == ISA_ADJUST_STAMP(3243));
  };
};
// STAMP_llvmo__ConstantArray_O
template <typename FP> struct Cast<llvmo::ConstantArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ConstantArray_O val -> 2419
      return (kindVal == ISA_ADJUST_STAMP(2419));
  };
};
// STAMP_chem__OligomerPart_Monomer_O
template <typename FP> struct Cast<chem::OligomerPart_Monomer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::OligomerPart_Monomer_O val -> 339
      return (kindVal == ISA_ADJUST_STAMP(339));
  };
};
// STAMP_llvmo__PHINode_O
template <typename FP> struct Cast<llvmo::PHINode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::PHINode_O val -> 2359
      return (kindVal == ISA_ADJUST_STAMP(2359));
  };
};
// STAMP_chem__EnergyFixedNonbondRestraint_O
template <typename FP> struct Cast<chem::EnergyFixedNonbondRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyFixedNonbondRestraint_O val -> 127
      return (kindVal == ISA_ADJUST_STAMP(127));
  };
};
// STAMP_core__Package_O
template <typename FP> struct Cast<core::Package_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Package_O val -> 2699
      return (kindVal == ISA_ADJUST_STAMP(2699));
  };
};
// STAMP_chem__AtomTest_O
template <typename FP> struct Cast<chem::AtomTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AtomTest_O val -> 1019
      return (kindVal == ISA_ADJUST_STAMP(1019));
  };
};
// STAMP_core__Stream_O
template <typename FP> struct Cast<core::Stream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Stream_O low high --> 2647 2695 
      return ((ISA_ADJUST_STAMP(2647) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2695)));
  };
};
// STAMP_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::RigidBodyAtomInfo>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::RigidBodyAtomInfo> val -> 3239
      return (kindVal == ISA_ADJUST_STAMP(3239));
  };
};
// STAMP_chem__EnergyAnchorRestraint_O
template <typename FP> struct Cast<chem::EnergyAnchorRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyAnchorRestraint_O val -> 123
      return (kindVal == ISA_ADJUST_STAMP(123));
  };
};
// STAMP_chem__FFAngle_O
template <typename FP> struct Cast<chem::FFAngle_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFAngle_O val -> 279
      return (kindVal == ISA_ADJUST_STAMP(279));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>> val -> 3235
      return (kindVal == ISA_ADJUST_STAMP(3235));
  };
};
// STAMP_gctools__GCArray_moveable_long_
template <typename FP> struct Cast<gctools::GCArray_moveable<long>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<long> val -> 3231
      return (kindVal == ISA_ADJUST_STAMP(3231));
  };
};
// STAMP_gctools__GCVector_moveable_chem__ResidueOut_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::ResidueOut>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::ResidueOut> val -> 3227
      return (kindVal == ISA_ADJUST_STAMP(3227));
  };
};
// STAMP_core__ShortFloat_O
template <typename FP> struct Cast<core::ShortFloat_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ShortFloat_O val -> 1351
      return (kindVal == ISA_ADJUST_STAMP(1351));
  };
};
// STAMP_llvmo__MDString_O
template <typename FP> struct Cast<llvmo::MDString_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::MDString_O val -> 2587
      return (kindVal == ISA_ADJUST_STAMP(2587));
  };
};
// STAMP_core__Cache_O
template <typename FP> struct Cast<core::Cache_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Cache_O val -> 2643
      return (kindVal == ISA_ADJUST_STAMP(2643));
  };
};
// STAMP_core__AbstractSimpleVector_O
template <typename FP> struct Cast<core::AbstractSimpleVector_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::AbstractSimpleVector_O low high --> 2011 2183 
      return ((ISA_ADJUST_STAMP(2011) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2183)));
  };
};
// STAMP_core__SimpleMDArray_byte16_t_O
template <typename FP> struct Cast<core::SimpleMDArray_byte16_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_byte16_t_O val -> 1687
      return (kindVal == ISA_ADJUST_STAMP(1687));
  };
};
// STAMP_core__Pathname_O
template <typename FP> struct Cast<core::Pathname_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Pathname_O low high --> 2635 2639 
      return ((ISA_ADJUST_STAMP(2635) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2639)));
  };
};
// STAMP_core__Str8Ns_O
template <typename FP> struct Cast<core::Str8Ns_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Str8Ns_O val -> 1919
      return (kindVal == ISA_ADJUST_STAMP(1919));
  };
};
// STAMP_llvmo__UndefValue_O
template <typename FP> struct Cast<llvmo::UndefValue_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::UndefValue_O val -> 2415
      return (kindVal == ISA_ADJUST_STAMP(2415));
  };
};
// STAMP_gctools__GCVector_moveable_core__AuxArgument_
template <typename FP> struct Cast<gctools::GCVector_moveable<core::AuxArgument>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::AuxArgument> val -> 3223
      return (kindVal == ISA_ADJUST_STAMP(3223));
  };
};
// STAMP_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__
template <typename FP> struct Cast<gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>> val -> 3219
      return (kindVal == ISA_ADJUST_STAMP(3219));
  };
};
// STAMP_chem__ChemInfoNode_O
template <typename FP> struct Cast<chem::ChemInfoNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ChemInfoNode_O low high --> 971 1047 
      return ((ISA_ADJUST_STAMP(971) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1047)));
  };
};
// STAMP_core__Path_O
template <typename FP> struct Cast<core::Path_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Path_O val -> 2631
      return (kindVal == ISA_ADJUST_STAMP(2631));
  };
};
// STAMP_chem__BoundingBox_O
template <typename FP> struct Cast<chem::BoundingBox_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::BoundingBox_O val -> 967
      return (kindVal == ISA_ADJUST_STAMP(967));
  };
};
// STAMP_chem__StructureComparer_O
template <typename FP> struct Cast<chem::StructureComparer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::StructureComparer_O val -> 963
      return (kindVal == ISA_ADJUST_STAMP(963));
  };
};
// STAMP_gctools__GCArray_moveable_int_
template <typename FP> struct Cast<gctools::GCArray_moveable<int>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<int> val -> 3215
      return (kindVal == ISA_ADJUST_STAMP(3215));
  };
};
// STAMP_core__IOStreamStream_O
template <typename FP> struct Cast<core::IOStreamStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::IOStreamStream_O val -> 2687
      return (kindVal == ISA_ADJUST_STAMP(2687));
  };
};
// STAMP_core__Scope_O
template <typename FP> struct Cast<core::Scope_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Scope_O low high --> 2623 2627 
      return ((ISA_ADJUST_STAMP(2623) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2627)));
  };
};
// STAMP_chem__BondLogical_O
template <typename FP> struct Cast<chem::BondLogical_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::BondLogical_O val -> 983
      return (kindVal == ISA_ADJUST_STAMP(983));
  };
};
// STAMP_chem__MoleculeGraph_O
template <typename FP> struct Cast<chem::MoleculeGraph_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::MoleculeGraph_O val -> 959
      return (kindVal == ISA_ADJUST_STAMP(959));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>> val -> 3211
      return (kindVal == ISA_ADJUST_STAMP(3211));
  };
};
// STAMP_gctools__GCVector_moveable_chem__EnergyAtom_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyAtom>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyAtom> val -> 3207
      return (kindVal == ISA_ADJUST_STAMP(3207));
  };
};
// STAMP_core__ComplexVector_double_O
template <typename FP> struct Cast<core::ComplexVector_double_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_double_O val -> 1779
      return (kindVal == ISA_ADJUST_STAMP(1779));
  };
};
// STAMP_chem__Monomer_O
template <typename FP> struct Cast<chem::Monomer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Monomer_O val -> 531
      return (kindVal == ISA_ADJUST_STAMP(531));
  };
};
// STAMP_kinematics__Conformation_O
template <typename FP> struct Cast<kinematics::Conformation_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::Conformation_O val -> 955
      return (kindVal == ISA_ADJUST_STAMP(955));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>> val -> 3203
      return (kindVal == ISA_ADJUST_STAMP(3203));
  };
};
// STAMP_chem__ConstitutionAtoms_O
template <typename FP> struct Cast<chem::ConstitutionAtoms_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConstitutionAtoms_O val -> 951
      return (kindVal == ISA_ADJUST_STAMP(951));
  };
};
// STAMP_core__SimpleMDArrayBit_O
template <typename FP> struct Cast<core::SimpleMDArrayBit_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArrayBit_O val -> 1751
      return (kindVal == ISA_ADJUST_STAMP(1751));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>> val -> 3199
      return (kindVal == ISA_ADJUST_STAMP(3199));
  };
};
// STAMP_core__AtomicFixnumHolder_O
template <typename FP> struct Cast<core::AtomicFixnumHolder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::AtomicFixnumHolder_O val -> 2619
      return (kindVal == ISA_ADJUST_STAMP(2619));
  };
};
// STAMP_chem__Branch_O
template <typename FP> struct Cast<chem::Branch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Branch_O val -> 1039
      return (kindVal == ISA_ADJUST_STAMP(1039));
  };
};
// STAMP_kinematics__ChiDihedral_O
template <typename FP> struct Cast<kinematics::ChiDihedral_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::ChiDihedral_O val -> 947
      return (kindVal == ISA_ADJUST_STAMP(947));
  };
};
// STAMP_core__ComplexVector_int2_t_O
template <typename FP> struct Cast<core::ComplexVector_int2_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_int2_t_O val -> 1843
      return (kindVal == ISA_ADJUST_STAMP(1843));
  };
};
// STAMP_gctools__GCVector_moveable_chem__AtomInfo_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::AtomInfo>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::AtomInfo> val -> 3195
      return (kindVal == ISA_ADJUST_STAMP(3195));
  };
};
// STAMP_chem__ConstitutionBond_O
template <typename FP> struct Cast<chem::ConstitutionBond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConstitutionBond_O val -> 943
      return (kindVal == ISA_ADJUST_STAMP(943));
  };
};
// STAMP_chem__CDBond_O
template <typename FP> struct Cast<chem::CDBond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CDBond_O val -> 939
      return (kindVal == ISA_ADJUST_STAMP(939));
  };
};
// STAMP_chem__CombinedForceField_O
template <typename FP> struct Cast<chem::CombinedForceField_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CombinedForceField_O val -> 935
      return (kindVal == ISA_ADJUST_STAMP(935));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>> val -> 3191
      return (kindVal == ISA_ADJUST_STAMP(3191));
  };
};
// STAMP_mp__Mutex_O
template <typename FP> struct Cast<mp::Mutex_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range mp::Mutex_O low high --> 927 931 
      return ((ISA_ADJUST_STAMP(927) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(931)));
  };
};
// STAMP_core__RecursiveDirectoryIterator_O
template <typename FP> struct Cast<core::RecursiveDirectoryIterator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::RecursiveDirectoryIterator_O val -> 1103
      return (kindVal == ISA_ADJUST_STAMP(1103));
  };
};
// STAMP_gctools__GCVector_moveable_chem__EnergyNonbond_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyNonbond>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyNonbond> val -> 3187
      return (kindVal == ISA_ADJUST_STAMP(3187));
  };
};
// STAMP_chem__RestraintDihedral_O
template <typename FP> struct Cast<chem::RestraintDihedral_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RestraintDihedral_O val -> 307
      return (kindVal == ISA_ADJUST_STAMP(307));
  };
};
// STAMP_chem__AntechamberRoot_O
template <typename FP> struct Cast<chem::AntechamberRoot_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AntechamberRoot_O val -> 1003
      return (kindVal == ISA_ADJUST_STAMP(1003));
  };
};
// STAMP_core__StringInputStream_O
template <typename FP> struct Cast<core::StringInputStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::StringInputStream_O val -> 2667
      return (kindVal == ISA_ADJUST_STAMP(2667));
  };
};
// STAMP_core__FunctionFrame_O
template <typename FP> struct Cast<core::FunctionFrame_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FunctionFrame_O val -> 1267
      return (kindVal == ISA_ADJUST_STAMP(1267));
  };
};
// STAMP_chem__IterateAtoms_O
template <typename FP> struct Cast<chem::IterateAtoms_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::IterateAtoms_O val -> 1119
      return (kindVal == ISA_ADJUST_STAMP(1119));
  };
};
// STAMP_core__LongFloat_O
template <typename FP> struct Cast<core::LongFloat_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::LongFloat_O val -> 1347
      return (kindVal == ISA_ADJUST_STAMP(1347));
  };
};
// STAMP_core__ComplexVector_int4_t_O
template <typename FP> struct Cast<core::ComplexVector_int4_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_int4_t_O val -> 1867
      return (kindVal == ISA_ADJUST_STAMP(1867));
  };
};
// STAMP_chem__FFPtorDb_O
template <typename FP> struct Cast<chem::FFPtorDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFPtorDb_O val -> 399
      return (kindVal == ISA_ADJUST_STAMP(399));
  };
};
// STAMP_chem__ComplexRestraint_O
template <typename FP> struct Cast<chem::ComplexRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ComplexRestraint_O low high --> 915 923 
      return ((ISA_ADJUST_STAMP(915) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(923)));
  };
};
// STAMP_core__ComplexVector_T_O
template <typename FP> struct Cast<core::ComplexVector_T_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_T_O val -> 1795
      return (kindVal == ISA_ADJUST_STAMP(1795));
  };
};
// STAMP_chem__RootMatchNode_O
template <typename FP> struct Cast<chem::RootMatchNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RootMatchNode_O low high --> 1043 1047 
      return ((ISA_ADJUST_STAMP(1043) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1047)));
  };
};
// STAMP_core__ValueFrame_O
template <typename FP> struct Cast<core::ValueFrame_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ValueFrame_O val -> 1263
      return (kindVal == ISA_ADJUST_STAMP(1263));
  };
};
// STAMP_gctools__GCArray_moveable_unsigned_long_
template <typename FP> struct Cast<gctools::GCArray_moveable<unsigned long>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<unsigned long> val -> 3183
      return (kindVal == ISA_ADJUST_STAMP(3183));
  };
};
// STAMP_core__SimpleMDArray_int4_t_O
template <typename FP> struct Cast<core::SimpleMDArray_int4_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_int4_t_O val -> 1727
      return (kindVal == ISA_ADJUST_STAMP(1727));
  };
};
// STAMP_core__SimpleVector_int32_t_O
template <typename FP> struct Cast<core::SimpleVector_int32_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_int32_t_O val -> 2183
      return (kindVal == ISA_ADJUST_STAMP(2183));
  };
};
// STAMP_core__Complex_O
template <typename FP> struct Cast<core::Complex_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Complex_O val -> 1355
      return (kindVal == ISA_ADJUST_STAMP(1355));
  };
};
// STAMP_chem__ConformationCollectionEntry_O
template <typename FP> struct Cast<chem::ConformationCollectionEntry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConformationCollectionEntry_O val -> 911
      return (kindVal == ISA_ADJUST_STAMP(911));
  };
};
// STAMP_geom__OMatrix_O
template <typename FP> struct Cast<geom::OMatrix_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::OMatrix_O val -> 907
      return (kindVal == ISA_ADJUST_STAMP(907));
  };
};
// STAMP_chem__RingClosingMate_O
template <typename FP> struct Cast<chem::RingClosingMate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RingClosingMate_O val -> 511
      return (kindVal == ISA_ADJUST_STAMP(511));
  };
};
// STAMP_llvmo__ValueAsMetadata_O
template <typename FP> struct Cast<llvmo::ValueAsMetadata_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ValueAsMetadata_O val -> 2583
      return (kindVal == ISA_ADJUST_STAMP(2583));
  };
};
// STAMP_llvmo__ConstantExpr_O
template <typename FP> struct Cast<llvmo::ConstantExpr_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ConstantExpr_O val -> 2411
      return (kindVal == ISA_ADJUST_STAMP(2411));
  };
};
// STAMP_core__SingleDispatchEffectiveMethodFunction_O
template <typename FP> struct Cast<core::SingleDispatchEffectiveMethodFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SingleDispatchEffectiveMethodFunction_O val -> 1475
      return (kindVal == ISA_ADJUST_STAMP(1475));
  };
};
// STAMP_chem__FFNonbondDb_O
template <typename FP> struct Cast<chem::FFNonbondDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFNonbondDb_O val -> 395
      return (kindVal == ISA_ADJUST_STAMP(395));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>> val -> 3179
      return (kindVal == ISA_ADJUST_STAMP(3179));
  };
};
// STAMP_llvmo__StructType_O
template <typename FP> struct Cast<llvmo::StructType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::StructType_O val -> 2495
      return (kindVal == ISA_ADJUST_STAMP(2495));
  };
};
// STAMP_chem__EnergyNonbond_O
template <typename FP> struct Cast<chem::EnergyNonbond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyNonbond_O low high --> 115 119 
      return ((ISA_ADJUST_STAMP(115) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(119)));
  };
};
// STAMP_core__ComplexVector_int16_t_O
template <typename FP> struct Cast<core::ComplexVector_int16_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_int16_t_O val -> 1859
      return (kindVal == ISA_ADJUST_STAMP(1859));
  };
};
// STAMP_core__SimpleMDArray_float_O
template <typename FP> struct Cast<core::SimpleMDArray_float_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_float_O val -> 1647
      return (kindVal == ISA_ADJUST_STAMP(1647));
  };
};
// STAMP_chem__Residue_O
template <typename FP> struct Cast<chem::Residue_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Residue_O val -> 159
      return (kindVal == ISA_ADJUST_STAMP(159));
  };
};
// STAMP_chem__CalculatePosition_O
template <typename FP> struct Cast<chem::CalculatePosition_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CalculatePosition_O low high --> 891 903 
      return ((ISA_ADJUST_STAMP(891) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(903)));
  };
};
// STAMP_chem__SuperposeSelectedAtoms_O
template <typename FP> struct Cast<chem::SuperposeSelectedAtoms_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SuperposeSelectedAtoms_O val -> 695
      return (kindVal == ISA_ADJUST_STAMP(695));
  };
};
// STAMP_llvmo__Target_O
template <typename FP> struct Cast<llvmo::Target_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Target_O val -> 2603
      return (kindVal == ISA_ADJUST_STAMP(2603));
  };
};
// STAMP_kinematics__MonomerNode_O
template <typename FP> struct Cast<kinematics::MonomerNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::MonomerNode_O low high --> 723 727 
      return ((ISA_ADJUST_STAMP(723) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(727)));
  };
};
// STAMP_core__SimpleVector_byte32_t_O
template <typename FP> struct Cast<core::SimpleVector_byte32_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_byte32_t_O val -> 2019
      return (kindVal == ISA_ADJUST_STAMP(2019));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>> val -> 3175
      return (kindVal == ISA_ADJUST_STAMP(3175));
  };
};
// STAMP_core__SingleDispatchGenericFunctionClosure_O
template <typename FP> struct Cast<core::SingleDispatchGenericFunctionClosure_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SingleDispatchGenericFunctionClosure_O val -> 1471
      return (kindVal == ISA_ADJUST_STAMP(1471));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>> val -> 3171
      return (kindVal == ISA_ADJUST_STAMP(3171));
  };
};
// STAMP_llvmo__Module_O
template <typename FP> struct Cast<llvmo::Module_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Module_O val -> 2599
      return (kindVal == ISA_ADJUST_STAMP(2599));
  };
};
// STAMP_llvmo__DIExpression_O
template <typename FP> struct Cast<llvmo::DIExpression_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIExpression_O val -> 2579
      return (kindVal == ISA_ADJUST_STAMP(2579));
  };
};
// STAMP_core__SingleFloat_dummy_O
template <typename FP> struct Cast<core::SingleFloat_dummy_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SingleFloat_dummy_O val -> 1343
      return (kindVal == ISA_ADJUST_STAMP(1343));
  };
};
// STAMP_core__ValueEnvironment_O
template <typename FP> struct Cast<core::ValueEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ValueEnvironment_O val -> 1255
      return (kindVal == ISA_ADJUST_STAMP(1255));
  };
};
// STAMP_chem__Trajectory_O
template <typename FP> struct Cast<chem::Trajectory_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Trajectory_O val -> 887
      return (kindVal == ISA_ADJUST_STAMP(887));
  };
};
// STAMP_llvmo__InvokeInst_O
template <typename FP> struct Cast<llvmo::InvokeInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::InvokeInst_O val -> 2319
      return (kindVal == ISA_ADJUST_STAMP(2319));
  };
};
// STAMP_chem__RestraintFixedNonbond_O
template <typename FP> struct Cast<chem::RestraintFixedNonbond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RestraintFixedNonbond_O val -> 303
      return (kindVal == ISA_ADJUST_STAMP(303));
  };
};
// STAMP_chem__FFNonbond_O
template <typename FP> struct Cast<chem::FFNonbond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFNonbond_O val -> 275
      return (kindVal == ISA_ADJUST_STAMP(275));
  };
};
// STAMP_core__StrNs_O
template <typename FP> struct Cast<core::StrNs_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::StrNs_O low high --> 1911 1927 
      return ((ISA_ADJUST_STAMP(1911) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1927)));
  };
};
// STAMP_chem__VirtualAtom_O
template <typename FP> struct Cast<chem::VirtualAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::VirtualAtom_O val -> 155
      return (kindVal == ISA_ADJUST_STAMP(155));
  };
};
// STAMP_chem__OriginPlug_O
template <typename FP> struct Cast<chem::OriginPlug_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::OriginPlug_O val -> 755
      return (kindVal == ISA_ADJUST_STAMP(755));
  };
};
// STAMP_llvmo__FunctionPassManager_O
template <typename FP> struct Cast<llvmo::FunctionPassManager_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::FunctionPassManager_O val -> 2275
      return (kindVal == ISA_ADJUST_STAMP(2275));
  };
};
// STAMP_core__DoubleFloat_O
template <typename FP> struct Cast<core::DoubleFloat_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::DoubleFloat_O val -> 1339
      return (kindVal == ISA_ADJUST_STAMP(1339));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>> val -> 3167
      return (kindVal == ISA_ADJUST_STAMP(3167));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>> val -> 3163
      return (kindVal == ISA_ADJUST_STAMP(3163));
  };
};
// STAMP_chem__ConformationExplorerEntryStage_O
template <typename FP> struct Cast<chem::ConformationExplorerEntryStage_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConformationExplorerEntryStage_O val -> 883
      return (kindVal == ISA_ADJUST_STAMP(883));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>> val -> 3159
      return (kindVal == ISA_ADJUST_STAMP(3159));
  };
};
// STAMP_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint> val -> 3155
      return (kindVal == ISA_ADJUST_STAMP(3155));
  };
};
// STAMP_chem__FrameRecognizer_O
template <typename FP> struct Cast<chem::FrameRecognizer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FrameRecognizer_O val -> 879
      return (kindVal == ISA_ADJUST_STAMP(879));
  };
};
// STAMP_chem__CalculatePositionAlongBond_O
template <typename FP> struct Cast<chem::CalculatePositionAlongBond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CalculatePositionAlongBond_O val -> 903
      return (kindVal == ISA_ADJUST_STAMP(903));
  };
};
// STAMP_gctools__GCVector_moveable_core__SymbolStorage_
template <typename FP> struct Cast<gctools::GCVector_moveable<core::SymbolStorage>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::SymbolStorage> val -> 3151
      return (kindVal == ISA_ADJUST_STAMP(3151));
  };
};
// STAMP_core__MDArray_int32_t_O
template <typename FP> struct Cast<core::MDArray_int32_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_int32_t_O val -> 1515
      return (kindVal == ISA_ADJUST_STAMP(1515));
  };
};
// STAMP_adapt__SymbolList_O
template <typename FP> struct Cast<adapt::SymbolList_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range adapt::SymbolList_O val -> 875
      return (kindVal == ISA_ADJUST_STAMP(875));
  };
};
// STAMP_chem__CalculatePositionUsingInternals_O
template <typename FP> struct Cast<chem::CalculatePositionUsingInternals_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CalculatePositionUsingInternals_O val -> 899
      return (kindVal == ISA_ADJUST_STAMP(899));
  };
};
// STAMP_chem__EnergyPeriodicBoundaryConditionsNonbond_O
template <typename FP> struct Cast<chem::EnergyPeriodicBoundaryConditionsNonbond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyPeriodicBoundaryConditionsNonbond_O val -> 119
      return (kindVal == ISA_ADJUST_STAMP(119));
  };
};
// STAMP_asttooling__AsttoolingExposer_O
template <typename FP> struct Cast<asttooling::AsttoolingExposer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range asttooling::AsttoolingExposer_O val -> 1167
      return (kindVal == ISA_ADJUST_STAMP(1167));
  };
};
// STAMP_chem__EnergyDihedral_O
template <typename FP> struct Cast<chem::EnergyDihedral_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyDihedral_O val -> 111
      return (kindVal == ISA_ADJUST_STAMP(111));
  };
};
// STAMP_core__SimpleMDArray_size_t_O
template <typename FP> struct Cast<core::SimpleMDArray_size_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_size_t_O val -> 1663
      return (kindVal == ISA_ADJUST_STAMP(1663));
  };
};
// STAMP_core__SmallMultimap_O
template <typename FP> struct Cast<core::SmallMultimap_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SmallMultimap_O val -> 2615
      return (kindVal == ISA_ADJUST_STAMP(2615));
  };
};
// STAMP_core__Fixnum_dummy_O
template <typename FP> struct Cast<core::Fixnum_dummy_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Fixnum_dummy_O val -> 1331
      return (kindVal == ISA_ADJUST_STAMP(1331));
  };
};
// STAMP_gctools__GCBitUnitArray_moveable_4_1_
template <typename FP> struct Cast<gctools::GCBitUnitArray_moveable<4,1>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCBitUnitArray_moveable<4,1> val -> 3147
      return (kindVal == ISA_ADJUST_STAMP(3147));
  };
};
// STAMP_chem__ImproperTorsion_O
template <typename FP> struct Cast<chem::ImproperTorsion_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ImproperTorsion_O val -> 871
      return (kindVal == ISA_ADJUST_STAMP(871));
  };
};
// STAMP_chem__ZMatrixAngleInternal_O
template <typename FP> struct Cast<chem::ZMatrixAngleInternal_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ZMatrixAngleInternal_O val -> 579
      return (kindVal == ISA_ADJUST_STAMP(579));
  };
};
// STAMP_chem__Rotamer_O
template <typename FP> struct Cast<chem::Rotamer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Rotamer_O val -> 867
      return (kindVal == ISA_ADJUST_STAMP(867));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>> val -> 3143
      return (kindVal == ISA_ADJUST_STAMP(3143));
  };
};
// STAMP_core__WeakKeyHashTable_O
template <typename FP> struct Cast<core::WeakKeyHashTable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::WeakKeyHashTable_O val -> 1299
      return (kindVal == ISA_ADJUST_STAMP(1299));
  };
};
// STAMP_core__Rack_O
template <typename FP> struct Cast<core::Rack_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Rack_O val -> 2611
      return (kindVal == ISA_ADJUST_STAMP(2611));
  };
};
// STAMP_core__MDArrayBaseChar_O
template <typename FP> struct Cast<core::MDArrayBaseChar_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArrayBaseChar_O val -> 1571
      return (kindVal == ISA_ADJUST_STAMP(1571));
  };
};
// STAMP_core__UserData_O
template <typename FP> struct Cast<core::UserData_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::UserData_O val -> 2719
      return (kindVal == ISA_ADJUST_STAMP(2719));
  };
};
// STAMP_core__ExternalObject_O
template <typename FP> struct Cast<core::ExternalObject_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ExternalObject_O low high --> 2211 2607 
      return ((ISA_ADJUST_STAMP(2211) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2607)));
  };
};
// STAMP_llvmo__DINode_O
template <typename FP> struct Cast<llvmo::DINode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DINode_O low high --> 2519 2575 
      return ((ISA_ADJUST_STAMP(2519) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2575)));
  };
};
// STAMP_llvmo__GlobalVariable_O
template <typename FP> struct Cast<llvmo::GlobalVariable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::GlobalVariable_O val -> 2379
      return (kindVal == ISA_ADJUST_STAMP(2379));
  };
};
// STAMP_core__BroadcastStream_O
template <typename FP> struct Cast<core::BroadcastStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::BroadcastStream_O val -> 2691
      return (kindVal == ISA_ADJUST_STAMP(2691));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>> val -> 3139
      return (kindVal == ISA_ADJUST_STAMP(3139));
  };
};
// STAMP_chem__StereoisomerAtoms_O
template <typename FP> struct Cast<chem::StereoisomerAtoms_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::StereoisomerAtoms_O val -> 863
      return (kindVal == ISA_ADJUST_STAMP(863));
  };
};
// STAMP_chem__ConformationExplorerMatch_O
template <typename FP> struct Cast<chem::ConformationExplorerMatch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConformationExplorerMatch_O val -> 859
      return (kindVal == ISA_ADJUST_STAMP(859));
  };
};
// STAMP_chem__ChemExposer_O
template <typename FP> struct Cast<chem::ChemExposer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ChemExposer_O val -> 1163
      return (kindVal == ISA_ADJUST_STAMP(1163));
  };
};
// STAMP_gctools__GCVector_moveable_core__RequiredArgument_
template <typename FP> struct Cast<gctools::GCVector_moveable<core::RequiredArgument>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::RequiredArgument> val -> 3135
      return (kindVal == ISA_ADJUST_STAMP(3135));
  };
};
// STAMP_kinematics__Checkpoint_O
template <typename FP> struct Cast<kinematics::Checkpoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::Checkpoint_O low high --> 847 855 
      return ((ISA_ADJUST_STAMP(847) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(855)));
  };
};
// STAMP_llvmo__DINodeArray_O
template <typename FP> struct Cast<llvmo::DINodeArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DINodeArray_O val -> 843
      return (kindVal == ISA_ADJUST_STAMP(843));
  };
};
// STAMP_llvmo__TargetOptions_O
template <typename FP> struct Cast<llvmo::TargetOptions_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::TargetOptions_O val -> 2595
      return (kindVal == ISA_ADJUST_STAMP(2595));
  };
};
// STAMP_chem__CDText_O
template <typename FP> struct Cast<chem::CDText_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CDText_O val -> 839
      return (kindVal == ISA_ADJUST_STAMP(839));
  };
};
// STAMP_chem__BondTest_O
template <typename FP> struct Cast<chem::BondTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::BondTest_O val -> 979
      return (kindVal == ISA_ADJUST_STAMP(979));
  };
};
// STAMP_adapt__IterateCons_O
template <typename FP> struct Cast<adapt::IterateCons_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range adapt::IterateCons_O val -> 1099
      return (kindVal == ISA_ADJUST_STAMP(1099));
  };
};
// STAMP_geom__SimpleVectorCoordinate_O
template <typename FP> struct Cast<geom::SimpleVectorCoordinate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::SimpleVectorCoordinate_O val -> 2075
      return (kindVal == ISA_ADJUST_STAMP(2075));
  };
};
// STAMP_chem__FFItor_O
template <typename FP> struct Cast<chem::FFItor_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFItor_O val -> 271
      return (kindVal == ISA_ADJUST_STAMP(271));
  };
};
// STAMP_llvmo__NamedMDNode_O
template <typename FP> struct Cast<llvmo::NamedMDNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::NamedMDNode_O val -> 2591
      return (kindVal == ISA_ADJUST_STAMP(2591));
  };
};
// STAMP_core__SimpleVector_byte16_t_O
template <typename FP> struct Cast<core::SimpleVector_byte16_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_byte16_t_O val -> 2111
      return (kindVal == ISA_ADJUST_STAMP(2111));
  };
};
// STAMP_chem__ChemInfoGraph_O
template <typename FP> struct Cast<chem::ChemInfoGraph_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ChemInfoGraph_O val -> 835
      return (kindVal == ISA_ADJUST_STAMP(835));
  };
};
// STAMP_core__SimpleVector_byte64_t_O
template <typename FP> struct Cast<core::SimpleVector_byte64_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_byte64_t_O val -> 2135
      return (kindVal == ISA_ADJUST_STAMP(2135));
  };
};
// STAMP_chem__EnergyPointToLineRestraint_O
template <typename FP> struct Cast<chem::EnergyPointToLineRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyPointToLineRestraint_O val -> 107
      return (kindVal == ISA_ADJUST_STAMP(107));
  };
};
// STAMP_core__SimpleBaseString_O
template <typename FP> struct Cast<core::SimpleBaseString_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleBaseString_O val -> 2087
      return (kindVal == ISA_ADJUST_STAMP(2087));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>> val -> 3131
      return (kindVal == ISA_ADJUST_STAMP(3131));
  };
};
// STAMP_llvmo__Metadata_O
template <typename FP> struct Cast<llvmo::Metadata_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Metadata_O low high --> 2507 2587 
      return ((ISA_ADJUST_STAMP(2507) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2587)));
  };
};
// STAMP_core__MDArray_O
template <typename FP> struct Cast<core::MDArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_O low high --> 1491 2007 
      return ((ISA_ADJUST_STAMP(1491) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2007)));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>> val -> 3127
      return (kindVal == ISA_ADJUST_STAMP(3127));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>> val -> 3123
      return (kindVal == ISA_ADJUST_STAMP(3123));
  };
};
// STAMP_chem__RigidBodyEnergyFunction_O
template <typename FP> struct Cast<chem::RigidBodyEnergyFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RigidBodyEnergyFunction_O val -> 439
      return (kindVal == ISA_ADJUST_STAMP(439));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>> val -> 3119
      return (kindVal == ISA_ADJUST_STAMP(3119));
  };
};
// STAMP_kinematics__ChainNode_O
template <typename FP> struct Cast<kinematics::ChainNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::ChainNode_O val -> 719
      return (kindVal == ISA_ADJUST_STAMP(719));
  };
};
// STAMP_gctools__GCArray_moveable_double_
template <typename FP> struct Cast<gctools::GCArray_moveable<double>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<double> val -> 3115
      return (kindVal == ISA_ADJUST_STAMP(3115));
  };
};
// STAMP_kinematics__CheckpointJoint_O
template <typename FP> struct Cast<kinematics::CheckpointJoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::CheckpointJoint_O val -> 851
      return (kindVal == ISA_ADJUST_STAMP(851));
  };
};
// STAMP_llvmo__CompositeType_O
template <typename FP> struct Cast<llvmo::CompositeType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::CompositeType_O low high --> 2475 2495 
      return ((ISA_ADJUST_STAMP(2475) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2495)));
  };
};
// STAMP_chem__Mate_O
template <typename FP> struct Cast<chem::Mate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Mate_O val -> 507
      return (kindVal == ISA_ADJUST_STAMP(507));
  };
};
// STAMP_llvmo__StructLayout_O
template <typename FP> struct Cast<llvmo::StructLayout_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::StructLayout_O val -> 2207
      return (kindVal == ISA_ADJUST_STAMP(2207));
  };
};
// STAMP_core__SimpleMDArrayT_O
template <typename FP> struct Cast<core::SimpleMDArrayT_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArrayT_O val -> 1719
      return (kindVal == ISA_ADJUST_STAMP(1719));
  };
};
// STAMP_chem__ConformationExplorer_O
template <typename FP> struct Cast<chem::ConformationExplorer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConformationExplorer_O val -> 831
      return (kindVal == ISA_ADJUST_STAMP(831));
  };
};
// STAMP_chem__BondList_O
template <typename FP> struct Cast<chem::BondList_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::BondList_O val -> 827
      return (kindVal == ISA_ADJUST_STAMP(827));
  };
};
// STAMP_core__ActivationFrame_O
template <typename FP> struct Cast<core::ActivationFrame_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ActivationFrame_O low high --> 1259 1267 
      return ((ISA_ADJUST_STAMP(1259) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1267)));
  };
};
// STAMP_llvmo__LoadInst_O
template <typename FP> struct Cast<llvmo::LoadInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::LoadInst_O val -> 2339
      return (kindVal == ISA_ADJUST_STAMP(2339));
  };
};
// STAMP_chem__MacroModelFile_O
template <typename FP> struct Cast<chem::MacroModelFile_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::MacroModelFile_O val -> 823
      return (kindVal == ISA_ADJUST_STAMP(823));
  };
};
// STAMP_core__MDArray_byte2_t_O
template <typename FP> struct Cast<core::MDArray_byte2_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_byte2_t_O val -> 1967
      return (kindVal == ISA_ADJUST_STAMP(1967));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>> val -> 3111
      return (kindVal == ISA_ADJUST_STAMP(3111));
  };
};
// STAMP_chem__Angle_O
template <typename FP> struct Cast<chem::Angle_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Angle_O val -> 819
      return (kindVal == ISA_ADJUST_STAMP(819));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>> val -> 3107
      return (kindVal == ISA_ADJUST_STAMP(3107));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>> val -> 3103
      return (kindVal == ISA_ADJUST_STAMP(3103));
  };
};
// STAMP_core__LexicalEnvironment_O
template <typename FP> struct Cast<core::LexicalEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::LexicalEnvironment_O low high --> 1211 1255 
      return ((ISA_ADJUST_STAMP(1211) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1255)));
  };
};
// STAMP_core__PosixTime_O
template <typename FP> struct Cast<core::PosixTime_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::PosixTime_O val -> 2203
      return (kindVal == ISA_ADJUST_STAMP(2203));
  };
};
// STAMP_llvmo__MetadataAsValue_O
template <typename FP> struct Cast<llvmo::MetadataAsValue_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::MetadataAsValue_O val -> 2431
      return (kindVal == ISA_ADJUST_STAMP(2431));
  };
};
// STAMP_kinematics__RotamerSet_O
template <typename FP> struct Cast<kinematics::RotamerSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::RotamerSet_O val -> 71
      return (kindVal == ISA_ADJUST_STAMP(71));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>> val -> 3099
      return (kindVal == ISA_ADJUST_STAMP(3099));
  };
};
// STAMP_core__SimpleVector_int8_t_O
template <typename FP> struct Cast<core::SimpleVector_int8_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_int8_t_O val -> 2059
      return (kindVal == ISA_ADJUST_STAMP(2059));
  };
};
// STAMP_chem__SpecificContextSet_O
template <typename FP> struct Cast<chem::SpecificContextSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SpecificContextSet_O val -> 815
      return (kindVal == ISA_ADJUST_STAMP(815));
  };
};
// STAMP_llvmo__DIType_O
template <typename FP> struct Cast<llvmo::DIType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIType_O low high --> 2559 2575 
      return ((ISA_ADJUST_STAMP(2559) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2575)));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>> val -> 3095
      return (kindVal == ISA_ADJUST_STAMP(3095));
  };
};
// STAMP_gctools__GCVector_moveable_chem__FixedNonbondRestraint_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::FixedNonbondRestraint>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::FixedNonbondRestraint> val -> 3091
      return (kindVal == ISA_ADJUST_STAMP(3091));
  };
};
// STAMP_chem__ZMatrixEntry_O
template <typename FP> struct Cast<chem::ZMatrixEntry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ZMatrixEntry_O val -> 811
      return (kindVal == ISA_ADJUST_STAMP(811));
  };
};
// STAMP_core__Readtable_O
template <typename FP> struct Cast<core::Readtable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Readtable_O val -> 2199
      return (kindVal == ISA_ADJUST_STAMP(2199));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>> val -> 3087
      return (kindVal == ISA_ADJUST_STAMP(3087));
  };
};
// STAMP_chem__CalculatePositionRelativeToOrigin_O
template <typename FP> struct Cast<chem::CalculatePositionRelativeToOrigin_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CalculatePositionRelativeToOrigin_O val -> 895
      return (kindVal == ISA_ADJUST_STAMP(895));
  };
};
// STAMP_chem__ChemInfoMatch_O
template <typename FP> struct Cast<chem::ChemInfoMatch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ChemInfoMatch_O val -> 807
      return (kindVal == ISA_ADJUST_STAMP(807));
  };
};
// STAMP_units__Quantity_O
template <typename FP> struct Cast<units::Quantity_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range units::Quantity_O val -> 803
      return (kindVal == ISA_ADJUST_STAMP(803));
  };
};
// STAMP_kinematics__AtomTree_O
template <typename FP> struct Cast<kinematics::AtomTree_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::AtomTree_O val -> 799
      return (kindVal == ISA_ADJUST_STAMP(799));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>> val -> 3083
      return (kindVal == ISA_ADJUST_STAMP(3083));
  };
};
// STAMP_llvmo__MDNode_O
template <typename FP> struct Cast<llvmo::MDNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::MDNode_O low high --> 2511 2579 
      return ((ISA_ADJUST_STAMP(2511) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2579)));
  };
};
// STAMP_chem__GenericOctree_O
template <typename FP> struct Cast<chem::GenericOctree_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::GenericOctree_O val -> 795
      return (kindVal == ISA_ADJUST_STAMP(795));
  };
};
// STAMP_mp__RecursiveMutex_O
template <typename FP> struct Cast<mp::RecursiveMutex_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range mp::RecursiveMutex_O val -> 931
      return (kindVal == ISA_ADJUST_STAMP(931));
  };
};
// STAMP_chem__MinimizerLog_O
template <typename FP> struct Cast<chem::MinimizerLog_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::MinimizerLog_O val -> 791
      return (kindVal == ISA_ADJUST_STAMP(791));
  };
};
// STAMP_core__SimpleVector_float_O
template <typename FP> struct Cast<core::SimpleVector_float_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_float_O val -> 2151
      return (kindVal == ISA_ADJUST_STAMP(2151));
  };
};
// STAMP_chem__FFVdwDb_O
template <typename FP> struct Cast<chem::FFVdwDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFVdwDb_O val -> 403
      return (kindVal == ISA_ADJUST_STAMP(403));
  };
};
// STAMP_core__SimpleVector_int4_t_O
template <typename FP> struct Cast<core::SimpleVector_int4_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_int4_t_O val -> 2127
      return (kindVal == ISA_ADJUST_STAMP(2127));
  };
};
// STAMP_chem__FFPtor_O
template <typename FP> struct Cast<chem::FFPtor_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFPtor_O val -> 267
      return (kindVal == ISA_ADJUST_STAMP(267));
  };
};
// STAMP_chem__InfoDb_O
template <typename FP> struct Cast<chem::InfoDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::InfoDb_O val -> 787
      return (kindVal == ISA_ADJUST_STAMP(787));
  };
};
// STAMP_core__LoadTimeValues_O
template <typename FP> struct Cast<core::LoadTimeValues_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::LoadTimeValues_O val -> 2195
      return (kindVal == ISA_ADJUST_STAMP(2195));
  };
};
// STAMP_kinematics__OriginJumpJoint_O
template <typename FP> struct Cast<kinematics::OriginJumpJoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::OriginJumpJoint_O val -> 223
      return (kindVal == ISA_ADJUST_STAMP(223));
  };
};
// STAMP_llvmo__DataLayout_O
template <typename FP> struct Cast<llvmo::DataLayout_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DataLayout_O val -> 2191
      return (kindVal == ISA_ADJUST_STAMP(2191));
  };
};
// STAMP_llvmo__BasicBlock_O
template <typename FP> struct Cast<llvmo::BasicBlock_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::BasicBlock_O val -> 2427
      return (kindVal == ISA_ADJUST_STAMP(2427));
  };
};
// STAMP_core__ComplexVector_byte64_t_O
template <typename FP> struct Cast<core::ComplexVector_byte64_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_byte64_t_O val -> 1835
      return (kindVal == ISA_ADJUST_STAMP(1835));
  };
};
// STAMP_chem__AntechamberBondToAtomTest_O
template <typename FP> struct Cast<chem::AntechamberBondToAtomTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AntechamberBondToAtomTest_O val -> 1027
      return (kindVal == ISA_ADJUST_STAMP(1027));
  };
};
// STAMP_core__MDArray_byte32_t_O
template <typename FP> struct Cast<core::MDArray_byte32_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_byte32_t_O val -> 1959
      return (kindVal == ISA_ADJUST_STAMP(1959));
  };
};
// STAMP_core__Character_dummy_O
template <typename FP> struct Cast<core::Character_dummy_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Character_dummy_O val -> 2187
      return (kindVal == ISA_ADJUST_STAMP(2187));
  };
};
// STAMP_llvmo__Constant_O
template <typename FP> struct Cast<llvmo::Constant_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Constant_O low high --> 2367 2419 
      return ((ISA_ADJUST_STAMP(2367) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2419)));
  };
};
// STAMP_gctools__GCVector_moveable_chem__EnergySketchNonbond_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergySketchNonbond>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergySketchNonbond> val -> 3079
      return (kindVal == ISA_ADJUST_STAMP(3079));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>> val -> 3075
      return (kindVal == ISA_ADJUST_STAMP(3075));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>> val -> 3071
      return (kindVal == ISA_ADJUST_STAMP(3071));
  };
};
// STAMP_core__NativeVector_int_O
template <typename FP> struct Cast<core::NativeVector_int_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::NativeVector_int_O val -> 783
      return (kindVal == ISA_ADJUST_STAMP(783));
  };
};
// STAMP_llvmo__DIBasicType_O
template <typename FP> struct Cast<llvmo::DIBasicType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIBasicType_O val -> 2575
      return (kindVal == ISA_ADJUST_STAMP(2575));
  };
};
// STAMP_llvmo__APFloat_O
template <typename FP> struct Cast<llvmo::APFloat_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::APFloat_O val -> 2503
      return (kindVal == ISA_ADJUST_STAMP(2503));
  };
};
// STAMP_core__SimpleMDArrayCharacter_O
template <typename FP> struct Cast<core::SimpleMDArrayCharacter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArrayCharacter_O val -> 1671
      return (kindVal == ISA_ADJUST_STAMP(1671));
  };
};
// STAMP_core__SimpleCharacterString_O
template <typename FP> struct Cast<core::SimpleCharacterString_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleCharacterString_O val -> 2095
      return (kindVal == ISA_ADJUST_STAMP(2095));
  };
};
// STAMP_kinematics__RootBondedJointTemplate_O
template <typename FP> struct Cast<kinematics::RootBondedJointTemplate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::RootBondedJointTemplate_O val -> 619
      return (kindVal == ISA_ADJUST_STAMP(619));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>> val -> 3067
      return (kindVal == ISA_ADJUST_STAMP(3067));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>> val -> 3063
      return (kindVal == ISA_ADJUST_STAMP(3063));
  };
};
// STAMP_core__Array_O
template <typename FP> struct Cast<core::Array_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Array_O low high --> 1487 2183 
      return ((ISA_ADJUST_STAMP(1487) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2183)));
  };
};
// STAMP_llvmo__Argument_O
template <typename FP> struct Cast<llvmo::Argument_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Argument_O val -> 2423
      return (kindVal == ISA_ADJUST_STAMP(2423));
  };
};
// STAMP_adapt__StringList_O
template <typename FP> struct Cast<adapt::StringList_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range adapt::StringList_O val -> 779
      return (kindVal == ISA_ADJUST_STAMP(779));
  };
};
// STAMP_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyOutOfZPlane>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyOutOfZPlane> val -> 3059
      return (kindVal == ISA_ADJUST_STAMP(3059));
  };
};
// STAMP_units__Unit_O
template <typename FP> struct Cast<units::Unit_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range units::Unit_O low high --> 771 775 
      return ((ISA_ADJUST_STAMP(771) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(775)));
  };
};
// STAMP_llvmo__TargetPassConfig_O
template <typename FP> struct Cast<llvmo::TargetPassConfig_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::TargetPassConfig_O val -> 2499
      return (kindVal == ISA_ADJUST_STAMP(2499));
  };
};
// STAMP_chem__IterateBonds_O
template <typename FP> struct Cast<chem::IterateBonds_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::IterateBonds_O val -> 1115
      return (kindVal == ISA_ADJUST_STAMP(1115));
  };
};
// STAMP_gctools__GCArray_moveable_signed_char_
template <typename FP> struct Cast<gctools::GCArray_moveable<signed char>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<signed char> val -> 3055
      return (kindVal == ISA_ADJUST_STAMP(3055));
  };
};
// STAMP_chem__CDFragment_O
template <typename FP> struct Cast<chem::CDFragment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CDFragment_O val -> 767
      return (kindVal == ISA_ADJUST_STAMP(767));
  };
};
// STAMP_gctools__GCVector_moveable_chem__EnergySketchStretch_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergySketchStretch>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergySketchStretch> val -> 3051
      return (kindVal == ISA_ADJUST_STAMP(3051));
  };
};
// STAMP_core__GlueEnvironment_O
template <typename FP> struct Cast<core::GlueEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::GlueEnvironment_O val -> 1207
      return (kindVal == ISA_ADJUST_STAMP(1207));
  };
};
// STAMP_llvmo__ReturnInst_O
template <typename FP> struct Cast<llvmo::ReturnInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ReturnInst_O val -> 2355
      return (kindVal == ISA_ADJUST_STAMP(2355));
  };
};
// STAMP_chem__MonomerContext_O
template <typename FP> struct Cast<chem::MonomerContext_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::MonomerContext_O val -> 763
      return (kindVal == ISA_ADJUST_STAMP(763));
  };
};
// STAMP_kinematics__Rotamer_O
template <typename FP> struct Cast<kinematics::Rotamer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::Rotamer_O val -> 759
      return (kindVal == ISA_ADJUST_STAMP(759));
  };
};
// STAMP_core__MDArray_byte16_t_O
template <typename FP> struct Cast<core::MDArray_byte16_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_byte16_t_O val -> 1991
      return (kindVal == ISA_ADJUST_STAMP(1991));
  };
};
// STAMP_chem__Plug_O
template <typename FP> struct Cast<chem::Plug_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Plug_O low high --> 735 755 
      return ((ISA_ADJUST_STAMP(735) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(755)));
  };
};
// STAMP_chem__FFNonbondCrossTermTable_O
template <typename FP> struct Cast<chem::FFNonbondCrossTermTable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFNonbondCrossTermTable_O val -> 731
      return (kindVal == ISA_ADJUST_STAMP(731));
  };
};
// STAMP_kinematics__MonomerBaseNode_O
template <typename FP> struct Cast<kinematics::MonomerBaseNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::MonomerBaseNode_O low high --> 711 727 
      return ((ISA_ADJUST_STAMP(711) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(727)));
  };
};
// STAMP_llvmo__Type_O
template <typename FP> struct Cast<llvmo::Type_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Type_O low high --> 2463 2495 
      return ((ISA_ADJUST_STAMP(2463) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2495)));
  };
};
// STAMP_chem__StereoConfiguration_O
template <typename FP> struct Cast<chem::StereoConfiguration_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::StereoConfiguration_O val -> 707
      return (kindVal == ISA_ADJUST_STAMP(707));
  };
};
// STAMP_chem__Command_O
template <typename FP> struct Cast<chem::Command_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Command_O val -> 703
      return (kindVal == ISA_ADJUST_STAMP(703));
  };
};
// STAMP_gctools__GCVector_moveable_core__Cons_O_
template <typename FP> struct Cast<gctools::GCVector_moveable<core::Cons_O>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::Cons_O> val -> 3047
      return (kindVal == ISA_ADJUST_STAMP(3047));
  };
};
// STAMP_core__FileScope_O
template <typename FP> struct Cast<core::FileScope_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FileScope_O val -> 2627
      return (kindVal == ISA_ADJUST_STAMP(2627));
  };
};
// STAMP_adapt__StringSet_O
template <typename FP> struct Cast<adapt::StringSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range adapt::StringSet_O val -> 699
      return (kindVal == ISA_ADJUST_STAMP(699));
  };
};
// STAMP_core__SimpleMDArray_byte4_t_O
template <typename FP> struct Cast<core::SimpleMDArray_byte4_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_byte4_t_O val -> 1631
      return (kindVal == ISA_ADJUST_STAMP(1631));
  };
};
// STAMP_core__SimpleVector_int64_t_O
template <typename FP> struct Cast<core::SimpleVector_int64_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_int64_t_O val -> 2051
      return (kindVal == ISA_ADJUST_STAMP(2051));
  };
};
// STAMP_llvmo__ConstantDataSequential_O
template <typename FP> struct Cast<llvmo::ConstantDataSequential_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ConstantDataSequential_O low high --> 2403 2407 
      return ((ISA_ADJUST_STAMP(2403) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2407)));
  };
};
// STAMP_chem__SuperposeEngine_O
template <typename FP> struct Cast<chem::SuperposeEngine_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SuperposeEngine_O low high --> 691 695 
      return ((ISA_ADJUST_STAMP(691) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(695)));
  };
};
// STAMP_gctools__GCVector_moveable_chem__AtomPdbRec_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::AtomPdbRec>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::AtomPdbRec> val -> 3043
      return (kindVal == ISA_ADJUST_STAMP(3043));
  };
};
// STAMP_chem__EntityNameSet_O
template <typename FP> struct Cast<chem::EntityNameSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EntityNameSet_O low high --> 515 523 
      return ((ISA_ADJUST_STAMP(515) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(523)));
  };
};
// STAMP_chem__ResidueList_O
template <typename FP> struct Cast<chem::ResidueList_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ResidueList_O val -> 687
      return (kindVal == ISA_ADJUST_STAMP(687));
  };
};
// STAMP_llvmo__DebugLoc_O
template <typename FP> struct Cast<llvmo::DebugLoc_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DebugLoc_O val -> 1483
      return (kindVal == ISA_ADJUST_STAMP(1483));
  };
};
// STAMP_core__WeakPointer_O
template <typename FP> struct Cast<core::WeakPointer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::WeakPointer_O val -> 1479
      return (kindVal == ISA_ADJUST_STAMP(1479));
  };
};
// STAMP_core__IOFileStream_O
template <typename FP> struct Cast<core::IOFileStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::IOFileStream_O val -> 2683
      return (kindVal == ISA_ADJUST_STAMP(2683));
  };
};
// STAMP_chem__ConstitutionVirtualAtom_O
template <typename FP> struct Cast<chem::ConstitutionVirtualAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConstitutionVirtualAtom_O val -> 479
      return (kindVal == ISA_ADJUST_STAMP(479));
  };
};
// STAMP_core__RuntimeVisibleEnvironment_O
template <typename FP> struct Cast<core::RuntimeVisibleEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::RuntimeVisibleEnvironment_O low high --> 1239 1255 
      return ((ISA_ADJUST_STAMP(1239) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1255)));
  };
};
// STAMP_chem__ProperTorsion_O
template <typename FP> struct Cast<chem::ProperTorsion_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ProperTorsion_O val -> 683
      return (kindVal == ISA_ADJUST_STAMP(683));
  };
};
// STAMP_chem__IterateResidues_O
template <typename FP> struct Cast<chem::IterateResidues_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::IterateResidues_O val -> 1111
      return (kindVal == ISA_ADJUST_STAMP(1111));
  };
};
// STAMP_llvmo__Instruction_O
template <typename FP> struct Cast<llvmo::Instruction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Instruction_O low high --> 2287 2363 
      return ((ISA_ADJUST_STAMP(2287) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2363)));
  };
};
// STAMP_core__FileStream_O
template <typename FP> struct Cast<core::FileStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FileStream_O low high --> 2679 2687 
      return ((ISA_ADJUST_STAMP(2679) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2687)));
  };
};
// STAMP_core__MDArrayCharacter_O
template <typename FP> struct Cast<core::MDArrayCharacter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArrayCharacter_O val -> 1975
      return (kindVal == ISA_ADJUST_STAMP(1975));
  };
};
// STAMP_llvmo__LandingPadInst_O
template <typename FP> struct Cast<llvmo::LandingPadInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::LandingPadInst_O val -> 2351
      return (kindVal == ISA_ADJUST_STAMP(2351));
  };
};
// STAMP_kinematics__KinematicsExposer_O
template <typename FP> struct Cast<kinematics::KinematicsExposer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::KinematicsExposer_O val -> 1159
      return (kindVal == ISA_ADJUST_STAMP(1159));
  };
};
// STAMP_core__Function_O
template <typename FP> struct Cast<core::Function_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Function_O low high --> 1399 1475 
      return ((ISA_ADJUST_STAMP(1399) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1475)));
  };
};
// STAMP_kinematics__BondedJoint_O
template <typename FP> struct Cast<kinematics::BondedJoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::BondedJoint_O low high --> 227 235 
      return ((ISA_ADJUST_STAMP(227) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(235)));
  };
};
// STAMP_core__SimpleMDArray_int2_t_O
template <typename FP> struct Cast<core::SimpleMDArray_int2_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_int2_t_O val -> 1623
      return (kindVal == ISA_ADJUST_STAMP(1623));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>> val -> 3039
      return (kindVal == ISA_ADJUST_STAMP(3039));
  };
};
// STAMP_chem__StereoisomerVirtualAtom_O
template <typename FP> struct Cast<chem::StereoisomerVirtualAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::StereoisomerVirtualAtom_O val -> 587
      return (kindVal == ISA_ADJUST_STAMP(587));
  };
};
// STAMP_core__HashTableEql_O
template <typename FP> struct Cast<core::HashTableEql_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::HashTableEql_O val -> 1295
      return (kindVal == ISA_ADJUST_STAMP(1295));
  };
};
// STAMP_chem__SpanningLoop_O
template <typename FP> struct Cast<chem::SpanningLoop_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SpanningLoop_O val -> 679
      return (kindVal == ISA_ADJUST_STAMP(679));
  };
};
// STAMP_chem__PdbReader_O
template <typename FP> struct Cast<chem::PdbReader_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::PdbReader_O val -> 675
      return (kindVal == ISA_ADJUST_STAMP(675));
  };
};
// STAMP_mp__ConditionVariable_O
template <typename FP> struct Cast<mp::ConditionVariable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range mp::ConditionVariable_O val -> 671
      return (kindVal == ISA_ADJUST_STAMP(671));
  };
};
// STAMP_chem__ConformationExplorerEntry_O
template <typename FP> struct Cast<chem::ConformationExplorerEntry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConformationExplorerEntry_O val -> 667
      return (kindVal == ISA_ADJUST_STAMP(667));
  };
};
// STAMP_core__MDArray_byte8_t_O
template <typename FP> struct Cast<core::MDArray_byte8_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_byte8_t_O val -> 1547
      return (kindVal == ISA_ADJUST_STAMP(1547));
  };
};
// STAMP_kinematics__BackboneDependentRotamerSet_O
template <typename FP> struct Cast<kinematics::BackboneDependentRotamerSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::BackboneDependentRotamerSet_O val -> 67
      return (kindVal == ISA_ADJUST_STAMP(67));
  };
};
// STAMP_chem__BondListMatchNode_O
template <typename FP> struct Cast<chem::BondListMatchNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::BondListMatchNode_O low high --> 1031 1039 
      return ((ISA_ADJUST_STAMP(1031) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1039)));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>> val -> 3035
      return (kindVal == ISA_ADJUST_STAMP(3035));
  };
};
// STAMP_units__Dimension_O
template <typename FP> struct Cast<units::Dimension_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range units::Dimension_O val -> 663
      return (kindVal == ISA_ADJUST_STAMP(663));
  };
};
// STAMP_llvmo__AtomicRMWInst_O
template <typename FP> struct Cast<llvmo::AtomicRMWInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::AtomicRMWInst_O val -> 2347
      return (kindVal == ISA_ADJUST_STAMP(2347));
  };
};
// STAMP_chem__PdbMonomerConnectivity_O
template <typename FP> struct Cast<chem::PdbMonomerConnectivity_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::PdbMonomerConnectivity_O val -> 659
      return (kindVal == ISA_ADJUST_STAMP(659));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>> val -> 3031
      return (kindVal == ISA_ADJUST_STAMP(3031));
  };
};
// STAMP_llvmo__PassManager_O
template <typename FP> struct Cast<llvmo::PassManager_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::PassManager_O val -> 2271
      return (kindVal == ISA_ADJUST_STAMP(2271));
  };
};
// STAMP_core__SimpleVector_O
template <typename FP> struct Cast<core::SimpleVector_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_O val -> 2159
      return (kindVal == ISA_ADJUST_STAMP(2159));
  };
};
// STAMP_chem__PlugWithMates_O
template <typename FP> struct Cast<chem::PlugWithMates_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::PlugWithMates_O low high --> 743 751 
      return ((ISA_ADJUST_STAMP(743) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(751)));
  };
};
// STAMP_chem__Oligomer_O
template <typename FP> struct Cast<chem::Oligomer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Oligomer_O val -> 655
      return (kindVal == ISA_ADJUST_STAMP(655));
  };
};
// STAMP_adapt__ObjectSet_O
template <typename FP> struct Cast<adapt::ObjectSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range adapt::ObjectSet_O val -> 651
      return (kindVal == ISA_ADJUST_STAMP(651));
  };
};
// STAMP_core__SimpleMDArray_int64_t_O
template <typename FP> struct Cast<core::SimpleMDArray_int64_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_int64_t_O val -> 1767
      return (kindVal == ISA_ADJUST_STAMP(1767));
  };
};
// STAMP_core__SimpleString_O
template <typename FP> struct Cast<core::SimpleString_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleString_O low high --> 2079 2095 
      return ((ISA_ADJUST_STAMP(2079) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2095)));
  };
};
// STAMP_llvmo__DIVariable_O
template <typename FP> struct Cast<llvmo::DIVariable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIVariable_O low high --> 2523 2527 
      return ((ISA_ADJUST_STAMP(2523) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2527)));
  };
};
// STAMP_core__FunctionValueEnvironment_O
template <typename FP> struct Cast<core::FunctionValueEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FunctionValueEnvironment_O val -> 1251
      return (kindVal == ISA_ADJUST_STAMP(1251));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>> val -> 3027
      return (kindVal == ISA_ADJUST_STAMP(3027));
  };
};
// STAMP_core__DerivableCxxClassCreator_O
template <typename FP> struct Cast<core::DerivableCxxClassCreator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::DerivableCxxClassCreator_O val -> 1431
      return (kindVal == ISA_ADJUST_STAMP(1431));
  };
};
// STAMP_chem__Coupling_O
template <typename FP> struct Cast<chem::Coupling_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Coupling_O low high --> 639 647 
      return ((ISA_ADJUST_STAMP(639) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(647)));
  };
};
// STAMP_geom__ComplexVectorCoordinate_O
template <typename FP> struct Cast<geom::ComplexVectorCoordinate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::ComplexVectorCoordinate_O val -> 1819
      return (kindVal == ISA_ADJUST_STAMP(1819));
  };
};
// STAMP_core__ConcatenatedStream_O
template <typename FP> struct Cast<core::ConcatenatedStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ConcatenatedStream_O val -> 2675
      return (kindVal == ISA_ADJUST_STAMP(2675));
  };
};
// STAMP_gctools__GCVector_moveable_double_
template <typename FP> struct Cast<gctools::GCVector_moveable<double>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<double> val -> 3023
      return (kindVal == ISA_ADJUST_STAMP(3023));
  };
};
// STAMP_core__MacroletEnvironment_O
template <typename FP> struct Cast<core::MacroletEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MacroletEnvironment_O val -> 1235
      return (kindVal == ISA_ADJUST_STAMP(1235));
  };
};
// STAMP_kinematics__DelayedBondedJoint_O
template <typename FP> struct Cast<kinematics::DelayedBondedJoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::DelayedBondedJoint_O val -> 235
      return (kindVal == ISA_ADJUST_STAMP(235));
  };
};
// STAMP_core__Ratio_O
template <typename FP> struct Cast<core::Ratio_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Ratio_O val -> 1319
      return (kindVal == ISA_ADJUST_STAMP(1319));
  };
};
// STAMP_core__ObjectFile_O
template <typename FP> struct Cast<core::ObjectFile_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ObjectFile_O val -> 1395
      return (kindVal == ISA_ADJUST_STAMP(1395));
  };
};
// STAMP_core__ComplexVector_byte2_t_O
template <typename FP> struct Cast<core::ComplexVector_byte2_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_byte2_t_O val -> 1883
      return (kindVal == ISA_ADJUST_STAMP(1883));
  };
};
// STAMP_core__ClosureWithSlots_O
template <typename FP> struct Cast<core::ClosureWithSlots_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ClosureWithSlots_O val -> 1467
      return (kindVal == ISA_ADJUST_STAMP(1467));
  };
};
// STAMP_llvmo__ExecutionEngine_O
template <typename FP> struct Cast<llvmo::ExecutionEngine_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ExecutionEngine_O val -> 2459
      return (kindVal == ISA_ADJUST_STAMP(2459));
  };
};
// STAMP_core__ClassRepCreator_O
template <typename FP> struct Cast<core::ClassRepCreator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ClassRepCreator_O val -> 1427
      return (kindVal == ISA_ADJUST_STAMP(1427));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>> val -> 3019
      return (kindVal == ISA_ADJUST_STAMP(3019));
  };
};
// STAMP_llvmo__Attribute_O
template <typename FP> struct Cast<llvmo::Attribute_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Attribute_O val -> 1391
      return (kindVal == ISA_ADJUST_STAMP(1391));
  };
};
// STAMP_core__DerivableCxxObject_O
template <typename FP> struct Cast<core::DerivableCxxObject_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::DerivableCxxObject_O val -> 1188
      return (kindVal == ISA_ADJUST_STAMP(1188));
  };
};
// STAMP_llvmo__SwitchInst_O
template <typename FP> struct Cast<llvmo::SwitchInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::SwitchInst_O val -> 2343
      return (kindVal == ISA_ADJUST_STAMP(2343));
  };
};
// STAMP_core__SymbolToEnumConverter_O
template <typename FP> struct Cast<core::SymbolToEnumConverter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SymbolToEnumConverter_O val -> 1387
      return (kindVal == ISA_ADJUST_STAMP(1387));
  };
};
// STAMP_chem__RestrainedPiBond_O
template <typename FP> struct Cast<chem::RestrainedPiBond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RestrainedPiBond_O val -> 923
      return (kindVal == ISA_ADJUST_STAMP(923));
  };
};
// STAMP_core__NativeVector_float_O
template <typename FP> struct Cast<core::NativeVector_float_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::NativeVector_float_O val -> 635
      return (kindVal == ISA_ADJUST_STAMP(635));
  };
};
// STAMP_chem__ConformationCollection_O
template <typename FP> struct Cast<chem::ConformationCollection_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConformationCollection_O low high --> 627 631 
      return ((ISA_ADJUST_STAMP(627) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(631)));
  };
};
// STAMP_core__ComplexVector_int32_t_O
template <typename FP> struct Cast<core::ComplexVector_int32_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_int32_t_O val -> 1803
      return (kindVal == ISA_ADJUST_STAMP(1803));
  };
};
// STAMP_core__VaList_dummy_O
template <typename FP> struct Cast<core::VaList_dummy_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::VaList_dummy_O val -> 2727
      return (kindVal == ISA_ADJUST_STAMP(2727));
  };
};
// STAMP_geom__Color_O
template <typename FP> struct Cast<geom::Color_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::Color_O val -> 623
      return (kindVal == ISA_ADJUST_STAMP(623));
  };
};
// STAMP_kinematics__JointTemplate_O
template <typename FP> struct Cast<kinematics::JointTemplate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::JointTemplate_O low high --> 607 619 
      return ((ISA_ADJUST_STAMP(607) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(619)));
  };
};
// STAMP_core__FdSet_O
template <typename FP> struct Cast<core::FdSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FdSet_O val -> 1383
      return (kindVal == ISA_ADJUST_STAMP(1383));
  };
};
// STAMP_gctools__GCVector_moveable_core__CacheRecord_
template <typename FP> struct Cast<gctools::GCVector_moveable<core::CacheRecord>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::CacheRecord> val -> 3015
      return (kindVal == ISA_ADJUST_STAMP(3015));
  };
};
// STAMP_core__LogicalPathname_O
template <typename FP> struct Cast<core::LogicalPathname_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::LogicalPathname_O val -> 2639
      return (kindVal == ISA_ADJUST_STAMP(2639));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>> val -> 3011
      return (kindVal == ISA_ADJUST_STAMP(3011));
  };
};
// STAMP_core__WrappedPointer_O
template <typename FP> struct Cast<core::WrappedPointer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::WrappedPointer_O val -> 1378
      return (kindVal == ISA_ADJUST_STAMP(1378));
  };
};
// STAMP_core__SimpleVector_double_O
template <typename FP> struct Cast<core::SimpleVector_double_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_double_O val -> 2035
      return (kindVal == ISA_ADJUST_STAMP(2035));
  };
};
// STAMP_core__SimpleMDArray_byte32_t_O
template <typename FP> struct Cast<core::SimpleMDArray_byte32_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_byte32_t_O val -> 1615
      return (kindVal == ISA_ADJUST_STAMP(1615));
  };
};
// STAMP_llvmo__LLVMTargetMachine_O
template <typename FP> struct Cast<llvmo::LLVMTargetMachine_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::LLVMTargetMachine_O val -> 2443
      return (kindVal == ISA_ADJUST_STAMP(2443));
  };
};
// STAMP_core__ClassHolder_O
template <typename FP> struct Cast<core::ClassHolder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ClassHolder_O val -> 1375
      return (kindVal == ISA_ADJUST_STAMP(1375));
  };
};
// STAMP_chem__SketchFunction_O
template <typename FP> struct Cast<chem::SketchFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SketchFunction_O val -> 435
      return (kindVal == ISA_ADJUST_STAMP(435));
  };
};
// STAMP_llvmo__UnaryInstruction_O
template <typename FP> struct Cast<llvmo::UnaryInstruction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::UnaryInstruction_O low high --> 2327 2339 
      return ((ISA_ADJUST_STAMP(2327) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2339)));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>> val -> 3007
      return (kindVal == ISA_ADJUST_STAMP(3007));
  };
};
// STAMP_gctools__GCArray_moveable_unsigned_int_
template <typename FP> struct Cast<gctools::GCArray_moveable<unsigned int>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<unsigned int> val -> 3003
      return (kindVal == ISA_ADJUST_STAMP(3003));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>> val -> 2999
      return (kindVal == ISA_ADJUST_STAMP(2999));
  };
};
// STAMP_kinematics__MonomerId_O
template <typename FP> struct Cast<kinematics::MonomerId_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::MonomerId_O val -> 603
      return (kindVal == ISA_ADJUST_STAMP(603));
  };
};
// STAMP_core__MDArray_size_t_O
template <typename FP> struct Cast<core::MDArray_size_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_size_t_O val -> 1539
      return (kindVal == ISA_ADJUST_STAMP(1539));
  };
};
// STAMP_gctools__GCVector_moveable_chem__EnergyDihedral_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyDihedral>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyDihedral> val -> 2995
      return (kindVal == ISA_ADJUST_STAMP(2995));
  };
};
// STAMP_chem__PathMessage_O
template <typename FP> struct Cast<chem::PathMessage_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::PathMessage_O val -> 599
      return (kindVal == ISA_ADJUST_STAMP(599));
  };
};
// STAMP_chem__BondMatchNode_O
template <typename FP> struct Cast<chem::BondMatchNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::BondMatchNode_O low high --> 987 1027 
      return ((ISA_ADJUST_STAMP(987) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1027)));
  };
};
// STAMP_chem__EnergyRigidBodyNonbond_O
template <typename FP> struct Cast<chem::EnergyRigidBodyNonbond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyRigidBodyNonbond_O val -> 91
      return (kindVal == ISA_ADJUST_STAMP(91));
  };
};
// STAMP_core__ComplexVector_O
template <typename FP> struct Cast<core::ComplexVector_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_O low high --> 1771 1943 
      return ((ISA_ADJUST_STAMP(1771) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1943)));
  };
};
// STAMP_chem__SparseLargeSquareMatrix_O
template <typename FP> struct Cast<chem::SparseLargeSquareMatrix_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SparseLargeSquareMatrix_O val -> 367
      return (kindVal == ISA_ADJUST_STAMP(367));
  };
};
// STAMP_clbind__ClassRegistry_O
template <typename FP> struct Cast<clbind::ClassRegistry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range clbind::ClassRegistry_O val -> 1371
      return (kindVal == ISA_ADJUST_STAMP(1371));
  };
};
// STAMP_asttooling__AstVisitor_O
template <typename FP> struct Cast<asttooling::AstVisitor_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range asttooling::AstVisitor_O val -> 2739
      return (kindVal == ISA_ADJUST_STAMP(2739));
  };
};
// STAMP_chem__Isoname_O
template <typename FP> struct Cast<chem::Isoname_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Isoname_O val -> 595
      return (kindVal == ISA_ADJUST_STAMP(595));
  };
};
// STAMP_core__Record_O
template <typename FP> struct Cast<core::Record_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Record_O val -> 1367
      return (kindVal == ISA_ADJUST_STAMP(1367));
  };
};
// STAMP_gctools__GCVector_moveable_core__T_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<core::T_O *>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::T_O *> val -> 2991
      return (kindVal == ISA_ADJUST_STAMP(2991));
  };
};
// STAMP_chem__Atom_O
template <typename FP> struct Cast<chem::Atom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Atom_O low high --> 151 155 
      return ((ISA_ADJUST_STAMP(151) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(155)));
  };
};
// STAMP_core__IntArray_O
template <typename FP> struct Cast<core::IntArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::IntArray_O val -> 1363
      return (kindVal == ISA_ADJUST_STAMP(1363));
  };
};
// STAMP_chem__ZMatrix_O
template <typename FP> struct Cast<chem::ZMatrix_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ZMatrix_O val -> 591
      return (kindVal == ISA_ADJUST_STAMP(591));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>> val -> 2987
      return (kindVal == ISA_ADJUST_STAMP(2987));
  };
};
// STAMP_chem__StereoisomerAtom_O
template <typename FP> struct Cast<chem::StereoisomerAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::StereoisomerAtom_O low high --> 583 587 
      return ((ISA_ADJUST_STAMP(583) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(587)));
  };
};
// STAMP_core__SourcePosInfo_O
template <typename FP> struct Cast<core::SourcePosInfo_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SourcePosInfo_O val -> 1359
      return (kindVal == ISA_ADJUST_STAMP(1359));
  };
};
// STAMP_llvmo__BranchInst_O
template <typename FP> struct Cast<llvmo::BranchInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::BranchInst_O val -> 2323
      return (kindVal == ISA_ADJUST_STAMP(2323));
  };
};
// STAMP_llvmo__AllocaInst_O
template <typename FP> struct Cast<llvmo::AllocaInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::AllocaInst_O val -> 2335
      return (kindVal == ISA_ADJUST_STAMP(2335));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>> val -> 2983
      return (kindVal == ISA_ADJUST_STAMP(2983));
  };
};
// STAMP_chem__ZMatrixInternal_O
template <typename FP> struct Cast<chem::ZMatrixInternal_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ZMatrixInternal_O low high --> 567 579 
      return ((ISA_ADJUST_STAMP(567) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(579)));
  };
};
// STAMP_core__ComplexVector_byte8_t_O
template <typename FP> struct Cast<core::ComplexVector_byte8_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_byte8_t_O val -> 1891
      return (kindVal == ISA_ADJUST_STAMP(1891));
  };
};
// STAMP_core__HashTable_O
template <typename FP> struct Cast<core::HashTable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::HashTable_O low high --> 1279 1295 
      return ((ISA_ADJUST_STAMP(1279) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1295)));
  };
};
// STAMP_chem__ChemDraw_O
template <typename FP> struct Cast<chem::ChemDraw_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ChemDraw_O val -> 563
      return (kindVal == ISA_ADJUST_STAMP(563));
  };
};
// STAMP_gctools__GCArray_moveable_float_
template <typename FP> struct Cast<gctools::GCArray_moveable<float>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<float> val -> 2979
      return (kindVal == ISA_ADJUST_STAMP(2979));
  };
};
// STAMP_chem__ReportBase_O
template <typename FP> struct Cast<chem::ReportBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ReportBase_O low high --> 547 559 
      return ((ISA_ADJUST_STAMP(547) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(559)));
  };
};
// STAMP_kinematics__BackboneDependentRotamerLibrary_O
template <typename FP> struct Cast<kinematics::BackboneDependentRotamerLibrary_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::BackboneDependentRotamerLibrary_O val -> 543
      return (kindVal == ISA_ADJUST_STAMP(543));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>> val -> 2975
      return (kindVal == ISA_ADJUST_STAMP(2975));
  };
};
// STAMP_chem__EnergyChiralRestraint_O
template <typename FP> struct Cast<chem::EnergyChiralRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyChiralRestraint_O val -> 103
      return (kindVal == ISA_ADJUST_STAMP(103));
  };
};
// STAMP_chem__MonomerPack_O
template <typename FP> struct Cast<chem::MonomerPack_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::MonomerPack_O val -> 523
      return (kindVal == ISA_ADJUST_STAMP(523));
  };
};
// STAMP_geom__MDArrayCoordinate_O
template <typename FP> struct Cast<geom::MDArrayCoordinate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::MDArrayCoordinate_O val -> 1587
      return (kindVal == ISA_ADJUST_STAMP(1587));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>> val -> 2971
      return (kindVal == ISA_ADJUST_STAMP(2971));
  };
};
// STAMP_chem__Structure_Old_List_O
template <typename FP> struct Cast<chem::Structure_Old_List_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Structure_Old_List_O val -> 539
      return (kindVal == ISA_ADJUST_STAMP(539));
  };
};
// STAMP_core__SimpleMDArrayBaseChar_O
template <typename FP> struct Cast<core::SimpleMDArrayBaseChar_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArrayBaseChar_O val -> 1695
      return (kindVal == ISA_ADJUST_STAMP(1695));
  };
};
// STAMP_chem__OctNode_O
template <typename FP> struct Cast<chem::OctNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::OctNode_O val -> 535
      return (kindVal == ISA_ADJUST_STAMP(535));
  };
};
// STAMP_chem__Entity_O
template <typename FP> struct Cast<chem::Entity_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Entity_O low high --> 491 531 
      return ((ISA_ADJUST_STAMP(491) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(531)));
  };
};
// STAMP_chem__AGEdge_O
template <typename FP> struct Cast<chem::AGEdge_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AGEdge_O val -> 487
      return (kindVal == ISA_ADJUST_STAMP(487));
  };
};
// STAMP_chem__ReadAmberParameters_O
template <typename FP> struct Cast<chem::ReadAmberParameters_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ReadAmberParameters_O val -> 483
      return (kindVal == ISA_ADJUST_STAMP(483));
  };
};
// STAMP_llvmo__DILocation_O
template <typename FP> struct Cast<llvmo::DILocation_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DILocation_O val -> 2515
      return (kindVal == ISA_ADJUST_STAMP(2515));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>> val -> 2967
      return (kindVal == ISA_ADJUST_STAMP(2967));
  };
};
// STAMP_core__SimpleMDArray_O
template <typename FP> struct Cast<core::SimpleMDArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_O low high --> 1599 1767 
      return ((ISA_ADJUST_STAMP(1599) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1767)));
  };
};
// STAMP_gctools__GCVector_moveable_int_
template <typename FP> struct Cast<gctools::GCVector_moveable<int>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<int> val -> 2963
      return (kindVal == ISA_ADJUST_STAMP(2963));
  };
};
// STAMP_core__Number_O
template <typename FP> struct Cast<core::Number_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Number_O low high --> 1307 1355 
      return ((ISA_ADJUST_STAMP(1307) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1355)));
  };
};
// STAMP_core__T_O
template <typename FP> struct Cast<core::T_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::T_O low high --> 7 2727 
      return ((ISA_ADJUST_STAMP(7) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2727)));
  };
};
// STAMP_llvmo__DICompileUnit_O
template <typename FP> struct Cast<llvmo::DICompileUnit_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DICompileUnit_O val -> 2555
      return (kindVal == ISA_ADJUST_STAMP(2555));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>> val -> 2959
      return (kindVal == ISA_ADJUST_STAMP(2959));
  };
};
// STAMP_llvmo__FunctionPass_O
template <typename FP> struct Cast<llvmo::FunctionPass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::FunctionPass_O val -> 2231
      return (kindVal == ISA_ADJUST_STAMP(2231));
  };
};
// STAMP_core__SimpleVector_byte4_t_O
template <typename FP> struct Cast<core::SimpleVector_byte4_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_byte4_t_O val -> 2067
      return (kindVal == ISA_ADJUST_STAMP(2067));
  };
};
// STAMP_gctools__GCBitUnitArray_moveable_2_1_
template <typename FP> struct Cast<gctools::GCBitUnitArray_moveable<2,1>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCBitUnitArray_moveable<2,1> val -> 2955
      return (kindVal == ISA_ADJUST_STAMP(2955));
  };
};
// STAMP_chem__ConstitutionAtom_O
template <typename FP> struct Cast<chem::ConstitutionAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConstitutionAtom_O low high --> 475 479 
      return ((ISA_ADJUST_STAMP(475) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(479)));
  };
};
// STAMP_llvmo__CallBase_O
template <typename FP> struct Cast<llvmo::CallBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::CallBase_O low high --> 2311 2319 
      return ((ISA_ADJUST_STAMP(2311) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2319)));
  };
};
// STAMP_core__CompileTimeEnvironment_O
template <typename FP> struct Cast<core::CompileTimeEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::CompileTimeEnvironment_O low high --> 1215 1235 
      return ((ISA_ADJUST_STAMP(1215) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1235)));
  };
};
// STAMP_mp__SharedMutex_O
template <typename FP> struct Cast<mp::SharedMutex_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range mp::SharedMutex_O val -> 471
      return (kindVal == ISA_ADJUST_STAMP(471));
  };
};
// STAMP_gctools__GCBitUnitArray_moveable_1_0_
template <typename FP> struct Cast<gctools::GCBitUnitArray_moveable<1,0>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCBitUnitArray_moveable<1,0> val -> 2951
      return (kindVal == ISA_ADJUST_STAMP(2951));
  };
};
// STAMP_adapt__QDomNode_O
template <typename FP> struct Cast<adapt::QDomNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range adapt::QDomNode_O val -> 467
      return (kindVal == ISA_ADJUST_STAMP(467));
  };
};
// STAMP_core__InstanceCreator_O
template <typename FP> struct Cast<core::InstanceCreator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::InstanceCreator_O val -> 1423
      return (kindVal == ISA_ADJUST_STAMP(1423));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>> val -> 2947
      return (kindVal == ISA_ADJUST_STAMP(2947));
  };
};
// STAMP_chem__BondToAtomTest_O
template <typename FP> struct Cast<chem::BondToAtomTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::BondToAtomTest_O val -> 1023
      return (kindVal == ISA_ADJUST_STAMP(1023));
  };
};
// STAMP_chem__FFAngleDb_O
template <typename FP> struct Cast<chem::FFAngleDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFAngleDb_O val -> 391
      return (kindVal == ISA_ADJUST_STAMP(391));
  };
};
// STAMP_chem__FFTypeRule_O
template <typename FP> struct Cast<chem::FFTypeRule_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFTypeRule_O val -> 463
      return (kindVal == ISA_ADJUST_STAMP(463));
  };
};
// STAMP_llvmo__InsertPoint_O
template <typename FP> struct Cast<llvmo::InsertPoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::InsertPoint_O val -> 1303
      return (kindVal == ISA_ADJUST_STAMP(1303));
  };
};
// STAMP_core__StrWNs_O
template <typename FP> struct Cast<core::StrWNs_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::StrWNs_O val -> 1927
      return (kindVal == ISA_ADJUST_STAMP(1927));
  };
};
// STAMP_chem__Structure_Old_ListEntry_O
template <typename FP> struct Cast<chem::Structure_Old_ListEntry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Structure_Old_ListEntry_O val -> 459
      return (kindVal == ISA_ADJUST_STAMP(459));
  };
};
// STAMP_chem__EnergyRigidBodyStaple_O
template <typename FP> struct Cast<chem::EnergyRigidBodyStaple_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyRigidBodyStaple_O val -> 87
      return (kindVal == ISA_ADJUST_STAMP(87));
  };
};
// STAMP_core__EchoStream_O
template <typename FP> struct Cast<core::EchoStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::EchoStream_O val -> 2671
      return (kindVal == ISA_ADJUST_STAMP(2671));
  };
};
// STAMP_core__HashTableBase_O
template <typename FP> struct Cast<core::HashTableBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::HashTableBase_O low high --> 1275 1299 
      return ((ISA_ADJUST_STAMP(1275) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1299)));
  };
};
// STAMP_core__MDArrayBit_O
template <typename FP> struct Cast<core::MDArrayBit_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArrayBit_O val -> 1983
      return (kindVal == ISA_ADJUST_STAMP(1983));
  };
};
// STAMP_core__ComplexVector_byte16_t_O
template <typename FP> struct Cast<core::ComplexVector_byte16_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_byte16_t_O val -> 1811
      return (kindVal == ISA_ADJUST_STAMP(1811));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>> val -> 2943
      return (kindVal == ISA_ADJUST_STAMP(2943));
  };
};
// STAMP_chem__FFStretchDb_O
template <typename FP> struct Cast<chem::FFStretchDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFStretchDb_O val -> 387
      return (kindVal == ISA_ADJUST_STAMP(387));
  };
};
// STAMP_geom__OVector2_O
template <typename FP> struct Cast<geom::OVector2_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::OVector2_O val -> 455
      return (kindVal == ISA_ADJUST_STAMP(455));
  };
};
// STAMP_llvmo__DILocalScope_O
template <typename FP> struct Cast<llvmo::DILocalScope_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DILocalScope_O low high --> 2539 2551 
      return ((ISA_ADJUST_STAMP(2539) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2551)));
  };
};
// STAMP_geom__OVector3_O
template <typename FP> struct Cast<geom::OVector3_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::OVector3_O val -> 451
      return (kindVal == ISA_ADJUST_STAMP(451));
  };
};
// STAMP_gctools__GCBitUnitArray_moveable_2_0_
template <typename FP> struct Cast<gctools::GCBitUnitArray_moveable<2,0>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCBitUnitArray_moveable<2,0> val -> 2939
      return (kindVal == ISA_ADJUST_STAMP(2939));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>> val -> 2935
      return (kindVal == ISA_ADJUST_STAMP(2935));
  };
};
// STAMP_llvmo__DILexicalBlock_O
template <typename FP> struct Cast<llvmo::DILexicalBlock_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DILexicalBlock_O val -> 2551
      return (kindVal == ISA_ADJUST_STAMP(2551));
  };
};
// STAMP_llvmo__DITypeRefArray_O
template <typename FP> struct Cast<llvmo::DITypeRefArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DITypeRefArray_O val -> 447
      return (kindVal == ISA_ADJUST_STAMP(447));
  };
};
// STAMP_chem__RestraintAnchor_O
template <typename FP> struct Cast<chem::RestraintAnchor_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RestraintAnchor_O val -> 299
      return (kindVal == ISA_ADJUST_STAMP(299));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>> val -> 2931
      return (kindVal == ISA_ADJUST_STAMP(2931));
  };
};
// STAMP_chem__InPlug_O
template <typename FP> struct Cast<chem::InPlug_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::InPlug_O val -> 747
      return (kindVal == ISA_ADJUST_STAMP(747));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>> val -> 2927
      return (kindVal == ISA_ADJUST_STAMP(2927));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>> val -> 2923
      return (kindVal == ISA_ADJUST_STAMP(2923));
  };
};
// STAMP_llvmo__ModulePass_O
template <typename FP> struct Cast<llvmo::ModulePass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ModulePass_O low high --> 2219 2227 
      return ((ISA_ADJUST_STAMP(2219) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2227)));
  };
};
// STAMP_chem__DirectionalCoupling_O
template <typename FP> struct Cast<chem::DirectionalCoupling_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::DirectionalCoupling_O val -> 647
      return (kindVal == ISA_ADJUST_STAMP(647));
  };
};
// STAMP_llvmo__DILocalVariable_O
template <typename FP> struct Cast<llvmo::DILocalVariable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DILocalVariable_O val -> 2527
      return (kindVal == ISA_ADJUST_STAMP(2527));
  };
};
// STAMP_llvmo__TargetLibraryInfoWrapperPass_O
template <typename FP> struct Cast<llvmo::TargetLibraryInfoWrapperPass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::TargetLibraryInfoWrapperPass_O val -> 2227
      return (kindVal == ISA_ADJUST_STAMP(2227));
  };
};
// STAMP_llvmo__User_O
template <typename FP> struct Cast<llvmo::User_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::User_O low high --> 2283 2419 
      return ((ISA_ADJUST_STAMP(2283) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2419)));
  };
};
// STAMP_core__MDArray_int16_t_O
template <typename FP> struct Cast<core::MDArray_int16_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_int16_t_O val -> 1499
      return (kindVal == ISA_ADJUST_STAMP(1499));
  };
};
// STAMP_chem__ZMatrixDihedralInternal_O
template <typename FP> struct Cast<chem::ZMatrixDihedralInternal_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ZMatrixDihedralInternal_O val -> 575
      return (kindVal == ISA_ADJUST_STAMP(575));
  };
};
// STAMP_chem__ForceMatchReport_O
template <typename FP> struct Cast<chem::ForceMatchReport_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ForceMatchReport_O val -> 559
      return (kindVal == ISA_ADJUST_STAMP(559));
  };
};
// STAMP_llvmo__FenceInst_O
template <typename FP> struct Cast<llvmo::FenceInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::FenceInst_O val -> 2307
      return (kindVal == ISA_ADJUST_STAMP(2307));
  };
};
// STAMP_chem__WildElementDict_O
template <typename FP> struct Cast<chem::WildElementDict_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::WildElementDict_O val -> 443
      return (kindVal == ISA_ADJUST_STAMP(443));
  };
};
// STAMP_chem__Chain_O
template <typename FP> struct Cast<chem::Chain_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Chain_O val -> 1035
      return (kindVal == ISA_ADJUST_STAMP(1035));
  };
};
// STAMP_llvmo__AtomicCmpXchgInst_O
template <typename FP> struct Cast<llvmo::AtomicCmpXchgInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::AtomicCmpXchgInst_O val -> 2303
      return (kindVal == ISA_ADJUST_STAMP(2303));
  };
};
// STAMP_core__ComplexVector_int8_t_O
template <typename FP> struct Cast<core::ComplexVector_int8_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_int8_t_O val -> 1787
      return (kindVal == ISA_ADJUST_STAMP(1787));
  };
};
// STAMP_core__SimpleMDArray_double_O
template <typename FP> struct Cast<core::SimpleMDArray_double_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_double_O val -> 1711
      return (kindVal == ISA_ADJUST_STAMP(1711));
  };
};
// STAMP_chem__ScoringFunction_O
template <typename FP> struct Cast<chem::ScoringFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ScoringFunction_O low high --> 427 439 
      return ((ISA_ADJUST_STAMP(427) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(439)));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>> val -> 2919
      return (kindVal == ISA_ADJUST_STAMP(2919));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>> val -> 2915
      return (kindVal == ISA_ADJUST_STAMP(2915));
  };
};
// STAMP_llvmo__ConstantPointerNull_O
template <typename FP> struct Cast<llvmo::ConstantPointerNull_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ConstantPointerNull_O val -> 2399
      return (kindVal == ISA_ADJUST_STAMP(2399));
  };
};
// STAMP_llvmo__VectorType_O
template <typename FP> struct Cast<llvmo::VectorType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::VectorType_O val -> 2491
      return (kindVal == ISA_ADJUST_STAMP(2491));
  };
};
// STAMP_chem__FFStretch_O
template <typename FP> struct Cast<chem::FFStretch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFStretch_O val -> 263
      return (kindVal == ISA_ADJUST_STAMP(263));
  };
};
// STAMP_chem__IterateRestraints_O
template <typename FP> struct Cast<chem::IterateRestraints_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::IterateRestraints_O val -> 1095
      return (kindVal == ISA_ADJUST_STAMP(1095));
  };
};
// STAMP_chem__EnergySketchNonbond_O
template <typename FP> struct Cast<chem::EnergySketchNonbond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergySketchNonbond_O val -> 99
      return (kindVal == ISA_ADJUST_STAMP(99));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>> val -> 2911
      return (kindVal == ISA_ADJUST_STAMP(2911));
  };
};
// STAMP_core__RandomState_O
template <typename FP> struct Cast<core::RandomState_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::RandomState_O val -> 1271
      return (kindVal == ISA_ADJUST_STAMP(1271));
  };
};
// STAMP_core__SimpleVector_int2_t_O
template <typename FP> struct Cast<core::SimpleVector_int2_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_int2_t_O val -> 2043
      return (kindVal == ISA_ADJUST_STAMP(2043));
  };
};
// STAMP_chem__AtomReferenceBase_O
template <typename FP> struct Cast<chem::AtomReferenceBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AtomReferenceBase_O low high --> 419 423 
      return ((ISA_ADJUST_STAMP(419) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(423)));
  };
};
// STAMP_core__MDArray_byte64_t_O
template <typename FP> struct Cast<core::MDArray_byte64_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_byte64_t_O val -> 1579
      return (kindVal == ISA_ADJUST_STAMP(1579));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>> val -> 2907
      return (kindVal == ISA_ADJUST_STAMP(2907));
  };
};
// STAMP_chem__ForceField_O
template <typename FP> struct Cast<chem::ForceField_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ForceField_O val -> 415
      return (kindVal == ISA_ADJUST_STAMP(415));
  };
};
// STAMP_core__SimpleVector_fixnum_O
template <typename FP> struct Cast<core::SimpleVector_fixnum_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_fixnum_O val -> 2143
      return (kindVal == ISA_ADJUST_STAMP(2143));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>> val -> 2903
      return (kindVal == ISA_ADJUST_STAMP(2903));
  };
};
// STAMP_core__AnsiStream_O
template <typename FP> struct Cast<core::AnsiStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::AnsiStream_O low high --> 2651 2695 
      return ((ISA_ADJUST_STAMP(2651) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2695)));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>> val -> 2899
      return (kindVal == ISA_ADJUST_STAMP(2899));
  };
};
// STAMP_core__BuiltinClosure_O
template <typename FP> struct Cast<core::BuiltinClosure_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::BuiltinClosure_O low high --> 1459 1463 
      return ((ISA_ADJUST_STAMP(1459) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1463)));
  };
};
// STAMP_core__Environment_O
template <typename FP> struct Cast<core::Environment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Environment_O low high --> 1203 1267 
      return ((ISA_ADJUST_STAMP(1203) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1267)));
  };
};
// STAMP_core__CxxMethodFunction_O
template <typename FP> struct Cast<core::CxxMethodFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::CxxMethodFunction_O val -> 1455
      return (kindVal == ISA_ADJUST_STAMP(1455));
  };
};
// STAMP_chem__AGVertex_O
template <typename FP> struct Cast<chem::AGVertex_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AGVertex_O val -> 411
      return (kindVal == ISA_ADJUST_STAMP(411));
  };
};
// STAMP_core__UnwindProtectEnvironment_O
template <typename FP> struct Cast<core::UnwindProtectEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::UnwindProtectEnvironment_O val -> 1231
      return (kindVal == ISA_ADJUST_STAMP(1231));
  };
};
// STAMP_clasp_ffi__ForeignData_O
template <typename FP> struct Cast<clasp_ffi::ForeignData_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range clasp_ffi::ForeignData_O val -> 39
      return (kindVal == ISA_ADJUST_STAMP(39));
  };
};
// STAMP_llvmo__CallInst_O
template <typename FP> struct Cast<llvmo::CallInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::CallInst_O val -> 2315
      return (kindVal == ISA_ADJUST_STAMP(2315));
  };
};
// STAMP_chem__AfterMatchBondToAtomTest_O
template <typename FP> struct Cast<chem::AfterMatchBondToAtomTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AfterMatchBondToAtomTest_O val -> 1047
      return (kindVal == ISA_ADJUST_STAMP(1047));
  };
};
// STAMP_chem__OligomerPart_Link_O
template <typename FP> struct Cast<chem::OligomerPart_Link_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::OligomerPart_Link_O val -> 335
      return (kindVal == ISA_ADJUST_STAMP(335));
  };
};
// STAMP_gctools__GCVector_moveable_chem__EnergyImproperRestraint_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyImproperRestraint>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyImproperRestraint> val -> 2895
      return (kindVal == ISA_ADJUST_STAMP(2895));
  };
};
// STAMP_adapt__AdaptExposer_O
template <typename FP> struct Cast<adapt::AdaptExposer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range adapt::AdaptExposer_O val -> 1155
      return (kindVal == ISA_ADJUST_STAMP(1155));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>> val -> 2891
      return (kindVal == ISA_ADJUST_STAMP(2891));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>> val -> 2887
      return (kindVal == ISA_ADJUST_STAMP(2887));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>> val -> 2883
      return (kindVal == ISA_ADJUST_STAMP(2883));
  };
};
// STAMP_core__StringStream_O
template <typename FP> struct Cast<core::StringStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::StringStream_O low high --> 2659 2667 
      return ((ISA_ADJUST_STAMP(2659) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2667)));
  };
};
// STAMP_core__Sigset_O
template <typename FP> struct Cast<core::Sigset_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Sigset_O val -> 1199
      return (kindVal == ISA_ADJUST_STAMP(1199));
  };
};
// STAMP_llvmo__IntegerType_O
template <typename FP> struct Cast<llvmo::IntegerType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::IntegerType_O val -> 2471
      return (kindVal == ISA_ADJUST_STAMP(2471));
  };
};
// STAMP_core__MDArray_int64_t_O
template <typename FP> struct Cast<core::MDArray_int64_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_int64_t_O val -> 1951
      return (kindVal == ISA_ADJUST_STAMP(1951));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>> val -> 2879
      return (kindVal == ISA_ADJUST_STAMP(2879));
  };
};
// STAMP_llvmo__PassManagerBuilder_O
template <typename FP> struct Cast<llvmo::PassManagerBuilder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::PassManagerBuilder_O val -> 2455
      return (kindVal == ISA_ADJUST_STAMP(2455));
  };
};
// STAMP_core__MDArray_int8_t_O
template <typename FP> struct Cast<core::MDArray_int8_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_int8_t_O val -> 1507
      return (kindVal == ISA_ADJUST_STAMP(1507));
  };
};
// STAMP_chem__ZMatrixBondInternal_O
template <typename FP> struct Cast<chem::ZMatrixBondInternal_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ZMatrixBondInternal_O val -> 571
      return (kindVal == ISA_ADJUST_STAMP(571));
  };
};
// STAMP_llvmo__ConstantFP_O
template <typename FP> struct Cast<llvmo::ConstantFP_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ConstantFP_O val -> 2395
      return (kindVal == ISA_ADJUST_STAMP(2395));
  };
};
// STAMP_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyAnchorRestraint> val -> 2875
      return (kindVal == ISA_ADJUST_STAMP(2875));
  };
};
// STAMP_core__SingleDispatchMethodFunction_O
template <typename FP> struct Cast<core::SingleDispatchMethodFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SingleDispatchMethodFunction_O low high --> 1451 1455 
      return ((ISA_ADJUST_STAMP(1451) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1455)));
  };
};
// STAMP_gctools__GCArray_moveable_Vector3_
template <typename FP> struct Cast<gctools::GCArray_moveable<Vector3>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<Vector3> val -> 2871
      return (kindVal == ISA_ADJUST_STAMP(2871));
  };
};
// STAMP_core__Cons_O
template <typename FP> struct Cast<core::Cons_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Cons_O val -> 2723
      return (kindVal == ISA_ADJUST_STAMP(2723));
  };
};
// STAMP_chem__Constitution_O
template <typename FP> struct Cast<chem::Constitution_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Constitution_O val -> 527
      return (kindVal == ISA_ADJUST_STAMP(527));
  };
};
// STAMP_llvmo__LLVMContext_O
template <typename FP> struct Cast<llvmo::LLVMContext_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::LLVMContext_O val -> 2451
      return (kindVal == ISA_ADJUST_STAMP(2451));
  };
};
// STAMP_chem__EntityNameSetBase_O
template <typename FP> struct Cast<chem::EntityNameSetBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EntityNameSetBase_O low high --> 499 523 
      return ((ISA_ADJUST_STAMP(499) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(523)));
  };
};
// STAMP_core__MDArray_int4_t_O
template <typename FP> struct Cast<core::MDArray_int4_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_int4_t_O val -> 1999
      return (kindVal == ISA_ADJUST_STAMP(1999));
  };
};
// STAMP_chem__FFBaseDb_O
template <typename FP> struct Cast<chem::FFBaseDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFBaseDb_O low high --> 375 407 
      return ((ISA_ADJUST_STAMP(375) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(407)));
  };
};
// STAMP_chem__AbstractLargeSquareMatrix_O
template <typename FP> struct Cast<chem::AbstractLargeSquareMatrix_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AbstractLargeSquareMatrix_O low high --> 363 371 
      return ((ISA_ADJUST_STAMP(363) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(371)));
  };
};
// STAMP_core__General_O
template <typename FP> struct Cast<core::General_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::General_O low high --> 15 2719 
      return ((ISA_ADJUST_STAMP(15) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2719)));
  };
};
// STAMP_core__Closure_O
template <typename FP> struct Cast<core::Closure_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Closure_O low high --> 1443 1475 
      return ((ISA_ADJUST_STAMP(1443) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1475)));
  };
};
// STAMP_core__ComplexVector_size_t_O
template <typename FP> struct Cast<core::ComplexVector_size_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_size_t_O val -> 1875
      return (kindVal == ISA_ADJUST_STAMP(1875));
  };
};
// STAMP_chem__RestraintAngle_O
template <typename FP> struct Cast<chem::RestraintAngle_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RestraintAngle_O val -> 295
      return (kindVal == ISA_ADJUST_STAMP(295));
  };
};
// STAMP_chem__CandoDatabase_O
template <typename FP> struct Cast<chem::CandoDatabase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CandoDatabase_O val -> 359
      return (kindVal == ISA_ADJUST_STAMP(359));
  };
};
// STAMP_core__BlockEnvironment_O
template <typename FP> struct Cast<core::BlockEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::BlockEnvironment_O val -> 1247
      return (kindVal == ISA_ADJUST_STAMP(1247));
  };
};
// STAMP_mpip__Mpi_O
template <typename FP> struct Cast<mpip::Mpi_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range mpip::Mpi_O val -> 1195
      return (kindVal == ISA_ADJUST_STAMP(1195));
  };
};
// STAMP_llvmo__ConstantDataArray_O
template <typename FP> struct Cast<llvmo::ConstantDataArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ConstantDataArray_O val -> 2407
      return (kindVal == ISA_ADJUST_STAMP(2407));
  };
};
// STAMP_core__Instance_O
template <typename FP> struct Cast<core::Instance_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Instance_O low high --> 1181 1188 
      if ((ISA_ADJUST_STAMP(1181) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1188))) return true;
      return (dynamic_cast<core::Instance_O*>(client)!=NULL);
  };
};
// STAMP_chem__MessageReport_O
template <typename FP> struct Cast<chem::MessageReport_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::MessageReport_O val -> 555
      return (kindVal == ISA_ADJUST_STAMP(555));
  };
};
// STAMP_core__SmallMap_O
template <typename FP> struct Cast<core::SmallMap_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SmallMap_O val -> 1179
      return (kindVal == ISA_ADJUST_STAMP(1179));
  };
};
// STAMP_clasp_ffi__ForeignTypeSpec_O
template <typename FP> struct Cast<clasp_ffi::ForeignTypeSpec_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range clasp_ffi::ForeignTypeSpec_O val -> 1175
      return (kindVal == ISA_ADJUST_STAMP(1175));
  };
};
// STAMP_core__Unused_dummy_O
template <typename FP> struct Cast<core::Unused_dummy_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Unused_dummy_O val -> 11
      return (kindVal == ISA_ADJUST_STAMP(11));
  };
};
// STAMP_core__PosixTimeDuration_O
template <typename FP> struct Cast<core::PosixTimeDuration_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::PosixTimeDuration_O val -> 1171
      return (kindVal == ISA_ADJUST_STAMP(1171));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>> val -> 2867
      return (kindVal == ISA_ADJUST_STAMP(2867));
  };
};
// STAMP_chem__EnergyOutOfZPlane_O
template <typename FP> struct Cast<chem::EnergyOutOfZPlane_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyOutOfZPlane_O val -> 95
      return (kindVal == ISA_ADJUST_STAMP(95));
  };
};
// STAMP_core__HashTableEqual_O
template <typename FP> struct Cast<core::HashTableEqual_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::HashTableEqual_O val -> 1291
      return (kindVal == ISA_ADJUST_STAMP(1291));
  };
};
// STAMP_llvmo__Triple_O
template <typename FP> struct Cast<llvmo::Triple_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Triple_O val -> 2447
      return (kindVal == ISA_ADJUST_STAMP(2447));
  };
};
// STAMP_core__SimpleMDArray_byte64_t_O
template <typename FP> struct Cast<core::SimpleMDArray_byte64_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_byte64_t_O val -> 1703
      return (kindVal == ISA_ADJUST_STAMP(1703));
  };
};
// STAMP_geom__GeomExposer_O
template <typename FP> struct Cast<geom::GeomExposer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::GeomExposer_O val -> 1151
      return (kindVal == ISA_ADJUST_STAMP(1151));
  };
};
// STAMP_core__CoreExposer_O
template <typename FP> struct Cast<core::CoreExposer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::CoreExposer_O val -> 1147
      return (kindVal == ISA_ADJUST_STAMP(1147));
  };
};
// STAMP_chem__EnergyRigidBodyComponent_O
template <typename FP> struct Cast<chem::EnergyRigidBodyComponent_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyRigidBodyComponent_O low high --> 83 91 
      return ((ISA_ADJUST_STAMP(83) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(91)));
  };
};
// STAMP_core__BitVectorNs_O
template <typename FP> struct Cast<core::BitVectorNs_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::BitVectorNs_O val -> 1907
      return (kindVal == ISA_ADJUST_STAMP(1907));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>> val -> 2863
      return (kindVal == ISA_ADJUST_STAMP(2863));
  };
};
// STAMP_gctools__GCVector_moveable_chem__KeyEntry_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::KeyEntry>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::KeyEntry> val -> 2859
      return (kindVal == ISA_ADJUST_STAMP(2859));
  };
};
// STAMP_gctools__GCVector_moveable_core__KeywordArgument_
template <typename FP> struct Cast<gctools::GCVector_moveable<core::KeywordArgument>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::KeywordArgument> val -> 2855
      return (kindVal == ISA_ADJUST_STAMP(2855));
  };
};
// STAMP_kinematics__AggregateNode_O
template <typename FP> struct Cast<kinematics::AggregateNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::AggregateNode_O val -> 715
      return (kindVal == ISA_ADJUST_STAMP(715));
  };
};
// STAMP_llvmo__TargetMachine_O
template <typename FP> struct Cast<llvmo::TargetMachine_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::TargetMachine_O low high --> 2439 2443 
      return ((ISA_ADJUST_STAMP(2439) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2443)));
  };
};
// STAMP_llvmo__ThreadSafeContext_O
template <typename FP> struct Cast<llvmo::ThreadSafeContext_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ThreadSafeContext_O val -> 2435
      return (kindVal == ISA_ADJUST_STAMP(2435));
  };
};
// STAMP_llvmo__Value_O
template <typename FP> struct Cast<llvmo::Value_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Value_O low high --> 2279 2431 
      return ((ISA_ADJUST_STAMP(2279) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2431)));
  };
};
// STAMP_chem__Bond_O
template <typename FP> struct Cast<chem::Bond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Bond_O val -> 355
      return (kindVal == ISA_ADJUST_STAMP(355));
  };
};
// STAMP_chem__SuperposableConformationCollection_O
template <typename FP> struct Cast<chem::SuperposableConformationCollection_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SuperposableConformationCollection_O val -> 631
      return (kindVal == ISA_ADJUST_STAMP(631));
  };
};
// STAMP_units__UnitsExposer_O
template <typename FP> struct Cast<units::UnitsExposer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range units::UnitsExposer_O val -> 1143
      return (kindVal == ISA_ADJUST_STAMP(1143));
  };
};
// STAMP_chem__CoordinateSystem_O
template <typename FP> struct Cast<chem::CoordinateSystem_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CoordinateSystem_O val -> 351
      return (kindVal == ISA_ADJUST_STAMP(351));
  };
};
// STAMP_core__Serializer_O
template <typename FP> struct Cast<core::Serializer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Serializer_O val -> 347
      return (kindVal == ISA_ADJUST_STAMP(347));
  };
};
// STAMP_chem__AtomReference_O
template <typename FP> struct Cast<chem::AtomReference_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AtomReference_O val -> 423
      return (kindVal == ISA_ADJUST_STAMP(423));
  };
};
// STAMP_clbind__ClassRep_O
template <typename FP> struct Cast<clbind::ClassRep_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range clbind::ClassRep_O val -> 1185
      return (kindVal == ISA_ADJUST_STAMP(1185));
  };
};
// STAMP_gctools__GCVector_moveable_core__OptionalArgument_
template <typename FP> struct Cast<gctools::GCVector_moveable<core::OptionalArgument>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::OptionalArgument> val -> 2851
      return (kindVal == ISA_ADJUST_STAMP(2851));
  };
};
// STAMP_llvmo__ConstantInt_O
template <typename FP> struct Cast<llvmo::ConstantInt_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ConstantInt_O val -> 2391
      return (kindVal == ISA_ADJUST_STAMP(2391));
  };
};
// STAMP_core__SimpleMDArray_int16_t_O
template <typename FP> struct Cast<core::SimpleMDArray_int16_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_int16_t_O val -> 1655
      return (kindVal == ISA_ADJUST_STAMP(1655));
  };
};
// STAMP_chem__Logical_O
template <typename FP> struct Cast<chem::Logical_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Logical_O val -> 1015
      return (kindVal == ISA_ADJUST_STAMP(1015));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>> val -> 2847
      return (kindVal == ISA_ADJUST_STAMP(2847));
  };
};
// STAMP_kinematics__BondId_O
template <typename FP> struct Cast<kinematics::BondId_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::BondId_O val -> 343
      return (kindVal == ISA_ADJUST_STAMP(343));
  };
};
// STAMP_llvmo__PassManagerBase_O
template <typename FP> struct Cast<llvmo::PassManagerBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::PassManagerBase_O low high --> 2267 2275 
      return ((ISA_ADJUST_STAMP(2267) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2275)));
  };
};
// STAMP_core__Exposer_O
template <typename FP> struct Cast<core::Exposer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Exposer_O low high --> 1139 1167 
      return ((ISA_ADJUST_STAMP(1139) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1167)));
  };
};
// STAMP_llvmo__ConstantStruct_O
template <typename FP> struct Cast<llvmo::ConstantStruct_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ConstantStruct_O val -> 2387
      return (kindVal == ISA_ADJUST_STAMP(2387));
  };
};
// STAMP_core__SingleDispatchCxxEffectiveMethodFunction_O
template <typename FP> struct Cast<core::SingleDispatchCxxEffectiveMethodFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SingleDispatchCxxEffectiveMethodFunction_O val -> 1447
      return (kindVal == ISA_ADJUST_STAMP(1447));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>> val -> 2843
      return (kindVal == ISA_ADJUST_STAMP(2843));
  };
};
// STAMP_core__DirectoryIterator_O
template <typename FP> struct Cast<core::DirectoryIterator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::DirectoryIterator_O val -> 1091
      return (kindVal == ISA_ADJUST_STAMP(1091));
  };
};
// STAMP_chem__JumpPlug_O
template <typename FP> struct Cast<chem::JumpPlug_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::JumpPlug_O val -> 739
      return (kindVal == ISA_ADJUST_STAMP(739));
  };
};
// STAMP_llvmo__DISubroutineType_O
template <typename FP> struct Cast<llvmo::DISubroutineType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DISubroutineType_O val -> 2571
      return (kindVal == ISA_ADJUST_STAMP(2571));
  };
};
// STAMP_kinematics__JumpJoint_O
template <typename FP> struct Cast<kinematics::JumpJoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::JumpJoint_O low high --> 219 223 
      return ((ISA_ADJUST_STAMP(219) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(223)));
  };
};
// STAMP_core__SimpleBitVector_O
template <typename FP> struct Cast<core::SimpleBitVector_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleBitVector_O val -> 2119
      return (kindVal == ISA_ADJUST_STAMP(2119));
  };
};
// STAMP_core__FunctionContainerEnvironment_O
template <typename FP> struct Cast<core::FunctionContainerEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FunctionContainerEnvironment_O val -> 1227
      return (kindVal == ISA_ADJUST_STAMP(1227));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>> val -> 2839
      return (kindVal == ISA_ADJUST_STAMP(2839));
  };
};
// STAMP_chem__OligomerPart_Base_O
template <typename FP> struct Cast<chem::OligomerPart_Base_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::OligomerPart_Base_O low high --> 331 339 
      return ((ISA_ADJUST_STAMP(331) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(339)));
  };
};
// STAMP_chem__CDNode_O
template <typename FP> struct Cast<chem::CDNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CDNode_O val -> 327
      return (kindVal == ISA_ADJUST_STAMP(327));
  };
};
// STAMP_llvmo__ResumeInst_O
template <typename FP> struct Cast<llvmo::ResumeInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ResumeInst_O val -> 2299
      return (kindVal == ISA_ADJUST_STAMP(2299));
  };
};
// STAMP_llvmo__Function_O
template <typename FP> struct Cast<llvmo::Function_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Function_O val -> 2375
      return (kindVal == ISA_ADJUST_STAMP(2375));
  };
};
// STAMP_chem__AddIonOctree_O
template <typename FP> struct Cast<chem::AddIonOctree_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AddIonOctree_O val -> 323
      return (kindVal == ISA_ADJUST_STAMP(323));
  };
};
// STAMP_chem__StereoInformation_O
template <typename FP> struct Cast<chem::StereoInformation_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::StereoInformation_O val -> 319
      return (kindVal == ISA_ADJUST_STAMP(319));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>> val -> 2835
      return (kindVal == ISA_ADJUST_STAMP(2835));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>> val -> 2831
      return (kindVal == ISA_ADJUST_STAMP(2831));
  };
};
// STAMP_geom__BoundingCuboid_O
template <typename FP> struct Cast<geom::BoundingCuboid_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::BoundingCuboid_O val -> 315
      return (kindVal == ISA_ADJUST_STAMP(315));
  };
};
// STAMP_gctools__GCVector_moveable_chem__EnergyAngle_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyAngle>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyAngle> val -> 2827
      return (kindVal == ISA_ADJUST_STAMP(2827));
  };
};
// STAMP_chem__AtomIndexer_O
template <typename FP> struct Cast<chem::AtomIndexer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AtomIndexer_O val -> 311
      return (kindVal == ISA_ADJUST_STAMP(311));
  };
};
// STAMP_chem__Restraint_O
template <typename FP> struct Cast<chem::Restraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Restraint_O low high --> 283 307 
      return ((ISA_ADJUST_STAMP(283) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(307)));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>> val -> 2823
      return (kindVal == ISA_ADJUST_STAMP(2823));
  };
};
// STAMP_llvmo__IRBuilder_O
template <typename FP> struct Cast<llvmo::IRBuilder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::IRBuilder_O val -> 2251
      return (kindVal == ISA_ADJUST_STAMP(2251));
  };
};
// STAMP_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyRigidBodyStaple> val -> 2819
      return (kindVal == ISA_ADJUST_STAMP(2819));
  };
};
// STAMP_llvmo__ClaspJIT_O
template <typename FP> struct Cast<llvmo::ClaspJIT_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ClaspJIT_O val -> 1135
      return (kindVal == ISA_ADJUST_STAMP(1135));
  };
};
// STAMP_chem__FFParameter_O
template <typename FP> struct Cast<chem::FFParameter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFParameter_O low high --> 255 279 
      return ((ISA_ADJUST_STAMP(255) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(279)));
  };
};
// STAMP_core__SimpleVector_byte8_t_O
template <typename FP> struct Cast<core::SimpleVector_byte8_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_byte8_t_O val -> 2167
      return (kindVal == ISA_ADJUST_STAMP(2167));
  };
};
// STAMP_llvmo__DILexicalBlockBase_O
template <typename FP> struct Cast<llvmo::DILexicalBlockBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DILexicalBlockBase_O low high --> 2547 2551 
      return ((ISA_ADJUST_STAMP(2547) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2551)));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>> val -> 2815
      return (kindVal == ISA_ADJUST_STAMP(2815));
  };
};
// STAMP_core__ComplexVector_fixnum_O
template <typename FP> struct Cast<core::ComplexVector_fixnum_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_fixnum_O val -> 1935
      return (kindVal == ISA_ADJUST_STAMP(1935));
  };
};
// STAMP_chem__RepresentedEntityNameSet_O
template <typename FP> struct Cast<chem::RepresentedEntityNameSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RepresentedEntityNameSet_O val -> 519
      return (kindVal == ISA_ADJUST_STAMP(519));
  };
};
// STAMP_chem__MonomerCoordinates_O
template <typename FP> struct Cast<chem::MonomerCoordinates_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::MonomerCoordinates_O val -> 251
      return (kindVal == ISA_ADJUST_STAMP(251));
  };
};
// STAMP_chem__EnergyFunction_O
template <typename FP> struct Cast<chem::EnergyFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyFunction_O val -> 431
      return (kindVal == ISA_ADJUST_STAMP(431));
  };
};
// STAMP_llvmo__VAArgInst_O
template <typename FP> struct Cast<llvmo::VAArgInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::VAArgInst_O val -> 2331
      return (kindVal == ISA_ADJUST_STAMP(2331));
  };
};
// STAMP_chem__Twister_O
template <typename FP> struct Cast<chem::Twister_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Twister_O val -> 247
      return (kindVal == ISA_ADJUST_STAMP(247));
  };
};
// STAMP_core__MDArray_fixnum_O
template <typename FP> struct Cast<core::MDArray_fixnum_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_fixnum_O val -> 1563
      return (kindVal == ISA_ADJUST_STAMP(1563));
  };
};
// STAMP_core__SharpEqualWrapper_O
template <typename FP> struct Cast<core::SharpEqualWrapper_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SharpEqualWrapper_O val -> 1131
      return (kindVal == ISA_ADJUST_STAMP(1131));
  };
};
// STAMP_geom__SimpleMDArrayCoordinate_O
template <typename FP> struct Cast<geom::SimpleMDArrayCoordinate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::SimpleMDArrayCoordinate_O val -> 1735
      return (kindVal == ISA_ADJUST_STAMP(1735));
  };
};
// STAMP_llvmo__DIFile_O
template <typename FP> struct Cast<llvmo::DIFile_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIFile_O val -> 2535
      return (kindVal == ISA_ADJUST_STAMP(2535));
  };
};
// STAMP_chem__AntechamberFocusAtomMatch_O
template <typename FP> struct Cast<chem::AntechamberFocusAtomMatch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AntechamberFocusAtomMatch_O val -> 1011
      return (kindVal == ISA_ADJUST_STAMP(1011));
  };
};
// STAMP_chem__PdbMonomerDatabase_O
template <typename FP> struct Cast<chem::PdbMonomerDatabase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::PdbMonomerDatabase_O val -> 243
      return (kindVal == ISA_ADJUST_STAMP(243));
  };
};
// STAMP_chem__Aggregate_O
template <typename FP> struct Cast<chem::Aggregate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Aggregate_O val -> 147
      return (kindVal == ISA_ADJUST_STAMP(147));
  };
};
// STAMP_core__SimpleMDArray_int8_t_O
template <typename FP> struct Cast<core::SimpleMDArray_int8_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_int8_t_O val -> 1607
      return (kindVal == ISA_ADJUST_STAMP(1607));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>> val -> 2811
      return (kindVal == ISA_ADJUST_STAMP(2811));
  };
};
// STAMP_chem__SearchStatistics_O
template <typename FP> struct Cast<chem::SearchStatistics_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SearchStatistics_O val -> 239
      return (kindVal == ISA_ADJUST_STAMP(239));
  };
};
// STAMP_llvmo__EngineBuilder_O
template <typename FP> struct Cast<llvmo::EngineBuilder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::EngineBuilder_O val -> 2263
      return (kindVal == ISA_ADJUST_STAMP(2263));
  };
};
// STAMP_kinematics__Joint_O
template <typename FP> struct Cast<kinematics::Joint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::Joint_O low high --> 215 235 
      return ((ISA_ADJUST_STAMP(215) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(235)));
  };
};
// STAMP_core__TagbodyEnvironment_O
template <typename FP> struct Cast<core::TagbodyEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::TagbodyEnvironment_O val -> 1243
      return (kindVal == ISA_ADJUST_STAMP(1243));
  };
};
// STAMP_core__SpecialForm_O
template <typename FP> struct Cast<core::SpecialForm_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SpecialForm_O val -> 1439
      return (kindVal == ISA_ADJUST_STAMP(1439));
  };
};
// STAMP_chem__EnergyStretch_O
template <typename FP> struct Cast<chem::EnergyStretch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyStretch_O val -> 79
      return (kindVal == ISA_ADJUST_STAMP(79));
  };
};
// STAMP_llvmo__FunctionCallee_O
template <typename FP> struct Cast<llvmo::FunctionCallee_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::FunctionCallee_O val -> 211
      return (kindVal == ISA_ADJUST_STAMP(211));
  };
};
// STAMP_gctools__GCArray_moveable_unsigned_char_
template <typename FP> struct Cast<gctools::GCArray_moveable<unsigned char>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<unsigned char> val -> 2807
      return (kindVal == ISA_ADJUST_STAMP(2807));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>> val -> 2803
      return (kindVal == ISA_ADJUST_STAMP(2803));
  };
};
// STAMP_llvmo__DIBuilder_O
template <typename FP> struct Cast<llvmo::DIBuilder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIBuilder_O val -> 2259
      return (kindVal == ISA_ADJUST_STAMP(2259));
  };
};
// STAMP_llvmo__APInt_O
template <typename FP> struct Cast<llvmo::APInt_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::APInt_O val -> 2255
      return (kindVal == ISA_ADJUST_STAMP(2255));
  };
};
// STAMP_core__Symbol_O
template <typename FP> struct Cast<core::Symbol_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Symbol_O low high --> 1123 1127 
      return ((ISA_ADJUST_STAMP(1123) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1127)));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>> val -> 2799
      return (kindVal == ISA_ADJUST_STAMP(2799));
  };
};
// STAMP_chem__AtomOrBondMatchNode_O
template <typename FP> struct Cast<chem::AtomOrBondMatchNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AtomOrBondMatchNode_O low high --> 991 1019 
      return ((ISA_ADJUST_STAMP(991) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1019)));
  };
};
// STAMP_core__MDArray_byte4_t_O
template <typename FP> struct Cast<core::MDArray_byte4_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_byte4_t_O val -> 1523
      return (kindVal == ISA_ADJUST_STAMP(1523));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>> val -> 2795
      return (kindVal == ISA_ADJUST_STAMP(2795));
  };
};
// STAMP_core__Iterator_O
template <typename FP> struct Cast<core::Iterator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Iterator_O low high --> 1087 1119 
      return ((ISA_ADJUST_STAMP(1087) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1119)));
  };
};
// STAMP_chem__FFItorDb_O
template <typename FP> struct Cast<chem::FFItorDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFItorDb_O val -> 383
      return (kindVal == ISA_ADJUST_STAMP(383));
  };
};
// STAMP_llvmo__IRBuilderBase_O
template <typename FP> struct Cast<llvmo::IRBuilderBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::IRBuilderBase_O low high --> 2247 2251 
      return ((ISA_ADJUST_STAMP(2247) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2251)));
  };
};
// STAMP_core__Null_O
template <typename FP> struct Cast<core::Null_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Null_O val -> 1127
      return (kindVal == ISA_ADJUST_STAMP(1127));
  };
};
// STAMP_chem__RingFinder_O
template <typename FP> struct Cast<chem::RingFinder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RingFinder_O val -> 207
      return (kindVal == ISA_ADJUST_STAMP(207));
  };
};
// STAMP_core__SingleDispatchMethod_O
template <typename FP> struct Cast<core::SingleDispatchMethod_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SingleDispatchMethod_O val -> 1083
      return (kindVal == ISA_ADJUST_STAMP(1083));
  };
};
// STAMP_core__NativeVector_double_O
template <typename FP> struct Cast<core::NativeVector_double_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::NativeVector_double_O val -> 203
      return (kindVal == ISA_ADJUST_STAMP(203));
  };
};
// STAMP_core__CxxObject_O
template <typename FP> struct Cast<core::CxxObject_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::CxxObject_O low high --> 43 1079 
      return ((ISA_ADJUST_STAMP(43) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1079)));
  };
};
// STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>> val -> 2791
      return (kindVal == ISA_ADJUST_STAMP(2791));
  };
};
// STAMP_llvmo__FunctionType_O
template <typename FP> struct Cast<llvmo::FunctionType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::FunctionType_O val -> 2467
      return (kindVal == ISA_ADJUST_STAMP(2467));
  };
};
// STAMP_clbind__DummyCreator_O
template <typename FP> struct Cast<clbind::DummyCreator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range clbind::DummyCreator_O val -> 1419
      return (kindVal == ISA_ADJUST_STAMP(1419));
  };
};
// STAMP_llvmo__JITDylib_O
template <typename FP> struct Cast<llvmo::JITDylib_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::JITDylib_O val -> 2243
      return (kindVal == ISA_ADJUST_STAMP(2243));
  };
};
// STAMP_core__Pointer_O
template <typename FP> struct Cast<core::Pointer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Pointer_O low high --> 35 39 
      return ((ISA_ADJUST_STAMP(35) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(39)));
  };
};
// STAMP_llvmo__UnreachableInst_O
template <typename FP> struct Cast<llvmo::UnreachableInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::UnreachableInst_O val -> 2295
      return (kindVal == ISA_ADJUST_STAMP(2295));
  };
};
// STAMP_core__ComplexVector_int64_t_O
template <typename FP> struct Cast<core::ComplexVector_int64_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_int64_t_O val -> 1943
      return (kindVal == ISA_ADJUST_STAMP(1943));
  };
};
// STAMP_gctools__GCVector_moveable_core__SymbolClassHolderPair_
template <typename FP> struct Cast<gctools::GCVector_moveable<core::SymbolClassHolderPair>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::SymbolClassHolderPair> val -> 2787
      return (kindVal == ISA_ADJUST_STAMP(2787));
  };
};
// STAMP_chem__FFParameterBaseDb_O
template <typename FP> struct Cast<chem::FFParameterBaseDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFParameterBaseDb_O low high --> 379 399 
      return ((ISA_ADJUST_STAMP(379) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(399)));
  };
};
// STAMP_gctools__GCBitUnitArray_moveable_4_0_
template <typename FP> struct Cast<gctools::GCBitUnitArray_moveable<4,0>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCBitUnitArray_moveable<4,0> val -> 2783
      return (kindVal == ISA_ADJUST_STAMP(2783));
  };
};
// STAMP_core__Float_O
template <typename FP> struct Cast<core::Float_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Float_O low high --> 1335 1351 
      return ((ISA_ADJUST_STAMP(1335) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1351)));
  };
};
// STAMP_chem__ResidueTest_O
template <typename FP> struct Cast<chem::ResidueTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ResidueTest_O val -> 1007
      return (kindVal == ISA_ADJUST_STAMP(1007));
  };
};
// STAMP_chem__RestraintDistance_O
template <typename FP> struct Cast<chem::RestraintDistance_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RestraintDistance_O val -> 291
      return (kindVal == ISA_ADJUST_STAMP(291));
  };
};
// STAMP_chem__SmartsRoot_O
template <typename FP> struct Cast<chem::SmartsRoot_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SmartsRoot_O val -> 999
      return (kindVal == ISA_ADJUST_STAMP(999));
  };
};
// STAMP_clbind__ConstructorCreator_O
template <typename FP> struct Cast<clbind::ConstructorCreator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range clbind::ConstructorCreator_O val -> 1415
      return (kindVal == ISA_ADJUST_STAMP(1415));
  };
};
// STAMP_llvmo__DIDerivedType_O
template <typename FP> struct Cast<llvmo::DIDerivedType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIDerivedType_O val -> 2567
      return (kindVal == ISA_ADJUST_STAMP(2567));
  };
};
// STAMP_chem__TwisterDriver_O
template <typename FP> struct Cast<chem::TwisterDriver_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::TwisterDriver_O val -> 199
      return (kindVal == ISA_ADJUST_STAMP(199));
  };
};
// STAMP_core__TranslationFunctor_O
template <typename FP> struct Cast<core::TranslationFunctor_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::TranslationFunctor_O val -> 1463
      return (kindVal == ISA_ADJUST_STAMP(1463));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>> val -> 2779
      return (kindVal == ISA_ADJUST_STAMP(2779));
  };
};
// STAMP_units__NamedUnit_O
template <typename FP> struct Cast<units::NamedUnit_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range units::NamedUnit_O val -> 775
      return (kindVal == ISA_ADJUST_STAMP(775));
  };
};
// STAMP_core__MDArray_double_O
template <typename FP> struct Cast<core::MDArray_double_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_double_O val -> 2007
      return (kindVal == ISA_ADJUST_STAMP(2007));
  };
};
// STAMP_llvmo__StoreInst_O
template <typename FP> struct Cast<llvmo::StoreInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::StoreInst_O val -> 2291
      return (kindVal == ISA_ADJUST_STAMP(2291));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>> val -> 2775
      return (kindVal == ISA_ADJUST_STAMP(2775));
  };
};
// STAMP_core__SimpleMDArray_byte8_t_O
template <typename FP> struct Cast<core::SimpleMDArray_byte8_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_byte8_t_O val -> 1759
      return (kindVal == ISA_ADJUST_STAMP(1759));
  };
};
// STAMP_chem__VirtualSphere_O
template <typename FP> struct Cast<chem::VirtualSphere_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::VirtualSphere_O val -> 195
      return (kindVal == ISA_ADJUST_STAMP(195));
  };
};
// STAMP_core__Rational_O
template <typename FP> struct Cast<core::Rational_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Rational_O low high --> 1315 1331 
      return ((ISA_ADJUST_STAMP(1315) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1331)));
  };
};
// STAMP_adapt__IndexedObjectBag_O
template <typename FP> struct Cast<adapt::IndexedObjectBag_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range adapt::IndexedObjectBag_O val -> 191
      return (kindVal == ISA_ADJUST_STAMP(191));
  };
};
// STAMP_chem__CipPrioritizer_O
template <typename FP> struct Cast<chem::CipPrioritizer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CipPrioritizer_O val -> 187
      return (kindVal == ISA_ADJUST_STAMP(187));
  };
};
// STAMP_core__AtomicT_Holder_O
template <typename FP> struct Cast<core::AtomicT_Holder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::AtomicT_Holder_O val -> 31
      return (kindVal == ISA_ADJUST_STAMP(31));
  };
};
// STAMP_chem__AtomTable_O
template <typename FP> struct Cast<chem::AtomTable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AtomTable_O val -> 183
      return (kindVal == ISA_ADJUST_STAMP(183));
  };
};
// STAMP_core__Real_O
template <typename FP> struct Cast<core::Real_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Real_O low high --> 1311 1351 
      return ((ISA_ADJUST_STAMP(1311) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1351)));
  };
};
// STAMP_core__FuncallableInstanceCreator_O
template <typename FP> struct Cast<core::FuncallableInstanceCreator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FuncallableInstanceCreator_O val -> 1411
      return (kindVal == ISA_ADJUST_STAMP(1411));
  };
};
// STAMP_chem__Topology_O
template <typename FP> struct Cast<chem::Topology_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Topology_O val -> 179
      return (kindVal == ISA_ADJUST_STAMP(179));
  };
};
// STAMP_core__StringOutputStream_O
template <typename FP> struct Cast<core::StringOutputStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::StringOutputStream_O val -> 2663
      return (kindVal == ISA_ADJUST_STAMP(2663));
  };
};
// STAMP_chem__EntityNameSetWithCap_O
template <typename FP> struct Cast<chem::EntityNameSetWithCap_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EntityNameSetWithCap_O low high --> 503 511 
      return ((ISA_ADJUST_STAMP(503) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(511)));
  };
};
// STAMP_chem__BondMatcher_O
template <typename FP> struct Cast<chem::BondMatcher_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::BondMatcher_O low high --> 975 983 
      return ((ISA_ADJUST_STAMP(975) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(983)));
  };
};
// STAMP_llvmo__AttributeSet_O
template <typename FP> struct Cast<llvmo::AttributeSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::AttributeSet_O val -> 27
      return (kindVal == ISA_ADJUST_STAMP(27));
  };
};
// STAMP_llvmo__MDBuilder_O
template <typename FP> struct Cast<llvmo::MDBuilder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::MDBuilder_O val -> 175
      return (kindVal == ISA_ADJUST_STAMP(175));
  };
};
// STAMP_llvmo__DISubprogram_O
template <typename FP> struct Cast<llvmo::DISubprogram_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DISubprogram_O val -> 2543
      return (kindVal == ISA_ADJUST_STAMP(2543));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>> val -> 2771
      return (kindVal == ISA_ADJUST_STAMP(2771));
  };
};
// STAMP_chem__TrajectoryFrame_O
template <typename FP> struct Cast<chem::TrajectoryFrame_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::TrajectoryFrame_O val -> 171
      return (kindVal == ISA_ADJUST_STAMP(171));
  };
};
// STAMP_core__Creator_O
template <typename FP> struct Cast<core::Creator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Creator_O low high --> 1407 1435 
      return ((ISA_ADJUST_STAMP(1407) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1435)));
  };
};
// STAMP_llvmo__ArrayType_O
template <typename FP> struct Cast<llvmo::ArrayType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ArrayType_O val -> 2487
      return (kindVal == ISA_ADJUST_STAMP(2487));
  };
};
// STAMP_chem__PdbWriter_O
template <typename FP> struct Cast<chem::PdbWriter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::PdbWriter_O val -> 167
      return (kindVal == ISA_ADJUST_STAMP(167));
  };
};
// STAMP_chem__Stereoisomer_O
template <typename FP> struct Cast<chem::Stereoisomer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Stereoisomer_O val -> 495
      return (kindVal == ISA_ADJUST_STAMP(495));
  };
};
// STAMP_llvmo__MCSubtargetInfo_O
template <typename FP> struct Cast<llvmo::MCSubtargetInfo_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::MCSubtargetInfo_O low high --> 2235 2239 
      return ((ISA_ADJUST_STAMP(2235) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2239)));
  };
};
// STAMP_core__SimpleMDArray_byte2_t_O
template <typename FP> struct Cast<core::SimpleMDArray_byte2_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_byte2_t_O val -> 1679
      return (kindVal == ISA_ADJUST_STAMP(1679));
  };
};
// STAMP_llvmo__BlockAddress_O
template <typename FP> struct Cast<llvmo::BlockAddress_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::BlockAddress_O val -> 2383
      return (kindVal == ISA_ADJUST_STAMP(2383));
  };
};
// STAMP_llvmo__DICompositeType_O
template <typename FP> struct Cast<llvmo::DICompositeType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DICompositeType_O val -> 2563
      return (kindVal == ISA_ADJUST_STAMP(2563));
  };
};
// STAMP_gctools__GCArray_moveable_short_
template <typename FP> struct Cast<gctools::GCArray_moveable<short>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<short> val -> 2767
      return (kindVal == ISA_ADJUST_STAMP(2767));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>> val -> 2763
      return (kindVal == ISA_ADJUST_STAMP(2763));
  };
};
// STAMP_chem__Matter_O
template <typename FP> struct Cast<chem::Matter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Matter_O low high --> 143 163 
      return ((ISA_ADJUST_STAMP(143) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(163)));
  };
};
// STAMP_core__HashTableEq_O
template <typename FP> struct Cast<core::HashTableEq_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::HashTableEq_O val -> 1287
      return (kindVal == ISA_ADJUST_STAMP(1287));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>> val -> 2759
      return (kindVal == ISA_ADJUST_STAMP(2759));
  };
};
// STAMP_chem__RestraintChiral_O
template <typename FP> struct Cast<chem::RestraintChiral_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RestraintChiral_O val -> 287
      return (kindVal == ISA_ADJUST_STAMP(287));
  };
};
// STAMP_gctools__GCVector_moveable_chem__EnergyChiralRestraint_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyChiralRestraint>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyChiralRestraint> val -> 2755
      return (kindVal == ISA_ADJUST_STAMP(2755));
  };
};
// STAMP_chem__EnergyComponent_O
template <typename FP> struct Cast<chem::EnergyComponent_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyComponent_O low high --> 75 139 
      return ((ISA_ADJUST_STAMP(75) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(139)));
  };
};
// STAMP_kinematics__DelayedBondedJointTemplate_O
template <typename FP> struct Cast<kinematics::DelayedBondedJointTemplate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::DelayedBondedJointTemplate_O val -> 615
      return (kindVal == ISA_ADJUST_STAMP(615));
  };
};
// STAMP_core__HashTableEqualp_O
template <typename FP> struct Cast<core::HashTableEqualp_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::HashTableEqualp_O val -> 1283
      return (kindVal == ISA_ADJUST_STAMP(1283));
  };
};
// STAMP_core__LambdaListHandler_O
template <typename FP> struct Cast<core::LambdaListHandler_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::LambdaListHandler_O val -> 23
      return (kindVal == ISA_ADJUST_STAMP(23));
  };
};
// STAMP_kinematics__RotamerSetBase_O
template <typename FP> struct Cast<kinematics::RotamerSetBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::RotamerSetBase_O low high --> 63 71 
      return ((ISA_ADJUST_STAMP(63) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(71)));
  };
};
// STAMP_core__SymbolMacroletEnvironment_O
template <typename FP> struct Cast<core::SymbolMacroletEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SymbolMacroletEnvironment_O val -> 1223
      return (kindVal == ISA_ADJUST_STAMP(1223));
  };
};
// STAMP_chem__RestrainedExoCyclicAtom_O
template <typename FP> struct Cast<chem::RestrainedExoCyclicAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RestrainedExoCyclicAtom_O val -> 919
      return (kindVal == ISA_ADJUST_STAMP(919));
  };
};
// STAMP_llvmo__ImmutablePass_O
template <typename FP> struct Cast<llvmo::ImmutablePass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ImmutablePass_O low high --> 2223 2227 
      return ((ISA_ADJUST_STAMP(2223) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2227)));
  };
};
// STAMP_core__FuncallableInstance_O
template <typename FP> struct Cast<core::FuncallableInstance_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FuncallableInstance_O val -> 1401
      return (kindVal == ISA_ADJUST_STAMP(1401));
  };
};
// STAMP_chem__StatusTracker_O
template <typename FP> struct Cast<chem::StatusTracker_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::StatusTracker_O val -> 59
      return (kindVal == ISA_ADJUST_STAMP(59));
  };
};
// STAMP_chem__RingCoupling_O
template <typename FP> struct Cast<chem::RingCoupling_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RingCoupling_O val -> 643
      return (kindVal == ISA_ADJUST_STAMP(643));
  };
};
// STAMP_kinematics__FoldTree_O
template <typename FP> struct Cast<kinematics::FoldTree_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::FoldTree_O val -> 55
      return (kindVal == ISA_ADJUST_STAMP(55));
  };
};
// STAMP_chem__NumericalFunction_O
template <typename FP> struct Cast<chem::NumericalFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::NumericalFunction_O val -> 51
      return (kindVal == ISA_ADJUST_STAMP(51));
  };
};
// STAMP_core__SynonymStream_O
template <typename FP> struct Cast<core::SynonymStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SynonymStream_O val -> 2655
      return (kindVal == ISA_ADJUST_STAMP(2655));
  };
};
// STAMP_core__MDArray_int2_t_O
template <typename FP> struct Cast<core::MDArray_int2_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_int2_t_O val -> 1555
      return (kindVal == ISA_ADJUST_STAMP(1555));
  };
};
// STAMP_kinematics__ChiList_O
template <typename FP> struct Cast<kinematics::ChiList_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::ChiList_O val -> 47
      return (kindVal == ISA_ADJUST_STAMP(47));
  };
};
// STAMP_core__SimpleVector_int16_t_O
template <typename FP> struct Cast<core::SimpleVector_int16_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_int16_t_O val -> 2103
      return (kindVal == ISA_ADJUST_STAMP(2103));
  };
};
// STAMP_llvmo__Pass_O
template <typename FP> struct Cast<llvmo::Pass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Pass_O low high --> 2215 2231 
      return ((ISA_ADJUST_STAMP(2215) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2231)));
  };
};
// STAMP_chem__StepReport_O
template <typename FP> struct Cast<chem::StepReport_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::StepReport_O val -> 551
      return (kindVal == ISA_ADJUST_STAMP(551));
  };
};
// STAMP_kinematics__BondedJointTemplate_O
template <typename FP> struct Cast<kinematics::BondedJointTemplate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::BondedJointTemplate_O low high --> 611 619 
      return ((ISA_ADJUST_STAMP(611) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(619)));
  };
};
// STAMP_core__Lisp_O
template <typename FP> struct Cast<core::Lisp_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Lisp_O val -> 2731
      return (kindVal == ISA_ADJUST_STAMP(2731));
  };
};
// STAMP_chem__FFVdw_O
template <typename FP> struct Cast<chem::FFVdw_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFVdw_O val -> 259
      return (kindVal == ISA_ADJUST_STAMP(259));
  };
};
// STAMP_core__ComplexVector_byte4_t_O
template <typename FP> struct Cast<core::ComplexVector_byte4_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_byte4_t_O val -> 1827
      return (kindVal == ISA_ADJUST_STAMP(1827));
  };
};
// STAMP_core__CatchEnvironment_O
template <typename FP> struct Cast<core::CatchEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::CatchEnvironment_O val -> 1219
      return (kindVal == ISA_ADJUST_STAMP(1219));
  };
};
// STAMP_kinematics__RingClosingMonomerNode_O
template <typename FP> struct Cast<kinematics::RingClosingMonomerNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::RingClosingMonomerNode_O val -> 727
      return (kindVal == ISA_ADJUST_STAMP(727));
  };
};
// STAMP_llvmo__TargetSubtargetInfo_O
template <typename FP> struct Cast<llvmo::TargetSubtargetInfo_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::TargetSubtargetInfo_O val -> 2239
      return (kindVal == ISA_ADJUST_STAMP(2239));
  };
};
// STAMP_chem__Root_O
template <typename FP> struct Cast<chem::Root_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Root_O low high --> 995 1003 
      return ((ISA_ADJUST_STAMP(995) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1003)));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>> val -> 2751
      return (kindVal == ISA_ADJUST_STAMP(2751));
  };
};
// STAMP_core__Bignum_O
template <typename FP> struct Cast<core::Bignum_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Bignum_O val -> 1327
      return (kindVal == ISA_ADJUST_STAMP(1327));
  };
};
// STAMP_kinematics__RootBondedJoint_O
template <typename FP> struct Cast<kinematics::RootBondedJoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::RootBondedJoint_O val -> 231
      return (kindVal == ISA_ADJUST_STAMP(231));
  };
};
// STAMP_llvmo__SequentialType_O
template <typename FP> struct Cast<llvmo::SequentialType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::SequentialType_O low high --> 2479 2491 
      return ((ISA_ADJUST_STAMP(2479) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2491)));
  };
};
// STAMP_core__ComplexVector_byte32_t_O
template <typename FP> struct Cast<core::ComplexVector_byte32_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_byte32_t_O val -> 1899
      return (kindVal == ISA_ADJUST_STAMP(1899));
  };
};
// STAMP_llvmo__GlobalValue_O
template <typename FP> struct Cast<llvmo::GlobalValue_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::GlobalValue_O low high --> 2371 2379 
      return ((ISA_ADJUST_STAMP(2371) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2379)));
  };
};
// STAMP_llvmo__PointerType_O
template <typename FP> struct Cast<llvmo::PointerType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::PointerType_O val -> 2483
      return (kindVal == ISA_ADJUST_STAMP(2483));
  };
};
// STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>> val -> 2747
      return (kindVal == ISA_ADJUST_STAMP(2747));
  };
};
// STAMP_core__MultiStringBuffer_O
template <typename FP> struct Cast<core::MultiStringBuffer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(ClientPtrToBasePtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MultiStringBuffer_O val -> 19
      return (kindVal == ISA_ADJUST_STAMP(19));
  };
};
#endif // defined(GC_DYNAMIC_CAST)
#if defined(GC_TYPEQ)
      ADD_SINGLE_TYPEQ_TEST(core::TwoWayStream_O,TYPEQ_ADJUST_STAMP(2695));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyAngle_O,TYPEQ_ADJUST_STAMP(139));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_byte2_t_O,TYPEQ_ADJUST_STAMP(2175));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_fixnum_O,TYPEQ_ADJUST_STAMP(1743));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_int32_t_O,TYPEQ_ADJUST_STAMP(1639));
      ADD_RANGE_TYPEQ_TEST(core::Integer_O,core::Fixnum_dummy_O,TYPEQ_ADJUST_STAMP(1323),TYPEQ_ADJUST_STAMP(1331));
      ADD_SINGLE_TYPEQ_TEST(chem::OutPlug_O,TYPEQ_ADJUST_STAMP(751));
      ADD_SINGLE_TYPEQ_TEST(mp::Process_O,TYPEQ_ADJUST_STAMP(1079));
      ADD_RANGE_TYPEQ_TEST(core::LightUserData_O,core::UserData_O,TYPEQ_ADJUST_STAMP(2715),TYPEQ_ADJUST_STAMP(2719));
      ADD_SINGLE_TYPEQ_TEST(core::MDArrayT_O,TYPEQ_ADJUST_STAMP(1595));
      ADD_SINGLE_TYPEQ_TEST(core::DirectoryEntry_O,TYPEQ_ADJUST_STAMP(2711));
      ADD_SINGLE_TYPEQ_TEST(llvmo::Linker_O,TYPEQ_ADJUST_STAMP(2607));
      ADD_SINGLE_TYPEQ_TEST(chem::AtomIdToAtomMap_O,TYPEQ_ADJUST_STAMP(1075));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_float_O,TYPEQ_ADJUST_STAMP(1531));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyImproperRestraint_O,TYPEQ_ADJUST_STAMP(135));
      ADD_RANGE_TYPEQ_TEST(chem::IterateMatter_O,chem::IterateAtoms_O,TYPEQ_ADJUST_STAMP(1107),TYPEQ_ADJUST_STAMP(1119));
      ADD_SINGLE_TYPEQ_TEST(chem::FFTypesDb_O,TYPEQ_ADJUST_STAMP(407));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_float_O,TYPEQ_ADJUST_STAMP(1851));
      ADD_SINGLE_TYPEQ_TEST(core::StandardClassCreator_O,TYPEQ_ADJUST_STAMP(1435));
      ADD_SINGLE_TYPEQ_TEST(chem::Alias_O,TYPEQ_ADJUST_STAMP(1071));
      ADD_SINGLE_TYPEQ_TEST(chem::MapOfMonomerNamesToAtomIndexers_O,TYPEQ_ADJUST_STAMP(1067));
      ADD_SINGLE_TYPEQ_TEST(adapt::SymbolSet_O,TYPEQ_ADJUST_STAMP(1063));
      ADD_SINGLE_TYPEQ_TEST(chem::Minimizer_O,TYPEQ_ADJUST_STAMP(1059));
      ADD_SINGLE_TYPEQ_TEST(chem::SpecificContext_O,TYPEQ_ADJUST_STAMP(1055));
      ADD_SINGLE_TYPEQ_TEST(chem::Molecule_O,TYPEQ_ADJUST_STAMP(163));
      ADD_SINGLE_TYPEQ_TEST(core::InvocationHistoryFrameIterator_O,TYPEQ_ADJUST_STAMP(2707));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_size_t_O,TYPEQ_ADJUST_STAMP(2027));
      ADD_SINGLE_TYPEQ_TEST(kinematics::CheckpointOutPlugJoint_O,TYPEQ_ADJUST_STAMP(855));
      ADD_SINGLE_TYPEQ_TEST(chem::Dimacs_O,TYPEQ_ADJUST_STAMP(1051));
      ADD_RANGE_TYPEQ_TEST(llvmo::DIScope_O,llvmo::DIBasicType_O,TYPEQ_ADJUST_STAMP(2531),TYPEQ_ADJUST_STAMP(2575));
      ADD_SINGLE_TYPEQ_TEST(chem::FullLargeSquareMatrix_O,TYPEQ_ADJUST_STAMP(371));
      ADD_SINGLE_TYPEQ_TEST(core::FileStatus_O,TYPEQ_ADJUST_STAMP(2703));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergySketchStretch_O,TYPEQ_ADJUST_STAMP(131));
      ADD_SINGLE_TYPEQ_TEST(llvmo::IndirectBrInst_O,TYPEQ_ADJUST_STAMP(2363));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ConstantArray_O,TYPEQ_ADJUST_STAMP(2419));
      ADD_SINGLE_TYPEQ_TEST(chem::OligomerPart_Monomer_O,TYPEQ_ADJUST_STAMP(339));
      ADD_SINGLE_TYPEQ_TEST(llvmo::PHINode_O,TYPEQ_ADJUST_STAMP(2359));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyFixedNonbondRestraint_O,TYPEQ_ADJUST_STAMP(127));
      ADD_SINGLE_TYPEQ_TEST(core::Package_O,TYPEQ_ADJUST_STAMP(2699));
      ADD_SINGLE_TYPEQ_TEST(chem::AtomTest_O,TYPEQ_ADJUST_STAMP(1019));
      ADD_RANGE_TYPEQ_TEST(core::Stream_O,core::TwoWayStream_O,TYPEQ_ADJUST_STAMP(2647),TYPEQ_ADJUST_STAMP(2695));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyAnchorRestraint_O,TYPEQ_ADJUST_STAMP(123));
      ADD_SINGLE_TYPEQ_TEST(chem::FFAngle_O,TYPEQ_ADJUST_STAMP(279));
      ADD_SINGLE_TYPEQ_TEST(core::ShortFloat_O,TYPEQ_ADJUST_STAMP(1351));
      ADD_SINGLE_TYPEQ_TEST(llvmo::MDString_O,TYPEQ_ADJUST_STAMP(2587));
      ADD_SINGLE_TYPEQ_TEST(core::Cache_O,TYPEQ_ADJUST_STAMP(2643));
      ADD_RANGE_TYPEQ_TEST(core::AbstractSimpleVector_O,core::SimpleVector_int32_t_O,TYPEQ_ADJUST_STAMP(2011),TYPEQ_ADJUST_STAMP(2183));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_byte16_t_O,TYPEQ_ADJUST_STAMP(1687));
      ADD_RANGE_TYPEQ_TEST(core::Pathname_O,core::LogicalPathname_O,TYPEQ_ADJUST_STAMP(2635),TYPEQ_ADJUST_STAMP(2639));
      ADD_SINGLE_TYPEQ_TEST(core::Str8Ns_O,TYPEQ_ADJUST_STAMP(1919));
      ADD_SINGLE_TYPEQ_TEST(llvmo::UndefValue_O,TYPEQ_ADJUST_STAMP(2415));
      ADD_RANGE_TYPEQ_TEST(chem::ChemInfoNode_O,chem::AfterMatchBondToAtomTest_O,TYPEQ_ADJUST_STAMP(971),TYPEQ_ADJUST_STAMP(1047));
      ADD_SINGLE_TYPEQ_TEST(core::Path_O,TYPEQ_ADJUST_STAMP(2631));
      ADD_SINGLE_TYPEQ_TEST(chem::BoundingBox_O,TYPEQ_ADJUST_STAMP(967));
      ADD_SINGLE_TYPEQ_TEST(chem::StructureComparer_O,TYPEQ_ADJUST_STAMP(963));
      ADD_SINGLE_TYPEQ_TEST(core::IOStreamStream_O,TYPEQ_ADJUST_STAMP(2687));
      ADD_RANGE_TYPEQ_TEST(core::Scope_O,core::FileScope_O,TYPEQ_ADJUST_STAMP(2623),TYPEQ_ADJUST_STAMP(2627));
      ADD_SINGLE_TYPEQ_TEST(chem::BondLogical_O,TYPEQ_ADJUST_STAMP(983));
      ADD_SINGLE_TYPEQ_TEST(chem::MoleculeGraph_O,TYPEQ_ADJUST_STAMP(959));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_double_O,TYPEQ_ADJUST_STAMP(1779));
      ADD_SINGLE_TYPEQ_TEST(chem::Monomer_O,TYPEQ_ADJUST_STAMP(531));
      ADD_SINGLE_TYPEQ_TEST(kinematics::Conformation_O,TYPEQ_ADJUST_STAMP(955));
      ADD_SINGLE_TYPEQ_TEST(chem::ConstitutionAtoms_O,TYPEQ_ADJUST_STAMP(951));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArrayBit_O,TYPEQ_ADJUST_STAMP(1751));
      ADD_SINGLE_TYPEQ_TEST(core::AtomicFixnumHolder_O,TYPEQ_ADJUST_STAMP(2619));
      ADD_SINGLE_TYPEQ_TEST(chem::Branch_O,TYPEQ_ADJUST_STAMP(1039));
      ADD_SINGLE_TYPEQ_TEST(kinematics::ChiDihedral_O,TYPEQ_ADJUST_STAMP(947));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_int2_t_O,TYPEQ_ADJUST_STAMP(1843));
      ADD_SINGLE_TYPEQ_TEST(chem::ConstitutionBond_O,TYPEQ_ADJUST_STAMP(943));
      ADD_SINGLE_TYPEQ_TEST(chem::CDBond_O,TYPEQ_ADJUST_STAMP(939));
      ADD_SINGLE_TYPEQ_TEST(chem::CombinedForceField_O,TYPEQ_ADJUST_STAMP(935));
      ADD_RANGE_TYPEQ_TEST(mp::Mutex_O,mp::RecursiveMutex_O,TYPEQ_ADJUST_STAMP(927),TYPEQ_ADJUST_STAMP(931));
      ADD_SINGLE_TYPEQ_TEST(core::RecursiveDirectoryIterator_O,TYPEQ_ADJUST_STAMP(1103));
      ADD_SINGLE_TYPEQ_TEST(chem::RestraintDihedral_O,TYPEQ_ADJUST_STAMP(307));
      ADD_SINGLE_TYPEQ_TEST(chem::AntechamberRoot_O,TYPEQ_ADJUST_STAMP(1003));
      ADD_SINGLE_TYPEQ_TEST(core::StringInputStream_O,TYPEQ_ADJUST_STAMP(2667));
      ADD_SINGLE_TYPEQ_TEST(core::FunctionFrame_O,TYPEQ_ADJUST_STAMP(1267));
      ADD_SINGLE_TYPEQ_TEST(chem::IterateAtoms_O,TYPEQ_ADJUST_STAMP(1119));
      ADD_SINGLE_TYPEQ_TEST(core::LongFloat_O,TYPEQ_ADJUST_STAMP(1347));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_int4_t_O,TYPEQ_ADJUST_STAMP(1867));
      ADD_SINGLE_TYPEQ_TEST(chem::FFPtorDb_O,TYPEQ_ADJUST_STAMP(399));
      ADD_RANGE_TYPEQ_TEST(chem::ComplexRestraint_O,chem::RestrainedPiBond_O,TYPEQ_ADJUST_STAMP(915),TYPEQ_ADJUST_STAMP(923));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_T_O,TYPEQ_ADJUST_STAMP(1795));
      ADD_RANGE_TYPEQ_TEST(chem::RootMatchNode_O,chem::AfterMatchBondToAtomTest_O,TYPEQ_ADJUST_STAMP(1043),TYPEQ_ADJUST_STAMP(1047));
      ADD_SINGLE_TYPEQ_TEST(core::ValueFrame_O,TYPEQ_ADJUST_STAMP(1263));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_int4_t_O,TYPEQ_ADJUST_STAMP(1727));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_int32_t_O,TYPEQ_ADJUST_STAMP(2183));
      ADD_SINGLE_TYPEQ_TEST(core::Complex_O,TYPEQ_ADJUST_STAMP(1355));
      ADD_SINGLE_TYPEQ_TEST(chem::ConformationCollectionEntry_O,TYPEQ_ADJUST_STAMP(911));
      ADD_SINGLE_TYPEQ_TEST(geom::OMatrix_O,TYPEQ_ADJUST_STAMP(907));
      ADD_SINGLE_TYPEQ_TEST(chem::RingClosingMate_O,TYPEQ_ADJUST_STAMP(511));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ValueAsMetadata_O,TYPEQ_ADJUST_STAMP(2583));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ConstantExpr_O,TYPEQ_ADJUST_STAMP(2411));
      ADD_SINGLE_TYPEQ_TEST(core::SingleDispatchEffectiveMethodFunction_O,TYPEQ_ADJUST_STAMP(1475));
      ADD_SINGLE_TYPEQ_TEST(chem::FFNonbondDb_O,TYPEQ_ADJUST_STAMP(395));
      ADD_SINGLE_TYPEQ_TEST(llvmo::StructType_O,TYPEQ_ADJUST_STAMP(2495));
      ADD_RANGE_TYPEQ_TEST(chem::EnergyNonbond_O,chem::EnergyPeriodicBoundaryConditionsNonbond_O,TYPEQ_ADJUST_STAMP(115),TYPEQ_ADJUST_STAMP(119));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_int16_t_O,TYPEQ_ADJUST_STAMP(1859));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_float_O,TYPEQ_ADJUST_STAMP(1647));
      ADD_SINGLE_TYPEQ_TEST(chem::Residue_O,TYPEQ_ADJUST_STAMP(159));
      ADD_RANGE_TYPEQ_TEST(chem::CalculatePosition_O,chem::CalculatePositionAlongBond_O,TYPEQ_ADJUST_STAMP(891),TYPEQ_ADJUST_STAMP(903));
      ADD_SINGLE_TYPEQ_TEST(chem::SuperposeSelectedAtoms_O,TYPEQ_ADJUST_STAMP(695));
      ADD_SINGLE_TYPEQ_TEST(llvmo::Target_O,TYPEQ_ADJUST_STAMP(2603));
      ADD_RANGE_TYPEQ_TEST(kinematics::MonomerNode_O,kinematics::RingClosingMonomerNode_O,TYPEQ_ADJUST_STAMP(723),TYPEQ_ADJUST_STAMP(727));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_byte32_t_O,TYPEQ_ADJUST_STAMP(2019));
      ADD_SINGLE_TYPEQ_TEST(core::SingleDispatchGenericFunctionClosure_O,TYPEQ_ADJUST_STAMP(1471));
      ADD_SINGLE_TYPEQ_TEST(llvmo::Module_O,TYPEQ_ADJUST_STAMP(2599));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DIExpression_O,TYPEQ_ADJUST_STAMP(2579));
      ADD_SINGLE_TYPEQ_TEST(core::SingleFloat_dummy_O,TYPEQ_ADJUST_STAMP(1343));
      ADD_SINGLE_TYPEQ_TEST(core::ValueEnvironment_O,TYPEQ_ADJUST_STAMP(1255));
      ADD_SINGLE_TYPEQ_TEST(chem::Trajectory_O,TYPEQ_ADJUST_STAMP(887));
      ADD_SINGLE_TYPEQ_TEST(llvmo::InvokeInst_O,TYPEQ_ADJUST_STAMP(2319));
      ADD_SINGLE_TYPEQ_TEST(chem::RestraintFixedNonbond_O,TYPEQ_ADJUST_STAMP(303));
      ADD_SINGLE_TYPEQ_TEST(chem::FFNonbond_O,TYPEQ_ADJUST_STAMP(275));
      ADD_RANGE_TYPEQ_TEST(core::StrNs_O,core::StrWNs_O,TYPEQ_ADJUST_STAMP(1911),TYPEQ_ADJUST_STAMP(1927));
      ADD_SINGLE_TYPEQ_TEST(chem::VirtualAtom_O,TYPEQ_ADJUST_STAMP(155));
      ADD_SINGLE_TYPEQ_TEST(chem::OriginPlug_O,TYPEQ_ADJUST_STAMP(755));
      ADD_SINGLE_TYPEQ_TEST(llvmo::FunctionPassManager_O,TYPEQ_ADJUST_STAMP(2275));
      ADD_SINGLE_TYPEQ_TEST(core::DoubleFloat_O,TYPEQ_ADJUST_STAMP(1339));
      ADD_SINGLE_TYPEQ_TEST(chem::ConformationExplorerEntryStage_O,TYPEQ_ADJUST_STAMP(883));
      ADD_SINGLE_TYPEQ_TEST(chem::FrameRecognizer_O,TYPEQ_ADJUST_STAMP(879));
      ADD_SINGLE_TYPEQ_TEST(chem::CalculatePositionAlongBond_O,TYPEQ_ADJUST_STAMP(903));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_int32_t_O,TYPEQ_ADJUST_STAMP(1515));
      ADD_SINGLE_TYPEQ_TEST(adapt::SymbolList_O,TYPEQ_ADJUST_STAMP(875));
      ADD_SINGLE_TYPEQ_TEST(chem::CalculatePositionUsingInternals_O,TYPEQ_ADJUST_STAMP(899));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyPeriodicBoundaryConditionsNonbond_O,TYPEQ_ADJUST_STAMP(119));
      ADD_SINGLE_TYPEQ_TEST(asttooling::AsttoolingExposer_O,TYPEQ_ADJUST_STAMP(1167));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyDihedral_O,TYPEQ_ADJUST_STAMP(111));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_size_t_O,TYPEQ_ADJUST_STAMP(1663));
      ADD_SINGLE_TYPEQ_TEST(core::SmallMultimap_O,TYPEQ_ADJUST_STAMP(2615));
      ADD_SINGLE_TYPEQ_TEST(core::Fixnum_dummy_O,TYPEQ_ADJUST_STAMP(1331));
      ADD_SINGLE_TYPEQ_TEST(chem::ImproperTorsion_O,TYPEQ_ADJUST_STAMP(871));
      ADD_SINGLE_TYPEQ_TEST(chem::ZMatrixAngleInternal_O,TYPEQ_ADJUST_STAMP(579));
      ADD_SINGLE_TYPEQ_TEST(chem::Rotamer_O,TYPEQ_ADJUST_STAMP(867));
      ADD_SINGLE_TYPEQ_TEST(core::WeakKeyHashTable_O,TYPEQ_ADJUST_STAMP(1299));
      ADD_SINGLE_TYPEQ_TEST(core::Rack_O,TYPEQ_ADJUST_STAMP(2611));
      ADD_SINGLE_TYPEQ_TEST(core::MDArrayBaseChar_O,TYPEQ_ADJUST_STAMP(1571));
      ADD_SINGLE_TYPEQ_TEST(core::UserData_O,TYPEQ_ADJUST_STAMP(2719));
      ADD_RANGE_TYPEQ_TEST(core::ExternalObject_O,llvmo::Linker_O,TYPEQ_ADJUST_STAMP(2211),TYPEQ_ADJUST_STAMP(2607));
      ADD_RANGE_TYPEQ_TEST(llvmo::DINode_O,llvmo::DIBasicType_O,TYPEQ_ADJUST_STAMP(2519),TYPEQ_ADJUST_STAMP(2575));
      ADD_SINGLE_TYPEQ_TEST(llvmo::GlobalVariable_O,TYPEQ_ADJUST_STAMP(2379));
      ADD_SINGLE_TYPEQ_TEST(core::BroadcastStream_O,TYPEQ_ADJUST_STAMP(2691));
      ADD_SINGLE_TYPEQ_TEST(chem::StereoisomerAtoms_O,TYPEQ_ADJUST_STAMP(863));
      ADD_SINGLE_TYPEQ_TEST(chem::ConformationExplorerMatch_O,TYPEQ_ADJUST_STAMP(859));
      ADD_SINGLE_TYPEQ_TEST(chem::ChemExposer_O,TYPEQ_ADJUST_STAMP(1163));
      ADD_RANGE_TYPEQ_TEST(kinematics::Checkpoint_O,kinematics::CheckpointOutPlugJoint_O,TYPEQ_ADJUST_STAMP(847),TYPEQ_ADJUST_STAMP(855));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DINodeArray_O,TYPEQ_ADJUST_STAMP(843));
      ADD_SINGLE_TYPEQ_TEST(llvmo::TargetOptions_O,TYPEQ_ADJUST_STAMP(2595));
      ADD_SINGLE_TYPEQ_TEST(chem::CDText_O,TYPEQ_ADJUST_STAMP(839));
      ADD_SINGLE_TYPEQ_TEST(chem::BondTest_O,TYPEQ_ADJUST_STAMP(979));
      ADD_SINGLE_TYPEQ_TEST(adapt::IterateCons_O,TYPEQ_ADJUST_STAMP(1099));
      ADD_SINGLE_TYPEQ_TEST(geom::SimpleVectorCoordinate_O,TYPEQ_ADJUST_STAMP(2075));
      ADD_SINGLE_TYPEQ_TEST(chem::FFItor_O,TYPEQ_ADJUST_STAMP(271));
      ADD_SINGLE_TYPEQ_TEST(llvmo::NamedMDNode_O,TYPEQ_ADJUST_STAMP(2591));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_byte16_t_O,TYPEQ_ADJUST_STAMP(2111));
      ADD_SINGLE_TYPEQ_TEST(chem::ChemInfoGraph_O,TYPEQ_ADJUST_STAMP(835));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_byte64_t_O,TYPEQ_ADJUST_STAMP(2135));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyPointToLineRestraint_O,TYPEQ_ADJUST_STAMP(107));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleBaseString_O,TYPEQ_ADJUST_STAMP(2087));
      ADD_RANGE_TYPEQ_TEST(llvmo::Metadata_O,llvmo::MDString_O,TYPEQ_ADJUST_STAMP(2507),TYPEQ_ADJUST_STAMP(2587));
      ADD_RANGE_TYPEQ_TEST(core::MDArray_O,core::MDArray_double_O,TYPEQ_ADJUST_STAMP(1491),TYPEQ_ADJUST_STAMP(2007));
      ADD_SINGLE_TYPEQ_TEST(chem::RigidBodyEnergyFunction_O,TYPEQ_ADJUST_STAMP(439));
      ADD_SINGLE_TYPEQ_TEST(kinematics::ChainNode_O,TYPEQ_ADJUST_STAMP(719));
      ADD_SINGLE_TYPEQ_TEST(kinematics::CheckpointJoint_O,TYPEQ_ADJUST_STAMP(851));
      ADD_RANGE_TYPEQ_TEST(llvmo::CompositeType_O,llvmo::StructType_O,TYPEQ_ADJUST_STAMP(2475),TYPEQ_ADJUST_STAMP(2495));
      ADD_SINGLE_TYPEQ_TEST(chem::Mate_O,TYPEQ_ADJUST_STAMP(507));
      ADD_SINGLE_TYPEQ_TEST(llvmo::StructLayout_O,TYPEQ_ADJUST_STAMP(2207));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArrayT_O,TYPEQ_ADJUST_STAMP(1719));
      ADD_SINGLE_TYPEQ_TEST(chem::ConformationExplorer_O,TYPEQ_ADJUST_STAMP(831));
      ADD_SINGLE_TYPEQ_TEST(chem::BondList_O,TYPEQ_ADJUST_STAMP(827));
      ADD_RANGE_TYPEQ_TEST(core::ActivationFrame_O,core::FunctionFrame_O,TYPEQ_ADJUST_STAMP(1259),TYPEQ_ADJUST_STAMP(1267));
      ADD_SINGLE_TYPEQ_TEST(llvmo::LoadInst_O,TYPEQ_ADJUST_STAMP(2339));
      ADD_SINGLE_TYPEQ_TEST(chem::MacroModelFile_O,TYPEQ_ADJUST_STAMP(823));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_byte2_t_O,TYPEQ_ADJUST_STAMP(1967));
      ADD_SINGLE_TYPEQ_TEST(chem::Angle_O,TYPEQ_ADJUST_STAMP(819));
      ADD_RANGE_TYPEQ_TEST(core::LexicalEnvironment_O,core::ValueEnvironment_O,TYPEQ_ADJUST_STAMP(1211),TYPEQ_ADJUST_STAMP(1255));
      ADD_SINGLE_TYPEQ_TEST(core::PosixTime_O,TYPEQ_ADJUST_STAMP(2203));
      ADD_SINGLE_TYPEQ_TEST(llvmo::MetadataAsValue_O,TYPEQ_ADJUST_STAMP(2431));
      ADD_SINGLE_TYPEQ_TEST(kinematics::RotamerSet_O,TYPEQ_ADJUST_STAMP(71));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_int8_t_O,TYPEQ_ADJUST_STAMP(2059));
      ADD_SINGLE_TYPEQ_TEST(chem::SpecificContextSet_O,TYPEQ_ADJUST_STAMP(815));
      ADD_RANGE_TYPEQ_TEST(llvmo::DIType_O,llvmo::DIBasicType_O,TYPEQ_ADJUST_STAMP(2559),TYPEQ_ADJUST_STAMP(2575));
      ADD_SINGLE_TYPEQ_TEST(chem::ZMatrixEntry_O,TYPEQ_ADJUST_STAMP(811));
      ADD_SINGLE_TYPEQ_TEST(core::Readtable_O,TYPEQ_ADJUST_STAMP(2199));
      ADD_SINGLE_TYPEQ_TEST(chem::CalculatePositionRelativeToOrigin_O,TYPEQ_ADJUST_STAMP(895));
      ADD_SINGLE_TYPEQ_TEST(chem::ChemInfoMatch_O,TYPEQ_ADJUST_STAMP(807));
      ADD_SINGLE_TYPEQ_TEST(units::Quantity_O,TYPEQ_ADJUST_STAMP(803));
      ADD_SINGLE_TYPEQ_TEST(kinematics::AtomTree_O,TYPEQ_ADJUST_STAMP(799));
      ADD_RANGE_TYPEQ_TEST(llvmo::MDNode_O,llvmo::DIExpression_O,TYPEQ_ADJUST_STAMP(2511),TYPEQ_ADJUST_STAMP(2579));
      ADD_SINGLE_TYPEQ_TEST(chem::GenericOctree_O,TYPEQ_ADJUST_STAMP(795));
      ADD_SINGLE_TYPEQ_TEST(mp::RecursiveMutex_O,TYPEQ_ADJUST_STAMP(931));
      ADD_SINGLE_TYPEQ_TEST(chem::MinimizerLog_O,TYPEQ_ADJUST_STAMP(791));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_float_O,TYPEQ_ADJUST_STAMP(2151));
      ADD_SINGLE_TYPEQ_TEST(chem::FFVdwDb_O,TYPEQ_ADJUST_STAMP(403));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_int4_t_O,TYPEQ_ADJUST_STAMP(2127));
      ADD_SINGLE_TYPEQ_TEST(chem::FFPtor_O,TYPEQ_ADJUST_STAMP(267));
      ADD_SINGLE_TYPEQ_TEST(chem::InfoDb_O,TYPEQ_ADJUST_STAMP(787));
      ADD_SINGLE_TYPEQ_TEST(core::LoadTimeValues_O,TYPEQ_ADJUST_STAMP(2195));
      ADD_SINGLE_TYPEQ_TEST(kinematics::OriginJumpJoint_O,TYPEQ_ADJUST_STAMP(223));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DataLayout_O,TYPEQ_ADJUST_STAMP(2191));
      ADD_SINGLE_TYPEQ_TEST(llvmo::BasicBlock_O,TYPEQ_ADJUST_STAMP(2427));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_byte64_t_O,TYPEQ_ADJUST_STAMP(1835));
      ADD_SINGLE_TYPEQ_TEST(chem::AntechamberBondToAtomTest_O,TYPEQ_ADJUST_STAMP(1027));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_byte32_t_O,TYPEQ_ADJUST_STAMP(1959));
      ADD_SINGLE_TYPEQ_TEST(core::Character_dummy_O,TYPEQ_ADJUST_STAMP(2187));
      ADD_RANGE_TYPEQ_TEST(llvmo::Constant_O,llvmo::ConstantArray_O,TYPEQ_ADJUST_STAMP(2367),TYPEQ_ADJUST_STAMP(2419));
      ADD_SINGLE_TYPEQ_TEST(core::NativeVector_int_O,TYPEQ_ADJUST_STAMP(783));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DIBasicType_O,TYPEQ_ADJUST_STAMP(2575));
      ADD_SINGLE_TYPEQ_TEST(llvmo::APFloat_O,TYPEQ_ADJUST_STAMP(2503));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArrayCharacter_O,TYPEQ_ADJUST_STAMP(1671));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleCharacterString_O,TYPEQ_ADJUST_STAMP(2095));
      ADD_SINGLE_TYPEQ_TEST(kinematics::RootBondedJointTemplate_O,TYPEQ_ADJUST_STAMP(619));
      ADD_RANGE_TYPEQ_TEST(core::Array_O,core::SimpleVector_int32_t_O,TYPEQ_ADJUST_STAMP(1487),TYPEQ_ADJUST_STAMP(2183));
      ADD_SINGLE_TYPEQ_TEST(llvmo::Argument_O,TYPEQ_ADJUST_STAMP(2423));
      ADD_SINGLE_TYPEQ_TEST(adapt::StringList_O,TYPEQ_ADJUST_STAMP(779));
      ADD_RANGE_TYPEQ_TEST(units::Unit_O,units::NamedUnit_O,TYPEQ_ADJUST_STAMP(771),TYPEQ_ADJUST_STAMP(775));
      ADD_SINGLE_TYPEQ_TEST(llvmo::TargetPassConfig_O,TYPEQ_ADJUST_STAMP(2499));
      ADD_SINGLE_TYPEQ_TEST(chem::IterateBonds_O,TYPEQ_ADJUST_STAMP(1115));
      ADD_SINGLE_TYPEQ_TEST(chem::CDFragment_O,TYPEQ_ADJUST_STAMP(767));
      ADD_SINGLE_TYPEQ_TEST(core::GlueEnvironment_O,TYPEQ_ADJUST_STAMP(1207));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ReturnInst_O,TYPEQ_ADJUST_STAMP(2355));
      ADD_SINGLE_TYPEQ_TEST(chem::MonomerContext_O,TYPEQ_ADJUST_STAMP(763));
      ADD_SINGLE_TYPEQ_TEST(kinematics::Rotamer_O,TYPEQ_ADJUST_STAMP(759));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_byte16_t_O,TYPEQ_ADJUST_STAMP(1991));
      ADD_RANGE_TYPEQ_TEST(chem::Plug_O,chem::OriginPlug_O,TYPEQ_ADJUST_STAMP(735),TYPEQ_ADJUST_STAMP(755));
      ADD_SINGLE_TYPEQ_TEST(chem::FFNonbondCrossTermTable_O,TYPEQ_ADJUST_STAMP(731));
      ADD_RANGE_TYPEQ_TEST(kinematics::MonomerBaseNode_O,kinematics::RingClosingMonomerNode_O,TYPEQ_ADJUST_STAMP(711),TYPEQ_ADJUST_STAMP(727));
      ADD_RANGE_TYPEQ_TEST(llvmo::Type_O,llvmo::StructType_O,TYPEQ_ADJUST_STAMP(2463),TYPEQ_ADJUST_STAMP(2495));
      ADD_SINGLE_TYPEQ_TEST(chem::StereoConfiguration_O,TYPEQ_ADJUST_STAMP(707));
      ADD_SINGLE_TYPEQ_TEST(chem::Command_O,TYPEQ_ADJUST_STAMP(703));
      ADD_SINGLE_TYPEQ_TEST(core::FileScope_O,TYPEQ_ADJUST_STAMP(2627));
      ADD_SINGLE_TYPEQ_TEST(adapt::StringSet_O,TYPEQ_ADJUST_STAMP(699));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_byte4_t_O,TYPEQ_ADJUST_STAMP(1631));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_int64_t_O,TYPEQ_ADJUST_STAMP(2051));
      ADD_RANGE_TYPEQ_TEST(llvmo::ConstantDataSequential_O,llvmo::ConstantDataArray_O,TYPEQ_ADJUST_STAMP(2403),TYPEQ_ADJUST_STAMP(2407));
      ADD_RANGE_TYPEQ_TEST(chem::SuperposeEngine_O,chem::SuperposeSelectedAtoms_O,TYPEQ_ADJUST_STAMP(691),TYPEQ_ADJUST_STAMP(695));
      ADD_RANGE_TYPEQ_TEST(chem::EntityNameSet_O,chem::MonomerPack_O,TYPEQ_ADJUST_STAMP(515),TYPEQ_ADJUST_STAMP(523));
      ADD_SINGLE_TYPEQ_TEST(chem::ResidueList_O,TYPEQ_ADJUST_STAMP(687));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DebugLoc_O,TYPEQ_ADJUST_STAMP(1483));
      ADD_SINGLE_TYPEQ_TEST(core::WeakPointer_O,TYPEQ_ADJUST_STAMP(1479));
      ADD_SINGLE_TYPEQ_TEST(core::IOFileStream_O,TYPEQ_ADJUST_STAMP(2683));
      ADD_SINGLE_TYPEQ_TEST(chem::ConstitutionVirtualAtom_O,TYPEQ_ADJUST_STAMP(479));
      ADD_RANGE_TYPEQ_TEST(core::RuntimeVisibleEnvironment_O,core::ValueEnvironment_O,TYPEQ_ADJUST_STAMP(1239),TYPEQ_ADJUST_STAMP(1255));
      ADD_SINGLE_TYPEQ_TEST(chem::ProperTorsion_O,TYPEQ_ADJUST_STAMP(683));
      ADD_SINGLE_TYPEQ_TEST(chem::IterateResidues_O,TYPEQ_ADJUST_STAMP(1111));
      ADD_RANGE_TYPEQ_TEST(llvmo::Instruction_O,llvmo::IndirectBrInst_O,TYPEQ_ADJUST_STAMP(2287),TYPEQ_ADJUST_STAMP(2363));
      ADD_RANGE_TYPEQ_TEST(core::FileStream_O,core::IOStreamStream_O,TYPEQ_ADJUST_STAMP(2679),TYPEQ_ADJUST_STAMP(2687));
      ADD_SINGLE_TYPEQ_TEST(core::MDArrayCharacter_O,TYPEQ_ADJUST_STAMP(1975));
      ADD_SINGLE_TYPEQ_TEST(llvmo::LandingPadInst_O,TYPEQ_ADJUST_STAMP(2351));
      ADD_SINGLE_TYPEQ_TEST(kinematics::KinematicsExposer_O,TYPEQ_ADJUST_STAMP(1159));
      ADD_RANGE_TYPEQ_TEST(core::Function_O,core::SingleDispatchEffectiveMethodFunction_O,TYPEQ_ADJUST_STAMP(1399),TYPEQ_ADJUST_STAMP(1475));
      ADD_RANGE_TYPEQ_TEST(kinematics::BondedJoint_O,kinematics::DelayedBondedJoint_O,TYPEQ_ADJUST_STAMP(227),TYPEQ_ADJUST_STAMP(235));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_int2_t_O,TYPEQ_ADJUST_STAMP(1623));
      ADD_SINGLE_TYPEQ_TEST(chem::StereoisomerVirtualAtom_O,TYPEQ_ADJUST_STAMP(587));
      ADD_SINGLE_TYPEQ_TEST(core::HashTableEql_O,TYPEQ_ADJUST_STAMP(1295));
      ADD_SINGLE_TYPEQ_TEST(chem::SpanningLoop_O,TYPEQ_ADJUST_STAMP(679));
      ADD_SINGLE_TYPEQ_TEST(chem::PdbReader_O,TYPEQ_ADJUST_STAMP(675));
      ADD_SINGLE_TYPEQ_TEST(mp::ConditionVariable_O,TYPEQ_ADJUST_STAMP(671));
      ADD_SINGLE_TYPEQ_TEST(chem::ConformationExplorerEntry_O,TYPEQ_ADJUST_STAMP(667));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_byte8_t_O,TYPEQ_ADJUST_STAMP(1547));
      ADD_SINGLE_TYPEQ_TEST(kinematics::BackboneDependentRotamerSet_O,TYPEQ_ADJUST_STAMP(67));
      ADD_RANGE_TYPEQ_TEST(chem::BondListMatchNode_O,chem::Branch_O,TYPEQ_ADJUST_STAMP(1031),TYPEQ_ADJUST_STAMP(1039));
      ADD_SINGLE_TYPEQ_TEST(units::Dimension_O,TYPEQ_ADJUST_STAMP(663));
      ADD_SINGLE_TYPEQ_TEST(llvmo::AtomicRMWInst_O,TYPEQ_ADJUST_STAMP(2347));
      ADD_SINGLE_TYPEQ_TEST(chem::PdbMonomerConnectivity_O,TYPEQ_ADJUST_STAMP(659));
      ADD_SINGLE_TYPEQ_TEST(llvmo::PassManager_O,TYPEQ_ADJUST_STAMP(2271));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_O,TYPEQ_ADJUST_STAMP(2159));
      ADD_RANGE_TYPEQ_TEST(chem::PlugWithMates_O,chem::OutPlug_O,TYPEQ_ADJUST_STAMP(743),TYPEQ_ADJUST_STAMP(751));
      ADD_SINGLE_TYPEQ_TEST(chem::Oligomer_O,TYPEQ_ADJUST_STAMP(655));
      ADD_SINGLE_TYPEQ_TEST(adapt::ObjectSet_O,TYPEQ_ADJUST_STAMP(651));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_int64_t_O,TYPEQ_ADJUST_STAMP(1767));
      ADD_RANGE_TYPEQ_TEST(core::SimpleString_O,core::SimpleCharacterString_O,TYPEQ_ADJUST_STAMP(2079),TYPEQ_ADJUST_STAMP(2095));
      ADD_RANGE_TYPEQ_TEST(llvmo::DIVariable_O,llvmo::DILocalVariable_O,TYPEQ_ADJUST_STAMP(2523),TYPEQ_ADJUST_STAMP(2527));
      ADD_SINGLE_TYPEQ_TEST(core::FunctionValueEnvironment_O,TYPEQ_ADJUST_STAMP(1251));
      ADD_SINGLE_TYPEQ_TEST(core::DerivableCxxClassCreator_O,TYPEQ_ADJUST_STAMP(1431));
      ADD_RANGE_TYPEQ_TEST(chem::Coupling_O,chem::DirectionalCoupling_O,TYPEQ_ADJUST_STAMP(639),TYPEQ_ADJUST_STAMP(647));
      ADD_SINGLE_TYPEQ_TEST(geom::ComplexVectorCoordinate_O,TYPEQ_ADJUST_STAMP(1819));
      ADD_SINGLE_TYPEQ_TEST(core::ConcatenatedStream_O,TYPEQ_ADJUST_STAMP(2675));
      ADD_SINGLE_TYPEQ_TEST(core::MacroletEnvironment_O,TYPEQ_ADJUST_STAMP(1235));
      ADD_SINGLE_TYPEQ_TEST(kinematics::DelayedBondedJoint_O,TYPEQ_ADJUST_STAMP(235));
      ADD_SINGLE_TYPEQ_TEST(core::Ratio_O,TYPEQ_ADJUST_STAMP(1319));
      ADD_SINGLE_TYPEQ_TEST(core::ObjectFile_O,TYPEQ_ADJUST_STAMP(1395));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_byte2_t_O,TYPEQ_ADJUST_STAMP(1883));
      ADD_SINGLE_TYPEQ_TEST(core::ClosureWithSlots_O,TYPEQ_ADJUST_STAMP(1467));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ExecutionEngine_O,TYPEQ_ADJUST_STAMP(2459));
      ADD_SINGLE_TYPEQ_TEST(core::ClassRepCreator_O,TYPEQ_ADJUST_STAMP(1427));
      ADD_SINGLE_TYPEQ_TEST(llvmo::Attribute_O,TYPEQ_ADJUST_STAMP(1391));
      ADD_SINGLE_TYPEQ_TEST(core::DerivableCxxObject_O,TYPEQ_ADJUST_STAMP(1188));
      ADD_SINGLE_TYPEQ_TEST(llvmo::SwitchInst_O,TYPEQ_ADJUST_STAMP(2343));
      ADD_SINGLE_TYPEQ_TEST(core::SymbolToEnumConverter_O,TYPEQ_ADJUST_STAMP(1387));
      ADD_SINGLE_TYPEQ_TEST(chem::RestrainedPiBond_O,TYPEQ_ADJUST_STAMP(923));
      ADD_SINGLE_TYPEQ_TEST(core::NativeVector_float_O,TYPEQ_ADJUST_STAMP(635));
      ADD_RANGE_TYPEQ_TEST(chem::ConformationCollection_O,chem::SuperposableConformationCollection_O,TYPEQ_ADJUST_STAMP(627),TYPEQ_ADJUST_STAMP(631));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_int32_t_O,TYPEQ_ADJUST_STAMP(1803));
      ADD_SINGLE_TYPEQ_TEST(core::VaList_dummy_O,TYPEQ_ADJUST_STAMP(2727));
      ADD_SINGLE_TYPEQ_TEST(geom::Color_O,TYPEQ_ADJUST_STAMP(623));
      ADD_RANGE_TYPEQ_TEST(kinematics::JointTemplate_O,kinematics::RootBondedJointTemplate_O,TYPEQ_ADJUST_STAMP(607),TYPEQ_ADJUST_STAMP(619));
      ADD_SINGLE_TYPEQ_TEST(core::FdSet_O,TYPEQ_ADJUST_STAMP(1383));
      ADD_SINGLE_TYPEQ_TEST(core::LogicalPathname_O,TYPEQ_ADJUST_STAMP(2639));
      ADD_SINGLE_TYPEQ_TEST(core::WrappedPointer_O,TYPEQ_ADJUST_STAMP(1378));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_double_O,TYPEQ_ADJUST_STAMP(2035));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_byte32_t_O,TYPEQ_ADJUST_STAMP(1615));
      ADD_SINGLE_TYPEQ_TEST(llvmo::LLVMTargetMachine_O,TYPEQ_ADJUST_STAMP(2443));
      ADD_SINGLE_TYPEQ_TEST(core::ClassHolder_O,TYPEQ_ADJUST_STAMP(1375));
      ADD_SINGLE_TYPEQ_TEST(chem::SketchFunction_O,TYPEQ_ADJUST_STAMP(435));
      ADD_RANGE_TYPEQ_TEST(llvmo::UnaryInstruction_O,llvmo::LoadInst_O,TYPEQ_ADJUST_STAMP(2327),TYPEQ_ADJUST_STAMP(2339));
      ADD_SINGLE_TYPEQ_TEST(kinematics::MonomerId_O,TYPEQ_ADJUST_STAMP(603));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_size_t_O,TYPEQ_ADJUST_STAMP(1539));
      ADD_SINGLE_TYPEQ_TEST(chem::PathMessage_O,TYPEQ_ADJUST_STAMP(599));
      ADD_RANGE_TYPEQ_TEST(chem::BondMatchNode_O,chem::AntechamberBondToAtomTest_O,TYPEQ_ADJUST_STAMP(987),TYPEQ_ADJUST_STAMP(1027));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyRigidBodyNonbond_O,TYPEQ_ADJUST_STAMP(91));
      ADD_RANGE_TYPEQ_TEST(core::ComplexVector_O,core::ComplexVector_int64_t_O,TYPEQ_ADJUST_STAMP(1771),TYPEQ_ADJUST_STAMP(1943));
      ADD_SINGLE_TYPEQ_TEST(chem::SparseLargeSquareMatrix_O,TYPEQ_ADJUST_STAMP(367));
      ADD_SINGLE_TYPEQ_TEST(clbind::ClassRegistry_O,TYPEQ_ADJUST_STAMP(1371));
      ADD_SINGLE_TYPEQ_TEST(asttooling::AstVisitor_O,TYPEQ_ADJUST_STAMP(2739));
      ADD_SINGLE_TYPEQ_TEST(chem::Isoname_O,TYPEQ_ADJUST_STAMP(595));
      ADD_SINGLE_TYPEQ_TEST(core::Record_O,TYPEQ_ADJUST_STAMP(1367));
      ADD_RANGE_TYPEQ_TEST(chem::Atom_O,chem::VirtualAtom_O,TYPEQ_ADJUST_STAMP(151),TYPEQ_ADJUST_STAMP(155));
      ADD_SINGLE_TYPEQ_TEST(core::IntArray_O,TYPEQ_ADJUST_STAMP(1363));
      ADD_SINGLE_TYPEQ_TEST(chem::ZMatrix_O,TYPEQ_ADJUST_STAMP(591));
      ADD_RANGE_TYPEQ_TEST(chem::StereoisomerAtom_O,chem::StereoisomerVirtualAtom_O,TYPEQ_ADJUST_STAMP(583),TYPEQ_ADJUST_STAMP(587));
      ADD_SINGLE_TYPEQ_TEST(core::SourcePosInfo_O,TYPEQ_ADJUST_STAMP(1359));
      ADD_SINGLE_TYPEQ_TEST(llvmo::BranchInst_O,TYPEQ_ADJUST_STAMP(2323));
      ADD_SINGLE_TYPEQ_TEST(llvmo::AllocaInst_O,TYPEQ_ADJUST_STAMP(2335));
      ADD_RANGE_TYPEQ_TEST(chem::ZMatrixInternal_O,chem::ZMatrixAngleInternal_O,TYPEQ_ADJUST_STAMP(567),TYPEQ_ADJUST_STAMP(579));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_byte8_t_O,TYPEQ_ADJUST_STAMP(1891));
      ADD_RANGE_TYPEQ_TEST(core::HashTable_O,core::HashTableEql_O,TYPEQ_ADJUST_STAMP(1279),TYPEQ_ADJUST_STAMP(1295));
      ADD_SINGLE_TYPEQ_TEST(chem::ChemDraw_O,TYPEQ_ADJUST_STAMP(563));
      ADD_RANGE_TYPEQ_TEST(chem::ReportBase_O,chem::ForceMatchReport_O,TYPEQ_ADJUST_STAMP(547),TYPEQ_ADJUST_STAMP(559));
      ADD_SINGLE_TYPEQ_TEST(kinematics::BackboneDependentRotamerLibrary_O,TYPEQ_ADJUST_STAMP(543));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyChiralRestraint_O,TYPEQ_ADJUST_STAMP(103));
      ADD_SINGLE_TYPEQ_TEST(chem::MonomerPack_O,TYPEQ_ADJUST_STAMP(523));
      ADD_SINGLE_TYPEQ_TEST(geom::MDArrayCoordinate_O,TYPEQ_ADJUST_STAMP(1587));
      ADD_SINGLE_TYPEQ_TEST(chem::Structure_Old_List_O,TYPEQ_ADJUST_STAMP(539));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArrayBaseChar_O,TYPEQ_ADJUST_STAMP(1695));
      ADD_SINGLE_TYPEQ_TEST(chem::OctNode_O,TYPEQ_ADJUST_STAMP(535));
      ADD_RANGE_TYPEQ_TEST(chem::Entity_O,chem::Monomer_O,TYPEQ_ADJUST_STAMP(491),TYPEQ_ADJUST_STAMP(531));
      ADD_SINGLE_TYPEQ_TEST(chem::AGEdge_O,TYPEQ_ADJUST_STAMP(487));
      ADD_SINGLE_TYPEQ_TEST(chem::ReadAmberParameters_O,TYPEQ_ADJUST_STAMP(483));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DILocation_O,TYPEQ_ADJUST_STAMP(2515));
      ADD_RANGE_TYPEQ_TEST(core::SimpleMDArray_O,core::SimpleMDArray_int64_t_O,TYPEQ_ADJUST_STAMP(1599),TYPEQ_ADJUST_STAMP(1767));
      ADD_RANGE_TYPEQ_TEST(core::Number_O,core::Complex_O,TYPEQ_ADJUST_STAMP(1307),TYPEQ_ADJUST_STAMP(1355));
      ADD_RANGE_TYPEQ_TEST(core::T_O,core::VaList_dummy_O,TYPEQ_ADJUST_STAMP(7),TYPEQ_ADJUST_STAMP(2727));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DICompileUnit_O,TYPEQ_ADJUST_STAMP(2555));
      ADD_SINGLE_TYPEQ_TEST(llvmo::FunctionPass_O,TYPEQ_ADJUST_STAMP(2231));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_byte4_t_O,TYPEQ_ADJUST_STAMP(2067));
      ADD_RANGE_TYPEQ_TEST(chem::ConstitutionAtom_O,chem::ConstitutionVirtualAtom_O,TYPEQ_ADJUST_STAMP(475),TYPEQ_ADJUST_STAMP(479));
      ADD_RANGE_TYPEQ_TEST(llvmo::CallBase_O,llvmo::InvokeInst_O,TYPEQ_ADJUST_STAMP(2311),TYPEQ_ADJUST_STAMP(2319));
      ADD_RANGE_TYPEQ_TEST(core::CompileTimeEnvironment_O,core::MacroletEnvironment_O,TYPEQ_ADJUST_STAMP(1215),TYPEQ_ADJUST_STAMP(1235));
      ADD_SINGLE_TYPEQ_TEST(mp::SharedMutex_O,TYPEQ_ADJUST_STAMP(471));
      ADD_SINGLE_TYPEQ_TEST(adapt::QDomNode_O,TYPEQ_ADJUST_STAMP(467));
      ADD_SINGLE_TYPEQ_TEST(core::InstanceCreator_O,TYPEQ_ADJUST_STAMP(1423));
      ADD_SINGLE_TYPEQ_TEST(chem::BondToAtomTest_O,TYPEQ_ADJUST_STAMP(1023));
      ADD_SINGLE_TYPEQ_TEST(chem::FFAngleDb_O,TYPEQ_ADJUST_STAMP(391));
      ADD_SINGLE_TYPEQ_TEST(chem::FFTypeRule_O,TYPEQ_ADJUST_STAMP(463));
      ADD_SINGLE_TYPEQ_TEST(llvmo::InsertPoint_O,TYPEQ_ADJUST_STAMP(1303));
      ADD_SINGLE_TYPEQ_TEST(core::StrWNs_O,TYPEQ_ADJUST_STAMP(1927));
      ADD_SINGLE_TYPEQ_TEST(chem::Structure_Old_ListEntry_O,TYPEQ_ADJUST_STAMP(459));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyRigidBodyStaple_O,TYPEQ_ADJUST_STAMP(87));
      ADD_SINGLE_TYPEQ_TEST(core::EchoStream_O,TYPEQ_ADJUST_STAMP(2671));
      ADD_RANGE_TYPEQ_TEST(core::HashTableBase_O,core::WeakKeyHashTable_O,TYPEQ_ADJUST_STAMP(1275),TYPEQ_ADJUST_STAMP(1299));
      ADD_SINGLE_TYPEQ_TEST(core::MDArrayBit_O,TYPEQ_ADJUST_STAMP(1983));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_byte16_t_O,TYPEQ_ADJUST_STAMP(1811));
      ADD_SINGLE_TYPEQ_TEST(chem::FFStretchDb_O,TYPEQ_ADJUST_STAMP(387));
      ADD_SINGLE_TYPEQ_TEST(geom::OVector2_O,TYPEQ_ADJUST_STAMP(455));
      ADD_RANGE_TYPEQ_TEST(llvmo::DILocalScope_O,llvmo::DILexicalBlock_O,TYPEQ_ADJUST_STAMP(2539),TYPEQ_ADJUST_STAMP(2551));
      ADD_SINGLE_TYPEQ_TEST(geom::OVector3_O,TYPEQ_ADJUST_STAMP(451));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DILexicalBlock_O,TYPEQ_ADJUST_STAMP(2551));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DITypeRefArray_O,TYPEQ_ADJUST_STAMP(447));
      ADD_SINGLE_TYPEQ_TEST(chem::RestraintAnchor_O,TYPEQ_ADJUST_STAMP(299));
      ADD_SINGLE_TYPEQ_TEST(chem::InPlug_O,TYPEQ_ADJUST_STAMP(747));
      ADD_RANGE_TYPEQ_TEST(llvmo::ModulePass_O,llvmo::TargetLibraryInfoWrapperPass_O,TYPEQ_ADJUST_STAMP(2219),TYPEQ_ADJUST_STAMP(2227));
      ADD_SINGLE_TYPEQ_TEST(chem::DirectionalCoupling_O,TYPEQ_ADJUST_STAMP(647));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DILocalVariable_O,TYPEQ_ADJUST_STAMP(2527));
      ADD_SINGLE_TYPEQ_TEST(llvmo::TargetLibraryInfoWrapperPass_O,TYPEQ_ADJUST_STAMP(2227));
      ADD_RANGE_TYPEQ_TEST(llvmo::User_O,llvmo::ConstantArray_O,TYPEQ_ADJUST_STAMP(2283),TYPEQ_ADJUST_STAMP(2419));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_int16_t_O,TYPEQ_ADJUST_STAMP(1499));
      ADD_SINGLE_TYPEQ_TEST(chem::ZMatrixDihedralInternal_O,TYPEQ_ADJUST_STAMP(575));
      ADD_SINGLE_TYPEQ_TEST(chem::ForceMatchReport_O,TYPEQ_ADJUST_STAMP(559));
      ADD_SINGLE_TYPEQ_TEST(llvmo::FenceInst_O,TYPEQ_ADJUST_STAMP(2307));
      ADD_SINGLE_TYPEQ_TEST(chem::WildElementDict_O,TYPEQ_ADJUST_STAMP(443));
      ADD_SINGLE_TYPEQ_TEST(chem::Chain_O,TYPEQ_ADJUST_STAMP(1035));
      ADD_SINGLE_TYPEQ_TEST(llvmo::AtomicCmpXchgInst_O,TYPEQ_ADJUST_STAMP(2303));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_int8_t_O,TYPEQ_ADJUST_STAMP(1787));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_double_O,TYPEQ_ADJUST_STAMP(1711));
      ADD_RANGE_TYPEQ_TEST(chem::ScoringFunction_O,chem::RigidBodyEnergyFunction_O,TYPEQ_ADJUST_STAMP(427),TYPEQ_ADJUST_STAMP(439));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ConstantPointerNull_O,TYPEQ_ADJUST_STAMP(2399));
      ADD_SINGLE_TYPEQ_TEST(llvmo::VectorType_O,TYPEQ_ADJUST_STAMP(2491));
      ADD_SINGLE_TYPEQ_TEST(chem::FFStretch_O,TYPEQ_ADJUST_STAMP(263));
      ADD_SINGLE_TYPEQ_TEST(chem::IterateRestraints_O,TYPEQ_ADJUST_STAMP(1095));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergySketchNonbond_O,TYPEQ_ADJUST_STAMP(99));
      ADD_SINGLE_TYPEQ_TEST(core::RandomState_O,TYPEQ_ADJUST_STAMP(1271));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_int2_t_O,TYPEQ_ADJUST_STAMP(2043));
      ADD_RANGE_TYPEQ_TEST(chem::AtomReferenceBase_O,chem::AtomReference_O,TYPEQ_ADJUST_STAMP(419),TYPEQ_ADJUST_STAMP(423));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_byte64_t_O,TYPEQ_ADJUST_STAMP(1579));
      ADD_SINGLE_TYPEQ_TEST(chem::ForceField_O,TYPEQ_ADJUST_STAMP(415));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_fixnum_O,TYPEQ_ADJUST_STAMP(2143));
      ADD_RANGE_TYPEQ_TEST(core::AnsiStream_O,core::TwoWayStream_O,TYPEQ_ADJUST_STAMP(2651),TYPEQ_ADJUST_STAMP(2695));
      ADD_RANGE_TYPEQ_TEST(core::BuiltinClosure_O,core::TranslationFunctor_O,TYPEQ_ADJUST_STAMP(1459),TYPEQ_ADJUST_STAMP(1463));
      ADD_RANGE_TYPEQ_TEST(core::Environment_O,core::FunctionFrame_O,TYPEQ_ADJUST_STAMP(1203),TYPEQ_ADJUST_STAMP(1267));
      ADD_SINGLE_TYPEQ_TEST(core::CxxMethodFunction_O,TYPEQ_ADJUST_STAMP(1455));
      ADD_SINGLE_TYPEQ_TEST(chem::AGVertex_O,TYPEQ_ADJUST_STAMP(411));
      ADD_SINGLE_TYPEQ_TEST(core::UnwindProtectEnvironment_O,TYPEQ_ADJUST_STAMP(1231));
      ADD_SINGLE_TYPEQ_TEST(clasp_ffi::ForeignData_O,TYPEQ_ADJUST_STAMP(39));
      ADD_SINGLE_TYPEQ_TEST(llvmo::CallInst_O,TYPEQ_ADJUST_STAMP(2315));
      ADD_SINGLE_TYPEQ_TEST(chem::AfterMatchBondToAtomTest_O,TYPEQ_ADJUST_STAMP(1047));
      ADD_SINGLE_TYPEQ_TEST(chem::OligomerPart_Link_O,TYPEQ_ADJUST_STAMP(335));
      ADD_SINGLE_TYPEQ_TEST(adapt::AdaptExposer_O,TYPEQ_ADJUST_STAMP(1155));
      ADD_RANGE_TYPEQ_TEST(core::StringStream_O,core::StringInputStream_O,TYPEQ_ADJUST_STAMP(2659),TYPEQ_ADJUST_STAMP(2667));
      ADD_SINGLE_TYPEQ_TEST(core::Sigset_O,TYPEQ_ADJUST_STAMP(1199));
      ADD_SINGLE_TYPEQ_TEST(llvmo::IntegerType_O,TYPEQ_ADJUST_STAMP(2471));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_int64_t_O,TYPEQ_ADJUST_STAMP(1951));
      ADD_SINGLE_TYPEQ_TEST(llvmo::PassManagerBuilder_O,TYPEQ_ADJUST_STAMP(2455));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_int8_t_O,TYPEQ_ADJUST_STAMP(1507));
      ADD_SINGLE_TYPEQ_TEST(chem::ZMatrixBondInternal_O,TYPEQ_ADJUST_STAMP(571));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ConstantFP_O,TYPEQ_ADJUST_STAMP(2395));
      ADD_RANGE_TYPEQ_TEST(core::SingleDispatchMethodFunction_O,core::CxxMethodFunction_O,TYPEQ_ADJUST_STAMP(1451),TYPEQ_ADJUST_STAMP(1455));
      ADD_SINGLE_TYPEQ_TEST(core::Cons_O,TYPEQ_ADJUST_STAMP(2723));
      ADD_SINGLE_TYPEQ_TEST(chem::Constitution_O,TYPEQ_ADJUST_STAMP(527));
      ADD_SINGLE_TYPEQ_TEST(llvmo::LLVMContext_O,TYPEQ_ADJUST_STAMP(2451));
      ADD_RANGE_TYPEQ_TEST(chem::EntityNameSetBase_O,chem::MonomerPack_O,TYPEQ_ADJUST_STAMP(499),TYPEQ_ADJUST_STAMP(523));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_int4_t_O,TYPEQ_ADJUST_STAMP(1999));
      ADD_RANGE_TYPEQ_TEST(chem::FFBaseDb_O,chem::FFTypesDb_O,TYPEQ_ADJUST_STAMP(375),TYPEQ_ADJUST_STAMP(407));
      ADD_RANGE_TYPEQ_TEST(chem::AbstractLargeSquareMatrix_O,chem::FullLargeSquareMatrix_O,TYPEQ_ADJUST_STAMP(363),TYPEQ_ADJUST_STAMP(371));
      ADD_RANGE_TYPEQ_TEST(core::General_O,core::UserData_O,TYPEQ_ADJUST_STAMP(15),TYPEQ_ADJUST_STAMP(2719));
      ADD_RANGE_TYPEQ_TEST(core::Closure_O,core::SingleDispatchEffectiveMethodFunction_O,TYPEQ_ADJUST_STAMP(1443),TYPEQ_ADJUST_STAMP(1475));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_size_t_O,TYPEQ_ADJUST_STAMP(1875));
      ADD_SINGLE_TYPEQ_TEST(chem::RestraintAngle_O,TYPEQ_ADJUST_STAMP(295));
      ADD_SINGLE_TYPEQ_TEST(chem::CandoDatabase_O,TYPEQ_ADJUST_STAMP(359));
      ADD_SINGLE_TYPEQ_TEST(core::BlockEnvironment_O,TYPEQ_ADJUST_STAMP(1247));
      ADD_SINGLE_TYPEQ_TEST(mpip::Mpi_O,TYPEQ_ADJUST_STAMP(1195));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ConstantDataArray_O,TYPEQ_ADJUST_STAMP(2407));
      ADD_RANGE_TYPEQ_TEST_INSTANCE(core::Instance_O,core::DerivableCxxObject_O,TYPEQ_ADJUST_STAMP(1181),TYPEQ_ADJUST_STAMP(1188));
      ADD_SINGLE_TYPEQ_TEST(chem::MessageReport_O,TYPEQ_ADJUST_STAMP(555));
      ADD_SINGLE_TYPEQ_TEST(core::SmallMap_O,TYPEQ_ADJUST_STAMP(1179));
      ADD_SINGLE_TYPEQ_TEST(clasp_ffi::ForeignTypeSpec_O,TYPEQ_ADJUST_STAMP(1175));
      ADD_SINGLE_TYPEQ_TEST(core::Unused_dummy_O,TYPEQ_ADJUST_STAMP(11));
      ADD_SINGLE_TYPEQ_TEST(core::PosixTimeDuration_O,TYPEQ_ADJUST_STAMP(1171));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyOutOfZPlane_O,TYPEQ_ADJUST_STAMP(95));
      ADD_SINGLE_TYPEQ_TEST(core::HashTableEqual_O,TYPEQ_ADJUST_STAMP(1291));
      ADD_SINGLE_TYPEQ_TEST(llvmo::Triple_O,TYPEQ_ADJUST_STAMP(2447));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_byte64_t_O,TYPEQ_ADJUST_STAMP(1703));
      ADD_SINGLE_TYPEQ_TEST(geom::GeomExposer_O,TYPEQ_ADJUST_STAMP(1151));
      ADD_SINGLE_TYPEQ_TEST(core::CoreExposer_O,TYPEQ_ADJUST_STAMP(1147));
      ADD_RANGE_TYPEQ_TEST(chem::EnergyRigidBodyComponent_O,chem::EnergyRigidBodyNonbond_O,TYPEQ_ADJUST_STAMP(83),TYPEQ_ADJUST_STAMP(91));
      ADD_SINGLE_TYPEQ_TEST(core::BitVectorNs_O,TYPEQ_ADJUST_STAMP(1907));
      ADD_SINGLE_TYPEQ_TEST(kinematics::AggregateNode_O,TYPEQ_ADJUST_STAMP(715));
      ADD_RANGE_TYPEQ_TEST(llvmo::TargetMachine_O,llvmo::LLVMTargetMachine_O,TYPEQ_ADJUST_STAMP(2439),TYPEQ_ADJUST_STAMP(2443));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ThreadSafeContext_O,TYPEQ_ADJUST_STAMP(2435));
      ADD_RANGE_TYPEQ_TEST(llvmo::Value_O,llvmo::MetadataAsValue_O,TYPEQ_ADJUST_STAMP(2279),TYPEQ_ADJUST_STAMP(2431));
      ADD_SINGLE_TYPEQ_TEST(chem::Bond_O,TYPEQ_ADJUST_STAMP(355));
      ADD_SINGLE_TYPEQ_TEST(chem::SuperposableConformationCollection_O,TYPEQ_ADJUST_STAMP(631));
      ADD_SINGLE_TYPEQ_TEST(units::UnitsExposer_O,TYPEQ_ADJUST_STAMP(1143));
      ADD_SINGLE_TYPEQ_TEST(chem::CoordinateSystem_O,TYPEQ_ADJUST_STAMP(351));
      ADD_SINGLE_TYPEQ_TEST(core::Serializer_O,TYPEQ_ADJUST_STAMP(347));
      ADD_SINGLE_TYPEQ_TEST(chem::AtomReference_O,TYPEQ_ADJUST_STAMP(423));
      ADD_SINGLE_TYPEQ_TEST(clbind::ClassRep_O,TYPEQ_ADJUST_STAMP(1185));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ConstantInt_O,TYPEQ_ADJUST_STAMP(2391));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_int16_t_O,TYPEQ_ADJUST_STAMP(1655));
      ADD_SINGLE_TYPEQ_TEST(chem::Logical_O,TYPEQ_ADJUST_STAMP(1015));
      ADD_SINGLE_TYPEQ_TEST(kinematics::BondId_O,TYPEQ_ADJUST_STAMP(343));
      ADD_RANGE_TYPEQ_TEST(llvmo::PassManagerBase_O,llvmo::FunctionPassManager_O,TYPEQ_ADJUST_STAMP(2267),TYPEQ_ADJUST_STAMP(2275));
      ADD_RANGE_TYPEQ_TEST(core::Exposer_O,asttooling::AsttoolingExposer_O,TYPEQ_ADJUST_STAMP(1139),TYPEQ_ADJUST_STAMP(1167));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ConstantStruct_O,TYPEQ_ADJUST_STAMP(2387));
      ADD_SINGLE_TYPEQ_TEST(core::SingleDispatchCxxEffectiveMethodFunction_O,TYPEQ_ADJUST_STAMP(1447));
      ADD_SINGLE_TYPEQ_TEST(core::DirectoryIterator_O,TYPEQ_ADJUST_STAMP(1091));
      ADD_SINGLE_TYPEQ_TEST(chem::JumpPlug_O,TYPEQ_ADJUST_STAMP(739));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DISubroutineType_O,TYPEQ_ADJUST_STAMP(2571));
      ADD_RANGE_TYPEQ_TEST(kinematics::JumpJoint_O,kinematics::OriginJumpJoint_O,TYPEQ_ADJUST_STAMP(219),TYPEQ_ADJUST_STAMP(223));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleBitVector_O,TYPEQ_ADJUST_STAMP(2119));
      ADD_SINGLE_TYPEQ_TEST(core::FunctionContainerEnvironment_O,TYPEQ_ADJUST_STAMP(1227));
      ADD_RANGE_TYPEQ_TEST(chem::OligomerPart_Base_O,chem::OligomerPart_Monomer_O,TYPEQ_ADJUST_STAMP(331),TYPEQ_ADJUST_STAMP(339));
      ADD_SINGLE_TYPEQ_TEST(chem::CDNode_O,TYPEQ_ADJUST_STAMP(327));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ResumeInst_O,TYPEQ_ADJUST_STAMP(2299));
      ADD_SINGLE_TYPEQ_TEST(llvmo::Function_O,TYPEQ_ADJUST_STAMP(2375));
      ADD_SINGLE_TYPEQ_TEST(chem::AddIonOctree_O,TYPEQ_ADJUST_STAMP(323));
      ADD_SINGLE_TYPEQ_TEST(chem::StereoInformation_O,TYPEQ_ADJUST_STAMP(319));
      ADD_SINGLE_TYPEQ_TEST(geom::BoundingCuboid_O,TYPEQ_ADJUST_STAMP(315));
      ADD_SINGLE_TYPEQ_TEST(chem::AtomIndexer_O,TYPEQ_ADJUST_STAMP(311));
      ADD_RANGE_TYPEQ_TEST(chem::Restraint_O,chem::RestraintDihedral_O,TYPEQ_ADJUST_STAMP(283),TYPEQ_ADJUST_STAMP(307));
      ADD_SINGLE_TYPEQ_TEST(llvmo::IRBuilder_O,TYPEQ_ADJUST_STAMP(2251));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ClaspJIT_O,TYPEQ_ADJUST_STAMP(1135));
      ADD_RANGE_TYPEQ_TEST(chem::FFParameter_O,chem::FFAngle_O,TYPEQ_ADJUST_STAMP(255),TYPEQ_ADJUST_STAMP(279));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_byte8_t_O,TYPEQ_ADJUST_STAMP(2167));
      ADD_RANGE_TYPEQ_TEST(llvmo::DILexicalBlockBase_O,llvmo::DILexicalBlock_O,TYPEQ_ADJUST_STAMP(2547),TYPEQ_ADJUST_STAMP(2551));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_fixnum_O,TYPEQ_ADJUST_STAMP(1935));
      ADD_SINGLE_TYPEQ_TEST(chem::RepresentedEntityNameSet_O,TYPEQ_ADJUST_STAMP(519));
      ADD_SINGLE_TYPEQ_TEST(chem::MonomerCoordinates_O,TYPEQ_ADJUST_STAMP(251));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyFunction_O,TYPEQ_ADJUST_STAMP(431));
      ADD_SINGLE_TYPEQ_TEST(llvmo::VAArgInst_O,TYPEQ_ADJUST_STAMP(2331));
      ADD_SINGLE_TYPEQ_TEST(chem::Twister_O,TYPEQ_ADJUST_STAMP(247));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_fixnum_O,TYPEQ_ADJUST_STAMP(1563));
      ADD_SINGLE_TYPEQ_TEST(core::SharpEqualWrapper_O,TYPEQ_ADJUST_STAMP(1131));
      ADD_SINGLE_TYPEQ_TEST(geom::SimpleMDArrayCoordinate_O,TYPEQ_ADJUST_STAMP(1735));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DIFile_O,TYPEQ_ADJUST_STAMP(2535));
      ADD_SINGLE_TYPEQ_TEST(chem::AntechamberFocusAtomMatch_O,TYPEQ_ADJUST_STAMP(1011));
      ADD_SINGLE_TYPEQ_TEST(chem::PdbMonomerDatabase_O,TYPEQ_ADJUST_STAMP(243));
      ADD_SINGLE_TYPEQ_TEST(chem::Aggregate_O,TYPEQ_ADJUST_STAMP(147));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_int8_t_O,TYPEQ_ADJUST_STAMP(1607));
      ADD_SINGLE_TYPEQ_TEST(chem::SearchStatistics_O,TYPEQ_ADJUST_STAMP(239));
      ADD_SINGLE_TYPEQ_TEST(llvmo::EngineBuilder_O,TYPEQ_ADJUST_STAMP(2263));
      ADD_RANGE_TYPEQ_TEST(kinematics::Joint_O,kinematics::DelayedBondedJoint_O,TYPEQ_ADJUST_STAMP(215),TYPEQ_ADJUST_STAMP(235));
      ADD_SINGLE_TYPEQ_TEST(core::TagbodyEnvironment_O,TYPEQ_ADJUST_STAMP(1243));
      ADD_SINGLE_TYPEQ_TEST(core::SpecialForm_O,TYPEQ_ADJUST_STAMP(1439));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyStretch_O,TYPEQ_ADJUST_STAMP(79));
      ADD_SINGLE_TYPEQ_TEST(llvmo::FunctionCallee_O,TYPEQ_ADJUST_STAMP(211));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DIBuilder_O,TYPEQ_ADJUST_STAMP(2259));
      ADD_SINGLE_TYPEQ_TEST(llvmo::APInt_O,TYPEQ_ADJUST_STAMP(2255));
      ADD_RANGE_TYPEQ_TEST(core::Symbol_O,core::Null_O,TYPEQ_ADJUST_STAMP(1123),TYPEQ_ADJUST_STAMP(1127));
      ADD_RANGE_TYPEQ_TEST(chem::AtomOrBondMatchNode_O,chem::AtomTest_O,TYPEQ_ADJUST_STAMP(991),TYPEQ_ADJUST_STAMP(1019));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_byte4_t_O,TYPEQ_ADJUST_STAMP(1523));
      ADD_RANGE_TYPEQ_TEST(core::Iterator_O,chem::IterateAtoms_O,TYPEQ_ADJUST_STAMP(1087),TYPEQ_ADJUST_STAMP(1119));
      ADD_SINGLE_TYPEQ_TEST(chem::FFItorDb_O,TYPEQ_ADJUST_STAMP(383));
      ADD_RANGE_TYPEQ_TEST(llvmo::IRBuilderBase_O,llvmo::IRBuilder_O,TYPEQ_ADJUST_STAMP(2247),TYPEQ_ADJUST_STAMP(2251));
      ADD_SINGLE_TYPEQ_TEST(core::Null_O,TYPEQ_ADJUST_STAMP(1127));
      ADD_SINGLE_TYPEQ_TEST(chem::RingFinder_O,TYPEQ_ADJUST_STAMP(207));
      ADD_SINGLE_TYPEQ_TEST(core::SingleDispatchMethod_O,TYPEQ_ADJUST_STAMP(1083));
      ADD_SINGLE_TYPEQ_TEST(core::NativeVector_double_O,TYPEQ_ADJUST_STAMP(203));
      ADD_RANGE_TYPEQ_TEST(core::CxxObject_O,mp::Process_O,TYPEQ_ADJUST_STAMP(43),TYPEQ_ADJUST_STAMP(1079));
      ADD_SINGLE_TYPEQ_TEST(llvmo::FunctionType_O,TYPEQ_ADJUST_STAMP(2467));
      ADD_SINGLE_TYPEQ_TEST(clbind::DummyCreator_O,TYPEQ_ADJUST_STAMP(1419));
      ADD_SINGLE_TYPEQ_TEST(llvmo::JITDylib_O,TYPEQ_ADJUST_STAMP(2243));
      ADD_RANGE_TYPEQ_TEST(core::Pointer_O,clasp_ffi::ForeignData_O,TYPEQ_ADJUST_STAMP(35),TYPEQ_ADJUST_STAMP(39));
      ADD_SINGLE_TYPEQ_TEST(llvmo::UnreachableInst_O,TYPEQ_ADJUST_STAMP(2295));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_int64_t_O,TYPEQ_ADJUST_STAMP(1943));
      ADD_RANGE_TYPEQ_TEST(chem::FFParameterBaseDb_O,chem::FFPtorDb_O,TYPEQ_ADJUST_STAMP(379),TYPEQ_ADJUST_STAMP(399));
      ADD_RANGE_TYPEQ_TEST(core::Float_O,core::ShortFloat_O,TYPEQ_ADJUST_STAMP(1335),TYPEQ_ADJUST_STAMP(1351));
      ADD_SINGLE_TYPEQ_TEST(chem::ResidueTest_O,TYPEQ_ADJUST_STAMP(1007));
      ADD_SINGLE_TYPEQ_TEST(chem::RestraintDistance_O,TYPEQ_ADJUST_STAMP(291));
      ADD_SINGLE_TYPEQ_TEST(chem::SmartsRoot_O,TYPEQ_ADJUST_STAMP(999));
      ADD_SINGLE_TYPEQ_TEST(clbind::ConstructorCreator_O,TYPEQ_ADJUST_STAMP(1415));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DIDerivedType_O,TYPEQ_ADJUST_STAMP(2567));
      ADD_SINGLE_TYPEQ_TEST(chem::TwisterDriver_O,TYPEQ_ADJUST_STAMP(199));
      ADD_SINGLE_TYPEQ_TEST(core::TranslationFunctor_O,TYPEQ_ADJUST_STAMP(1463));
      ADD_SINGLE_TYPEQ_TEST(units::NamedUnit_O,TYPEQ_ADJUST_STAMP(775));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_double_O,TYPEQ_ADJUST_STAMP(2007));
      ADD_SINGLE_TYPEQ_TEST(llvmo::StoreInst_O,TYPEQ_ADJUST_STAMP(2291));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_byte8_t_O,TYPEQ_ADJUST_STAMP(1759));
      ADD_SINGLE_TYPEQ_TEST(chem::VirtualSphere_O,TYPEQ_ADJUST_STAMP(195));
      ADD_RANGE_TYPEQ_TEST(core::Rational_O,core::Fixnum_dummy_O,TYPEQ_ADJUST_STAMP(1315),TYPEQ_ADJUST_STAMP(1331));
      ADD_SINGLE_TYPEQ_TEST(adapt::IndexedObjectBag_O,TYPEQ_ADJUST_STAMP(191));
      ADD_SINGLE_TYPEQ_TEST(chem::CipPrioritizer_O,TYPEQ_ADJUST_STAMP(187));
      ADD_SINGLE_TYPEQ_TEST(core::AtomicT_Holder_O,TYPEQ_ADJUST_STAMP(31));
      ADD_SINGLE_TYPEQ_TEST(chem::AtomTable_O,TYPEQ_ADJUST_STAMP(183));
      ADD_RANGE_TYPEQ_TEST(core::Real_O,core::ShortFloat_O,TYPEQ_ADJUST_STAMP(1311),TYPEQ_ADJUST_STAMP(1351));
      ADD_SINGLE_TYPEQ_TEST(core::FuncallableInstanceCreator_O,TYPEQ_ADJUST_STAMP(1411));
      ADD_SINGLE_TYPEQ_TEST(chem::Topology_O,TYPEQ_ADJUST_STAMP(179));
      ADD_SINGLE_TYPEQ_TEST(core::StringOutputStream_O,TYPEQ_ADJUST_STAMP(2663));
      ADD_RANGE_TYPEQ_TEST(chem::EntityNameSetWithCap_O,chem::RingClosingMate_O,TYPEQ_ADJUST_STAMP(503),TYPEQ_ADJUST_STAMP(511));
      ADD_RANGE_TYPEQ_TEST(chem::BondMatcher_O,chem::BondLogical_O,TYPEQ_ADJUST_STAMP(975),TYPEQ_ADJUST_STAMP(983));
      ADD_SINGLE_TYPEQ_TEST(llvmo::AttributeSet_O,TYPEQ_ADJUST_STAMP(27));
      ADD_SINGLE_TYPEQ_TEST(llvmo::MDBuilder_O,TYPEQ_ADJUST_STAMP(175));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DISubprogram_O,TYPEQ_ADJUST_STAMP(2543));
      ADD_SINGLE_TYPEQ_TEST(chem::TrajectoryFrame_O,TYPEQ_ADJUST_STAMP(171));
      ADD_RANGE_TYPEQ_TEST(core::Creator_O,core::StandardClassCreator_O,TYPEQ_ADJUST_STAMP(1407),TYPEQ_ADJUST_STAMP(1435));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ArrayType_O,TYPEQ_ADJUST_STAMP(2487));
      ADD_SINGLE_TYPEQ_TEST(chem::PdbWriter_O,TYPEQ_ADJUST_STAMP(167));
      ADD_SINGLE_TYPEQ_TEST(chem::Stereoisomer_O,TYPEQ_ADJUST_STAMP(495));
      ADD_RANGE_TYPEQ_TEST(llvmo::MCSubtargetInfo_O,llvmo::TargetSubtargetInfo_O,TYPEQ_ADJUST_STAMP(2235),TYPEQ_ADJUST_STAMP(2239));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_byte2_t_O,TYPEQ_ADJUST_STAMP(1679));
      ADD_SINGLE_TYPEQ_TEST(llvmo::BlockAddress_O,TYPEQ_ADJUST_STAMP(2383));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DICompositeType_O,TYPEQ_ADJUST_STAMP(2563));
      ADD_RANGE_TYPEQ_TEST(chem::Matter_O,chem::Molecule_O,TYPEQ_ADJUST_STAMP(143),TYPEQ_ADJUST_STAMP(163));
      ADD_SINGLE_TYPEQ_TEST(core::HashTableEq_O,TYPEQ_ADJUST_STAMP(1287));
      ADD_SINGLE_TYPEQ_TEST(chem::RestraintChiral_O,TYPEQ_ADJUST_STAMP(287));
      ADD_RANGE_TYPEQ_TEST(chem::EnergyComponent_O,chem::EnergyAngle_O,TYPEQ_ADJUST_STAMP(75),TYPEQ_ADJUST_STAMP(139));
      ADD_SINGLE_TYPEQ_TEST(kinematics::DelayedBondedJointTemplate_O,TYPEQ_ADJUST_STAMP(615));
      ADD_SINGLE_TYPEQ_TEST(core::HashTableEqualp_O,TYPEQ_ADJUST_STAMP(1283));
      ADD_SINGLE_TYPEQ_TEST(core::LambdaListHandler_O,TYPEQ_ADJUST_STAMP(23));
      ADD_RANGE_TYPEQ_TEST(kinematics::RotamerSetBase_O,kinematics::RotamerSet_O,TYPEQ_ADJUST_STAMP(63),TYPEQ_ADJUST_STAMP(71));
      ADD_SINGLE_TYPEQ_TEST(core::SymbolMacroletEnvironment_O,TYPEQ_ADJUST_STAMP(1223));
      ADD_SINGLE_TYPEQ_TEST(chem::RestrainedExoCyclicAtom_O,TYPEQ_ADJUST_STAMP(919));
      ADD_RANGE_TYPEQ_TEST(llvmo::ImmutablePass_O,llvmo::TargetLibraryInfoWrapperPass_O,TYPEQ_ADJUST_STAMP(2223),TYPEQ_ADJUST_STAMP(2227));
      ADD_SINGLE_TYPEQ_TEST(core::FuncallableInstance_O,TYPEQ_ADJUST_STAMP(1401));
      ADD_SINGLE_TYPEQ_TEST(chem::StatusTracker_O,TYPEQ_ADJUST_STAMP(59));
      ADD_SINGLE_TYPEQ_TEST(chem::RingCoupling_O,TYPEQ_ADJUST_STAMP(643));
      ADD_SINGLE_TYPEQ_TEST(kinematics::FoldTree_O,TYPEQ_ADJUST_STAMP(55));
      ADD_SINGLE_TYPEQ_TEST(chem::NumericalFunction_O,TYPEQ_ADJUST_STAMP(51));
      ADD_SINGLE_TYPEQ_TEST(core::SynonymStream_O,TYPEQ_ADJUST_STAMP(2655));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_int2_t_O,TYPEQ_ADJUST_STAMP(1555));
      ADD_SINGLE_TYPEQ_TEST(kinematics::ChiList_O,TYPEQ_ADJUST_STAMP(47));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_int16_t_O,TYPEQ_ADJUST_STAMP(2103));
      ADD_RANGE_TYPEQ_TEST(llvmo::Pass_O,llvmo::FunctionPass_O,TYPEQ_ADJUST_STAMP(2215),TYPEQ_ADJUST_STAMP(2231));
      ADD_SINGLE_TYPEQ_TEST(chem::StepReport_O,TYPEQ_ADJUST_STAMP(551));
      ADD_RANGE_TYPEQ_TEST(kinematics::BondedJointTemplate_O,kinematics::RootBondedJointTemplate_O,TYPEQ_ADJUST_STAMP(611),TYPEQ_ADJUST_STAMP(619));
      ADD_SINGLE_TYPEQ_TEST(chem::FFVdw_O,TYPEQ_ADJUST_STAMP(259));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_byte4_t_O,TYPEQ_ADJUST_STAMP(1827));
      ADD_SINGLE_TYPEQ_TEST(core::CatchEnvironment_O,TYPEQ_ADJUST_STAMP(1219));
      ADD_SINGLE_TYPEQ_TEST(kinematics::RingClosingMonomerNode_O,TYPEQ_ADJUST_STAMP(727));
      ADD_SINGLE_TYPEQ_TEST(llvmo::TargetSubtargetInfo_O,TYPEQ_ADJUST_STAMP(2239));
      ADD_RANGE_TYPEQ_TEST(chem::Root_O,chem::AntechamberRoot_O,TYPEQ_ADJUST_STAMP(995),TYPEQ_ADJUST_STAMP(1003));
      ADD_SINGLE_TYPEQ_TEST(core::Bignum_O,TYPEQ_ADJUST_STAMP(1327));
      ADD_SINGLE_TYPEQ_TEST(kinematics::RootBondedJoint_O,TYPEQ_ADJUST_STAMP(231));
      ADD_RANGE_TYPEQ_TEST(llvmo::SequentialType_O,llvmo::VectorType_O,TYPEQ_ADJUST_STAMP(2479),TYPEQ_ADJUST_STAMP(2491));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_byte32_t_O,TYPEQ_ADJUST_STAMP(1899));
      ADD_RANGE_TYPEQ_TEST(llvmo::GlobalValue_O,llvmo::GlobalVariable_O,TYPEQ_ADJUST_STAMP(2371),TYPEQ_ADJUST_STAMP(2379));
      ADD_SINGLE_TYPEQ_TEST(llvmo::PointerType_O,TYPEQ_ADJUST_STAMP(2483));
      ADD_SINGLE_TYPEQ_TEST(core::MultiStringBuffer_O,TYPEQ_ADJUST_STAMP(19));
#endif // defined(GC_TYPEQ)
#if defined(GC_STAMP_SELECTORS)
template <> class gctools::GCStamp<core::TwoWayStream_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__TwoWayStream_O ;
};
template <> class gctools::GCStamp<chem::EnergyAngle_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergyAngle_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_byte2_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_byte2_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<float>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_float_ ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_fixnum_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_fixnum_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<unsigned short>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCArray_moveable_unsigned_short_ ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_int32_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_int32_t_O ;
};
template <> class gctools::GCStamp<core::Integer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Integer_O ;
};
template <> class gctools::GCStamp<chem::OutPlug_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__OutPlug_O ;
};
template <> class gctools::GCStamp<mp::Process_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_mp__Process_O ;
};
template <> class gctools::GCStamp<core::LightUserData_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__LightUserData_O ;
};
template <> class gctools::GCStamp<core::MDArrayT_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArrayT_O ;
};
template <> class gctools::GCStamp<core::DirectoryEntry_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__DirectoryEntry_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__ ;
};
template <> class gctools::GCStamp<llvmo::Linker_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__Linker_O ;
};
template <> class gctools::GCStamp<chem::AtomIdToAtomMap_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__AtomIdToAtomMap_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__ ;
};
template <> class gctools::GCStamp<core::MDArray_float_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_float_O ;
};
template <> class gctools::GCStamp<chem::EnergyImproperRestraint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergyImproperRestraint_O ;
};
template <> class gctools::GCStamp<chem::IterateMatter_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__IterateMatter_O ;
};
template <> class gctools::GCStamp<chem::FFTypesDb_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFTypesDb_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_float_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_float_O ;
};
template <> class gctools::GCStamp<core::StandardClassCreator_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__StandardClassCreator_O ;
};
template <> class gctools::GCStamp<chem::Alias_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Alias_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyStretch>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__EnergyStretch_ ;
};
template <> class gctools::GCStamp<chem::MapOfMonomerNamesToAtomIndexers_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__MapOfMonomerNamesToAtomIndexers_O ;
};
template <> class gctools::GCStamp<adapt::SymbolSet_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_adapt__SymbolSet_O ;
};
template <> class gctools::GCStamp<chem::Minimizer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Minimizer_O ;
};
template <> class gctools::GCStamp<chem::SpecificContext_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__SpecificContext_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__ ;
};
template <> class gctools::GCStamp<chem::Molecule_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Molecule_O ;
};
template <> class gctools::GCStamp<core::InvocationHistoryFrameIterator_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__InvocationHistoryFrameIterator_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_size_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_size_t_O ;
};
template <> class gctools::GCStamp<kinematics::CheckpointOutPlugJoint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__CheckpointOutPlugJoint_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__ ;
};
template <> class gctools::GCStamp<chem::Dimacs_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Dimacs_O ;
};
template <> class gctools::GCStamp<llvmo::DIScope_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DIScope_O ;
};
template <> class gctools::GCStamp<chem::FullLargeSquareMatrix_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FullLargeSquareMatrix_O ;
};
template <> class gctools::GCStamp<core::FileStatus_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__FileStatus_O ;
};
template <> class gctools::GCStamp<chem::EnergySketchStretch_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergySketchStretch_O ;
};
template <> class gctools::GCStamp<llvmo::IndirectBrInst_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__IndirectBrInst_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___ ;
};
template <> class gctools::GCStamp<llvmo::ConstantArray_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ConstantArray_O ;
};
template <> class gctools::GCStamp<chem::OligomerPart_Monomer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__OligomerPart_Monomer_O ;
};
template <> class gctools::GCStamp<llvmo::PHINode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__PHINode_O ;
};
template <> class gctools::GCStamp<chem::EnergyFixedNonbondRestraint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergyFixedNonbondRestraint_O ;
};
template <> class gctools::GCStamp<core::Package_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Package_O ;
};
template <> class gctools::GCStamp<chem::AtomTest_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__AtomTest_O ;
};
template <> class gctools::GCStamp<core::Stream_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Stream_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::RigidBodyAtomInfo>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_ ;
};
template <> class gctools::GCStamp<chem::EnergyAnchorRestraint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergyAnchorRestraint_O ;
};
template <> class gctools::GCStamp<chem::FFAngle_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFAngle_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__ ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<long>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCArray_moveable_long_ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::ResidueOut>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__ResidueOut_ ;
};
template <> class gctools::GCStamp<core::ShortFloat_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ShortFloat_O ;
};
template <> class gctools::GCStamp<llvmo::MDString_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__MDString_O ;
};
template <> class gctools::GCStamp<core::Cache_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Cache_O ;
};
template <> class gctools::GCStamp<core::AbstractSimpleVector_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__AbstractSimpleVector_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_byte16_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_byte16_t_O ;
};
template <> class gctools::GCStamp<core::Pathname_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Pathname_O ;
};
template <> class gctools::GCStamp<core::Str8Ns_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Str8Ns_O ;
};
template <> class gctools::GCStamp<llvmo::UndefValue_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__UndefValue_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::AuxArgument>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_core__AuxArgument_ ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__ ;
};
template <> class gctools::GCStamp<chem::ChemInfoNode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ChemInfoNode_O ;
};
template <> class gctools::GCStamp<core::Path_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Path_O ;
};
template <> class gctools::GCStamp<chem::BoundingBox_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__BoundingBox_O ;
};
template <> class gctools::GCStamp<chem::StructureComparer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__StructureComparer_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<int>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCArray_moveable_int_ ;
};
template <> class gctools::GCStamp<core::IOStreamStream_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__IOStreamStream_O ;
};
template <> class gctools::GCStamp<core::Scope_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Scope_O ;
};
template <> class gctools::GCStamp<chem::BondLogical_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__BondLogical_O ;
};
template <> class gctools::GCStamp<chem::MoleculeGraph_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__MoleculeGraph_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyAtom>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__EnergyAtom_ ;
};
template <> class gctools::GCStamp<core::ComplexVector_double_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_double_O ;
};
template <> class gctools::GCStamp<chem::Monomer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Monomer_O ;
};
template <> class gctools::GCStamp<kinematics::Conformation_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__Conformation_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__ ;
};
template <> class gctools::GCStamp<chem::ConstitutionAtoms_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ConstitutionAtoms_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArrayBit_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArrayBit_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__ ;
};
template <> class gctools::GCStamp<core::AtomicFixnumHolder_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__AtomicFixnumHolder_O ;
};
template <> class gctools::GCStamp<chem::Branch_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Branch_O ;
};
template <> class gctools::GCStamp<kinematics::ChiDihedral_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__ChiDihedral_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_int2_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_int2_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::AtomInfo>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__AtomInfo_ ;
};
template <> class gctools::GCStamp<chem::ConstitutionBond_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ConstitutionBond_O ;
};
template <> class gctools::GCStamp<chem::CDBond_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__CDBond_O ;
};
template <> class gctools::GCStamp<chem::CombinedForceField_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__CombinedForceField_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___ ;
};
template <> class gctools::GCStamp<mp::Mutex_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_mp__Mutex_O ;
};
template <> class gctools::GCStamp<core::RecursiveDirectoryIterator_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__RecursiveDirectoryIterator_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyNonbond>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__EnergyNonbond_ ;
};
template <> class gctools::GCStamp<chem::RestraintDihedral_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__RestraintDihedral_O ;
};
template <> class gctools::GCStamp<chem::AntechamberRoot_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__AntechamberRoot_O ;
};
template <> class gctools::GCStamp<core::StringInputStream_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__StringInputStream_O ;
};
template <> class gctools::GCStamp<core::FunctionFrame_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__FunctionFrame_O ;
};
template <> class gctools::GCStamp<chem::IterateAtoms_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__IterateAtoms_O ;
};
template <> class gctools::GCStamp<core::LongFloat_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__LongFloat_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_int4_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_int4_t_O ;
};
template <> class gctools::GCStamp<chem::FFPtorDb_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFPtorDb_O ;
};
template <> class gctools::GCStamp<chem::ComplexRestraint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ComplexRestraint_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_T_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_T_O ;
};
template <> class gctools::GCStamp<chem::RootMatchNode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__RootMatchNode_O ;
};
template <> class gctools::GCStamp<core::ValueFrame_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ValueFrame_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<unsigned long>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCArray_moveable_unsigned_long_ ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_int4_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_int4_t_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_int32_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_int32_t_O ;
};
template <> class gctools::GCStamp<core::Complex_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Complex_O ;
};
template <> class gctools::GCStamp<chem::ConformationCollectionEntry_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ConformationCollectionEntry_O ;
};
template <> class gctools::GCStamp<geom::OMatrix_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_geom__OMatrix_O ;
};
template <> class gctools::GCStamp<chem::RingClosingMate_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__RingClosingMate_O ;
};
template <> class gctools::GCStamp<llvmo::ValueAsMetadata_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ValueAsMetadata_O ;
};
template <> class gctools::GCStamp<llvmo::ConstantExpr_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ConstantExpr_O ;
};
template <> class gctools::GCStamp<core::SingleDispatchEffectiveMethodFunction_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SingleDispatchEffectiveMethodFunction_O ;
};
template <> class gctools::GCStamp<chem::FFNonbondDb_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFNonbondDb_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__ ;
};
template <> class gctools::GCStamp<llvmo::StructType_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__StructType_O ;
};
template <> class gctools::GCStamp<chem::EnergyNonbond_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergyNonbond_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_int16_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_int16_t_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_float_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_float_O ;
};
template <> class gctools::GCStamp<chem::Residue_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Residue_O ;
};
template <> class gctools::GCStamp<chem::CalculatePosition_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__CalculatePosition_O ;
};
template <> class gctools::GCStamp<chem::SuperposeSelectedAtoms_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__SuperposeSelectedAtoms_O ;
};
template <> class gctools::GCStamp<llvmo::Target_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__Target_O ;
};
template <> class gctools::GCStamp<kinematics::MonomerNode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__MonomerNode_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_byte32_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_byte32_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___ ;
};
template <> class gctools::GCStamp<core::SingleDispatchGenericFunctionClosure_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SingleDispatchGenericFunctionClosure_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__ ;
};
template <> class gctools::GCStamp<llvmo::Module_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__Module_O ;
};
template <> class gctools::GCStamp<llvmo::DIExpression_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DIExpression_O ;
};
template <> class gctools::GCStamp<core::SingleFloat_dummy_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SingleFloat_dummy_O ;
};
template <> class gctools::GCStamp<core::ValueEnvironment_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ValueEnvironment_O ;
};
template <> class gctools::GCStamp<chem::Trajectory_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Trajectory_O ;
};
template <> class gctools::GCStamp<llvmo::InvokeInst_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__InvokeInst_O ;
};
template <> class gctools::GCStamp<chem::RestraintFixedNonbond_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__RestraintFixedNonbond_O ;
};
template <> class gctools::GCStamp<chem::FFNonbond_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFNonbond_O ;
};
template <> class gctools::GCStamp<core::StrNs_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__StrNs_O ;
};
template <> class gctools::GCStamp<chem::VirtualAtom_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__VirtualAtom_O ;
};
template <> class gctools::GCStamp<chem::OriginPlug_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__OriginPlug_O ;
};
template <> class gctools::GCStamp<llvmo::FunctionPassManager_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__FunctionPassManager_O ;
};
template <> class gctools::GCStamp<core::DoubleFloat_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__DoubleFloat_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___ ;
};
template <> class gctools::GCStamp<chem::ConformationExplorerEntryStage_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ConformationExplorerEntryStage_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_ ;
};
template <> class gctools::GCStamp<chem::FrameRecognizer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FrameRecognizer_O ;
};
template <> class gctools::GCStamp<chem::CalculatePositionAlongBond_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__CalculatePositionAlongBond_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::SymbolStorage>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_core__SymbolStorage_ ;
};
template <> class gctools::GCStamp<core::MDArray_int32_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_int32_t_O ;
};
template <> class gctools::GCStamp<adapt::SymbolList_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_adapt__SymbolList_O ;
};
template <> class gctools::GCStamp<chem::CalculatePositionUsingInternals_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__CalculatePositionUsingInternals_O ;
};
template <> class gctools::GCStamp<chem::EnergyPeriodicBoundaryConditionsNonbond_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergyPeriodicBoundaryConditionsNonbond_O ;
};
template <> class gctools::GCStamp<asttooling::AsttoolingExposer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_asttooling__AsttoolingExposer_O ;
};
template <> class gctools::GCStamp<chem::EnergyDihedral_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergyDihedral_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_size_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_size_t_O ;
};
template <> class gctools::GCStamp<core::SmallMultimap_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SmallMultimap_O ;
};
template <> class gctools::GCStamp<core::Fixnum_dummy_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Fixnum_dummy_O ;
};
template <> class gctools::GCStamp<gctools::GCBitUnitArray_moveable<4,1>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCBitUnitArray_moveable_4_1_ ;
};
template <> class gctools::GCStamp<chem::ImproperTorsion_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ImproperTorsion_O ;
};
template <> class gctools::GCStamp<chem::ZMatrixAngleInternal_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ZMatrixAngleInternal_O ;
};
template <> class gctools::GCStamp<chem::Rotamer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Rotamer_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__ ;
};
template <> class gctools::GCStamp<core::WeakKeyHashTable_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__WeakKeyHashTable_O ;
};
template <> class gctools::GCStamp<core::Rack_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Rack_O ;
};
template <> class gctools::GCStamp<core::MDArrayBaseChar_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArrayBaseChar_O ;
};
template <> class gctools::GCStamp<core::UserData_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__UserData_O ;
};
template <> class gctools::GCStamp<core::ExternalObject_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ExternalObject_O ;
};
template <> class gctools::GCStamp<llvmo::DINode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DINode_O ;
};
template <> class gctools::GCStamp<llvmo::GlobalVariable_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__GlobalVariable_O ;
};
template <> class gctools::GCStamp<core::BroadcastStream_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__BroadcastStream_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__ ;
};
template <> class gctools::GCStamp<chem::StereoisomerAtoms_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__StereoisomerAtoms_O ;
};
template <> class gctools::GCStamp<chem::ConformationExplorerMatch_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ConformationExplorerMatch_O ;
};
template <> class gctools::GCStamp<chem::ChemExposer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ChemExposer_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::RequiredArgument>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_core__RequiredArgument_ ;
};
template <> class gctools::GCStamp<kinematics::Checkpoint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__Checkpoint_O ;
};
template <> class gctools::GCStamp<llvmo::DINodeArray_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DINodeArray_O ;
};
template <> class gctools::GCStamp<llvmo::TargetOptions_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__TargetOptions_O ;
};
template <> class gctools::GCStamp<chem::CDText_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__CDText_O ;
};
template <> class gctools::GCStamp<chem::BondTest_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__BondTest_O ;
};
template <> class gctools::GCStamp<adapt::IterateCons_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_adapt__IterateCons_O ;
};
template <> class gctools::GCStamp<geom::SimpleVectorCoordinate_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_geom__SimpleVectorCoordinate_O ;
};
template <> class gctools::GCStamp<chem::FFItor_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFItor_O ;
};
template <> class gctools::GCStamp<llvmo::NamedMDNode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__NamedMDNode_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_byte16_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_byte16_t_O ;
};
template <> class gctools::GCStamp<chem::ChemInfoGraph_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ChemInfoGraph_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_byte64_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_byte64_t_O ;
};
template <> class gctools::GCStamp<chem::EnergyPointToLineRestraint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergyPointToLineRestraint_O ;
};
template <> class gctools::GCStamp<core::SimpleBaseString_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleBaseString_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__ ;
};
template <> class gctools::GCStamp<llvmo::Metadata_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__Metadata_O ;
};
template <> class gctools::GCStamp<core::MDArray_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___ ;
};
template <> class gctools::GCStamp<chem::RigidBodyEnergyFunction_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__RigidBodyEnergyFunction_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___ ;
};
template <> class gctools::GCStamp<kinematics::ChainNode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__ChainNode_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<double>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCArray_moveable_double_ ;
};
template <> class gctools::GCStamp<kinematics::CheckpointJoint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__CheckpointJoint_O ;
};
template <> class gctools::GCStamp<llvmo::CompositeType_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__CompositeType_O ;
};
template <> class gctools::GCStamp<chem::Mate_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Mate_O ;
};
template <> class gctools::GCStamp<llvmo::StructLayout_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__StructLayout_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArrayT_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArrayT_O ;
};
template <> class gctools::GCStamp<chem::ConformationExplorer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ConformationExplorer_O ;
};
template <> class gctools::GCStamp<chem::BondList_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__BondList_O ;
};
template <> class gctools::GCStamp<core::ActivationFrame_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ActivationFrame_O ;
};
template <> class gctools::GCStamp<llvmo::LoadInst_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__LoadInst_O ;
};
template <> class gctools::GCStamp<chem::MacroModelFile_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__MacroModelFile_O ;
};
template <> class gctools::GCStamp<core::MDArray_byte2_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_byte2_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__ ;
};
template <> class gctools::GCStamp<chem::Angle_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Angle_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__ ;
};
template <> class gctools::GCStamp<core::LexicalEnvironment_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__LexicalEnvironment_O ;
};
template <> class gctools::GCStamp<core::PosixTime_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__PosixTime_O ;
};
template <> class gctools::GCStamp<llvmo::MetadataAsValue_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__MetadataAsValue_O ;
};
template <> class gctools::GCStamp<kinematics::RotamerSet_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__RotamerSet_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__ ;
};
template <> class gctools::GCStamp<core::SimpleVector_int8_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_int8_t_O ;
};
template <> class gctools::GCStamp<chem::SpecificContextSet_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__SpecificContextSet_O ;
};
template <> class gctools::GCStamp<llvmo::DIType_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DIType_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::FixedNonbondRestraint>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__FixedNonbondRestraint_ ;
};
template <> class gctools::GCStamp<chem::ZMatrixEntry_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ZMatrixEntry_O ;
};
template <> class gctools::GCStamp<core::Readtable_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Readtable_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__ ;
};
template <> class gctools::GCStamp<chem::CalculatePositionRelativeToOrigin_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__CalculatePositionRelativeToOrigin_O ;
};
template <> class gctools::GCStamp<chem::ChemInfoMatch_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ChemInfoMatch_O ;
};
template <> class gctools::GCStamp<units::Quantity_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_units__Quantity_O ;
};
template <> class gctools::GCStamp<kinematics::AtomTree_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__AtomTree_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__ ;
};
template <> class gctools::GCStamp<llvmo::MDNode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__MDNode_O ;
};
template <> class gctools::GCStamp<chem::GenericOctree_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__GenericOctree_O ;
};
template <> class gctools::GCStamp<mp::RecursiveMutex_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_mp__RecursiveMutex_O ;
};
template <> class gctools::GCStamp<chem::MinimizerLog_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__MinimizerLog_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_float_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_float_O ;
};
template <> class gctools::GCStamp<chem::FFVdwDb_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFVdwDb_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_int4_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_int4_t_O ;
};
template <> class gctools::GCStamp<chem::FFPtor_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFPtor_O ;
};
template <> class gctools::GCStamp<chem::InfoDb_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__InfoDb_O ;
};
template <> class gctools::GCStamp<core::LoadTimeValues_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__LoadTimeValues_O ;
};
template <> class gctools::GCStamp<kinematics::OriginJumpJoint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__OriginJumpJoint_O ;
};
template <> class gctools::GCStamp<llvmo::DataLayout_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DataLayout_O ;
};
template <> class gctools::GCStamp<llvmo::BasicBlock_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__BasicBlock_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_byte64_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_byte64_t_O ;
};
template <> class gctools::GCStamp<chem::AntechamberBondToAtomTest_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__AntechamberBondToAtomTest_O ;
};
template <> class gctools::GCStamp<core::MDArray_byte32_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_byte32_t_O ;
};
template <> class gctools::GCStamp<core::Character_dummy_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Character_dummy_O ;
};
template <> class gctools::GCStamp<llvmo::Constant_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__Constant_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergySketchNonbond>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__EnergySketchNonbond_ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__ ;
};
template <> class gctools::GCStamp<core::NativeVector_int_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__NativeVector_int_O ;
};
template <> class gctools::GCStamp<llvmo::DIBasicType_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DIBasicType_O ;
};
template <> class gctools::GCStamp<llvmo::APFloat_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__APFloat_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArrayCharacter_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArrayCharacter_O ;
};
template <> class gctools::GCStamp<core::SimpleCharacterString_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleCharacterString_O ;
};
template <> class gctools::GCStamp<kinematics::RootBondedJointTemplate_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__RootBondedJointTemplate_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__ ;
};
template <> class gctools::GCStamp<core::Array_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Array_O ;
};
template <> class gctools::GCStamp<llvmo::Argument_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__Argument_O ;
};
template <> class gctools::GCStamp<adapt::StringList_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_adapt__StringList_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyOutOfZPlane>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_ ;
};
template <> class gctools::GCStamp<units::Unit_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_units__Unit_O ;
};
template <> class gctools::GCStamp<llvmo::TargetPassConfig_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__TargetPassConfig_O ;
};
template <> class gctools::GCStamp<chem::IterateBonds_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__IterateBonds_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<signed char>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCArray_moveable_signed_char_ ;
};
template <> class gctools::GCStamp<chem::CDFragment_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__CDFragment_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergySketchStretch>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__EnergySketchStretch_ ;
};
template <> class gctools::GCStamp<core::GlueEnvironment_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__GlueEnvironment_O ;
};
template <> class gctools::GCStamp<llvmo::ReturnInst_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ReturnInst_O ;
};
template <> class gctools::GCStamp<chem::MonomerContext_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__MonomerContext_O ;
};
template <> class gctools::GCStamp<kinematics::Rotamer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__Rotamer_O ;
};
template <> class gctools::GCStamp<core::MDArray_byte16_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_byte16_t_O ;
};
template <> class gctools::GCStamp<chem::Plug_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Plug_O ;
};
template <> class gctools::GCStamp<chem::FFNonbondCrossTermTable_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFNonbondCrossTermTable_O ;
};
template <> class gctools::GCStamp<kinematics::MonomerBaseNode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__MonomerBaseNode_O ;
};
template <> class gctools::GCStamp<llvmo::Type_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__Type_O ;
};
template <> class gctools::GCStamp<chem::StereoConfiguration_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__StereoConfiguration_O ;
};
template <> class gctools::GCStamp<chem::Command_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Command_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::Cons_O>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_core__Cons_O_ ;
};
template <> class gctools::GCStamp<core::FileScope_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__FileScope_O ;
};
template <> class gctools::GCStamp<adapt::StringSet_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_adapt__StringSet_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_byte4_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_byte4_t_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_int64_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_int64_t_O ;
};
template <> class gctools::GCStamp<llvmo::ConstantDataSequential_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ConstantDataSequential_O ;
};
template <> class gctools::GCStamp<chem::SuperposeEngine_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__SuperposeEngine_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::AtomPdbRec>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__AtomPdbRec_ ;
};
template <> class gctools::GCStamp<chem::EntityNameSet_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EntityNameSet_O ;
};
template <> class gctools::GCStamp<chem::ResidueList_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ResidueList_O ;
};
template <> class gctools::GCStamp<llvmo::DebugLoc_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DebugLoc_O ;
};
template <> class gctools::GCStamp<core::WeakPointer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__WeakPointer_O ;
};
template <> class gctools::GCStamp<core::IOFileStream_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__IOFileStream_O ;
};
template <> class gctools::GCStamp<chem::ConstitutionVirtualAtom_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ConstitutionVirtualAtom_O ;
};
template <> class gctools::GCStamp<core::RuntimeVisibleEnvironment_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__RuntimeVisibleEnvironment_O ;
};
template <> class gctools::GCStamp<chem::ProperTorsion_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ProperTorsion_O ;
};
template <> class gctools::GCStamp<chem::IterateResidues_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__IterateResidues_O ;
};
template <> class gctools::GCStamp<llvmo::Instruction_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__Instruction_O ;
};
template <> class gctools::GCStamp<core::FileStream_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__FileStream_O ;
};
template <> class gctools::GCStamp<core::MDArrayCharacter_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArrayCharacter_O ;
};
template <> class gctools::GCStamp<llvmo::LandingPadInst_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__LandingPadInst_O ;
};
template <> class gctools::GCStamp<kinematics::KinematicsExposer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__KinematicsExposer_O ;
};
template <> class gctools::GCStamp<core::Function_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Function_O ;
};
template <> class gctools::GCStamp<kinematics::BondedJoint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__BondedJoint_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_int2_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_int2_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__ ;
};
template <> class gctools::GCStamp<chem::StereoisomerVirtualAtom_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__StereoisomerVirtualAtom_O ;
};
template <> class gctools::GCStamp<core::HashTableEql_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__HashTableEql_O ;
};
template <> class gctools::GCStamp<chem::SpanningLoop_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__SpanningLoop_O ;
};
template <> class gctools::GCStamp<chem::PdbReader_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__PdbReader_O ;
};
template <> class gctools::GCStamp<mp::ConditionVariable_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_mp__ConditionVariable_O ;
};
template <> class gctools::GCStamp<chem::ConformationExplorerEntry_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ConformationExplorerEntry_O ;
};
template <> class gctools::GCStamp<core::MDArray_byte8_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_byte8_t_O ;
};
template <> class gctools::GCStamp<kinematics::BackboneDependentRotamerSet_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__BackboneDependentRotamerSet_O ;
};
template <> class gctools::GCStamp<chem::BondListMatchNode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__BondListMatchNode_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___ ;
};
template <> class gctools::GCStamp<units::Dimension_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_units__Dimension_O ;
};
template <> class gctools::GCStamp<llvmo::AtomicRMWInst_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__AtomicRMWInst_O ;
};
template <> class gctools::GCStamp<chem::PdbMonomerConnectivity_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__PdbMonomerConnectivity_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__ ;
};
template <> class gctools::GCStamp<llvmo::PassManager_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__PassManager_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_O ;
};
template <> class gctools::GCStamp<chem::PlugWithMates_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__PlugWithMates_O ;
};
template <> class gctools::GCStamp<chem::Oligomer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Oligomer_O ;
};
template <> class gctools::GCStamp<adapt::ObjectSet_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_adapt__ObjectSet_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_int64_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_int64_t_O ;
};
template <> class gctools::GCStamp<core::SimpleString_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleString_O ;
};
template <> class gctools::GCStamp<llvmo::DIVariable_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DIVariable_O ;
};
template <> class gctools::GCStamp<core::FunctionValueEnvironment_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__FunctionValueEnvironment_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__ ;
};
template <> class gctools::GCStamp<core::DerivableCxxClassCreator_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__DerivableCxxClassCreator_O ;
};
template <> class gctools::GCStamp<chem::Coupling_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Coupling_O ;
};
template <> class gctools::GCStamp<geom::ComplexVectorCoordinate_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_geom__ComplexVectorCoordinate_O ;
};
template <> class gctools::GCStamp<core::ConcatenatedStream_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ConcatenatedStream_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<double>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_double_ ;
};
template <> class gctools::GCStamp<core::MacroletEnvironment_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MacroletEnvironment_O ;
};
template <> class gctools::GCStamp<kinematics::DelayedBondedJoint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__DelayedBondedJoint_O ;
};
template <> class gctools::GCStamp<core::Ratio_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Ratio_O ;
};
template <> class gctools::GCStamp<core::ObjectFile_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ObjectFile_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_byte2_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_byte2_t_O ;
};
template <> class gctools::GCStamp<core::ClosureWithSlots_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ClosureWithSlots_O ;
};
template <> class gctools::GCStamp<llvmo::ExecutionEngine_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ExecutionEngine_O ;
};
template <> class gctools::GCStamp<core::ClassRepCreator_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ClassRepCreator_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__ ;
};
template <> class gctools::GCStamp<llvmo::Attribute_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__Attribute_O ;
};
template <> class gctools::GCStamp<core::DerivableCxxObject_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__DerivableCxxObject_O ;
};
template <> class gctools::GCStamp<llvmo::SwitchInst_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__SwitchInst_O ;
};
template <> class gctools::GCStamp<core::SymbolToEnumConverter_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SymbolToEnumConverter_O ;
};
template <> class gctools::GCStamp<chem::RestrainedPiBond_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__RestrainedPiBond_O ;
};
template <> class gctools::GCStamp<core::NativeVector_float_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__NativeVector_float_O ;
};
template <> class gctools::GCStamp<chem::ConformationCollection_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ConformationCollection_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_int32_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_int32_t_O ;
};
template <> class gctools::GCStamp<core::VaList_dummy_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__VaList_dummy_O ;
};
template <> class gctools::GCStamp<geom::Color_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_geom__Color_O ;
};
template <> class gctools::GCStamp<kinematics::JointTemplate_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__JointTemplate_O ;
};
template <> class gctools::GCStamp<core::FdSet_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__FdSet_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::CacheRecord>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_core__CacheRecord_ ;
};
template <> class gctools::GCStamp<core::LogicalPathname_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__LogicalPathname_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__ ;
};
template <> class gctools::GCStamp<core::WrappedPointer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__WrappedPointer_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_double_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_double_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_byte32_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_byte32_t_O ;
};
template <> class gctools::GCStamp<llvmo::LLVMTargetMachine_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__LLVMTargetMachine_O ;
};
template <> class gctools::GCStamp<core::ClassHolder_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ClassHolder_O ;
};
template <> class gctools::GCStamp<chem::SketchFunction_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__SketchFunction_O ;
};
template <> class gctools::GCStamp<llvmo::UnaryInstruction_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__UnaryInstruction_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__ ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<unsigned int>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCArray_moveable_unsigned_int_ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___ ;
};
template <> class gctools::GCStamp<kinematics::MonomerId_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__MonomerId_O ;
};
template <> class gctools::GCStamp<core::MDArray_size_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_size_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyDihedral>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__EnergyDihedral_ ;
};
template <> class gctools::GCStamp<chem::PathMessage_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__PathMessage_O ;
};
template <> class gctools::GCStamp<chem::BondMatchNode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__BondMatchNode_O ;
};
template <> class gctools::GCStamp<chem::EnergyRigidBodyNonbond_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergyRigidBodyNonbond_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_O ;
};
template <> class gctools::GCStamp<chem::SparseLargeSquareMatrix_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__SparseLargeSquareMatrix_O ;
};
template <> class gctools::GCStamp<clbind::ClassRegistry_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_clbind__ClassRegistry_O ;
};
template <> class gctools::GCStamp<asttooling::AstVisitor_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_asttooling__AstVisitor_O ;
};
template <> class gctools::GCStamp<chem::Isoname_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Isoname_O ;
};
template <> class gctools::GCStamp<core::Record_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Record_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::T_O *>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_core__T_O___ ;
};
template <> class gctools::GCStamp<chem::Atom_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Atom_O ;
};
template <> class gctools::GCStamp<core::IntArray_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__IntArray_O ;
};
template <> class gctools::GCStamp<chem::ZMatrix_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ZMatrix_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__ ;
};
template <> class gctools::GCStamp<chem::StereoisomerAtom_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__StereoisomerAtom_O ;
};
template <> class gctools::GCStamp<core::SourcePosInfo_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SourcePosInfo_O ;
};
template <> class gctools::GCStamp<llvmo::BranchInst_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__BranchInst_O ;
};
template <> class gctools::GCStamp<llvmo::AllocaInst_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__AllocaInst_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__ ;
};
template <> class gctools::GCStamp<chem::ZMatrixInternal_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ZMatrixInternal_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_byte8_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_byte8_t_O ;
};
template <> class gctools::GCStamp<core::HashTable_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__HashTable_O ;
};
template <> class gctools::GCStamp<chem::ChemDraw_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ChemDraw_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<float>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCArray_moveable_float_ ;
};
template <> class gctools::GCStamp<chem::ReportBase_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ReportBase_O ;
};
template <> class gctools::GCStamp<kinematics::BackboneDependentRotamerLibrary_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__BackboneDependentRotamerLibrary_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__ ;
};
template <> class gctools::GCStamp<chem::EnergyChiralRestraint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergyChiralRestraint_O ;
};
template <> class gctools::GCStamp<chem::MonomerPack_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__MonomerPack_O ;
};
template <> class gctools::GCStamp<geom::MDArrayCoordinate_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_geom__MDArrayCoordinate_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__ ;
};
template <> class gctools::GCStamp<chem::Structure_Old_List_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Structure_Old_List_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArrayBaseChar_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArrayBaseChar_O ;
};
template <> class gctools::GCStamp<chem::OctNode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__OctNode_O ;
};
template <> class gctools::GCStamp<chem::Entity_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Entity_O ;
};
template <> class gctools::GCStamp<chem::AGEdge_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__AGEdge_O ;
};
template <> class gctools::GCStamp<chem::ReadAmberParameters_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ReadAmberParameters_O ;
};
template <> class gctools::GCStamp<llvmo::DILocation_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DILocation_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___ ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<int>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_int_ ;
};
template <> class gctools::GCStamp<core::Number_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Number_O ;
};
template <> class gctools::GCStamp<core::T_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__T_O ;
};
template <> class gctools::GCStamp<llvmo::DICompileUnit_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DICompileUnit_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__ ;
};
template <> class gctools::GCStamp<llvmo::FunctionPass_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__FunctionPass_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_byte4_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_byte4_t_O ;
};
template <> class gctools::GCStamp<gctools::GCBitUnitArray_moveable<2,1>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCBitUnitArray_moveable_2_1_ ;
};
template <> class gctools::GCStamp<chem::ConstitutionAtom_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ConstitutionAtom_O ;
};
template <> class gctools::GCStamp<llvmo::CallBase_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__CallBase_O ;
};
template <> class gctools::GCStamp<core::CompileTimeEnvironment_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__CompileTimeEnvironment_O ;
};
template <> class gctools::GCStamp<mp::SharedMutex_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_mp__SharedMutex_O ;
};
template <> class gctools::GCStamp<gctools::GCBitUnitArray_moveable<1,0>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCBitUnitArray_moveable_1_0_ ;
};
template <> class gctools::GCStamp<adapt::QDomNode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_adapt__QDomNode_O ;
};
template <> class gctools::GCStamp<core::InstanceCreator_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__InstanceCreator_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__ ;
};
template <> class gctools::GCStamp<chem::BondToAtomTest_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__BondToAtomTest_O ;
};
template <> class gctools::GCStamp<chem::FFAngleDb_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFAngleDb_O ;
};
template <> class gctools::GCStamp<chem::FFTypeRule_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFTypeRule_O ;
};
template <> class gctools::GCStamp<llvmo::InsertPoint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__InsertPoint_O ;
};
template <> class gctools::GCStamp<core::StrWNs_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__StrWNs_O ;
};
template <> class gctools::GCStamp<chem::Structure_Old_ListEntry_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Structure_Old_ListEntry_O ;
};
template <> class gctools::GCStamp<chem::EnergyRigidBodyStaple_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergyRigidBodyStaple_O ;
};
template <> class gctools::GCStamp<core::EchoStream_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__EchoStream_O ;
};
template <> class gctools::GCStamp<core::HashTableBase_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__HashTableBase_O ;
};
template <> class gctools::GCStamp<core::MDArrayBit_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArrayBit_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_byte16_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_byte16_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__ ;
};
template <> class gctools::GCStamp<chem::FFStretchDb_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFStretchDb_O ;
};
template <> class gctools::GCStamp<geom::OVector2_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_geom__OVector2_O ;
};
template <> class gctools::GCStamp<llvmo::DILocalScope_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DILocalScope_O ;
};
template <> class gctools::GCStamp<geom::OVector3_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_geom__OVector3_O ;
};
template <> class gctools::GCStamp<gctools::GCBitUnitArray_moveable<2,0>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCBitUnitArray_moveable_2_0_ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__ ;
};
template <> class gctools::GCStamp<llvmo::DILexicalBlock_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DILexicalBlock_O ;
};
template <> class gctools::GCStamp<llvmo::DITypeRefArray_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DITypeRefArray_O ;
};
template <> class gctools::GCStamp<chem::RestraintAnchor_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__RestraintAnchor_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__ ;
};
template <> class gctools::GCStamp<chem::InPlug_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__InPlug_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__ ;
};
template <> class gctools::GCStamp<llvmo::ModulePass_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ModulePass_O ;
};
template <> class gctools::GCStamp<chem::DirectionalCoupling_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__DirectionalCoupling_O ;
};
template <> class gctools::GCStamp<llvmo::DILocalVariable_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DILocalVariable_O ;
};
template <> class gctools::GCStamp<llvmo::TargetLibraryInfoWrapperPass_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__TargetLibraryInfoWrapperPass_O ;
};
template <> class gctools::GCStamp<llvmo::User_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__User_O ;
};
template <> class gctools::GCStamp<core::MDArray_int16_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_int16_t_O ;
};
template <> class gctools::GCStamp<chem::ZMatrixDihedralInternal_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ZMatrixDihedralInternal_O ;
};
template <> class gctools::GCStamp<chem::ForceMatchReport_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ForceMatchReport_O ;
};
template <> class gctools::GCStamp<llvmo::FenceInst_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__FenceInst_O ;
};
template <> class gctools::GCStamp<chem::WildElementDict_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__WildElementDict_O ;
};
template <> class gctools::GCStamp<chem::Chain_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Chain_O ;
};
template <> class gctools::GCStamp<llvmo::AtomicCmpXchgInst_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__AtomicCmpXchgInst_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_int8_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_int8_t_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_double_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_double_O ;
};
template <> class gctools::GCStamp<chem::ScoringFunction_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ScoringFunction_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___ ;
};
template <> class gctools::GCStamp<llvmo::ConstantPointerNull_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ConstantPointerNull_O ;
};
template <> class gctools::GCStamp<llvmo::VectorType_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__VectorType_O ;
};
template <> class gctools::GCStamp<chem::FFStretch_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFStretch_O ;
};
template <> class gctools::GCStamp<chem::IterateRestraints_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__IterateRestraints_O ;
};
template <> class gctools::GCStamp<chem::EnergySketchNonbond_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergySketchNonbond_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__ ;
};
template <> class gctools::GCStamp<core::RandomState_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__RandomState_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_int2_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_int2_t_O ;
};
template <> class gctools::GCStamp<chem::AtomReferenceBase_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__AtomReferenceBase_O ;
};
template <> class gctools::GCStamp<core::MDArray_byte64_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_byte64_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__ ;
};
template <> class gctools::GCStamp<chem::ForceField_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ForceField_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_fixnum_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_fixnum_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__ ;
};
template <> class gctools::GCStamp<core::AnsiStream_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__AnsiStream_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__ ;
};
template <> class gctools::GCStamp<core::BuiltinClosure_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__BuiltinClosure_O ;
};
template <> class gctools::GCStamp<core::Environment_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Environment_O ;
};
template <> class gctools::GCStamp<core::CxxMethodFunction_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__CxxMethodFunction_O ;
};
template <> class gctools::GCStamp<chem::AGVertex_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__AGVertex_O ;
};
template <> class gctools::GCStamp<core::UnwindProtectEnvironment_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__UnwindProtectEnvironment_O ;
};
template <> class gctools::GCStamp<clasp_ffi::ForeignData_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_clasp_ffi__ForeignData_O ;
};
template <> class gctools::GCStamp<llvmo::CallInst_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__CallInst_O ;
};
template <> class gctools::GCStamp<chem::AfterMatchBondToAtomTest_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__AfterMatchBondToAtomTest_O ;
};
template <> class gctools::GCStamp<chem::OligomerPart_Link_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__OligomerPart_Link_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyImproperRestraint>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__EnergyImproperRestraint_ ;
};
template <> class gctools::GCStamp<adapt::AdaptExposer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_adapt__AdaptExposer_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___ ;
};
template <> class gctools::GCStamp<core::StringStream_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__StringStream_O ;
};
template <> class gctools::GCStamp<core::Sigset_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Sigset_O ;
};
template <> class gctools::GCStamp<llvmo::IntegerType_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__IntegerType_O ;
};
template <> class gctools::GCStamp<core::MDArray_int64_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_int64_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__ ;
};
template <> class gctools::GCStamp<llvmo::PassManagerBuilder_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__PassManagerBuilder_O ;
};
template <> class gctools::GCStamp<core::MDArray_int8_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_int8_t_O ;
};
template <> class gctools::GCStamp<chem::ZMatrixBondInternal_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ZMatrixBondInternal_O ;
};
template <> class gctools::GCStamp<llvmo::ConstantFP_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ConstantFP_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_ ;
};
template <> class gctools::GCStamp<core::SingleDispatchMethodFunction_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SingleDispatchMethodFunction_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<Vector3>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCArray_moveable_Vector3_ ;
};
template <> class gctools::GCStamp<core::Cons_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Cons_O ;
};
template <> class gctools::GCStamp<chem::Constitution_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Constitution_O ;
};
template <> class gctools::GCStamp<llvmo::LLVMContext_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__LLVMContext_O ;
};
template <> class gctools::GCStamp<chem::EntityNameSetBase_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EntityNameSetBase_O ;
};
template <> class gctools::GCStamp<core::MDArray_int4_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_int4_t_O ;
};
template <> class gctools::GCStamp<chem::FFBaseDb_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFBaseDb_O ;
};
template <> class gctools::GCStamp<chem::AbstractLargeSquareMatrix_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__AbstractLargeSquareMatrix_O ;
};
template <> class gctools::GCStamp<core::General_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__General_O ;
};
template <> class gctools::GCStamp<core::Closure_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Closure_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_size_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_size_t_O ;
};
template <> class gctools::GCStamp<chem::RestraintAngle_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__RestraintAngle_O ;
};
template <> class gctools::GCStamp<chem::CandoDatabase_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__CandoDatabase_O ;
};
template <> class gctools::GCStamp<core::BlockEnvironment_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__BlockEnvironment_O ;
};
template <> class gctools::GCStamp<mpip::Mpi_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_mpip__Mpi_O ;
};
template <> class gctools::GCStamp<llvmo::ConstantDataArray_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ConstantDataArray_O ;
};
template <> class gctools::GCStamp<core::Instance_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Instance_O ;
};
template <> class gctools::GCStamp<chem::MessageReport_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__MessageReport_O ;
};
template <> class gctools::GCStamp<core::SmallMap_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SmallMap_O ;
};
template <> class gctools::GCStamp<clasp_ffi::ForeignTypeSpec_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_clasp_ffi__ForeignTypeSpec_O ;
};
template <> class gctools::GCStamp<core::Unused_dummy_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Unused_dummy_O ;
};
template <> class gctools::GCStamp<core::PosixTimeDuration_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__PosixTimeDuration_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__ ;
};
template <> class gctools::GCStamp<chem::EnergyOutOfZPlane_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergyOutOfZPlane_O ;
};
template <> class gctools::GCStamp<core::HashTableEqual_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__HashTableEqual_O ;
};
template <> class gctools::GCStamp<llvmo::Triple_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__Triple_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_byte64_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_byte64_t_O ;
};
template <> class gctools::GCStamp<geom::GeomExposer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_geom__GeomExposer_O ;
};
template <> class gctools::GCStamp<core::CoreExposer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__CoreExposer_O ;
};
template <> class gctools::GCStamp<chem::EnergyRigidBodyComponent_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergyRigidBodyComponent_O ;
};
template <> class gctools::GCStamp<core::BitVectorNs_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__BitVectorNs_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::KeyEntry>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__KeyEntry_ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::KeywordArgument>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_core__KeywordArgument_ ;
};
template <> class gctools::GCStamp<kinematics::AggregateNode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__AggregateNode_O ;
};
template <> class gctools::GCStamp<llvmo::TargetMachine_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__TargetMachine_O ;
};
template <> class gctools::GCStamp<llvmo::ThreadSafeContext_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ThreadSafeContext_O ;
};
template <> class gctools::GCStamp<llvmo::Value_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__Value_O ;
};
template <> class gctools::GCStamp<chem::Bond_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Bond_O ;
};
template <> class gctools::GCStamp<chem::SuperposableConformationCollection_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__SuperposableConformationCollection_O ;
};
template <> class gctools::GCStamp<units::UnitsExposer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_units__UnitsExposer_O ;
};
template <> class gctools::GCStamp<chem::CoordinateSystem_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__CoordinateSystem_O ;
};
template <> class gctools::GCStamp<core::Serializer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Serializer_O ;
};
template <> class gctools::GCStamp<chem::AtomReference_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__AtomReference_O ;
};
template <> class gctools::GCStamp<clbind::ClassRep_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_clbind__ClassRep_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::OptionalArgument>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_core__OptionalArgument_ ;
};
template <> class gctools::GCStamp<llvmo::ConstantInt_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ConstantInt_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_int16_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_int16_t_O ;
};
template <> class gctools::GCStamp<chem::Logical_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Logical_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__ ;
};
template <> class gctools::GCStamp<kinematics::BondId_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__BondId_O ;
};
template <> class gctools::GCStamp<llvmo::PassManagerBase_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__PassManagerBase_O ;
};
template <> class gctools::GCStamp<core::Exposer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Exposer_O ;
};
template <> class gctools::GCStamp<llvmo::ConstantStruct_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ConstantStruct_O ;
};
template <> class gctools::GCStamp<core::SingleDispatchCxxEffectiveMethodFunction_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SingleDispatchCxxEffectiveMethodFunction_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___ ;
};
template <> class gctools::GCStamp<core::DirectoryIterator_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__DirectoryIterator_O ;
};
template <> class gctools::GCStamp<chem::JumpPlug_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__JumpPlug_O ;
};
template <> class gctools::GCStamp<llvmo::DISubroutineType_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DISubroutineType_O ;
};
template <> class gctools::GCStamp<kinematics::JumpJoint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__JumpJoint_O ;
};
template <> class gctools::GCStamp<core::SimpleBitVector_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleBitVector_O ;
};
template <> class gctools::GCStamp<core::FunctionContainerEnvironment_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__FunctionContainerEnvironment_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__ ;
};
template <> class gctools::GCStamp<chem::OligomerPart_Base_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__OligomerPart_Base_O ;
};
template <> class gctools::GCStamp<chem::CDNode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__CDNode_O ;
};
template <> class gctools::GCStamp<llvmo::ResumeInst_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ResumeInst_O ;
};
template <> class gctools::GCStamp<llvmo::Function_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__Function_O ;
};
template <> class gctools::GCStamp<chem::AddIonOctree_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__AddIonOctree_O ;
};
template <> class gctools::GCStamp<chem::StereoInformation_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__StereoInformation_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__ ;
};
template <> class gctools::GCStamp<geom::BoundingCuboid_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_geom__BoundingCuboid_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyAngle>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__EnergyAngle_ ;
};
template <> class gctools::GCStamp<chem::AtomIndexer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__AtomIndexer_O ;
};
template <> class gctools::GCStamp<chem::Restraint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Restraint_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__ ;
};
template <> class gctools::GCStamp<llvmo::IRBuilder_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__IRBuilder_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_ ;
};
template <> class gctools::GCStamp<llvmo::ClaspJIT_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ClaspJIT_O ;
};
template <> class gctools::GCStamp<chem::FFParameter_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFParameter_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_byte8_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_byte8_t_O ;
};
template <> class gctools::GCStamp<llvmo::DILexicalBlockBase_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DILexicalBlockBase_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___ ;
};
template <> class gctools::GCStamp<core::ComplexVector_fixnum_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_fixnum_O ;
};
template <> class gctools::GCStamp<chem::RepresentedEntityNameSet_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__RepresentedEntityNameSet_O ;
};
template <> class gctools::GCStamp<chem::MonomerCoordinates_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__MonomerCoordinates_O ;
};
template <> class gctools::GCStamp<chem::EnergyFunction_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergyFunction_O ;
};
template <> class gctools::GCStamp<llvmo::VAArgInst_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__VAArgInst_O ;
};
template <> class gctools::GCStamp<chem::Twister_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Twister_O ;
};
template <> class gctools::GCStamp<core::MDArray_fixnum_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_fixnum_O ;
};
template <> class gctools::GCStamp<core::SharpEqualWrapper_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SharpEqualWrapper_O ;
};
template <> class gctools::GCStamp<geom::SimpleMDArrayCoordinate_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_geom__SimpleMDArrayCoordinate_O ;
};
template <> class gctools::GCStamp<llvmo::DIFile_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DIFile_O ;
};
template <> class gctools::GCStamp<chem::AntechamberFocusAtomMatch_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__AntechamberFocusAtomMatch_O ;
};
template <> class gctools::GCStamp<chem::PdbMonomerDatabase_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__PdbMonomerDatabase_O ;
};
template <> class gctools::GCStamp<chem::Aggregate_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Aggregate_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_int8_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_int8_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___ ;
};
template <> class gctools::GCStamp<chem::SearchStatistics_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__SearchStatistics_O ;
};
template <> class gctools::GCStamp<llvmo::EngineBuilder_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__EngineBuilder_O ;
};
template <> class gctools::GCStamp<kinematics::Joint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__Joint_O ;
};
template <> class gctools::GCStamp<core::TagbodyEnvironment_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__TagbodyEnvironment_O ;
};
template <> class gctools::GCStamp<core::SpecialForm_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SpecialForm_O ;
};
template <> class gctools::GCStamp<chem::EnergyStretch_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergyStretch_O ;
};
template <> class gctools::GCStamp<llvmo::FunctionCallee_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__FunctionCallee_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<unsigned char>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCArray_moveable_unsigned_char_ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__ ;
};
template <> class gctools::GCStamp<llvmo::DIBuilder_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DIBuilder_O ;
};
template <> class gctools::GCStamp<llvmo::APInt_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__APInt_O ;
};
template <> class gctools::GCStamp<core::Symbol_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Symbol_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___ ;
};
template <> class gctools::GCStamp<chem::AtomOrBondMatchNode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__AtomOrBondMatchNode_O ;
};
template <> class gctools::GCStamp<core::MDArray_byte4_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_byte4_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__ ;
};
template <> class gctools::GCStamp<core::Iterator_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Iterator_O ;
};
template <> class gctools::GCStamp<chem::FFItorDb_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFItorDb_O ;
};
template <> class gctools::GCStamp<llvmo::IRBuilderBase_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__IRBuilderBase_O ;
};
template <> class gctools::GCStamp<core::Null_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Null_O ;
};
template <> class gctools::GCStamp<chem::RingFinder_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__RingFinder_O ;
};
template <> class gctools::GCStamp<core::SingleDispatchMethod_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SingleDispatchMethod_O ;
};
template <> class gctools::GCStamp<core::NativeVector_double_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__NativeVector_double_O ;
};
template <> class gctools::GCStamp<core::CxxObject_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__CxxObject_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___ ;
};
template <> class gctools::GCStamp<llvmo::FunctionType_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__FunctionType_O ;
};
template <> class gctools::GCStamp<clbind::DummyCreator_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_clbind__DummyCreator_O ;
};
template <> class gctools::GCStamp<llvmo::JITDylib_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__JITDylib_O ;
};
template <> class gctools::GCStamp<core::Pointer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Pointer_O ;
};
template <> class gctools::GCStamp<llvmo::UnreachableInst_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__UnreachableInst_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_int64_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_int64_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::SymbolClassHolderPair>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_core__SymbolClassHolderPair_ ;
};
template <> class gctools::GCStamp<chem::FFParameterBaseDb_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFParameterBaseDb_O ;
};
template <> class gctools::GCStamp<gctools::GCBitUnitArray_moveable<4,0>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCBitUnitArray_moveable_4_0_ ;
};
template <> class gctools::GCStamp<core::Float_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Float_O ;
};
template <> class gctools::GCStamp<chem::ResidueTest_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__ResidueTest_O ;
};
template <> class gctools::GCStamp<chem::RestraintDistance_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__RestraintDistance_O ;
};
template <> class gctools::GCStamp<chem::SmartsRoot_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__SmartsRoot_O ;
};
template <> class gctools::GCStamp<clbind::ConstructorCreator_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_clbind__ConstructorCreator_O ;
};
template <> class gctools::GCStamp<llvmo::DIDerivedType_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DIDerivedType_O ;
};
template <> class gctools::GCStamp<chem::TwisterDriver_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__TwisterDriver_O ;
};
template <> class gctools::GCStamp<core::TranslationFunctor_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__TranslationFunctor_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__ ;
};
template <> class gctools::GCStamp<units::NamedUnit_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_units__NamedUnit_O ;
};
template <> class gctools::GCStamp<core::MDArray_double_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_double_O ;
};
template <> class gctools::GCStamp<llvmo::StoreInst_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__StoreInst_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___ ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_byte8_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_byte8_t_O ;
};
template <> class gctools::GCStamp<chem::VirtualSphere_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__VirtualSphere_O ;
};
template <> class gctools::GCStamp<core::Rational_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Rational_O ;
};
template <> class gctools::GCStamp<adapt::IndexedObjectBag_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_adapt__IndexedObjectBag_O ;
};
template <> class gctools::GCStamp<chem::CipPrioritizer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__CipPrioritizer_O ;
};
template <> class gctools::GCStamp<core::AtomicT_Holder_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__AtomicT_Holder_O ;
};
template <> class gctools::GCStamp<chem::AtomTable_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__AtomTable_O ;
};
template <> class gctools::GCStamp<core::Real_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Real_O ;
};
template <> class gctools::GCStamp<core::FuncallableInstanceCreator_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__FuncallableInstanceCreator_O ;
};
template <> class gctools::GCStamp<chem::Topology_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Topology_O ;
};
template <> class gctools::GCStamp<core::StringOutputStream_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__StringOutputStream_O ;
};
template <> class gctools::GCStamp<chem::EntityNameSetWithCap_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EntityNameSetWithCap_O ;
};
template <> class gctools::GCStamp<chem::BondMatcher_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__BondMatcher_O ;
};
template <> class gctools::GCStamp<llvmo::AttributeSet_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__AttributeSet_O ;
};
template <> class gctools::GCStamp<llvmo::MDBuilder_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__MDBuilder_O ;
};
template <> class gctools::GCStamp<llvmo::DISubprogram_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DISubprogram_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__ ;
};
template <> class gctools::GCStamp<chem::TrajectoryFrame_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__TrajectoryFrame_O ;
};
template <> class gctools::GCStamp<core::Creator_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Creator_O ;
};
template <> class gctools::GCStamp<llvmo::ArrayType_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ArrayType_O ;
};
template <> class gctools::GCStamp<chem::PdbWriter_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__PdbWriter_O ;
};
template <> class gctools::GCStamp<chem::Stereoisomer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Stereoisomer_O ;
};
template <> class gctools::GCStamp<llvmo::MCSubtargetInfo_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__MCSubtargetInfo_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_byte2_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleMDArray_byte2_t_O ;
};
template <> class gctools::GCStamp<llvmo::BlockAddress_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__BlockAddress_O ;
};
template <> class gctools::GCStamp<llvmo::DICompositeType_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__DICompositeType_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<short>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCArray_moveable_short_ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__ ;
};
template <> class gctools::GCStamp<chem::Matter_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Matter_O ;
};
template <> class gctools::GCStamp<core::HashTableEq_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__HashTableEq_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__ ;
};
template <> class gctools::GCStamp<chem::RestraintChiral_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__RestraintChiral_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyChiralRestraint>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_chem__EnergyChiralRestraint_ ;
};
template <> class gctools::GCStamp<chem::EnergyComponent_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__EnergyComponent_O ;
};
template <> class gctools::GCStamp<kinematics::DelayedBondedJointTemplate_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__DelayedBondedJointTemplate_O ;
};
template <> class gctools::GCStamp<core::HashTableEqualp_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__HashTableEqualp_O ;
};
template <> class gctools::GCStamp<core::LambdaListHandler_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__LambdaListHandler_O ;
};
template <> class gctools::GCStamp<kinematics::RotamerSetBase_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__RotamerSetBase_O ;
};
template <> class gctools::GCStamp<core::SymbolMacroletEnvironment_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SymbolMacroletEnvironment_O ;
};
template <> class gctools::GCStamp<chem::RestrainedExoCyclicAtom_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__RestrainedExoCyclicAtom_O ;
};
template <> class gctools::GCStamp<llvmo::ImmutablePass_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__ImmutablePass_O ;
};
template <> class gctools::GCStamp<core::FuncallableInstance_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__FuncallableInstance_O ;
};
template <> class gctools::GCStamp<chem::StatusTracker_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__StatusTracker_O ;
};
template <> class gctools::GCStamp<chem::RingCoupling_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__RingCoupling_O ;
};
template <> class gctools::GCStamp<kinematics::FoldTree_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__FoldTree_O ;
};
template <> class gctools::GCStamp<chem::NumericalFunction_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__NumericalFunction_O ;
};
template <> class gctools::GCStamp<core::SynonymStream_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SynonymStream_O ;
};
template <> class gctools::GCStamp<core::MDArray_int2_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MDArray_int2_t_O ;
};
template <> class gctools::GCStamp<kinematics::ChiList_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__ChiList_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_int16_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__SimpleVector_int16_t_O ;
};
template <> class gctools::GCStamp<llvmo::Pass_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__Pass_O ;
};
template <> class gctools::GCStamp<chem::StepReport_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__StepReport_O ;
};
template <> class gctools::GCStamp<kinematics::BondedJointTemplate_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__BondedJointTemplate_O ;
};
template <> class gctools::GCStamp<core::Lisp_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Lisp_O ;
};
template <> class gctools::GCStamp<chem::FFVdw_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__FFVdw_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_byte4_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_byte4_t_O ;
};
template <> class gctools::GCStamp<core::CatchEnvironment_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__CatchEnvironment_O ;
};
template <> class gctools::GCStamp<kinematics::RingClosingMonomerNode_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__RingClosingMonomerNode_O ;
};
template <> class gctools::GCStamp<llvmo::TargetSubtargetInfo_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__TargetSubtargetInfo_O ;
};
template <> class gctools::GCStamp<chem::Root_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_chem__Root_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__ ;
};
template <> class gctools::GCStamp<core::Bignum_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__Bignum_O ;
};
template <> class gctools::GCStamp<kinematics::RootBondedJoint_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_kinematics__RootBondedJoint_O ;
};
template <> class gctools::GCStamp<llvmo::SequentialType_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__SequentialType_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_byte32_t_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__ComplexVector_byte32_t_O ;
};
template <> class gctools::GCStamp<llvmo::GlobalValue_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__GlobalValue_O ;
};
template <> class gctools::GCStamp<llvmo::PointerType_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_llvmo__PointerType_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__ ;
};
template <> class gctools::GCStamp<core::MultiStringBuffer_O> {
public:
  static gctools::GCStampEnum const Stamp = gctools::STAMP_core__MultiStringBuffer_O ;
};
#endif // defined(GC_STAMP_SELECTORS)
#if defined(GC_OBJ_SCAN)
#endif // defined(GC_OBJ_SCAN)
#if defined(GC_OBJ_SCAN_HELPERS)
// Stamp = core::T_O/7
{ class_kind, STAMP_core__T_O, sizeof(core::T_O), 0, "core::T_O" },
// Stamp = core::Unused_dummy_O/11
{ class_kind, STAMP_core__Unused_dummy_O, sizeof(core::Unused_dummy_O), 0, "core::Unused_dummy_O" },
// Stamp = core::General_O/15
{ class_kind, STAMP_core__General_O, sizeof(core::General_O), 0, "core::General_O" },
// Stamp = core::MultiStringBuffer_O/19
{ class_kind, STAMP_core__MultiStringBuffer_O, sizeof(core::MultiStringBuffer_O), 0, "core::MultiStringBuffer_O" },
// Stamp = core::LambdaListHandler_O/23
{ class_kind, STAMP_core__LambdaListHandler_O, sizeof(core::LambdaListHandler_O), 0, "core::LambdaListHandler_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_NumberOfSpecialVariables), "_NumberOfSpecialVariables" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_CreatesBindings), "_CreatesBindings" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_ClassifiedSymbolList), "_ClassifiedSymbolList" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_SpecialSymbolSet.theObject), "_SpecialSymbolSet.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_DeclareSpecifierList), "_DeclareSpecifierList" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::RequiredArgument>>), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_RequiredArguments._Vector._Contents), "_RequiredArguments._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::OptionalArgument>>), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_OptionalArguments._Vector._Contents), "_OptionalArguments._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_RestArgument._ArgTarget), "_RestArgument._ArgTarget" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_RestArgument._ArgTargetFrameIndex), "_RestArgument._ArgTargetFrameIndex" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_RestArgument.VaRest), "_RestArgument.VaRest" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_KeyFlag), "_KeyFlag" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::KeywordArgument>>), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_KeywordArguments._Vector._Contents), "_KeywordArguments._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_AllowOtherKeys), "_AllowOtherKeys" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::AuxArgument>>), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_AuxArguments._Vector._Contents), "_AuxArguments._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleString_O>), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_Comment), "_Comment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_NumberOfLexicalVariables), "_NumberOfLexicalVariables" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_RequiredLexicalArgumentsOnly), "_RequiredLexicalArgumentsOnly" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_LexicalVariableNamesForDebugging), "_LexicalVariableNamesForDebugging" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::AttributeSet_O/27
{ class_kind, STAMP_llvmo__AttributeSet_O, sizeof(llvmo::AttributeSet_O), 0, "llvmo::AttributeSet_O" },
// Stamp = core::AtomicT_Holder_O/31
{ class_kind, STAMP_core__AtomicT_Holder_O, sizeof(core::AtomicT_Holder_O), 0, "core::AtomicT_Holder_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::AtomicT_Holder_O),_Object._M_i), "_Object._M_i" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::Pointer_O/35
{ class_kind, STAMP_core__Pointer_O, sizeof(core::Pointer_O), 0, "core::Pointer_O" },
// Stamp = clasp_ffi::ForeignData_O/39
{ class_kind, STAMP_clasp_ffi__ForeignData_O, sizeof(clasp_ffi::ForeignData_O), 0, "clasp_ffi::ForeignData_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignData_O),m_kind), "m_kind" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignData_O),m_size), "m_size" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = core::CxxObject_O/43
{ class_kind, STAMP_core__CxxObject_O, sizeof(core::CxxObject_O), 0, "core::CxxObject_O" },
// Stamp = kinematics::ChiList_O/47
{ class_kind, STAMP_kinematics__ChiList_O, sizeof(kinematics::ChiList_O), 0, "kinematics::ChiList_O" },
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>>), offsetof(SAFE_TYPE_MACRO(kinematics::ChiList_O),_Chis._Vector._Contents), "_Chis._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::NumericalFunction_O/51
{ class_kind, STAMP_chem__NumericalFunction_O, sizeof(chem::NumericalFunction_O), 0, "chem::NumericalFunction_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::NumericalFunction_O),title._M_string_length), "title._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::NumericalFunction_O),title.NO-NAME._M_allocated_capacity), "title.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::NumericalFunction_O),xAxisName._M_string_length), "xAxisName._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::NumericalFunction_O),xAxisName.NO-NAME._M_allocated_capacity), "xAxisName.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::NumericalFunction_O),yAxisName._M_string_length), "yAxisName._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::NumericalFunction_O),yAxisName.NO-NAME._M_allocated_capacity), "yAxisName.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::NumericalFunction_O),xInc), "xInc" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::NumericalFunction_O),xStart), "xStart" }, // public: (T) fixable: NIL good-name: T
// Stamp = kinematics::FoldTree_O/55
{ class_kind, STAMP_kinematics__FoldTree_O, sizeof(kinematics::FoldTree_O), 0, "kinematics::FoldTree_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::AggregateNode_O>), offsetof(SAFE_TYPE_MACRO(kinematics::FoldTree_O),_AggregateNode), "_AggregateNode" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::StatusTracker_O/59
{ class_kind, STAMP_chem__StatusTracker_O, sizeof(chem::StatusTracker_O), 0, "chem::StatusTracker_O" },
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_precision), "_MessageStream._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_width), "_MessageStream._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_word_zero._M_iword), "_MessageStream._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_word_size), "_MessageStream._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_fill), "_MessageStream._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_fill_init), "_MessageStream._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_precision), "_MessageStream._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_width), "_MessageStream._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_word_zero._M_iword), "_MessageStream._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_word_size), "_MessageStream._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_fill), "_MessageStream._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_fill_init), "_MessageStream._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_gcount), "_MessageStream._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_precision), "_MessageStream._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_width), "_MessageStream._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_word_zero._M_iword), "_MessageStream._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_word_size), "_MessageStream._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_fill), "_MessageStream._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_fill_init), "_MessageStream._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_precision), "_MessageStream._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_width), "_MessageStream._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_word_zero._M_iword), "_MessageStream._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_word_size), "_MessageStream._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_fill), "_MessageStream._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_fill_init), "_MessageStream._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_precision), "_MessageStream._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_width), "_MessageStream._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_word_zero._M_iword), "_MessageStream._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_word_size), "_MessageStream._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_fill), "_MessageStream._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_fill_init), "_MessageStream._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_precision), "_MessageStream._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_width), "_MessageStream._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_word_zero._M_iword), "_MessageStream._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_word_size), "_MessageStream._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_fill), "_MessageStream._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_fill_init), "_MessageStream._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_stringbuf._M_string._M_string_length), "_MessageStream._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_MessageStream._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_MessageStream._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_HasError), "_HasError" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_precision), "_ErrorStream._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_width), "_ErrorStream._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_word_zero._M_iword), "_ErrorStream._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_word_size), "_ErrorStream._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_fill), "_ErrorStream._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_fill_init), "_ErrorStream._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_precision), "_ErrorStream._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_width), "_ErrorStream._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_word_zero._M_iword), "_ErrorStream._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_word_size), "_ErrorStream._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_fill), "_ErrorStream._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_fill_init), "_ErrorStream._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_gcount), "_ErrorStream._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_precision), "_ErrorStream._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_width), "_ErrorStream._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_word_zero._M_iword), "_ErrorStream._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_word_size), "_ErrorStream._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_fill), "_ErrorStream._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_fill_init), "_ErrorStream._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_precision), "_ErrorStream._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_width), "_ErrorStream._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_word_zero._M_iword), "_ErrorStream._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_word_size), "_ErrorStream._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_fill), "_ErrorStream._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_fill_init), "_ErrorStream._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_precision), "_ErrorStream._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_width), "_ErrorStream._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_word_zero._M_iword), "_ErrorStream._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_word_size), "_ErrorStream._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_fill), "_ErrorStream._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_fill_init), "_ErrorStream._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_precision), "_ErrorStream._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_width), "_ErrorStream._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_word_zero._M_iword), "_ErrorStream._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_word_size), "_ErrorStream._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_fill), "_ErrorStream._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_fill_init), "_ErrorStream._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_stringbuf._M_string._M_string_length), "_ErrorStream._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::StatusTracker_O),_ErrorStream._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_ErrorStream._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
// Stamp = kinematics::RotamerSetBase_O/63
{ class_kind, STAMP_kinematics__RotamerSetBase_O, sizeof(kinematics::RotamerSetBase_O), 0, "kinematics::RotamerSetBase_O" },
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>>), offsetof(SAFE_TYPE_MACRO(kinematics::RotamerSetBase_O),_Rotamers._Vector._Contents), "_Rotamers._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = kinematics::BackboneDependentRotamerSet_O/67
{ class_kind, STAMP_kinematics__BackboneDependentRotamerSet_O, sizeof(kinematics::BackboneDependentRotamerSet_O), 0, "kinematics::BackboneDependentRotamerSet_O" },
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>>), offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerSet_O),_Rotamers._Vector._Contents), "_Rotamers._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerSet_O),_Phi), "_Phi" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerSet_O),_Psi), "_Psi" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = kinematics::RotamerSet_O/71
{ class_kind, STAMP_kinematics__RotamerSet_O, sizeof(kinematics::RotamerSet_O), 0, "kinematics::RotamerSet_O" },
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>>), offsetof(SAFE_TYPE_MACRO(kinematics::RotamerSet_O),_Rotamers._Vector._Contents), "_Rotamers._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::EnergyComponent_O/75
{ class_kind, STAMP_chem__EnergyComponent_O, sizeof(chem::EnergyComponent_O), 0, "chem::EnergyComponent_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
// Stamp = chem::EnergyStretch_O/79
{ class_kind, STAMP_chem__EnergyStretch_O, sizeof(chem::EnergyStretch_O), 0, "chem::EnergyStretch_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyStretch>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_Terms._Vector._Contents), "_Terms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyStretch>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_BeyondThresholdTerms._Vector._Contents), "_BeyondThresholdTerms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::EnergyRigidBodyComponent_O/83
{ class_kind, STAMP_chem__EnergyRigidBodyComponent_O, sizeof(chem::EnergyRigidBodyComponent_O), 0, "chem::EnergyRigidBodyComponent_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
// Stamp = chem::EnergyRigidBodyStaple_O/87
{ class_kind, STAMP_chem__EnergyRigidBodyStaple_O, sizeof(chem::EnergyRigidBodyStaple_O), 0, "chem::EnergyRigidBodyStaple_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_Terms._Vector._Contents), "_Terms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::EnergyRigidBodyNonbond_O/91
{ class_kind, STAMP_chem__EnergyRigidBodyNonbond_O, sizeof(chem::EnergyRigidBodyNonbond_O), 0, "chem::EnergyRigidBodyNonbond_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DielectricConstant), "_DielectricConstant" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_ScaleVdw), "_ScaleVdw" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_ScaleElectrostatic), "_ScaleElectrostatic" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_EnergyVdw), "_EnergyVdw" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_EnergyElectrostatic), "_EnergyElectrostatic" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_byte32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_RigidBodyEndAtom), "_RigidBodyEndAtom" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::RigidBodyAtomInfo>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_AtomInfoTable._Vector._Contents), "_AtomInfoTable._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_NumberOfTypes), "_NumberOfTypes" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::EnergyOutOfZPlane_O/95
{ class_kind, STAMP_chem__EnergyOutOfZPlane_O, sizeof(chem::EnergyOutOfZPlane_O), 0, "chem::EnergyOutOfZPlane_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyOutOfZPlane>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_Terms._Vector._Contents), "_Terms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyOutOfZPlane>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_BeyondThresholdTerms._Vector._Contents), "_BeyondThresholdTerms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::EnergySketchNonbond_O/99
{ class_kind, STAMP_chem__EnergySketchNonbond_O, sizeof(chem::EnergySketchNonbond_O), 0, "chem::EnergySketchNonbond_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_ScaleSketchNonbond), "_ScaleSketchNonbond" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_LongDistanceCutoff), "_LongDistanceCutoff" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_IgnoreHydrogensAndLps), "_IgnoreHydrogensAndLps" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_Energy), "_Energy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_FreezeFlags), "_FreezeFlags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergySketchNonbond>>), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_Terms._Vector._Contents), "_Terms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::EnergyChiralRestraint_O/103
{ class_kind, STAMP_chem__EnergyChiralRestraint_O, sizeof(chem::EnergyChiralRestraint_O), 0, "chem::EnergyChiralRestraint_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyChiralRestraint>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_Terms._Vector._Contents), "_Terms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyChiralRestraint>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_BeyondThresholdTerms._Vector._Contents), "_BeyondThresholdTerms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::EnergyPointToLineRestraint_O/107
{ class_kind, STAMP_chem__EnergyPointToLineRestraint_O, sizeof(chem::EnergyPointToLineRestraint_O), 0, "chem::EnergyPointToLineRestraint_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_Bond_div_2), "_Bond_div_2" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergySketchStretch_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_Stretch), "_Stretch" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_ForceConstant), "_ForceConstant" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::EnergyDihedral_O/111
{ class_kind, STAMP_chem__EnergyDihedral_O, sizeof(chem::EnergyDihedral_O), 0, "chem::EnergyDihedral_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyDihedral>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_Terms._Vector._Contents), "_Terms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyDihedral>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_BeyondThresholdTerms._Vector._Contents), "_BeyondThresholdTerms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::EnergyNonbond_O/115
{ class_kind, STAMP_chem__EnergyNonbond_O, sizeof(chem::EnergyNonbond_O), 0, "chem::EnergyNonbond_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DielectricConstant), "_DielectricConstant" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_ScaleVdw), "_ScaleVdw" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_ScaleElectrostatic), "_ScaleElectrostatic" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_EnergyVdw), "_EnergyVdw" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_EnergyElectrostatic), "_EnergyElectrostatic" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_NonbondCutoff), "_NonbondCutoff" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_NonbondCutoffSquared), "_NonbondCutoffSquared" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_NonbondCutoffReciprocal12), "_NonbondCutoffReciprocal12" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_NonbondCutoffReciprocal6), "_NonbondCutoffReciprocal6" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_UsesExcludedAtoms), "_UsesExcludedAtoms" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyNonbond>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_Terms._Vector._Contents), "_Terms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyNonbond>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_BeyondThresholdTerms._Vector._Contents), "_BeyondThresholdTerms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_FFNonbondDb), "_FFNonbondDb" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AtomTable_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_AtomTable), "_AtomTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_ntypes), "_ntypes" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_atom_name_vector), "_atom_name_vector" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_charge_vector), "_charge_vector" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_mass_vector), "_mass_vector" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_atomic_number_vector), "_atomic_number_vector" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_ico_vec), "_ico_vec" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_iac_vec), "_iac_vec" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_atom_type_vector), "_atom_type_vector" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_local_typej_vec), "_local_typej_vec" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_cn1_vec), "_cn1_vec" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_cn2_vec), "_cn2_vec" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_NumberOfExcludedAtomIndices), "_NumberOfExcludedAtomIndices" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_ExcludedAtomIndices), "_ExcludedAtomIndices" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::EnergyPeriodicBoundaryConditionsNonbond_O/119
{ class_kind, STAMP_chem__EnergyPeriodicBoundaryConditionsNonbond_O, sizeof(chem::EnergyPeriodicBoundaryConditionsNonbond_O), 0, "chem::EnergyPeriodicBoundaryConditionsNonbond_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DielectricConstant), "_DielectricConstant" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_ScaleVdw), "_ScaleVdw" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_ScaleElectrostatic), "_ScaleElectrostatic" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_EnergyVdw), "_EnergyVdw" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_EnergyElectrostatic), "_EnergyElectrostatic" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_NonbondCutoff), "_NonbondCutoff" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_NonbondCutoffSquared), "_NonbondCutoffSquared" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_NonbondCutoffReciprocal12), "_NonbondCutoffReciprocal12" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_NonbondCutoffReciprocal6), "_NonbondCutoffReciprocal6" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_UsesExcludedAtoms), "_UsesExcludedAtoms" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyNonbond>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_Terms._Vector._Contents), "_Terms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyNonbond>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_BeyondThresholdTerms._Vector._Contents), "_BeyondThresholdTerms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_FFNonbondDb), "_FFNonbondDb" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AtomTable_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_AtomTable), "_AtomTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_ntypes), "_ntypes" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_atom_name_vector), "_atom_name_vector" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_charge_vector), "_charge_vector" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_mass_vector), "_mass_vector" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_atomic_number_vector), "_atomic_number_vector" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_ico_vec), "_ico_vec" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_iac_vec), "_iac_vec" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_atom_type_vector), "_atom_type_vector" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_local_typej_vec), "_local_typej_vec" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_cn1_vec), "_cn1_vec" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_cn2_vec), "_cn2_vec" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_NumberOfExcludedAtomIndices), "_NumberOfExcludedAtomIndices" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_ExcludedAtomIndices), "_ExcludedAtomIndices" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::EnergyAnchorRestraint_O/123
{ class_kind, STAMP_chem__EnergyAnchorRestraint_O, sizeof(chem::EnergyAnchorRestraint_O), 0, "chem::EnergyAnchorRestraint_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_Terms._Vector._Contents), "_Terms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_BeyondThresholdTerms._Vector._Contents), "_BeyondThresholdTerms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::EnergyFixedNonbondRestraint_O/127
{ class_kind, STAMP_chem__EnergyFixedNonbondRestraint_O, sizeof(chem::EnergyFixedNonbondRestraint_O), 0, "chem::EnergyFixedNonbondRestraint_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AtomTable_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_MobileAtomTable), "_MobileAtomTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFNonbondCrossTermTable_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_NonbondCrossTermTable), "_NonbondCrossTermTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DielectricConstant), "_DielectricConstant" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_ScaleVdw), "_ScaleVdw" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_ScaleElectrostatic), "_ScaleElectrostatic" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_EnergyVdw), "_EnergyVdw" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_EnergyElectrostatic), "_EnergyElectrostatic" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::FixedNonbondRestraint>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_Terms._Vector._Contents), "_Terms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_BeyondThresholdTerms._Vector._Contents), "_BeyondThresholdTerms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::EnergySketchStretch_O/131
{ class_kind, STAMP_chem__EnergySketchStretch_O, sizeof(chem::EnergySketchStretch_O), 0, "chem::EnergySketchStretch_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergySketchStretch>>), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_Terms._Vector._Contents), "_Terms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergySketchStretch>>), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_BeyondThresholdTerms._Vector._Contents), "_BeyondThresholdTerms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::EnergyImproperRestraint_O/135
{ class_kind, STAMP_chem__EnergyImproperRestraint_O, sizeof(chem::EnergyImproperRestraint_O), 0, "chem::EnergyImproperRestraint_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyImproperRestraint>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_Terms._Vector._Contents), "_Terms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyImproperRestraint>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint_O),_BeyondThresholdTerms._Vector._Contents), "_BeyondThresholdTerms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::EnergyAngle_O/139
{ class_kind, STAMP_chem__EnergyAngle_O, sizeof(chem::EnergyAngle_O), 0, "chem::EnergyAngle_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_Enabled), "_Enabled" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_ErrorThreshold), "_ErrorThreshold" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugEnergy), "_DebugEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_TotalEnergy), "_TotalEnergy" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_Debug_NumberOfTermsToCalculate), "_Debug_NumberOfTermsToCalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_gcount), "_DebugLog._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_precision), "_DebugLog._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_width), "_DebugLog._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_word_zero._M_iword), "_DebugLog._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_word_size), "_DebugLog._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_fill), "_DebugLog._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_fill_init), "_DebugLog._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_stringbuf._M_string._M_string_length), "_DebugLog._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_DebugLog._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyAngle>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_Terms._Vector._Contents), "_Terms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyAngle>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_BeyondThresholdTerms._Vector._Contents), "_BeyondThresholdTerms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::Matter_O/143
{ class_kind, STAMP_chem__Matter_O, sizeof(chem::Matter_O), 0, "chem::Matter_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Matter_O),_Id), "_Id" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Matter_O),name), "name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::Matter_O),containerContainedBy), "containerContainedBy" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Matter_O),_contents._Vector._Contents), "_contents._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::Matter_O),_Properties), "_Properties" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::Matter_O),_RestraintList), "_RestraintList" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::Aggregate_O/147
{ class_kind, STAMP_chem__Aggregate_O, sizeof(chem::Aggregate_O), 0, "chem::Aggregate_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Aggregate_O),_Id), "_Id" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Aggregate_O),name), "name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::Aggregate_O),containerContainedBy), "containerContainedBy" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Aggregate_O),_contents._Vector._Contents), "_contents._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::Aggregate_O),_Properties), "_Properties" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::Aggregate_O),_RestraintList), "_RestraintList" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::Aggregate_O),_ForceFieldName), "_ForceFieldName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BoundingBox_O>), offsetof(SAFE_TYPE_MACRO(chem::Aggregate_O),_BoundingBox), "_BoundingBox" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::Atom_O/151
{ class_kind, STAMP_chem__Atom_O, sizeof(chem::Atom_O), 0, "chem::Atom_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_Id), "_Id" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),name), "name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),containerContainedBy), "containerContainedBy" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_contents._Vector._Contents), "_contents._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_Properties), "_Properties" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_RestraintList), "_RestraintList" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_UniqueAtomOrder), "_UniqueAtomOrder" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_Alias), "_Alias" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),flags), "flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),type), "type" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),bonds._Vector._Contents), "bonds._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),charge), "charge" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),copyAtom), "copyAtom" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_BackSpan.theObject), "_BackSpan.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_NextSpan.theObject), "_NextSpan.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),backCount), "backCount" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),tempInt), "tempInt" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),dAtomTemp), "dAtomTemp" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),seenId), "seenId" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_float, sizeof(float), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),occupancy), "occupancy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_float, sizeof(float), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),tempFactor), "tempFactor" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_float, sizeof(float), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),vdwRadius), "vdwRadius" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_float, sizeof(float), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),covalentRadius), "covalentRadius" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_RelativePriority), "_RelativePriority" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_Mask), "_Mask" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_short, sizeof(unsigned short), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_RingMembershipCount), "_RingMembershipCount" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_short, sizeof(short), offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_Ionization), "_Ionization" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::VirtualAtom_O/155
{ class_kind, STAMP_chem__VirtualAtom_O, sizeof(chem::VirtualAtom_O), 0, "chem::VirtualAtom_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_Id), "_Id" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),name), "name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),containerContainedBy), "containerContainedBy" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_contents._Vector._Contents), "_contents._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_Properties), "_Properties" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_RestraintList), "_RestraintList" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_UniqueAtomOrder), "_UniqueAtomOrder" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_Alias), "_Alias" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),flags), "flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),type), "type" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>>), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),bonds._Vector._Contents), "bonds._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),charge), "charge" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),copyAtom), "copyAtom" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_BackSpan.theObject), "_BackSpan.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_NextSpan.theObject), "_NextSpan.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),backCount), "backCount" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),tempInt), "tempInt" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),dAtomTemp), "dAtomTemp" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),seenId), "seenId" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_float, sizeof(float), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),occupancy), "occupancy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_float, sizeof(float), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),tempFactor), "tempFactor" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_float, sizeof(float), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),vdwRadius), "vdwRadius" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_float, sizeof(float), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),covalentRadius), "covalentRadius" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_RelativePriority), "_RelativePriority" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_Mask), "_Mask" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_short, sizeof(unsigned short), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_RingMembershipCount), "_RingMembershipCount" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_short, sizeof(short), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_Ionization), "_Ionization" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CalculatePosition_O>), offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_CalculatePosition), "_CalculatePosition" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::Residue_O/159
{ class_kind, STAMP_chem__Residue_O, sizeof(chem::Residue_O), 0, "chem::Residue_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_Id), "_Id" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Residue_O),name), "name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::Residue_O),containerContainedBy), "containerContainedBy" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_contents._Vector._Contents), "_contents._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_Properties), "_Properties" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_RestraintList), "_RestraintList" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_Type), "_Type" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_Selected), "_Selected" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_NetCharge), "_NetCharge" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Residue_O),tempInt), "tempInt" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Residue_O),pdbName), "pdbName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_FileSequenceNumber), "_FileSequenceNumber" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_UniqueLabel.theObject), "_UniqueLabel.theObject" }, // public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_MonomerAliases.theObject), "_MonomerAliases.theObject" }, // public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// Stamp = chem::Molecule_O/163
{ class_kind, STAMP_chem__Molecule_O, sizeof(chem::Molecule_O), 0, "chem::Molecule_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Molecule_O),_Id), "_Id" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Molecule_O),name), "name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::Molecule_O),containerContainedBy), "containerContainedBy" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Molecule_O),_contents._Vector._Contents), "_contents._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::Molecule_O),_Properties), "_Properties" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::Molecule_O),_RestraintList), "_RestraintList" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::Molecule_O),_ForceFieldName), "_ForceFieldName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Molecule_O),_Type), "_Type" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::PdbWriter_O/167
{ class_kind, STAMP_chem__PdbWriter_O, sizeof(chem::PdbWriter_O), 0, "chem::PdbWriter_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::PdbWriter_O),_Out), "_Out" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::TrajectoryFrame_O/171
{ class_kind, STAMP_chem__TrajectoryFrame_O, sizeof(chem::TrajectoryFrame_O), 0, "chem::TrajectoryFrame_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::SimpleVectorCoordinate_O>), offsetof(SAFE_TYPE_MACRO(chem::TrajectoryFrame_O),_Coordinates), "_Coordinates" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::MDBuilder_O/175
{ class_kind, STAMP_llvmo__MDBuilder_O, sizeof(llvmo::MDBuilder_O), 0, "llvmo::MDBuilder_O" },
// Stamp = chem::Topology_O/179
{ class_kind, STAMP_chem__Topology_O, sizeof(chem::Topology_O), 0, "chem::Topology_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Topology_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Constitution_O>), offsetof(SAFE_TYPE_MACRO(chem::Topology_O),_Constitution), "_Constitution" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Topology_O),_StereoisomerCoding), "_StereoisomerCoding" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Topology_O),_StereoisomerAtomProperties._Vector._Contents), "_StereoisomerAtomProperties._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::Topology_O),_Properties), "_Properties" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Topology_O),_DefaultOutPlugName), "_DefaultOutPlugName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::Topology_O),_Plugs._Contents), "_Plugs._Contents" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::AtomTable_O/183
{ class_kind, STAMP_chem__AtomTable_O, sizeof(chem::AtomTable_O), 0, "chem::AtomTable_O" },
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyAtom>>), offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_Atoms._Vector._Contents), "_Atoms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_AtomTableIndices), "_AtomTableIndices" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_int32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_ResiduePointers), "_ResiduePointers" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_T_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_ResidueNames), "_ResidueNames" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_int32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_AtomsPerMolecule), "_AtomsPerMolecule" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_firstSolventMoleculeNSPSOL), "_firstSolventMoleculeNSPSOL" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_finalSoluteResidueIPTRES), "_finalSoluteResidueIPTRES" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_totalNumberOfMoleculesNSPM), "_totalNumberOfMoleculesNSPM" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_Residues), "_Residues" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_Molecules), "_Molecules" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_Matter), "_Matter" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_AggregateName), "_AggregateName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_BoundingBox), "_BoundingBox" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_NonbondForceFieldForAggregate), "_NonbondForceFieldForAggregate" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::CipPrioritizer_O/187
{ class_kind, STAMP_chem__CipPrioritizer_O, sizeof(chem::CipPrioritizer_O), 0, "chem::CipPrioritizer_O" },
// Stamp = adapt::IndexedObjectBag_O/191
{ class_kind, STAMP_adapt__IndexedObjectBag_O, sizeof(adapt::IndexedObjectBag_O), 0, "adapt::IndexedObjectBag_O" },
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(adapt::IndexedObjectBag_O),_Bag.theObject), "_Bag.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::IndexedObjectBag_O),_NextIndex), "_NextIndex" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::VirtualSphere_O/195
{ class_kind, STAMP_chem__VirtualSphere_O, sizeof(chem::VirtualSphere_O), 0, "chem::VirtualSphere_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::VirtualSphere_O),_WindowWidth), "_WindowWidth" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::VirtualSphere_O),_WindowHeight), "_WindowHeight" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::VirtualSphere_O),_StartX), "_StartX" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::VirtualSphere_O),_StartY), "_StartY" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::VirtualSphere_O),_MouseX), "_MouseX" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::VirtualSphere_O),_MouseY), "_MouseY" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::VirtualSphere_O),_Recalculate), "_Recalculate" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::VirtualSphere_O),_Scale), "_Scale" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::TwisterDriver_O/199
{ class_kind, STAMP_chem__TwisterDriver_O, sizeof(chem::TwisterDriver_O), 0, "chem::TwisterDriver_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Aggregate_O>), offsetof(SAFE_TYPE_MACRO(chem::TwisterDriver_O),_Aggregate), "_Aggregate" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>>), offsetof(SAFE_TYPE_MACRO(chem::TwisterDriver_O),_Twisters._Vector._Contents), "_Twisters._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = core::NativeVector_double_O/203
{ class_kind, STAMP_core__NativeVector_double_O, sizeof(core::NativeVector_double_O), 0, "core::NativeVector_double_O" },
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<double>>), offsetof(SAFE_TYPE_MACRO(core::NativeVector_double_O),_Vector._Vector._Contents), "_Vector._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::RingFinder_O/207
{ class_kind, STAMP_chem__RingFinder_O, sizeof(chem::RingFinder_O), 0, "chem::RingFinder_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTable_O>), offsetof(SAFE_TYPE_MACRO(chem::RingFinder_O),_vertices), "_vertices" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>>), offsetof(SAFE_TYPE_MACRO(chem::RingFinder_O),_edges._Vector._Contents), "_edges._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEql_O>), offsetof(SAFE_TYPE_MACRO(chem::RingFinder_O),_rings), "_rings" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>>), offsetof(SAFE_TYPE_MACRO(chem::RingFinder_O),_finalRings._Vector._Contents), "_finalRings._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>>), offsetof(SAFE_TYPE_MACRO(chem::RingFinder_O),_gaussian._Vector._Contents), "_gaussian._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = llvmo::FunctionCallee_O/211
{ class_kind, STAMP_llvmo__FunctionCallee_O, sizeof(llvmo::FunctionCallee_O), 0, "llvmo::FunctionCallee_O" },
// Stamp = kinematics::Joint_O/215
{ class_kind, STAMP_kinematics__Joint_O, sizeof(kinematics::Joint_O), 0, "kinematics::Joint_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_Parent), "_Parent" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_Id._Molecule), "_Id._Molecule" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_Id._Residue), "_Id._Residue" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_Id._Atom), "_Id._Atom" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_Properties), "_Properties" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_Comment._M_string_length), "_Comment._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_Comment.NO-NAME._M_allocated_capacity), "_Comment.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_DofRefoldIndex), "_DofRefoldIndex" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = kinematics::JumpJoint_O/219
{ class_kind, STAMP_kinematics__JumpJoint_O, sizeof(kinematics::JumpJoint_O), 0, "kinematics::JumpJoint_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Parent), "_Parent" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Id._Molecule), "_Id._Molecule" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Id._Residue), "_Id._Residue" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Id._Atom), "_Id._Atom" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Properties), "_Properties" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Comment._M_string_length), "_Comment._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Comment.NO-NAME._M_allocated_capacity), "_Comment.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_DofRefoldIndex), "_DofRefoldIndex" }, // public: (NIL) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>), offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Children._Vector._Contents), "_Children._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = kinematics::OriginJumpJoint_O/223
{ class_kind, STAMP_kinematics__OriginJumpJoint_O, sizeof(kinematics::OriginJumpJoint_O), 0, "kinematics::OriginJumpJoint_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Parent), "_Parent" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Id._Molecule), "_Id._Molecule" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Id._Residue), "_Id._Residue" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Id._Atom), "_Id._Atom" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Properties), "_Properties" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Comment._M_string_length), "_Comment._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Comment.NO-NAME._M_allocated_capacity), "_Comment.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_DofRefoldIndex), "_DofRefoldIndex" }, // public: (NIL) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>), offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Children._Vector._Contents), "_Children._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = kinematics::BondedJoint_O/227
{ class_kind, STAMP_kinematics__BondedJoint_O, sizeof(kinematics::BondedJoint_O), 0, "kinematics::BondedJoint_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Parent), "_Parent" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Id._Molecule), "_Id._Molecule" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Id._Residue), "_Id._Residue" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Id._Atom), "_Id._Atom" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Properties), "_Properties" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Comment._M_string_length), "_Comment._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Comment.NO-NAME._M_allocated_capacity), "_Comment.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_DofRefoldIndex), "_DofRefoldIndex" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_NumberOfChildren), "_NumberOfChildren" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Children[0]), "_Children[0]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Children[1]), "_Children[1]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Children[2]), "_Children[2]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Children[3]), "_Children[3]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Children[4]), "_Children[4]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Phi), "_Phi" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Theta), "_Theta" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Distance), "_Distance" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_DofChangePropagatesToYoungerSiblings), "_DofChangePropagatesToYoungerSiblings" }, // public: (T) fixable: NIL good-name: T
// Stamp = kinematics::RootBondedJoint_O/231
{ class_kind, STAMP_kinematics__RootBondedJoint_O, sizeof(kinematics::RootBondedJoint_O), 0, "kinematics::RootBondedJoint_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Parent), "_Parent" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Id._Molecule), "_Id._Molecule" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Id._Residue), "_Id._Residue" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Id._Atom), "_Id._Atom" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Properties), "_Properties" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Comment._M_string_length), "_Comment._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Comment.NO-NAME._M_allocated_capacity), "_Comment.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_DofRefoldIndex), "_DofRefoldIndex" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_NumberOfChildren), "_NumberOfChildren" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Children[0]), "_Children[0]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Children[1]), "_Children[1]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Children[2]), "_Children[2]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Children[3]), "_Children[3]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Children[4]), "_Children[4]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Phi), "_Phi" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Theta), "_Theta" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Distance), "_Distance" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_DofChangePropagatesToYoungerSiblings), "_DofChangePropagatesToYoungerSiblings" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_RootInfo._ConstitutionName), "_RootInfo._ConstitutionName" }, // public: (NIL T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_RootInfo._TopologyName), "_RootInfo._TopologyName" }, // public: (NIL T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_RootInfo._Bond1Id), "_RootInfo._Bond1Id" }, // public: (NIL T) fixable: NIL good-name: T
// Stamp = kinematics::DelayedBondedJoint_O/235
{ class_kind, STAMP_kinematics__DelayedBondedJoint_O, sizeof(kinematics::DelayedBondedJoint_O), 0, "kinematics::DelayedBondedJoint_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Parent), "_Parent" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Id._Molecule), "_Id._Molecule" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Id._Residue), "_Id._Residue" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Id._Atom), "_Id._Atom" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Properties), "_Properties" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Comment._M_string_length), "_Comment._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Comment.NO-NAME._M_allocated_capacity), "_Comment.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_DofRefoldIndex), "_DofRefoldIndex" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_NumberOfChildren), "_NumberOfChildren" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Children[0]), "_Children[0]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Children[1]), "_Children[1]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Children[2]), "_Children[2]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Children[3]), "_Children[3]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Children[4]), "_Children[4]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Phi), "_Phi" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Theta), "_Theta" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Distance), "_Distance" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_DofChangePropagatesToYoungerSiblings), "_DofChangePropagatesToYoungerSiblings" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_DelayType), "_DelayType" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_DelayAtomId), "_DelayAtomId" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::SearchStatistics_O/239
{ class_kind, STAMP_chem__SearchStatistics_O, sizeof(chem::SearchStatistics_O), 0, "chem::SearchStatistics_O" },
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::SearchStatistics_O),_ReportFrequency), "_ReportFrequency" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::PdbMonomerDatabase_O/243
{ class_kind, STAMP_chem__PdbMonomerDatabase_O, sizeof(chem::PdbMonomerDatabase_O), 0, "chem::PdbMonomerDatabase_O" },
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::PdbMonomerDatabase_O),_Database._Contents), "_Database._Contents" }, // public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::Twister_O/247
{ class_kind, STAMP_chem__Twister_O, sizeof(chem::Twister_O), 0, "chem::Twister_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::Twister_O),_FixedRef), "_FixedRef" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::Twister_O),_Fixed), "_Fixed" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::Twister_O),_Movable), "_Movable" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::Twister_O),_MovableRef), "_MovableRef" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Twister_O),_Atoms._Vector._Contents), "_Atoms._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::MonomerCoordinates_O/251
{ class_kind, STAMP_chem__MonomerCoordinates_O, sizeof(chem::MonomerCoordinates_O), 0, "chem::MonomerCoordinates_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::MonomerCoordinates_O),_Comment._M_string_length), "_Comment._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::MonomerCoordinates_O),_Comment.NO-NAME._M_allocated_capacity), "_Comment.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::MonomerContext_O>), offsetof(SAFE_TYPE_MACRO(chem::MonomerCoordinates_O),_Context), "_Context" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::MonomerCoordinates_O),_TrainerName._M_string_length), "_TrainerName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::MonomerCoordinates_O),_TrainerName.NO-NAME._M_allocated_capacity), "_TrainerName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>>), offsetof(SAFE_TYPE_MACRO(chem::MonomerCoordinates_O),_Rotamers._Vector._Contents), "_Rotamers._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::FFParameter_O/255
{ class_kind, STAMP_chem__FFParameter_O, sizeof(chem::FFParameter_O), 0, "chem::FFParameter_O" },
// Stamp = chem::FFVdw_O/259
{ class_kind, STAMP_chem__FFVdw_O, sizeof(chem::FFVdw_O), 0, "chem::FFVdw_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::FFVdw_O),_T1._M_string_length), "_T1._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::FFVdw_O),_T1.NO-NAME._M_allocated_capacity), "_T1.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::FFVdw_O),_T2._M_string_length), "_T2._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::FFVdw_O),_T2.NO-NAME._M_allocated_capacity), "_T2.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFVdw_O),_R), "_R" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFVdw_O),_Eps), "_Eps" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFVdw_O),_M), "_M" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFVdw_O),_N), "_N" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFVdw_O),_Edep), "_Edep" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::FFStretch_O/263
{ class_kind, STAMP_chem__FFStretch_O, sizeof(chem::FFStretch_O), 0, "chem::FFStretch_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FFStretch_O),_Type1), "_Type1" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FFStretch_O),_Type2), "_Type2" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFStretch_O),_R0_Nanometer), "_R0_Nanometer" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFStretch_O),_Kb_kJPerNanometerSquared), "_Kb_kJPerNanometerSquared" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::FFPtor_O/267
{ class_kind, STAMP_chem__FFPtor_O, sizeof(chem::FFPtor_O), 0, "chem::FFPtor_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_T1), "_T1" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_T2), "_T2" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_T3), "_T3" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_T4), "_T4" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_HasScee), "_HasScee" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_Scee), "_Scee" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_HasScnb), "_HasScnb" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_Scnb), "_Scnb" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_Comment._M_string_length), "_Comment._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_Comment.NO-NAME._M_allocated_capacity), "_Comment.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// Stamp = chem::FFItor_O/271
{ class_kind, STAMP_chem__FFItor_O, sizeof(chem::FFItor_O), 0, "chem::FFItor_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FFItor_O),_T1), "_T1" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FFItor_O),_T2), "_T2" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FFItor_O),_T3), "_T3" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FFItor_O),_T4), "_T4" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::FFNonbond_O/275
{ class_kind, STAMP_chem__FFNonbond_O, sizeof(chem::FFNonbond_O), 0, "chem::FFNonbond_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Type), "_Type" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Radius_Nanometers), "_Radius_Nanometers" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Epsilon_kJ), "_Epsilon_kJ" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Apol), "_Apol" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Neff), "_Neff" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Mass), "_Mass" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Polarizability), "_Polarizability" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_InitialCharge), "_InitialCharge" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Fcadj), "_Fcadj" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Pbci), "_Pbci" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_SameParms._M_string_length), "_SameParms._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_SameParms.NO-NAME._M_allocated_capacity), "_SameParms.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// Stamp = chem::FFAngle_O/279
{ class_kind, STAMP_chem__FFAngle_O, sizeof(chem::FFAngle_O), 0, "chem::FFAngle_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FFAngle_O),_Type1), "_Type1" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FFAngle_O),_Type2), "_Type2" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FFAngle_O),_Type3), "_Type3" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFAngle_O),_AngRad), "_AngRad" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFAngle_O),_K2__kJPerRadianSquared), "_K2__kJPerRadianSquared" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::Restraint_O/283
{ class_kind, STAMP_chem__Restraint_O, sizeof(chem::Restraint_O), 0, "chem::Restraint_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::Restraint_O),_Active), "_Active" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::RestraintChiral_O/287
{ class_kind, STAMP_chem__RestraintChiral_O, sizeof(chem::RestraintChiral_O), 0, "chem::RestraintChiral_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::RestraintChiral_O),_Active), "_Active" }, // public: (NIL) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::RestraintChiral_O),_A), "_A" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::RestraintChiral_O),_Chirality), "_Chirality" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::RestraintDistance_O/291
{ class_kind, STAMP_chem__RestraintDistance_O, sizeof(chem::RestraintDistance_O), 0, "chem::RestraintDistance_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::RestraintDistance_O),_Active), "_Active" }, // public: (NIL) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::RestraintDistance_O),_A), "_A" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::RestraintDistance_O),_B), "_B" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::RestraintDistance_O),_K), "_K" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::RestraintDistance_O),_R0), "_R0" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::RestraintAngle_O/295
{ class_kind, STAMP_chem__RestraintAngle_O, sizeof(chem::RestraintAngle_O), 0, "chem::RestraintAngle_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::RestraintAngle_O),_Active), "_Active" }, // public: (NIL) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::RestraintAngle_O),_A), "_A" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::RestraintAngle_O),_B), "_B" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::RestraintAngle_O),_C), "_C" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::RestraintAngle_O),_MinRad), "_MinRad" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::RestraintAngle_O),_MaxRad), "_MaxRad" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::RestraintAngle_O),_Weight), "_Weight" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::RestraintAnchor_O/299
{ class_kind, STAMP_chem__RestraintAnchor_O, sizeof(chem::RestraintAnchor_O), 0, "chem::RestraintAnchor_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::RestraintAnchor_O),_Active), "_Active" }, // public: (NIL) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::RestraintAnchor_O),_Atom), "_Atom" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::RestraintAnchor_O),_Weight), "_Weight" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::RestraintFixedNonbond_O/303
{ class_kind, STAMP_chem__RestraintFixedNonbond_O, sizeof(chem::RestraintFixedNonbond_O), 0, "chem::RestraintFixedNonbond_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::RestraintFixedNonbond_O),_Active), "_Active" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::RestraintFixedNonbond_O),_Matter), "_Matter" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::RestraintDihedral_O/307
{ class_kind, STAMP_chem__RestraintDihedral_O, sizeof(chem::RestraintDihedral_O), 0, "chem::RestraintDihedral_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),_Active), "_Active" }, // public: (NIL) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),_A), "_A" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),_B), "_B" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),_C), "_C" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),_D), "_D" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),_MinDegrees), "_MinDegrees" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),_MaxDegrees), "_MaxDegrees" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),_Weight), "_Weight" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::AtomIndexer_O/311
{ class_kind, STAMP_chem__AtomIndexer_O, sizeof(chem::AtomIndexer_O), 0, "chem::AtomIndexer_O" },
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>), offsetof(SAFE_TYPE_MACRO(chem::AtomIndexer_O),_Names._Vector._Contents), "_Names._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = geom::BoundingCuboid_O/315
{ class_kind, STAMP_geom__BoundingCuboid_O, sizeof(geom::BoundingCuboid_O), 0, "geom::BoundingCuboid_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(geom::BoundingCuboid_O),_Defined), "_Defined" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::StereoInformation_O/319
{ class_kind, STAMP_chem__StereoInformation_O, sizeof(chem::StereoInformation_O), 0, "chem::StereoInformation_O" },
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>>), offsetof(SAFE_TYPE_MACRO(chem::StereoInformation_O),_Stereoisomers._Vector._Contents), "_Stereoisomers._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::StereoInformation_O),_NameOrPdbToStereoisomer._Contents), "_NameOrPdbToStereoisomer._Contents" }, // public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>>), offsetof(SAFE_TYPE_MACRO(chem::StereoInformation_O),_ComplexRestraints._Vector._Contents), "_ComplexRestraints._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::AddIonOctree_O/323
{ class_kind, STAMP_chem__AddIonOctree_O, sizeof(chem::AddIonOctree_O), 0, "chem::AddIonOctree_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BoundingBox_O>), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),_BoundingBox), "_BoundingBox" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),_BoundingBox_x_rsize), "_BoundingBox_x_rsize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),_BoundingBox_y_rsize), "_BoundingBox_y_rsize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),_BoundingBox_z_rsize), "_BoundingBox_z_rsize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),_iMaxDepth), "_iMaxDepth" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),iTreePoints), "iTreePoints" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),iDielectric), "iDielectric" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),iNodeCount), "iNodeCount" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_float, sizeof(float), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),fVolume), "fVolume" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),dGridSize), "dGridSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_float, sizeof(float), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),fNewCharge), "fNewCharge" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_float, sizeof(float), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),fMinCharge), "fMinCharge" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_float, sizeof(float), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),fMaxCharge), "fMaxCharge" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),aClosestAtom), "aClosestAtom" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),dClosestDistance), "dClosestDistance" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<int>>), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),PiDensities._Vector._Contents), "PiDensities._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<int>>), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),iNodeNumCharges._Vector._Contents), "iNodeNumCharges._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<float>>), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),_PfCharges._Vector._Contents), "_PfCharges._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<double>>), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),PdHalfEdges._Vector._Contents), "PdHalfEdges._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<double>>), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),PdHalfDiagonals._Vector._Contents), "PdHalfDiagonals._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),vaAtoms._Vector._Contents), "vaAtoms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTable_O>), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),atomsToResidues), "atomsToResidues" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTable_O>), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),residuesToMolecules), "residuesToMolecules" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),onHead), "onHead" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::CDNode_O/327
{ class_kind, STAMP_chem__CDNode_O, sizeof(chem::CDNode_O), 0, "chem::CDNode_O" },
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_Color), "_Color" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_Label._M_string_length), "_Label._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_Label.NO-NAME._M_allocated_capacity), "_Label.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_AtomProperties), "_AtomProperties" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_ResidueProperties), "_ResidueProperties" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_MoleculeProperties), "_MoleculeProperties" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_Atom.theObject), "_Atom.theObject" }, // public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_BackSpan.theObject), "_BackSpan.theObject" }, // public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_NextSpan.theObject), "_NextSpan.theObject" }, // public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// Stamp = chem::OligomerPart_Base_O/331
{ class_kind, STAMP_chem__OligomerPart_Base_O, sizeof(chem::OligomerPart_Base_O), 0, "chem::OligomerPart_Base_O" },
// Stamp = chem::OligomerPart_Link_O/335
{ class_kind, STAMP_chem__OligomerPart_Link_O, sizeof(chem::OligomerPart_Link_O), 0, "chem::OligomerPart_Link_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::OligomerPart_Link_O),_Monomer1Id), "_Monomer1Id" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::OligomerPart_Link_O),_Coupling), "_Coupling" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OligomerPart_Monomer_O>), offsetof(SAFE_TYPE_MACRO(chem::OligomerPart_Link_O),_Monomer2), "_Monomer2" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::OligomerPart_Monomer_O/339
{ class_kind, STAMP_chem__OligomerPart_Monomer_O, sizeof(chem::OligomerPart_Monomer_O), 0, "chem::OligomerPart_Monomer_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::OligomerPart_Monomer_O),_MonomerId), "_MonomerId" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::OligomerPart_Monomer_O),_GroupName), "_GroupName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::OligomerPart_Monomer_O),_MonomerAliases), "_MonomerAliases" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::OligomerPart_Monomer_O),_Comment._M_string_length), "_Comment._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::OligomerPart_Monomer_O),_Comment.NO-NAME._M_allocated_capacity), "_Comment.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// Stamp = kinematics::BondId_O/343
{ class_kind, STAMP_kinematics__BondId_O, sizeof(kinematics::BondId_O), 0, "kinematics::BondId_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::BondId_O),_Parent), "_Parent" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::BondId_O),_Child), "_Child" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::Serializer_O/347
{ class_kind, STAMP_core__Serializer_O, sizeof(core::Serializer_O), 0, "core::Serializer_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Serializer_O),_Data._M_string_length), "_Data._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Serializer_O),_Data.NO-NAME._M_allocated_capacity), "_Data.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// Stamp = chem::CoordinateSystem_O/351
{ class_kind, STAMP_chem__CoordinateSystem_O, sizeof(chem::CoordinateSystem_O), 0, "chem::CoordinateSystem_O" },
// Stamp = chem::Bond_O/355
{ class_kind, STAMP_chem__Bond_O, sizeof(chem::Bond_O), 0, "chem::Bond_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::Bond_O),_Atom1), "_Atom1" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::Bond_O),_Atom2), "_Atom2" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::Bond_O),_Properties), "_Properties" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::CandoDatabase_O/359
{ class_kind, STAMP_chem__CandoDatabase_O, sizeof(chem::CandoDatabase_O), 0, "chem::CandoDatabase_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::CandoDatabase_O),_Name), "_Name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::CandoDatabase_O),_DateCreated._M_string_length), "_DateCreated._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::CandoDatabase_O),_DateCreated.NO-NAME._M_allocated_capacity), "_DateCreated.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::CandoDatabase_O),_DateUpdated._M_string_length), "_DateUpdated._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::CandoDatabase_O),_DateUpdated.NO-NAME._M_allocated_capacity), "_DateUpdated.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::CandoDatabase_O),_frameRecognizers._Contents), "_frameRecognizers._Contents" }, // public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::CandoDatabase_O),_MonomerCoordinates._Contents), "_MonomerCoordinates._Contents" }, // public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::CandoDatabase_O),_Entities), "_Entities" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::CandoDatabase_O),_Topologys), "_Topologys" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::AbstractLargeSquareMatrix_O/363
{ class_kind, STAMP_chem__AbstractLargeSquareMatrix_O, sizeof(chem::AbstractLargeSquareMatrix_O), 0, "chem::AbstractLargeSquareMatrix_O" },
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::AbstractLargeSquareMatrix_O),_Columns), "_Columns" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::AbstractLargeSquareMatrix_O),_Rows), "_Rows" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::SparseLargeSquareMatrix_O/367
{ class_kind, STAMP_chem__SparseLargeSquareMatrix_O, sizeof(chem::SparseLargeSquareMatrix_O), 0, "chem::SparseLargeSquareMatrix_O" },
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::SparseLargeSquareMatrix_O),_Columns), "_Columns" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::SparseLargeSquareMatrix_O),_Rows), "_Rows" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::SparseLargeSquareMatrix_O),_InsertionIsComplete), "_InsertionIsComplete" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::SparseLargeSquareMatrix_O),_RowStartEntries), "_RowStartEntries" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::SparseLargeSquareMatrix_O),_ActiveElements), "_ActiveElements" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::SparseLargeSquareMatrix_O),_ReservedElements), "_ReservedElements" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::FullLargeSquareMatrix_O/371
{ class_kind, STAMP_chem__FullLargeSquareMatrix_O, sizeof(chem::FullLargeSquareMatrix_O), 0, "chem::FullLargeSquareMatrix_O" },
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::FullLargeSquareMatrix_O),_Columns), "_Columns" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::FullLargeSquareMatrix_O),_Rows), "_Rows" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::FullLargeSquareMatrix_O),_ActiveElements), "_ActiveElements" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::FFBaseDb_O/375
{ class_kind, STAMP_chem__FFBaseDb_O, sizeof(chem::FFBaseDb_O), 0, "chem::FFBaseDb_O" },
// Stamp = chem::FFParameterBaseDb_O/379
{ class_kind, STAMP_chem__FFParameterBaseDb_O, sizeof(chem::FFParameterBaseDb_O), 0, "chem::FFParameterBaseDb_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::FFParameterBaseDb_O),_Parameters), "_Parameters" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::FFItorDb_O/383
{ class_kind, STAMP_chem__FFItorDb_O, sizeof(chem::FFItorDb_O), 0, "chem::FFItorDb_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::FFItorDb_O),_Parameters), "_Parameters" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::FFStretchDb_O/387
{ class_kind, STAMP_chem__FFStretchDb_O, sizeof(chem::FFStretchDb_O), 0, "chem::FFStretchDb_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::FFStretchDb_O),_Parameters), "_Parameters" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>>), offsetof(SAFE_TYPE_MACRO(chem::FFStretchDb_O),_EstimateStretch._Contents), "_EstimateStretch._Contents" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::FFAngleDb_O/391
{ class_kind, STAMP_chem__FFAngleDb_O, sizeof(chem::FFAngleDb_O), 0, "chem::FFAngleDb_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::FFAngleDb_O),_Parameters), "_Parameters" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::FFAngleDb_O),_AngleFunction._M_string_length), "_AngleFunction._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::FFAngleDb_O),_AngleFunction.NO-NAME._M_allocated_capacity), "_AngleFunction.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::FFAngleDb_O),_ZConstants._Contents), "_ZConstants._Contents" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::FFAngleDb_O),_CConstants._Contents), "_CConstants._Contents" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::FFNonbondDb_O/395
{ class_kind, STAMP_chem__FFNonbondDb_O, sizeof(chem::FFNonbondDb_O), 0, "chem::FFNonbondDb_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),_Parameters), "_Parameters" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),EleChargeFcn), "EleChargeFcn" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),EleDielectricValue), "EleDielectricValue" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),EleDielectricValueDefined), "EleDielectricValueDefined" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),EleBuffer), "EleBuffer" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),EleBufferDefined), "EleBufferDefined" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),EleScale14), "EleScale14" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),EleScale14Defined), "EleScale14Defined" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),VdwScale14), "VdwScale14" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),VdwScale14Defined), "VdwScale14Defined" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),VdwScaleBufferA), "VdwScaleBufferA" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),VdwScaleBufferADefined), "VdwScaleBufferADefined" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),VdwScaleBufferB), "VdwScaleBufferB" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),VdwScaleBufferBDefined), "VdwScaleBufferBDefined" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),EleDielectricCodeDefined), "EleDielectricCodeDefined" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),VdwMixRadiusDefined), "VdwMixRadiusDefined" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),VdwMixWellDefined), "VdwMixWellDefined" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>>), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),_Terms._Vector._Contents), "_Terms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::FFPtorDb_O/399
{ class_kind, STAMP_chem__FFPtorDb_O, sizeof(chem::FFPtorDb_O), 0, "chem::FFPtorDb_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::FFPtorDb_O),_Parameters), "_Parameters" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::FFVdwDb_O/403
{ class_kind, STAMP_chem__FFVdwDb_O, sizeof(chem::FFVdwDb_O), 0, "chem::FFVdwDb_O" },
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>>), offsetof(SAFE_TYPE_MACRO(chem::FFVdwDb_O),_Terms._Vector._Contents), "_Terms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::FFTypesDb_O/407
{ class_kind, STAMP_chem__FFTypesDb_O, sizeof(chem::FFTypesDb_O), 0, "chem::FFTypesDb_O" },
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>>), offsetof(SAFE_TYPE_MACRO(chem::FFTypesDb_O),_TypeAssignmentRules._Vector._Contents), "_TypeAssignmentRules._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::AGVertex_O/411
{ class_kind, STAMP_chem__AGVertex_O, sizeof(chem::AGVertex_O), 0, "chem::AGVertex_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::RingFinder_O>), offsetof(SAFE_TYPE_MACRO(chem::AGVertex_O),_graph), "_graph" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::AGVertex_O),_atom), "_atom" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>>), offsetof(SAFE_TYPE_MACRO(chem::AGVertex_O),_edges._Vector._Contents), "_edges._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::AGVertex_O),_seenId), "_seenId" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::AGVertex_O),_backSpan), "_backSpan" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::AGVertex_O),_backCount), "_backCount" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::AGVertex_O),_sendBuffer), "_sendBuffer" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::AGVertex_O),_receiveBuffer), "_receiveBuffer" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::ForceField_O/415
{ class_kind, STAMP_chem__ForceField_O, sizeof(chem::ForceField_O), 0, "chem::ForceField_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Title._M_string_length), "_Title._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Title.NO-NAME._M_allocated_capacity), "_Title.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Ref._M_string_length), "_Ref._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Ref.NO-NAME._M_allocated_capacity), "_Ref.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>), offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_SingleBondMultiBondDistinctions._Vector._Contents), "_SingleBondMultiBondDistinctions._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::InfoDb_O>), offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Info), "_Info" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFTypesDb_O>), offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Types), "_Types" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFStretchDb_O>), offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Stretches), "_Stretches" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFAngleDb_O>), offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Angles), "_Angles" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFItorDb_O>), offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Itors), "_Itors" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFPtorDb_O>), offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Ptors), "_Ptors" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFNonbondDb_O>), offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Nonbonds), "_Nonbonds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFVdwDb_O>), offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Vdws), "_Vdws" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::AtomReferenceBase_O/419
{ class_kind, STAMP_chem__AtomReferenceBase_O, sizeof(chem::AtomReferenceBase_O), 0, "chem::AtomReferenceBase_O" },
// Stamp = chem::AtomReference_O/423
{ class_kind, STAMP_chem__AtomReference_O, sizeof(chem::AtomReference_O), 0, "chem::AtomReference_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomReference_O),_AtomAlias._M_string_length), "_AtomAlias._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomReference_O),_AtomAlias.NO-NAME._M_allocated_capacity), "_AtomAlias.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// Stamp = chem::ScoringFunction_O/427
{ class_kind, STAMP_chem__ScoringFunction_O, sizeof(chem::ScoringFunction_O), 0, "chem::ScoringFunction_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ScoringFunction_O),_Name._M_string_length), "_Name._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ScoringFunction_O),_Name.NO-NAME._M_allocated_capacity), "_Name.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::ScoringFunction_O),_Debug), "_Debug" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::EnergyFunction_O/431
{ class_kind, STAMP_chem__EnergyFunction_O, sizeof(chem::EnergyFunction_O), 0, "chem::EnergyFunction_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Name._M_string_length), "_Name._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Name.NO-NAME._M_allocated_capacity), "_Name.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Debug), "_Debug" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Matter), "_Matter" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFNonbondCrossTermTable_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_NonbondCrossTermTable), "_NonbondCrossTermTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AtomTable_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_AtomTable), "_AtomTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyStretch_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Stretch), "_Stretch" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyAngle_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Angle), "_Angle" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyDihedral_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Dihedral), "_Dihedral" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyNonbond_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Nonbond), "_Nonbond" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyImproperRestraint_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_ImproperRestraint), "_ImproperRestraint" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyChiralRestraint_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_ChiralRestraint), "_ChiralRestraint" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyAnchorRestraint_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_AnchorRestraint), "_AnchorRestraint" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyFixedNonbondRestraint_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_FixedNonbondRestraint), "_FixedNonbondRestraint" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_OtherEnergyComponents), "_OtherEnergyComponents" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BoundingBox_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_BoundingBox), "_BoundingBox" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_RestrainSecondaryAmides), "_RestrainSecondaryAmides" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_ChiralRestraintWeight), "_ChiralRestraintWeight" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_ChiralRestraintOffset), "_ChiralRestraintOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_AnchorRestraintWeight), "_AnchorRestraintWeight" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_FixedNonbondRestraintWeight), "_FixedNonbondRestraintWeight" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_TotalEnergy), "_TotalEnergy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Message._M_string_length), "_Message._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Message.NO-NAME._M_allocated_capacity), "_Message.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_DielectricConstant), "_DielectricConstant" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_MissingParameters), "_MissingParameters" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::SketchFunction_O/435
{ class_kind, STAMP_chem__SketchFunction_O, sizeof(chem::SketchFunction_O), 0, "chem::SketchFunction_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_Name._M_string_length), "_Name._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_Name.NO-NAME._M_allocated_capacity), "_Name.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_Debug), "_Debug" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_Graph), "_Graph" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_NodeTable), "_NodeTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergySketchStretch_O>), offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_Stretch), "_Stretch" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyOutOfZPlane_O>), offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_OutOfZPlane), "_OutOfZPlane" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyPointToLineRestraint_O>), offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_PointToLineRestraint), "_PointToLineRestraint" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergySketchNonbond_O>), offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_Nonbond), "_Nonbond" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_PointToLineRestraintWeight), "_PointToLineRestraintWeight" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_OutOfZPlaneWeight), "_OutOfZPlaneWeight" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_TotalEnergy), "_TotalEnergy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_Message._M_string_length), "_Message._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_Message.NO-NAME._M_allocated_capacity), "_Message.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_Frozen), "_Frozen" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::RigidBodyEnergyFunction_O/439
{ class_kind, STAMP_chem__RigidBodyEnergyFunction_O, sizeof(chem::RigidBodyEnergyFunction_O), 0, "chem::RigidBodyEnergyFunction_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::RigidBodyEnergyFunction_O),_Name._M_string_length), "_Name._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::RigidBodyEnergyFunction_O),_Name.NO-NAME._M_allocated_capacity), "_Name.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::RigidBodyEnergyFunction_O),_Debug), "_Debug" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::RigidBodyEnergyFunction_O),_RigidBodies), "_RigidBodies" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::RigidBodyEnergyFunction_O),_SavedCoordinates), "_SavedCoordinates" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::RigidBodyEnergyFunction_O),_Terms), "_Terms" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BoundingBox_O>), offsetof(SAFE_TYPE_MACRO(chem::RigidBodyEnergyFunction_O),_BoundingBox), "_BoundingBox" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::WildElementDict_O/443
{ class_kind, STAMP_chem__WildElementDict_O, sizeof(chem::WildElementDict_O), 0, "chem::WildElementDict_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEqual_O>), offsetof(SAFE_TYPE_MACRO(chem::WildElementDict_O),_AtomWildCards), "_AtomWildCards" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DITypeRefArray_O/447
{ class_kind, STAMP_llvmo__DITypeRefArray_O, sizeof(llvmo::DITypeRefArray_O), 0, "llvmo::DITypeRefArray_O" },
// Stamp = geom::OVector3_O/451
{ class_kind, STAMP_geom__OVector3_O, sizeof(geom::OVector3_O), 0, "geom::OVector3_O" },
// Stamp = geom::OVector2_O/455
{ class_kind, STAMP_geom__OVector2_O, sizeof(geom::OVector2_O), 0, "geom::OVector2_O" },
// Stamp = chem::Structure_Old_ListEntry_O/459
{ class_kind, STAMP_chem__Structure_Old_ListEntry_O, sizeof(chem::Structure_Old_ListEntry_O), 0, "chem::Structure_Old_ListEntry_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Structure_Old_List_O>), offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_ListEntry_O),_WeakStructureList), "_WeakStructureList" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::SimpleVectorCoordinate_O>), offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_ListEntry_O),_AllCoordinates), "_AllCoordinates" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::SimpleVectorCoordinate_O>), offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_ListEntry_O),_SuperposeCoordinates), "_SuperposeCoordinates" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_ListEntry_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_ListEntry_O),_Members), "_Members" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::FFTypeRule_O/463
{ class_kind, STAMP_chem__FFTypeRule_O, sizeof(chem::FFTypeRule_O), 0, "chem::FFTypeRule_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Root_O>), offsetof(SAFE_TYPE_MACRO(chem::FFTypeRule_O),_Test), "_Test" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::FFTypeRule_O),_Type), "_Type" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = adapt::QDomNode_O/467
{ class_kind, STAMP_adapt__QDomNode_O, sizeof(adapt::QDomNode_O), 0, "adapt::QDomNode_O" },
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),parent), "parent" }, // public: (NIL) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),localName._M_string_length), "localName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),localName.NO-NAME._M_allocated_capacity), "localName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),_FileName._M_string_length), "_FileName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),_FileName.NO-NAME._M_allocated_capacity), "_FileName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),lineNumber), "lineNumber" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_precision), "characters._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_width), "characters._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_word_zero._M_iword), "characters._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_word_size), "characters._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_fill), "characters._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_fill_init), "characters._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_precision), "characters._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_width), "characters._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_word_zero._M_iword), "characters._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_word_size), "characters._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_fill), "characters._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_fill_init), "characters._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_gcount), "characters._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_precision), "characters._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_width), "characters._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_word_zero._M_iword), "characters._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_word_size), "characters._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_fill), "characters._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_fill_init), "characters._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_precision), "characters._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_width), "characters._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_word_zero._M_iword), "characters._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_word_size), "characters._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_fill), "characters._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_fill_init), "characters._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_precision), "characters._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_width), "characters._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_word_zero._M_iword), "characters._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_word_size), "characters._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_fill), "characters._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_fill_init), "characters._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_precision), "characters._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_width), "characters._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_word_zero._M_iword), "characters._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_word_size), "characters._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_fill), "characters._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_fill_init), "characters._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_stringbuf._M_string._M_string_length), "characters._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "characters._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>>), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),_children._Vector._Contents), "_children._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),attributes._M_t._M_impl._M_node_count), "attributes._M_t._M_impl._M_node_count" }, // public: (NIL NIL NIL T) fixable: NIL good-name: T
// Stamp = mp::SharedMutex_O/471
{ class_kind, STAMP_mp__SharedMutex_O, sizeof(mp::SharedMutex_O), 0, "mp::SharedMutex_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_Owner), "_Owner" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mReadMutex._NameWord), "_SharedMutex.mReadMutex._NameWord" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mReadMutex._Mutex.__count), "_SharedMutex.mReadMutex._Mutex.__count" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mReadMutex._Mutex.__value.__wch), "_SharedMutex.mReadMutex._Mutex.__value.__wch" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mReadMutex._Counter), "_SharedMutex.mReadMutex._Counter" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mReadMutex._Recursive), "_SharedMutex.mReadMutex._Recursive" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mWriteMutex._NameWord), "_SharedMutex.mWriteMutex._NameWord" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mWriteMutex._Mutex.__count), "_SharedMutex.mWriteMutex._Mutex.__count" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mWriteMutex._Mutex.__value.__wch), "_SharedMutex.mWriteMutex._Mutex.__value.__wch" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mWriteMutex._Counter), "_SharedMutex.mWriteMutex._Counter" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mWriteMutex._Recursive), "_SharedMutex.mWriteMutex._Recursive" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mReadsBlocked), "_SharedMutex.mReadsBlocked" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mMaxReaders), "_SharedMutex.mMaxReaders" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mReaders), "_SharedMutex.mReaders" }, // public: (T T) fixable: NIL good-name: T
// Stamp = chem::ConstitutionAtom_O/475
{ class_kind, STAMP_chem__ConstitutionAtom_O, sizeof(chem::ConstitutionAtom_O), 0, "chem::ConstitutionAtom_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::ConstitutionAtom_O),_AtomName), "_AtomName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ConstitutionAtom_O),_Index), "_Index" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::ConstitutionAtom_O),_AtomType), "_AtomType" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::ConstitutionAtom_O),_Properties), "_Properties" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>>), offsetof(SAFE_TYPE_MACRO(chem::ConstitutionAtom_O),_Bonds._Vector._Contents), "_Bonds._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::ConstitutionVirtualAtom_O/479
{ class_kind, STAMP_chem__ConstitutionVirtualAtom_O, sizeof(chem::ConstitutionVirtualAtom_O), 0, "chem::ConstitutionVirtualAtom_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::ConstitutionVirtualAtom_O),_AtomName), "_AtomName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ConstitutionVirtualAtom_O),_Index), "_Index" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::ConstitutionVirtualAtom_O),_AtomType), "_AtomType" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::ConstitutionVirtualAtom_O),_Properties), "_Properties" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>>), offsetof(SAFE_TYPE_MACRO(chem::ConstitutionVirtualAtom_O),_Bonds._Vector._Contents), "_Bonds._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CalculatePosition_O>), offsetof(SAFE_TYPE_MACRO(chem::ConstitutionVirtualAtom_O),_CalculatePositionCode), "_CalculatePositionCode" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::ReadAmberParameters_O/483
{ class_kind, STAMP_chem__ReadAmberParameters_O, sizeof(chem::ReadAmberParameters_O), 0, "chem::ReadAmberParameters_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFTypesDb_O>), offsetof(SAFE_TYPE_MACRO(chem::ReadAmberParameters_O),_Types), "_Types" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ForceField_O>), offsetof(SAFE_TYPE_MACRO(chem::ReadAmberParameters_O),_ForceField), "_ForceField" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::AGEdge_O/487
{ class_kind, STAMP_chem__AGEdge_O, sizeof(chem::AGEdge_O), 0, "chem::AGEdge_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::RingFinder_O>), offsetof(SAFE_TYPE_MACRO(chem::AGEdge_O),_graph), "_graph" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::AGEdge_O),_id), "_id" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AGVertex_O>), offsetof(SAFE_TYPE_MACRO(chem::AGEdge_O),_vertex1), "_vertex1" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AGVertex_O>), offsetof(SAFE_TYPE_MACRO(chem::AGEdge_O),_vertex2), "_vertex2" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::Entity_O/491
{ class_kind, STAMP_chem__Entity_O, sizeof(chem::Entity_O), 0, "chem::Entity_O" },
// Stamp = chem::Stereoisomer_O/495
{ class_kind, STAMP_chem__Stereoisomer_O, sizeof(chem::Stereoisomer_O), 0, "chem::Stereoisomer_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Stereoisomer_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Stereoisomer_O),_Pdb), "_Pdb" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Integer_O>), offsetof(SAFE_TYPE_MACRO(chem::Stereoisomer_O),_StereoisomerIndex), "_StereoisomerIndex" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Stereoisomer_O),_Configurations._Vector._Contents), "_Configurations._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::EntityNameSetBase_O/499
{ class_kind, STAMP_chem__EntityNameSetBase_O, sizeof(chem::EntityNameSetBase_O), 0, "chem::EntityNameSetBase_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EntityNameSetBase_O),_Optional), "_Optional" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<adapt::SymbolSet_O>), offsetof(SAFE_TYPE_MACRO(chem::EntityNameSetBase_O),_EntityNames), "_EntityNames" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::EntityNameSetWithCap_O/503
{ class_kind, STAMP_chem__EntityNameSetWithCap_O, sizeof(chem::EntityNameSetWithCap_O), 0, "chem::EntityNameSetWithCap_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EntityNameSetWithCap_O),_Optional), "_Optional" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<adapt::SymbolSet_O>), offsetof(SAFE_TYPE_MACRO(chem::EntityNameSetWithCap_O),_EntityNames), "_EntityNames" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::Mate_O/507
{ class_kind, STAMP_chem__Mate_O, sizeof(chem::Mate_O), 0, "chem::Mate_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::Mate_O),_Optional), "_Optional" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<adapt::SymbolSet_O>), offsetof(SAFE_TYPE_MACRO(chem::Mate_O),_EntityNames), "_EntityNames" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Mate_O),_Cap), "_Cap" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::RingClosingMate_O/511
{ class_kind, STAMP_chem__RingClosingMate_O, sizeof(chem::RingClosingMate_O), 0, "chem::RingClosingMate_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::RingClosingMate_O),_Optional), "_Optional" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<adapt::SymbolSet_O>), offsetof(SAFE_TYPE_MACRO(chem::RingClosingMate_O),_EntityNames), "_EntityNames" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::EntityNameSet_O/515
{ class_kind, STAMP_chem__EntityNameSet_O, sizeof(chem::EntityNameSet_O), 0, "chem::EntityNameSet_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EntityNameSet_O),_Optional), "_Optional" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<adapt::SymbolSet_O>), offsetof(SAFE_TYPE_MACRO(chem::EntityNameSet_O),_EntityNames), "_EntityNames" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::EntityNameSet_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::RepresentedEntityNameSet_O/519
{ class_kind, STAMP_chem__RepresentedEntityNameSet_O, sizeof(chem::RepresentedEntityNameSet_O), 0, "chem::RepresentedEntityNameSet_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::RepresentedEntityNameSet_O),_Optional), "_Optional" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<adapt::SymbolSet_O>), offsetof(SAFE_TYPE_MACRO(chem::RepresentedEntityNameSet_O),_EntityNames), "_EntityNames" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::RepresentedEntityNameSet_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::RepresentedEntityNameSet_O),_Representative), "_Representative" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::MonomerPack_O/523
{ class_kind, STAMP_chem__MonomerPack_O, sizeof(chem::MonomerPack_O), 0, "chem::MonomerPack_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::MonomerPack_O),_Optional), "_Optional" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<adapt::SymbolSet_O>), offsetof(SAFE_TYPE_MACRO(chem::MonomerPack_O),_EntityNames), "_EntityNames" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::MonomerPack_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::MonomerPack_O),_InterestingAtomAliases), "_InterestingAtomAliases" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::MapOfMonomerNamesToAtomIndexers_O>), offsetof(SAFE_TYPE_MACRO(chem::MonomerPack_O),_AtomIndexers), "_AtomIndexers" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::Constitution_O/527
{ class_kind, STAMP_chem__Constitution_O, sizeof(chem::Constitution_O), 0, "chem::Constitution_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Constitution_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(chem::Constitution_O),_Comment), "_Comment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConstitutionAtoms_O>), offsetof(SAFE_TYPE_MACRO(chem::Constitution_O),_ConstitutionAtoms), "_ConstitutionAtoms" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::Constitution_O),_PlugsByName._Contents), "_PlugsByName._Contents" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::Constitution_O),_Topologies._Contents), "_Topologies._Contents" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::StereoInformation_O>), offsetof(SAFE_TYPE_MACRO(chem::Constitution_O),_StereoInformation), "_StereoInformation" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::Monomer_O/531
{ class_kind, STAMP_chem__Monomer_O, sizeof(chem::Monomer_O), 0, "chem::Monomer_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Monomer_O),_Id), "_Id" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Monomer_O),_SequenceNumber), "_SequenceNumber" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::Monomer_O),_Couplings._Contents), "_Couplings._Contents" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Monomer_O),_CurrentMonomerIndex), "_CurrentMonomerIndex" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Monomer_O),_CurrentStereoisomerOffset), "_CurrentStereoisomerOffset" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Monomer_O),_Monomers._Vector._Contents), "_Monomers._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::OctNode_O/535
{ class_kind, STAMP_chem__OctNode_O, sizeof(chem::OctNode_O), 0, "chem::OctNode_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),iNodeNum), "iNodeNum" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),iStatus), "iStatus" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),iDepth), "iDepth" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),iAtoms), "iAtoms" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PaAtomList._Vector._Contents), "PaAtomList._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<float>>), offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),_PfCharges._Vector._Contents), "_PfCharges._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PonChildren[0]), "PonChildren[0]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PonChildren[1]), "PonChildren[1]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PonChildren[2]), "PonChildren[2]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PonChildren[3]), "PonChildren[3]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PonChildren[4]), "PonChildren[4]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PonChildren[5]), "PonChildren[5]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PonChildren[6]), "PonChildren[6]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PonChildren[7]), "PonChildren[7]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::Structure_Old_List_O/539
{ class_kind, STAMP_chem__Structure_Old_List_O, sizeof(chem::Structure_Old_List_O), 0, "chem::Structure_Old_List_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_List_O),_Matter), "_Matter" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_List_O),_Entries._Vector._Contents), "_Entries._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_List_O),_AllAtoms._Contents), "_AllAtoms._Contents" }, // public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_List_O),_SuperposeAtoms._Contents), "_SuperposeAtoms._Contents" }, // public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_List_O),_RmsCutOff), "_RmsCutOff" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_List_O),_Data), "_Data" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = kinematics::BackboneDependentRotamerLibrary_O/543
{ class_kind, STAMP_kinematics__BackboneDependentRotamerLibrary_O, sizeof(kinematics::BackboneDependentRotamerLibrary_O), 0, "kinematics::BackboneDependentRotamerLibrary_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerLibrary_O),_PhiStep), "_PhiStep" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerLibrary_O),_PhiStart), "_PhiStart" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerLibrary_O),_PhiCount), "_PhiCount" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerLibrary_O),_PsiStep), "_PsiStep" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerLibrary_O),_PsiStart), "_PsiStart" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerLibrary_O),_PsiCount), "_PsiCount" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>>), offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerLibrary_O),_RotamerSets._Vector._Contents), "_RotamerSets._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::ReportBase_O/547
{ class_kind, STAMP_chem__ReportBase_O, sizeof(chem::ReportBase_O), 0, "chem::ReportBase_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::ReportBase_O),_Time), "_Time" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::StepReport_O/551
{ class_kind, STAMP_chem__StepReport_O, sizeof(chem::StepReport_O), 0, "chem::StepReport_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Time), "_Time" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Iteration), "_Iteration" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Xa), "_Xa" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Xb), "_Xb" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Xc), "_Xc" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Fa), "_Fa" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Fb), "_Fb" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Fc), "_Fc" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_MinBracketSteps), "_MinBracketSteps" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_EnergyTermsEnabled._M_string_length), "_EnergyTermsEnabled._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_EnergyTermsEnabled.NO-NAME._M_allocated_capacity), "_EnergyTermsEnabled.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_TotalEnergy), "_TotalEnergy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_DirectionMagnitude), "_DirectionMagnitude" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_ForceMagnitude), "_ForceMagnitude" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_MinimizerStatus._M_string_length), "_MinimizerStatus._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_MinimizerStatus.NO-NAME._M_allocated_capacity), "_MinimizerStatus.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Direction._M_string_length), "_Direction._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Direction.NO-NAME._M_allocated_capacity), "_Direction.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_LineSearchPosition), "_LineSearchPosition" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_LineSearchDirection), "_LineSearchDirection" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_LineSearchForce), "_LineSearchForce" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_TotalEnergyFn), "_TotalEnergyFn" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_StretchEnergyFn), "_StretchEnergyFn" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_AngleEnergyFn), "_AngleEnergyFn" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_DihedralEnergyFn), "_DihedralEnergyFn" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_NonbondEnergyFn), "_NonbondEnergyFn" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_ImproperEnergyFn), "_ImproperEnergyFn" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_ChiralRestraintEnergyFn), "_ChiralRestraintEnergyFn" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_AnchorRestraintEnergyFn), "_AnchorRestraintEnergyFn" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_PointToLineRestraintEnergyFn), "_PointToLineRestraintEnergyFn" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_OutOfZPlaneEnergyFn), "_OutOfZPlaneEnergyFn" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_ImproperRestraintEnergyFn), "_ImproperRestraintEnergyFn" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_FixedNonbondRestraintEnergyFn), "_FixedNonbondRestraintEnergyFn" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_DbrentSteps), "_DbrentSteps" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_EnergyEvals), "_EnergyEvals" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_ForceEvals), "_ForceEvals" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Step), "_Step" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_FMin), "_FMin" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_ForceMag), "_ForceMag" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_StepEnergy), "_StepEnergy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_IterationMessages._M_string_length), "_IterationMessages._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_IterationMessages.NO-NAME._M_allocated_capacity), "_IterationMessages.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_AngleBetweenDirectionAndForceDeg), "_AngleBetweenDirectionAndForceDeg" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_PrematureTermination), "_PrematureTermination" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_PrematureTerminationMessage._M_string_length), "_PrematureTerminationMessage._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_PrematureTerminationMessage.NO-NAME._M_allocated_capacity), "_PrematureTerminationMessage.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// Stamp = chem::MessageReport_O/555
{ class_kind, STAMP_chem__MessageReport_O, sizeof(chem::MessageReport_O), 0, "chem::MessageReport_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::MessageReport_O),_Time), "_Time" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::MessageReport_O),_Message._M_string_length), "_Message._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::MessageReport_O),_Message.NO-NAME._M_allocated_capacity), "_Message.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// Stamp = chem::ForceMatchReport_O/559
{ class_kind, STAMP_chem__ForceMatchReport_O, sizeof(chem::ForceMatchReport_O), 0, "chem::ForceMatchReport_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::ForceMatchReport_O),_Time), "_Time" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ForceMatchReport_O),_Message._M_string_length), "_Message._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ForceMatchReport_O),_Message.NO-NAME._M_allocated_capacity), "_Message.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::ForceMatchReport_O),_AnalyticalForce), "_AnalyticalForce" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::ForceMatchReport_O),_NumericalForce), "_NumericalForce" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::ChemDraw_O/563
{ class_kind, STAMP_chem__ChemDraw_O, sizeof(chem::ChemDraw_O), 0, "chem::ChemDraw_O" },
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>>), offsetof(SAFE_TYPE_MACRO(chem::ChemDraw_O),_AllFragments._Vector._Contents), "_AllFragments._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::ChemDraw_O),_NamedFragments._Contents), "_NamedFragments._Contents" }, // public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::ChemDraw_O),_Code), "_Code" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::ZMatrixInternal_O/567
{ class_kind, STAMP_chem__ZMatrixInternal_O, sizeof(chem::ZMatrixInternal_O), 0, "chem::ZMatrixInternal_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrix_O>), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixInternal_O),_WeakZMatrix), "_WeakZMatrix" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixInternal_O),_InternalName._M_string_length), "_InternalName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixInternal_O),_InternalName.NO-NAME._M_allocated_capacity), "_InternalName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixInternal_O),_Constrain), "_Constrain" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixInternal_O),_AtomNew), "_AtomNew" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixInternal_O),_Value), "_Value" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::ZMatrixBondInternal_O/571
{ class_kind, STAMP_chem__ZMatrixBondInternal_O, sizeof(chem::ZMatrixBondInternal_O), 0, "chem::ZMatrixBondInternal_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrix_O>), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixBondInternal_O),_WeakZMatrix), "_WeakZMatrix" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixBondInternal_O),_InternalName._M_string_length), "_InternalName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixBondInternal_O),_InternalName.NO-NAME._M_allocated_capacity), "_InternalName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixBondInternal_O),_Constrain), "_Constrain" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixBondInternal_O),_AtomNew), "_AtomNew" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixBondInternal_O),_Value), "_Value" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixBondInternal_O),_AtomBond), "_AtomBond" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::ZMatrixDihedralInternal_O/575
{ class_kind, STAMP_chem__ZMatrixDihedralInternal_O, sizeof(chem::ZMatrixDihedralInternal_O), 0, "chem::ZMatrixDihedralInternal_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrix_O>), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_WeakZMatrix), "_WeakZMatrix" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_InternalName._M_string_length), "_InternalName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_InternalName.NO-NAME._M_allocated_capacity), "_InternalName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_Constrain), "_Constrain" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_AtomNew), "_AtomNew" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_Value), "_Value" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_AtomBond), "_AtomBond" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_AtomAngle), "_AtomAngle" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_AtomDihedral), "_AtomDihedral" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::ZMatrixAngleInternal_O/579
{ class_kind, STAMP_chem__ZMatrixAngleInternal_O, sizeof(chem::ZMatrixAngleInternal_O), 0, "chem::ZMatrixAngleInternal_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrix_O>), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixAngleInternal_O),_WeakZMatrix), "_WeakZMatrix" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixAngleInternal_O),_InternalName._M_string_length), "_InternalName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixAngleInternal_O),_InternalName.NO-NAME._M_allocated_capacity), "_InternalName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixAngleInternal_O),_Constrain), "_Constrain" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixAngleInternal_O),_AtomNew), "_AtomNew" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixAngleInternal_O),_Value), "_Value" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixAngleInternal_O),_AtomBond), "_AtomBond" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixAngleInternal_O),_AtomAngle), "_AtomAngle" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::StereoisomerAtom_O/583
{ class_kind, STAMP_chem__StereoisomerAtom_O, sizeof(chem::StereoisomerAtom_O), 0, "chem::StereoisomerAtom_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::StereoisomerAtom_O),_AtomName), "_AtomName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StereoisomerAtom_O),_ConstitutionAtomIndex), "_ConstitutionAtomIndex" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::StereoisomerAtom_O),_AtomCharge), "_AtomCharge" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::StereoisomerAtom_O),_AtomType), "_AtomType" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::StereoisomerVirtualAtom_O/587
{ class_kind, STAMP_chem__StereoisomerVirtualAtom_O, sizeof(chem::StereoisomerVirtualAtom_O), 0, "chem::StereoisomerVirtualAtom_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::StereoisomerVirtualAtom_O),_AtomName), "_AtomName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::StereoisomerVirtualAtom_O),_ConstitutionAtomIndex), "_ConstitutionAtomIndex" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::StereoisomerVirtualAtom_O),_AtomCharge), "_AtomCharge" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::StereoisomerVirtualAtom_O),_AtomType), "_AtomType" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::ZMatrix_O/591
{ class_kind, STAMP_chem__ZMatrix_O, sizeof(chem::ZMatrix_O), 0, "chem::ZMatrix_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::ZMatrix_O),_Matter), "_Matter" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>>), offsetof(SAFE_TYPE_MACRO(chem::ZMatrix_O),_ZMatrix._Vector._Contents), "_ZMatrix._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>>), offsetof(SAFE_TYPE_MACRO(chem::ZMatrix_O),_Internals._Vector._Contents), "_Internals._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::Isoname_O/595
{ class_kind, STAMP_chem__Isoname_O, sizeof(chem::Isoname_O), 0, "chem::Isoname_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Isoname_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Isoname_O),_Isomer), "_Isomer" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Topology_O>), offsetof(SAFE_TYPE_MACRO(chem::Isoname_O),_Topology), "_Topology" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::PathMessage_O/599
{ class_kind, STAMP_chem__PathMessage_O, sizeof(chem::PathMessage_O), 0, "chem::PathMessage_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::RingFinder_O>), offsetof(SAFE_TYPE_MACRO(chem::PathMessage_O),_graph), "_graph" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::PathMessage_O),_beep.theObject), "_beep.theObject" }, // public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AGVertex_O>), offsetof(SAFE_TYPE_MACRO(chem::PathMessage_O),_firstVertex), "_firstVertex" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AGEdge_O>), offsetof(SAFE_TYPE_MACRO(chem::PathMessage_O),_firstEdge), "_firstEdge" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AGVertex_O>), offsetof(SAFE_TYPE_MACRO(chem::PathMessage_O),_lastVertex), "_lastVertex" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = kinematics::MonomerId_O/603
{ class_kind, STAMP_kinematics__MonomerId_O, sizeof(kinematics::MonomerId_O), 0, "kinematics::MonomerId_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::MonomerId_O),_MonomerId._Chain), "_MonomerId._Chain" }, // public: (NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::MonomerId_O),_MonomerId._Monomer), "_MonomerId._Monomer" }, // public: (NIL T) fixable: NIL good-name: T
// Stamp = kinematics::JointTemplate_O/607
{ class_kind, STAMP_kinematics__JointTemplate_O, sizeof(kinematics::JointTemplate_O), 0, "kinematics::JointTemplate_O" },
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(kinematics::JointTemplate_O),_Parent.theObject), "_Parent.theObject" }, // public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::JointTemplate_O),_Id), "_Id" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(kinematics::JointTemplate_O),_Name), "_Name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::JointTemplate_O),_Comment._M_string_length), "_Comment._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::JointTemplate_O),_Comment.NO-NAME._M_allocated_capacity), "_Comment.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// Stamp = kinematics::BondedJointTemplate_O/611
{ class_kind, STAMP_kinematics__BondedJointTemplate_O, sizeof(kinematics::BondedJointTemplate_O), 0, "kinematics::BondedJointTemplate_O" },
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Parent.theObject), "_Parent.theObject" }, // public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Id), "_Id" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Name), "_Name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Comment._M_string_length), "_Comment._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Comment.NO-NAME._M_allocated_capacity), "_Comment.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>>), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Children._Vector._Contents), "_Children._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Distance), "_Distance" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Theta), "_Theta" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Phi), "_Phi" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OutPlug_O>), offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_OutPlug), "_OutPlug" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = kinematics::DelayedBondedJointTemplate_O/615
{ class_kind, STAMP_kinematics__DelayedBondedJointTemplate_O, sizeof(kinematics::DelayedBondedJointTemplate_O), 0, "kinematics::DelayedBondedJointTemplate_O" },
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Parent.theObject), "_Parent.theObject" }, // public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Id), "_Id" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Name), "_Name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Comment._M_string_length), "_Comment._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Comment.NO-NAME._M_allocated_capacity), "_Comment.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>>), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Children._Vector._Contents), "_Children._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Distance), "_Distance" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Theta), "_Theta" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Phi), "_Phi" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OutPlug_O>), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_OutPlug), "_OutPlug" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Checkpoint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Checkpoint), "_Checkpoint" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = kinematics::RootBondedJointTemplate_O/619
{ class_kind, STAMP_kinematics__RootBondedJointTemplate_O, sizeof(kinematics::RootBondedJointTemplate_O), 0, "kinematics::RootBondedJointTemplate_O" },
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Parent.theObject), "_Parent.theObject" }, // public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Id), "_Id" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Name), "_Name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Comment._M_string_length), "_Comment._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Comment.NO-NAME._M_allocated_capacity), "_Comment.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>>), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Children._Vector._Contents), "_Children._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Distance), "_Distance" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Theta), "_Theta" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Phi), "_Phi" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OutPlug_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_OutPlug), "_OutPlug" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_ConstitutionName), "_ConstitutionName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_TopologyName), "_TopologyName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Plug_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_InPlug), "_InPlug" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = geom::Color_O/623
{ class_kind, STAMP_geom__Color_O, sizeof(geom::Color_O), 0, "geom::Color_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(geom::Color_O),_ColorName), "_ColorName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(geom::Color_O),_Color), "_Color" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::ConformationCollection_O/627
{ class_kind, STAMP_chem__ConformationCollection_O, sizeof(chem::ConformationCollection_O), 0, "chem::ConformationCollection_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::ConformationCollection_O),_Matter), "_Matter" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>>), offsetof(SAFE_TYPE_MACRO(chem::ConformationCollection_O),_Entries._Vector._Contents), "_Entries._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::ConformationCollection_O),_AllAtoms._Contents), "_AllAtoms._Contents" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::ConformationCollection_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::SuperposableConformationCollection_O/631
{ class_kind, STAMP_chem__SuperposableConformationCollection_O, sizeof(chem::SuperposableConformationCollection_O), 0, "chem::SuperposableConformationCollection_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::SuperposableConformationCollection_O),_Matter), "_Matter" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>>), offsetof(SAFE_TYPE_MACRO(chem::SuperposableConformationCollection_O),_Entries._Vector._Contents), "_Entries._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::SuperposableConformationCollection_O),_AllAtoms._Contents), "_AllAtoms._Contents" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::SuperposableConformationCollection_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::SuperposableConformationCollection_O),_RmsCutOff), "_RmsCutOff" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_byte32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::SuperposableConformationCollection_O),_SuperposeAtomIndices), "_SuperposeAtomIndices" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::NativeVector_float_O/635
{ class_kind, STAMP_core__NativeVector_float_O, sizeof(core::NativeVector_float_O), 0, "core::NativeVector_float_O" },
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<float>>), offsetof(SAFE_TYPE_MACRO(core::NativeVector_float_O),_Vector._Vector._Contents), "_Vector._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::Coupling_O/639
{ class_kind, STAMP_chem__Coupling_O, sizeof(chem::Coupling_O), 0, "chem::Coupling_O" },
// Stamp = chem::RingCoupling_O/643
{ class_kind, STAMP_chem__RingCoupling_O, sizeof(chem::RingCoupling_O), 0, "chem::RingCoupling_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::RingCoupling_O),_Plug1), "_Plug1" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Monomer_O>), offsetof(SAFE_TYPE_MACRO(chem::RingCoupling_O),_Monomer1), "_Monomer1" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::RingCoupling_O),_Plug2), "_Plug2" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Monomer_O>), offsetof(SAFE_TYPE_MACRO(chem::RingCoupling_O),_Monomer2), "_Monomer2" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::DirectionalCoupling_O/647
{ class_kind, STAMP_chem__DirectionalCoupling_O, sizeof(chem::DirectionalCoupling_O), 0, "chem::DirectionalCoupling_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::DirectionalCoupling_O),_SourcePlugName), "_SourcePlugName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::DirectionalCoupling_O),_TargetPlugName), "_TargetPlugName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Monomer_O>), offsetof(SAFE_TYPE_MACRO(chem::DirectionalCoupling_O),_SourceMonomer), "_SourceMonomer" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Monomer_O>), offsetof(SAFE_TYPE_MACRO(chem::DirectionalCoupling_O),_TargetMonomer), "_TargetMonomer" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = adapt::ObjectSet_O/651
{ class_kind, STAMP_adapt__ObjectSet_O, sizeof(adapt::ObjectSet_O), 0, "adapt::ObjectSet_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(adapt::ObjectSet_O),_Set), "_Set" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::Oligomer_O/655
{ class_kind, STAMP_chem__Oligomer_O, sizeof(chem::Oligomer_O), 0, "chem::Oligomer_O" },
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Oligomer_O),_Monomers._Vector._Contents), "_Monomers._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Oligomer_O),_Couplings._Vector._Contents), "_Couplings._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::PdbMonomerConnectivity_O/659
{ class_kind, STAMP_chem__PdbMonomerConnectivity_O, sizeof(chem::PdbMonomerConnectivity_O), 0, "chem::PdbMonomerConnectivity_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::PdbMonomerConnectivity_O),_PdbName), "_PdbName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_T_O>), offsetof(SAFE_TYPE_MACRO(chem::PdbMonomerConnectivity_O),_LongNames), "_LongNames" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::PdbMonomerConnectivity_O),_BondAtomPairs._Vector._Contents), "_BondAtomPairs._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = units::Dimension_O/663
{ class_kind, STAMP_units__Dimension_O, sizeof(units::Dimension_O), 0, "units::Dimension_O" },
// Stamp = chem::ConformationExplorerEntry_O/667
{ class_kind, STAMP_chem__ConformationExplorerEntry_O, sizeof(chem::ConformationExplorerEntry_O), 0, "chem::ConformationExplorerEntry_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConformationExplorer_O>), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntry_O),_WeakConformationExplorer), "_WeakConformationExplorer" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>>), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntry_O),_Stages._Vector._Contents), "_Stages._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntry_O),_SelectedStage), "_SelectedStage" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntry_O),_UniqueEntryIndex), "_UniqueEntryIndex" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntry_O),_Binder), "_Binder" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = mp::ConditionVariable_O/671
{ class_kind, STAMP_mp__ConditionVariable_O, sizeof(mp::ConditionVariable_O), 0, "mp::ConditionVariable_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(mp::ConditionVariable_O),_ConditionVariable._ConditionVariable.__count), "_ConditionVariable._ConditionVariable.__count" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(mp::ConditionVariable_O),_ConditionVariable._ConditionVariable.__value.__wch), "_ConditionVariable._ConditionVariable.__value.__wch" }, // public: (T T T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(mp::ConditionVariable_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::PdbReader_O/675
{ class_kind, STAMP_chem__PdbReader_O, sizeof(chem::PdbReader_O), 0, "chem::PdbReader_O" },
// Stamp = chem::SpanningLoop_O/679
{ class_kind, STAMP_chem__SpanningLoop_O, sizeof(chem::SpanningLoop_O), 0, "chem::SpanningLoop_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),goal), "goal" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),initialized), "initialized" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),done), "done" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),_OnlyFollowRealBonds), "_OnlyFollowRealBonds" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),top), "top" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),currentObject), "currentObject" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),aCurSpan), "aCurSpan" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),aLastSpan), "aLastSpan" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),iSeenId), "iSeenId" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),iMaxDistanceFromRoot), "iMaxDistanceFromRoot" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),iInvisibleCollisions), "iInvisibleCollisions" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),aLastCollision), "aLastCollision" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),aInvisibleAtom), "aInvisibleAtom" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),fVisibilityFlags), "fVisibilityFlags" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),fVisibleFlagsOn), "fVisibleFlagsOn" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),fVisibleFlagsOff), "fVisibleFlagsOff" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),iTempInt), "iTempInt" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::ProperTorsion_O/683
{ class_kind, STAMP_chem__ProperTorsion_O, sizeof(chem::ProperTorsion_O), 0, "chem::ProperTorsion_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::ProperTorsion_O),_a1), "_a1" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::ProperTorsion_O),_a2), "_a2" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::ProperTorsion_O),_a3), "_a3" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::ProperTorsion_O),_a4), "_a4" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::ResidueList_O/687
{ class_kind, STAMP_chem__ResidueList_O, sizeof(chem::ResidueList_O), 0, "chem::ResidueList_O" },
// Stamp = chem::SuperposeEngine_O/691
{ class_kind, STAMP_chem__SuperposeEngine_O, sizeof(chem::SuperposeEngine_O), 0, "chem::SuperposeEngine_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_byte32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::SuperposeEngine_O),_FixedIndices), "_FixedIndices" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::ComplexVectorCoordinate_O>), offsetof(SAFE_TYPE_MACRO(chem::SuperposeEngine_O),_FixedCoordinates), "_FixedCoordinates" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_byte32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::SuperposeEngine_O),_MoveableIndices), "_MoveableIndices" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::ComplexVectorCoordinate_O>), offsetof(SAFE_TYPE_MACRO(chem::SuperposeEngine_O),_MoveableCoordinates), "_MoveableCoordinates" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::SuperposeSelectedAtoms_O/695
{ class_kind, STAMP_chem__SuperposeSelectedAtoms_O, sizeof(chem::SuperposeSelectedAtoms_O), 0, "chem::SuperposeSelectedAtoms_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_byte32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::SuperposeSelectedAtoms_O),_FixedIndices), "_FixedIndices" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::ComplexVectorCoordinate_O>), offsetof(SAFE_TYPE_MACRO(chem::SuperposeSelectedAtoms_O),_FixedCoordinates), "_FixedCoordinates" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_byte32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::SuperposeSelectedAtoms_O),_MoveableIndices), "_MoveableIndices" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::ComplexVectorCoordinate_O>), offsetof(SAFE_TYPE_MACRO(chem::SuperposeSelectedAtoms_O),_MoveableCoordinates), "_MoveableCoordinates" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::SuperposeSelectedAtoms_O),_Matter), "_Matter" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::SuperposeSelectedAtoms_O),_SuperposeAtoms._Vector._Contents), "_SuperposeAtoms._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = adapt::StringSet_O/699
{ class_kind, STAMP_adapt__StringSet_O, sizeof(adapt::StringSet_O), 0, "adapt::StringSet_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(adapt::StringSet_O),strs._M_t._M_impl._M_node_count), "strs._M_t._M_impl._M_node_count" }, // public: (NIL NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(adapt::StringSet_O),rest), "rest" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::Command_O/703
{ class_kind, STAMP_chem__Command_O, sizeof(chem::Command_O), 0, "chem::Command_O" },
// Stamp = chem::StereoConfiguration_O/707
{ class_kind, STAMP_chem__StereoConfiguration_O, sizeof(chem::StereoConfiguration_O), 0, "chem::StereoConfiguration_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::StereoConfiguration_O),_AtomName), "_AtomName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::StereoConfiguration_O),_Configuration), "_Configuration" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = kinematics::MonomerBaseNode_O/711
{ class_kind, STAMP_kinematics__MonomerBaseNode_O, sizeof(kinematics::MonomerBaseNode_O), 0, "kinematics::MonomerBaseNode_O" },
// Stamp = kinematics::AggregateNode_O/715
{ class_kind, STAMP_kinematics__AggregateNode_O, sizeof(kinematics::AggregateNode_O), 0, "kinematics::AggregateNode_O" },
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>>), offsetof(SAFE_TYPE_MACRO(kinematics::AggregateNode_O),_Chains._Vector._Contents), "_Chains._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = kinematics::ChainNode_O/719
{ class_kind, STAMP_kinematics__ChainNode_O, sizeof(kinematics::ChainNode_O), 0, "kinematics::ChainNode_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::ChainNode_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::MonomerNode_O>), offsetof(SAFE_TYPE_MACRO(kinematics::ChainNode_O),_RootMonomerNode), "_RootMonomerNode" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>>), offsetof(SAFE_TYPE_MACRO(kinematics::ChainNode_O),_IndexedMonomerNodes._Vector._Contents), "_IndexedMonomerNodes._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = kinematics::MonomerNode_O/723
{ class_kind, STAMP_kinematics__MonomerNode_O, sizeof(kinematics::MonomerNode_O), 0, "kinematics::MonomerNode_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::MonomerNode_O>), offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_Parent), "_Parent" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_ParentPlugName), "_ParentPlugName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_Id._Chain), "_Id._Chain" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_Id._Monomer), "_Id._Monomer" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>>), offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_Children._Contents), "_Children._Contents" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_StereoisomerName), "_StereoisomerName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Topology_O>), offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_Topology), "_Topology" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_ConformationIndex), "_ConformationIndex" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>), offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_Joints._Vector._Contents), "_Joints._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = kinematics::RingClosingMonomerNode_O/727
{ class_kind, STAMP_kinematics__RingClosingMonomerNode_O, sizeof(kinematics::RingClosingMonomerNode_O), 0, "kinematics::RingClosingMonomerNode_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::MonomerNode_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_Parent), "_Parent" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_ParentPlugName), "_ParentPlugName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_Id._Chain), "_Id._Chain" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_Id._Monomer), "_Id._Monomer" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>>), offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_Children._Contents), "_Children._Contents" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_StereoisomerName), "_StereoisomerName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Topology_O>), offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_Topology), "_Topology" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_ConformationIndex), "_ConformationIndex" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>), offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_Joints._Vector._Contents), "_Joints._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>>), offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_RingClosingChildren._Contents), "_RingClosingChildren._Contents" }, // public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::FFNonbondCrossTermTable_O/731
{ class_kind, STAMP_chem__FFNonbondCrossTermTable_O, sizeof(chem::FFNonbondCrossTermTable_O), 0, "chem::FFNonbondCrossTermTable_O" },
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::FFNonbondCrossTermTable_O),_NumberOfTypes), "_NumberOfTypes" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::Plug_O/735
{ class_kind, STAMP_chem__Plug_O, sizeof(chem::Plug_O), 0, "chem::Plug_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Plug_O),_Name), "_Name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::JumpPlug_O/739
{ class_kind, STAMP_chem__JumpPlug_O, sizeof(chem::JumpPlug_O), 0, "chem::JumpPlug_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::JumpPlug_O),_Name), "_Name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::JumpPlug_O),_JumpAtomName), "_JumpAtomName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::PlugWithMates_O/743
{ class_kind, STAMP_chem__PlugWithMates_O, sizeof(chem::PlugWithMates_O), 0, "chem::PlugWithMates_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::PlugWithMates_O),_Name), "_Name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::PlugWithMates_O),_B0), "_B0" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::PlugWithMates_O),_B1), "_B1" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>>), offsetof(SAFE_TYPE_MACRO(chem::PlugWithMates_O),_Mates._Vector._Contents), "_Mates._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::InPlug_O/747
{ class_kind, STAMP_chem__InPlug_O, sizeof(chem::InPlug_O), 0, "chem::InPlug_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::InPlug_O),_Name), "_Name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::InPlug_O),_B0), "_B0" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::InPlug_O),_B1), "_B1" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>>), offsetof(SAFE_TYPE_MACRO(chem::InPlug_O),_Mates._Vector._Contents), "_Mates._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::OutPlug_O/751
{ class_kind, STAMP_chem__OutPlug_O, sizeof(chem::OutPlug_O), 0, "chem::OutPlug_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::OutPlug_O),_Name), "_Name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::OutPlug_O),_B0), "_B0" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::OutPlug_O),_B1), "_B1" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>>), offsetof(SAFE_TYPE_MACRO(chem::OutPlug_O),_Mates._Vector._Contents), "_Mates._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::OutPlug_O),_StubPivotAtom), "_StubPivotAtom" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::OutPlug_O),_IsRingClosing), "_IsRingClosing" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::OriginPlug_O/755
{ class_kind, STAMP_chem__OriginPlug_O, sizeof(chem::OriginPlug_O), 0, "chem::OriginPlug_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::OriginPlug_O),_Name), "_Name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::OriginPlug_O),_OriginAtomName), "_OriginAtomName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = kinematics::Rotamer_O/759
{ class_kind, STAMP_kinematics__Rotamer_O, sizeof(kinematics::Rotamer_O), 0, "kinematics::Rotamer_O" },
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(kinematics::Rotamer_O),_Probability), "_Probability" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::Rotamer_O),_Count), "_Count" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::MonomerContext_O/763
{ class_kind, STAMP_chem__MonomerContext_O, sizeof(chem::MonomerContext_O), 0, "chem::MonomerContext_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EntityNameSetBase_O>), offsetof(SAFE_TYPE_MACRO(chem::MonomerContext_O),_Self), "_Self" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::MonomerContext_O),_Neighbors._Contents), "_Neighbors._Contents" }, // public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::CDFragment_O/767
{ class_kind, STAMP_chem__CDFragment_O, sizeof(chem::CDFragment_O), 0, "chem::CDFragment_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::CDFragment_O),_ConstitutionName), "_ConstitutionName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::CDFragment_O),_Nodes._Contents), "_Nodes._Contents" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::CDFragment_O),_AtomsToNodes._Contents), "_AtomsToNodes._Contents" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>>), offsetof(SAFE_TYPE_MACRO(chem::CDFragment_O),_Bonds._Vector._Contents), "_Bonds._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::CDFragment_O),_LargestId), "_LargestId" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::CDFragment_O),_Molecule.theObject), "_Molecule.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// Stamp = units::Unit_O/771
{ class_kind, STAMP_units__Unit_O, sizeof(units::Unit_O), 0, "units::Unit_O" },
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(units::Unit_O),_Amount), "_Amount" }, // public: (T) fixable: NIL good-name: T
// Stamp = units::NamedUnit_O/775
{ class_kind, STAMP_units__NamedUnit_O, sizeof(units::NamedUnit_O), 0, "units::NamedUnit_O" },
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(units::NamedUnit_O),_Amount), "_Amount" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(units::NamedUnit_O),_Symbol), "_Symbol" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(units::NamedUnit_O),_Label._M_string_length), "_Label._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(units::NamedUnit_O),_Label.NO-NAME._M_allocated_capacity), "_Label.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(units::NamedUnit_O),_Code._M_string_length), "_Code._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(units::NamedUnit_O),_Code.NO-NAME._M_allocated_capacity), "_Code.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// Stamp = adapt::StringList_O/779
{ class_kind, STAMP_adapt__StringList_O, sizeof(adapt::StringList_O), 0, "adapt::StringList_O" },
// Stamp = core::NativeVector_int_O/783
{ class_kind, STAMP_core__NativeVector_int_O, sizeof(core::NativeVector_int_O), 0, "core::NativeVector_int_O" },
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<int>>), offsetof(SAFE_TYPE_MACRO(core::NativeVector_int_O),_Vector._Vector._Contents), "_Vector._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::InfoDb_O/787
{ class_kind, STAMP_chem__InfoDb_O, sizeof(chem::InfoDb_O), 0, "chem::InfoDb_O" },
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::InfoDb_O),_database._Contents), "_database._Contents" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::MinimizerLog_O/791
{ class_kind, STAMP_chem__MinimizerLog_O, sizeof(chem::MinimizerLog_O), 0, "chem::MinimizerLog_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Minimizer_O>), offsetof(SAFE_TYPE_MACRO(chem::MinimizerLog_O),_Minimizer), "_Minimizer" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>>), offsetof(SAFE_TYPE_MACRO(chem::MinimizerLog_O),_Reports._Vector._Contents), "_Reports._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::GenericOctree_O/795
{ class_kind, STAMP_chem__GenericOctree_O, sizeof(chem::GenericOctree_O), 0, "chem::GenericOctree_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_depth), "_depth" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_float, sizeof(float), offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_containing_radius), "_containing_radius" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),Entries), "Entries" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::GenericOctree_O>), offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_children[0]), "_children[0]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::GenericOctree_O>), offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_children[1]), "_children[1]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::GenericOctree_O>), offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_children[2]), "_children[2]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::GenericOctree_O>), offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_children[3]), "_children[3]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::GenericOctree_O>), offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_children[4]), "_children[4]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::GenericOctree_O>), offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_children[5]), "_children[5]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::GenericOctree_O>), offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_children[6]), "_children[6]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::GenericOctree_O>), offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_children[7]), "_children[7]" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_data), "_data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = kinematics::AtomTree_O/799
{ class_kind, STAMP_kinematics__AtomTree_O, sizeof(kinematics::AtomTree_O), 0, "kinematics::AtomTree_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::AtomTree_O),_Root), "_Root" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(kinematics::AtomTree_O),_AtomMap._DefaultValue), "_AtomMap._DefaultValue" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// Stamp = units::Quantity_O/803
{ class_kind, STAMP_units__Quantity_O, sizeof(units::Quantity_O), 0, "units::Quantity_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(units::Quantity_O),_Value), "_Value" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<units::Unit_O>), offsetof(SAFE_TYPE_MACRO(units::Quantity_O),_Unit), "_Unit" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::ChemInfoMatch_O/807
{ class_kind, STAMP_chem__ChemInfoMatch_O, sizeof(chem::ChemInfoMatch_O), 0, "chem::ChemInfoMatch_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::ChemInfoMatch_O),_Matches), "_Matches" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ChemInfoMatch_O),_MaxTagPlus1), "_MaxTagPlus1" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Root_O>), offsetof(SAFE_TYPE_MACRO(chem::ChemInfoMatch_O),_Root), "_Root" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEql_O>), offsetof(SAFE_TYPE_MACRO(chem::ChemInfoMatch_O),_RingLookup), "_RingLookup" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_O>), offsetof(SAFE_TYPE_MACRO(chem::ChemInfoMatch_O),_TagLookup), "_TagLookup" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::ChemInfoMatch_O),_TagHistory), "_TagHistory" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::ZMatrixEntry_O/811
{ class_kind, STAMP_chem__ZMatrixEntry_O, sizeof(chem::ZMatrixEntry_O), 0, "chem::ZMatrixEntry_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixEntry_O),_ZMatrixAtomName._M_string_length), "_ZMatrixAtomName._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixEntry_O),_ZMatrixAtomName.NO-NAME._M_allocated_capacity), "_ZMatrixAtomName.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixEntry_O),_Atom), "_Atom" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrixBondInternal_O>), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixEntry_O),_Bond), "_Bond" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrixAngleInternal_O>), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixEntry_O),_Angle), "_Angle" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrixDihedralInternal_O>), offsetof(SAFE_TYPE_MACRO(chem::ZMatrixEntry_O),_Dihedral), "_Dihedral" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::SpecificContextSet_O/815
{ class_kind, STAMP_chem__SpecificContextSet_O, sizeof(chem::SpecificContextSet_O), 0, "chem::SpecificContextSet_O" },
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::SpecificContextSet_O),_KeySets._Contents), "_KeySets._Contents" }, // public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::Angle_O/819
{ class_kind, STAMP_chem__Angle_O, sizeof(chem::Angle_O), 0, "chem::Angle_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::Angle_O),_a1), "_a1" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::Angle_O),_a2), "_a2" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::Angle_O),_a3), "_a3" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::MacroModelFile_O/823
{ class_kind, STAMP_chem__MacroModelFile_O, sizeof(chem::MacroModelFile_O), 0, "chem::MacroModelFile_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::MacroModelFile_O),lines), "lines" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::BondList_O/827
{ class_kind, STAMP_chem__BondList_O, sizeof(chem::BondList_O), 0, "chem::BondList_O" },
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>>), offsetof(SAFE_TYPE_MACRO(chem::BondList_O),_Bonds._Vector._Contents), "_Bonds._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::ConformationExplorer_O/831
{ class_kind, STAMP_chem__ConformationExplorer_O, sizeof(chem::ConformationExplorer_O), 0, "chem::ConformationExplorer_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorer_O),_Matter), "_Matter" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>>), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorer_O),_Entries._Vector._Contents), "_Entries._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorer_O),_AllAtoms._Contents), "_AllAtoms._Contents" }, // public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_byte32_t_O>), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorer_O),_SuperposeAtomIndices), "_SuperposeAtomIndices" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorer_O),_Binder), "_Binder" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::ChemInfoGraph_O/835
{ class_kind, STAMP_chem__ChemInfoGraph_O, sizeof(chem::ChemInfoGraph_O), 0, "chem::ChemInfoGraph_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Root_O>), offsetof(SAFE_TYPE_MACRO(chem::ChemInfoGraph_O),_Root), "_Root" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::ChemInfoGraph_O),_nodes_to_index), "_nodes_to_index" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>>), offsetof(SAFE_TYPE_MACRO(chem::ChemInfoGraph_O),_atomNodes._Vector._Contents), "_atomNodes._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>>), offsetof(SAFE_TYPE_MACRO(chem::ChemInfoGraph_O),_bondNodes._Vector._Contents), "_bondNodes._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::CDText_O/839
{ class_kind, STAMP_chem__CDText_O, sizeof(chem::CDText_O), 0, "chem::CDText_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::CDText_O),_Code), "_Code" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DINodeArray_O/843
{ class_kind, STAMP_llvmo__DINodeArray_O, sizeof(llvmo::DINodeArray_O), 0, "llvmo::DINodeArray_O" },
// Stamp = kinematics::Checkpoint_O/847
{ class_kind, STAMP_kinematics__Checkpoint_O, sizeof(kinematics::Checkpoint_O), 0, "kinematics::Checkpoint_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(kinematics::Checkpoint_O),_ConstitutionName), "_ConstitutionName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(kinematics::Checkpoint_O),_TopologyName), "_TopologyName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = kinematics::CheckpointJoint_O/851
{ class_kind, STAMP_kinematics__CheckpointJoint_O, sizeof(kinematics::CheckpointJoint_O), 0, "kinematics::CheckpointJoint_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(kinematics::CheckpointJoint_O),_ConstitutionName), "_ConstitutionName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(kinematics::CheckpointJoint_O),_TopologyName), "_TopologyName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(kinematics::CheckpointJoint_O),_AtomName), "_AtomName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = kinematics::CheckpointOutPlugJoint_O/855
{ class_kind, STAMP_kinematics__CheckpointOutPlugJoint_O, sizeof(kinematics::CheckpointOutPlugJoint_O), 0, "kinematics::CheckpointOutPlugJoint_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(kinematics::CheckpointOutPlugJoint_O),_ConstitutionName), "_ConstitutionName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(kinematics::CheckpointOutPlugJoint_O),_TopologyName), "_TopologyName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OutPlug_O>), offsetof(SAFE_TYPE_MACRO(kinematics::CheckpointOutPlugJoint_O),_Plug), "_Plug" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::ConformationExplorerMatch_O/859
{ class_kind, STAMP_chem__ConformationExplorerMatch_O, sizeof(chem::ConformationExplorerMatch_O), 0, "chem::ConformationExplorerMatch_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerMatch_O),_Matches), "_Matches" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerMatch_O),_ClosestMatchIndex), "_ClosestMatchIndex" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerMatch_O),_ClosestMatchRms), "_ClosestMatchRms" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerMatch_O),_MatchStageName._M_string_length), "_MatchStageName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerMatch_O),_MatchStageName.NO-NAME._M_allocated_capacity), "_MatchStageName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// Stamp = chem::StereoisomerAtoms_O/863
{ class_kind, STAMP_chem__StereoisomerAtoms_O, sizeof(chem::StereoisomerAtoms_O), 0, "chem::StereoisomerAtoms_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::StereoisomerAtoms_O),_StereoisomerName), "_StereoisomerName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::StereoisomerAtoms_O),_Atoms._Vector._Contents), "_Atoms._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::Rotamer_O/867
{ class_kind, STAMP_chem__Rotamer_O, sizeof(chem::Rotamer_O), 0, "chem::Rotamer_O" },
// Stamp = chem::ImproperTorsion_O/871
{ class_kind, STAMP_chem__ImproperTorsion_O, sizeof(chem::ImproperTorsion_O), 0, "chem::ImproperTorsion_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::ImproperTorsion_O),_a1), "_a1" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::ImproperTorsion_O),_a2), "_a2" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::ImproperTorsion_O),_a3central), "_a3central" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::ImproperTorsion_O),_a4), "_a4" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = adapt::SymbolList_O/875
{ class_kind, STAMP_adapt__SymbolList_O, sizeof(adapt::SymbolList_O), 0, "adapt::SymbolList_O" },
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>), offsetof(SAFE_TYPE_MACRO(adapt::SymbolList_O),_Contents._Vector._Contents), "_Contents._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::FrameRecognizer_O/879
{ class_kind, STAMP_chem__FrameRecognizer_O, sizeof(chem::FrameRecognizer_O), 0, "chem::FrameRecognizer_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FrameRecognizer_O),_Name), "_Name" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::FrameRecognizer_O),_GroupName), "_GroupName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::FrameRecognizer_O),_Smarts._M_string_length), "_Smarts._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::FrameRecognizer_O),_Smarts.NO-NAME._M_allocated_capacity), "_Smarts.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Root_O>), offsetof(SAFE_TYPE_MACRO(chem::FrameRecognizer_O),_Root), "_Root" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::ConformationExplorerEntryStage_O/883
{ class_kind, STAMP_chem__ConformationExplorerEntryStage_O, sizeof(chem::ConformationExplorerEntryStage_O), 0, "chem::ConformationExplorerEntryStage_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_BasedOnStageName._M_string_length), "_BasedOnStageName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_BasedOnStageName.NO-NAME._M_allocated_capacity), "_BasedOnStageName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_StageName._M_string_length), "_StageName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_StageName.NO-NAME._M_allocated_capacity), "_StageName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_Complete), "_Complete" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConformationExplorerEntry_O>), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_WeakConformationExplorerEntry), "_WeakConformationExplorerEntry" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::SimpleVectorCoordinate_O>), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_FinalCoordinates), "_FinalCoordinates" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_Binder), "_Binder" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_EnergyKCal), "_EnergyKCal" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_ExternalInterfaceName._M_string_length), "_ExternalInterfaceName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_ExternalInterfaceName.NO-NAME._M_allocated_capacity), "_ExternalInterfaceName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_Model._M_string_length), "_Model._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_Model.NO-NAME._M_allocated_capacity), "_Model.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// Stamp = chem::Trajectory_O/887
{ class_kind, STAMP_chem__Trajectory_O, sizeof(chem::Trajectory_O), 0, "chem::Trajectory_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::Trajectory_O),_Matter), "_Matter" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Trajectory_O),_AtomList._Vector._Contents), "_AtomList._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>>), offsetof(SAFE_TYPE_MACRO(chem::Trajectory_O),_Frames._Vector._Contents), "_Frames._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::Trajectory_O),_Namespace), "_Namespace" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::CalculatePosition_O/891
{ class_kind, STAMP_chem__CalculatePosition_O, sizeof(chem::CalculatePosition_O), 0, "chem::CalculatePosition_O" },
// Stamp = chem::CalculatePositionRelativeToOrigin_O/895
{ class_kind, STAMP_chem__CalculatePositionRelativeToOrigin_O, sizeof(chem::CalculatePositionRelativeToOrigin_O), 0, "chem::CalculatePositionRelativeToOrigin_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionRelativeToOrigin_O),_OriginAtomName), "_OriginAtomName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionRelativeToOrigin_O),_ToAtomName), "_ToAtomName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionRelativeToOrigin_O),_ExtendDistance), "_ExtendDistance" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::CalculatePositionUsingInternals_O/899
{ class_kind, STAMP_chem__CalculatePositionUsingInternals_O, sizeof(chem::CalculatePositionUsingInternals_O), 0, "chem::CalculatePositionUsingInternals_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionUsingInternals_O),_DistanceAtomName), "_DistanceAtomName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionUsingInternals_O),_AngleAtomName), "_AngleAtomName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionUsingInternals_O),_DihedralAtomName), "_DihedralAtomName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionUsingInternals_O),_Distance), "_Distance" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionUsingInternals_O),_AngleDegrees), "_AngleDegrees" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionUsingInternals_O),_DihedralDegrees), "_DihedralDegrees" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::CalculatePositionAlongBond_O/903
{ class_kind, STAMP_chem__CalculatePositionAlongBond_O, sizeof(chem::CalculatePositionAlongBond_O), 0, "chem::CalculatePositionAlongBond_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionAlongBond_O),_FromAtomName), "_FromAtomName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionAlongBond_O),_ToAtomName), "_ToAtomName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionAlongBond_O),_ExtendDistance), "_ExtendDistance" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = geom::OMatrix_O/907
{ class_kind, STAMP_geom__OMatrix_O, sizeof(geom::OMatrix_O), 0, "geom::OMatrix_O" },
// Stamp = chem::ConformationCollectionEntry_O/911
{ class_kind, STAMP_chem__ConformationCollectionEntry_O, sizeof(chem::ConformationCollectionEntry_O), 0, "chem::ConformationCollectionEntry_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConformationCollection_O>), offsetof(SAFE_TYPE_MACRO(chem::ConformationCollectionEntry_O),_WeakConformationCollection), "_WeakConformationCollection" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::SimpleVectorCoordinate_O>), offsetof(SAFE_TYPE_MACRO(chem::ConformationCollectionEntry_O),_AllCoordinates), "_AllCoordinates" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::ConformationCollectionEntry_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::ComplexRestraint_O/915
{ class_kind, STAMP_chem__ComplexRestraint_O, sizeof(chem::ComplexRestraint_O), 0, "chem::ComplexRestraint_O" },
// Stamp = chem::RestrainedExoCyclicAtom_O/919
{ class_kind, STAMP_chem__RestrainedExoCyclicAtom_O, sizeof(chem::RestrainedExoCyclicAtom_O), 0, "chem::RestrainedExoCyclicAtom_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::RestrainedExoCyclicAtom_O),_ExoCyclicAtomName), "_ExoCyclicAtomName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::RestrainedExoCyclicAtom_O),_Axial), "_Axial" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::RestrainedPiBond_O/923
{ class_kind, STAMP_chem__RestrainedPiBond_O, sizeof(chem::RestrainedPiBond_O), 0, "chem::RestrainedPiBond_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::RestrainedPiBond_O),_Configuration), "_Configuration" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::RestrainedPiBond_O),_PiAtomX), "_PiAtomX" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::RestrainedPiBond_O),_PiAtomY), "_PiAtomY" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = mp::Mutex_O/927
{ class_kind, STAMP_mp__Mutex_O, sizeof(mp::Mutex_O), 0, "mp::Mutex_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(mp::Mutex_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(mp::Mutex_O),_Owner), "_Owner" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(mp::Mutex_O),_Mutex._NameWord), "_Mutex._NameWord" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(mp::Mutex_O),_Mutex._Mutex.__count), "_Mutex._Mutex.__count" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(mp::Mutex_O),_Mutex._Mutex.__value.__wch), "_Mutex._Mutex.__value.__wch" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(mp::Mutex_O),_Mutex._Counter), "_Mutex._Counter" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(mp::Mutex_O),_Mutex._Recursive), "_Mutex._Recursive" }, // public: (T T) fixable: NIL good-name: T
// Stamp = mp::RecursiveMutex_O/931
{ class_kind, STAMP_mp__RecursiveMutex_O, sizeof(mp::RecursiveMutex_O), 0, "mp::RecursiveMutex_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(mp::RecursiveMutex_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(mp::RecursiveMutex_O),_Owner), "_Owner" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(mp::RecursiveMutex_O),_Mutex._NameWord), "_Mutex._NameWord" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(mp::RecursiveMutex_O),_Mutex._Mutex.__count), "_Mutex._Mutex.__count" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(mp::RecursiveMutex_O),_Mutex._Mutex.__value.__wch), "_Mutex._Mutex.__value.__wch" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(mp::RecursiveMutex_O),_Mutex._Counter), "_Mutex._Counter" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(mp::RecursiveMutex_O),_Mutex._Recursive), "_Mutex._Recursive" }, // public: (T T) fixable: NIL good-name: T
// Stamp = chem::CombinedForceField_O/935
{ class_kind, STAMP_chem__CombinedForceField_O, sizeof(chem::CombinedForceField_O), 0, "chem::CombinedForceField_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::CombinedForceField_O),_ForceFields), "_ForceFields" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::CDBond_O/939
{ class_kind, STAMP_chem__CDBond_O, sizeof(chem::CDBond_O), 0, "chem::CDBond_O" },
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::CDBond_O),_IdBegin), "_IdBegin" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::CDBond_O),_IdEnd), "_IdEnd" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CDNode_O>), offsetof(SAFE_TYPE_MACRO(chem::CDBond_O),_BeginNode), "_BeginNode" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CDNode_O>), offsetof(SAFE_TYPE_MACRO(chem::CDBond_O),_EndNode), "_EndNode" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::ConstitutionBond_O/943
{ class_kind, STAMP_chem__ConstitutionBond_O, sizeof(chem::ConstitutionBond_O), 0, "chem::ConstitutionBond_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::ConstitutionBond_O),_ToAtomIndex), "_ToAtomIndex" }, // public: (T) fixable: NIL good-name: T
// Stamp = kinematics::ChiDihedral_O/947
{ class_kind, STAMP_kinematics__ChiDihedral_O, sizeof(kinematics::ChiDihedral_O), 0, "kinematics::ChiDihedral_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::ChiDihedral_O),_Atom1), "_Atom1" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::ChiDihedral_O),_Atom2), "_Atom2" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::ChiDihedral_O),_Atom3), "_Atom3" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(kinematics::ChiDihedral_O),_Atom4), "_Atom4" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::ConstitutionAtoms_O/951
{ class_kind, STAMP_chem__ConstitutionAtoms_O, sizeof(chem::ConstitutionAtoms_O), 0, "chem::ConstitutionAtoms_O" },
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::ConstitutionAtoms_O),_Atoms._Vector._Contents), "_Atoms._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = kinematics::Conformation_O/955
{ class_kind, STAMP_kinematics__Conformation_O, sizeof(kinematics::Conformation_O), 0, "kinematics::Conformation_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::FoldTree_O>), offsetof(SAFE_TYPE_MACRO(kinematics::Conformation_O),_FoldTree), "_FoldTree" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::AtomTree_O>), offsetof(SAFE_TYPE_MACRO(kinematics::Conformation_O),_AtomTree), "_AtomTree" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::MoleculeGraph_O/959
{ class_kind, STAMP_chem__MoleculeGraph_O, sizeof(chem::MoleculeGraph_O), 0, "chem::MoleculeGraph_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(chem::MoleculeGraph_O),_nodes_to_index), "_nodes_to_index" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_T_O>), offsetof(SAFE_TYPE_MACRO(chem::MoleculeGraph_O),_nodes), "_nodes" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::MoleculeGraph_O),_num_edges), "_num_edges" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::StructureComparer_O/963
{ class_kind, STAMP_chem__StructureComparer_O, sizeof(chem::StructureComparer_O), 0, "chem::StructureComparer_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::StructureComparer_O),_Matter), "_Matter" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::StructureComparer_O),_AllAtoms._Contents), "_AllAtoms._Contents" }, // public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::StructureComparer_O),_SuperposeAtoms._Contents), "_SuperposeAtoms._Contents" }, // public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::SimpleVectorCoordinate_O>), offsetof(SAFE_TYPE_MACRO(chem::StructureComparer_O),_FixedCoordinates), "_FixedCoordinates" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::BoundingBox_O/967
{ class_kind, STAMP_chem__BoundingBox_O, sizeof(chem::BoundingBox_O), 0, "chem::BoundingBox_O" },
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::BoundingBox_O),_x_rwidth), "_x_rwidth" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::BoundingBox_O),_y_rwidth), "_y_rwidth" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::BoundingBox_O),_z_rwidth), "_z_rwidth" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::ChemInfoNode_O/971
{ class_kind, STAMP_chem__ChemInfoNode_O, sizeof(chem::ChemInfoNode_O), 0, "chem::ChemInfoNode_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ChemInfoNode_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::ChemInfoNode_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::BondMatcher_O/975
{ class_kind, STAMP_chem__BondMatcher_O, sizeof(chem::BondMatcher_O), 0, "chem::BondMatcher_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::BondMatcher_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::BondMatcher_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::BondTest_O/979
{ class_kind, STAMP_chem__BondTest_O, sizeof(chem::BondTest_O), 0, "chem::BondTest_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::BondTest_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::BondTest_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::BondLogical_O/983
{ class_kind, STAMP_chem__BondLogical_O, sizeof(chem::BondLogical_O), 0, "chem::BondLogical_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::BondLogical_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::BondLogical_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BondMatcher_O>), offsetof(SAFE_TYPE_MACRO(chem::BondLogical_O),_Left), "_Left" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BondMatcher_O>), offsetof(SAFE_TYPE_MACRO(chem::BondLogical_O),_Right), "_Right" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::BondMatchNode_O/987
{ class_kind, STAMP_chem__BondMatchNode_O, sizeof(chem::BondMatchNode_O), 0, "chem::BondMatchNode_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::BondMatchNode_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::BondMatchNode_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::AtomOrBondMatchNode_O/991
{ class_kind, STAMP_chem__AtomOrBondMatchNode_O, sizeof(chem::AtomOrBondMatchNode_O), 0, "chem::AtomOrBondMatchNode_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomOrBondMatchNode_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomOrBondMatchNode_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AtomOrBondMatchNode_O),_RingId), "_RingId" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::Root_O/995
{ class_kind, STAMP_chem__Root_O, sizeof(chem::Root_O), 0, "chem::Root_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Root_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::Root_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Root_O),_RingId), "_RingId" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::Root_O),_Node.theObject), "_Node.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::Root_O),_Tests), "_Tests" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Root_O),_MaxTag), "_MaxTag" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Root_O),_Code._M_string_length), "_Code._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Root_O),_Code.NO-NAME._M_allocated_capacity), "_Code.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// Stamp = chem::SmartsRoot_O/999
{ class_kind, STAMP_chem__SmartsRoot_O, sizeof(chem::SmartsRoot_O), 0, "chem::SmartsRoot_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::SmartsRoot_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::SmartsRoot_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::SmartsRoot_O),_RingId), "_RingId" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::SmartsRoot_O),_Node.theObject), "_Node.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::SmartsRoot_O),_Tests), "_Tests" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::SmartsRoot_O),_MaxTag), "_MaxTag" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::SmartsRoot_O),_Code._M_string_length), "_Code._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::SmartsRoot_O),_Code.NO-NAME._M_allocated_capacity), "_Code.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// Stamp = chem::AntechamberRoot_O/1003
{ class_kind, STAMP_chem__AntechamberRoot_O, sizeof(chem::AntechamberRoot_O), 0, "chem::AntechamberRoot_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_RingId), "_RingId" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_Node.theObject), "_Node.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_Tests), "_Tests" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_MaxTag), "_MaxTag" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_Code._M_string_length), "_Code._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_Code.NO-NAME._M_allocated_capacity), "_Code.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_AfterMatchTests.theObject), "_AfterMatchTests.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_WildElementDictionary.theObject), "_WildElementDictionary.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// Stamp = chem::ResidueTest_O/1007
{ class_kind, STAMP_chem__ResidueTest_O, sizeof(chem::ResidueTest_O), 0, "chem::ResidueTest_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ResidueTest_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::ResidueTest_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::ResidueTest_O),_RingId), "_RingId" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::ResidueTest_O),_RingTag), "_RingTag" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::ResidueTest_O),_AtomTest.theObject), "_AtomTest.theObject" }, // public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// Stamp = chem::AntechamberFocusAtomMatch_O/1011
{ class_kind, STAMP_chem__AntechamberFocusAtomMatch_O, sizeof(chem::AntechamberFocusAtomMatch_O), 0, "chem::AntechamberFocusAtomMatch_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_RingId), "_RingId" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_ResidueNames.theObject), "_ResidueNames.theObject" }, // public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_AtomicNumber), "_AtomicNumber" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_NumberOfAttachedAtoms), "_NumberOfAttachedAtoms" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_NumberOfAttachedHydrogens), "_NumberOfAttachedHydrogens" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_NumberOfElectronWithdrawingGroups), "_NumberOfElectronWithdrawingGroups" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_AtomicProperty.theObject), "_AtomicProperty.theObject" }, // public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// Stamp = chem::Logical_O/1015
{ class_kind, STAMP_chem__Logical_O, sizeof(chem::Logical_O), 0, "chem::Logical_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Logical_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::Logical_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Logical_O),_RingId), "_RingId" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::Logical_O),_Left.theObject), "_Left.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::Logical_O),_Right.theObject), "_Right.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// Stamp = chem::AtomTest_O/1019
{ class_kind, STAMP_chem__AtomTest_O, sizeof(chem::AtomTest_O), 0, "chem::AtomTest_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomTest_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomTest_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AtomTest_O),_RingId), "_RingId" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AtomTest_O),_IntArg), "_IntArg" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AtomTest_O),_NumArg), "_NumArg" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomTest_O),_StringArg._M_string_length), "_StringArg._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomTest_O),_StringArg.NO-NAME._M_allocated_capacity), "_StringArg.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomTest_O),_SymbolArg), "_SymbolArg" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::BondToAtomTest_O/1023
{ class_kind, STAMP_chem__BondToAtomTest_O, sizeof(chem::BondToAtomTest_O), 0, "chem::BondToAtomTest_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::BondToAtomTest_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::BondToAtomTest_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BondMatcher_O>), offsetof(SAFE_TYPE_MACRO(chem::BondToAtomTest_O),_BondMatcher), "_BondMatcher" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::BondToAtomTest_O),_AtomTest.theObject), "_AtomTest.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// Stamp = chem::AntechamberBondToAtomTest_O/1027
{ class_kind, STAMP_chem__AntechamberBondToAtomTest_O, sizeof(chem::AntechamberBondToAtomTest_O), 0, "chem::AntechamberBondToAtomTest_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AntechamberBondToAtomTest_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::AntechamberBondToAtomTest_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::AntechamberBondToAtomTest_O),_Element), "_Element" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AntechamberBondToAtomTest_O),_Neighbors), "_Neighbors" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::AntechamberBondToAtomTest_O),_AtomProperties.theObject), "_AtomProperties.theObject" }, // public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::AntechamberBondToAtomTest_O),_Tag), "_Tag" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::BondListMatchNode_O/1031
{ class_kind, STAMP_chem__BondListMatchNode_O, sizeof(chem::BondListMatchNode_O), 0, "chem::BondListMatchNode_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::BondListMatchNode_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::BondListMatchNode_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::Chain_O/1035
{ class_kind, STAMP_chem__Chain_O, sizeof(chem::Chain_O), 0, "chem::Chain_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Chain_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::Chain_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::Chain_O),_Head.theObject), "_Head.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::Chain_O),_Tail.theObject), "_Tail.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// Stamp = chem::Branch_O/1039
{ class_kind, STAMP_chem__Branch_O, sizeof(chem::Branch_O), 0, "chem::Branch_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Branch_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::Branch_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::Branch_O),_Left.theObject), "_Left.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::Branch_O),_Right.theObject), "_Right.theObject" }, // public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// Stamp = chem::RootMatchNode_O/1043
{ class_kind, STAMP_chem__RootMatchNode_O, sizeof(chem::RootMatchNode_O), 0, "chem::RootMatchNode_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::RootMatchNode_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::RootMatchNode_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::AfterMatchBondToAtomTest_O/1047
{ class_kind, STAMP_chem__AfterMatchBondToAtomTest_O, sizeof(chem::AfterMatchBondToAtomTest_O), 0, "chem::AfterMatchBondToAtomTest_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AfterMatchBondToAtomTest_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::AfterMatchBondToAtomTest_O),_Bounds), "_Bounds" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::AfterMatchBondToAtomTest_O),_AtomTag1), "_AtomTag1" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::AfterMatchBondToAtomTest_O),_AtomTag2), "_AtomTag2" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::Dimacs_O/1051
{ class_kind, STAMP_chem__Dimacs_O, sizeof(chem::Dimacs_O), 0, "chem::Dimacs_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Dimacs_O),numVertices), "numVertices" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Dimacs_O),adjacencyMatrixSizeLimit), "adjacencyMatrixSizeLimit" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::SpecificContext_O/1055
{ class_kind, STAMP_chem__SpecificContext_O, sizeof(chem::SpecificContext_O), 0, "chem::SpecificContext_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::SpecificContext_O),_SelfName), "_SelfName" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::KeyEntry>>), offsetof(SAFE_TYPE_MACRO(chem::SpecificContext_O),_Neighbors._Vector._Contents), "_Neighbors._Vector._Contents" }, // public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::Minimizer_O/1059
{ class_kind, STAMP_chem__Minimizer_O, sizeof(chem::Minimizer_O), 0, "chem::Minimizer_O" },
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_InitialLineSearchStep), "_InitialLineSearchStep" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_SteepestDescentTolerance), "_SteepestDescentTolerance" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_NumberOfSteepestDescentSteps), "_NumberOfSteepestDescentSteps" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_NumberOfConjugateGradientSteps), "_NumberOfConjugateGradientSteps" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_ConjugateGradientTolerance), "_ConjugateGradientTolerance" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_NumberOfTruncatedNewtonSteps), "_NumberOfTruncatedNewtonSteps" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_TruncatedNewtonTolerance), "_TruncatedNewtonTolerance" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_DebugOn), "_DebugOn" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::MinimizerLog_O>), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_Log), "_Log" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_MinBracketSteps), "_MinBracketSteps" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_precision), "_IterationMessages._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_width), "_IterationMessages._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_word_zero._M_iword), "_IterationMessages._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_word_size), "_IterationMessages._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_fill), "_IterationMessages._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_fill_init), "_IterationMessages._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_precision), "_IterationMessages._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_width), "_IterationMessages._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_word_zero._M_iword), "_IterationMessages._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_word_size), "_IterationMessages._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_fill), "_IterationMessages._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_fill_init), "_IterationMessages._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_gcount), "_IterationMessages._M_gcount" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_precision), "_IterationMessages._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_width), "_IterationMessages._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_word_zero._M_iword), "_IterationMessages._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_word_size), "_IterationMessages._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_fill), "_IterationMessages._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_fill_init), "_IterationMessages._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_precision), "_IterationMessages._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_width), "_IterationMessages._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_word_zero._M_iword), "_IterationMessages._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_word_size), "_IterationMessages._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_fill), "_IterationMessages._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_fill_init), "_IterationMessages._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_precision), "_IterationMessages._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_width), "_IterationMessages._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_word_zero._M_iword), "_IterationMessages._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_word_size), "_IterationMessages._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_fill), "_IterationMessages._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_fill_init), "_IterationMessages._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_precision), "_IterationMessages._M_precision" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_width), "_IterationMessages._M_width" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_word_zero._M_iword), "_IterationMessages._M_word_zero._M_iword" }, // public: (NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_word_size), "_IterationMessages._M_word_size" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_fill), "_IterationMessages._M_fill" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_fill_init), "_IterationMessages._M_fill_init" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_stringbuf._M_string._M_string_length), "_IterationMessages._M_stringbuf._M_string._M_string_length" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_IterationMessages._M_stringbuf._M_string.NO-NAME._M_allocated_capacity), "_IterationMessages._M_stringbuf._M_string.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_PrintIntermediateResults), "_PrintIntermediateResults" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_ReportEverySteps), "_ReportEverySteps" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ScoringFunction_O>), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_ScoringFunction), "_ScoringFunction" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_Iteration), "_Iteration" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::PosixTime_O>), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_StartTime), "_StartTime" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_ShowElapsedTime), "_ShowElapsedTime" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_MinGradientMean), "_MinGradientMean" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_RMSForce), "_RMSForce" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),nvP1DSearchTemp1), "nvP1DSearchTemp1" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),nvP1DSearchTemp2), "nvP1DSearchTemp2" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),nvP1DSearchOrigin), "nvP1DSearchOrigin" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),nvP1DSearchDirection), "nvP1DSearchDirection" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_Frozen), "_Frozen" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_Position.theObject), "_Position.theObject" }, // public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_Force.theObject), "_Force.theObject" }, // public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_StepCallback), "_StepCallback" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = adapt::SymbolSet_O/1063
{ class_kind, STAMP_adapt__SymbolSet_O, sizeof(adapt::SymbolSet_O), 0, "adapt::SymbolSet_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(adapt::SymbolSet_O),_Symbols), "_Symbols" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::MapOfMonomerNamesToAtomIndexers_O/1067
{ class_kind, STAMP_chem__MapOfMonomerNamesToAtomIndexers_O, sizeof(chem::MapOfMonomerNamesToAtomIndexers_O), 0, "chem::MapOfMonomerNamesToAtomIndexers_O" },
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>>), offsetof(SAFE_TYPE_MACRO(chem::MapOfMonomerNamesToAtomIndexers_O),_AtomIndexers._Contents), "_AtomIndexers._Contents" }, // public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = chem::Alias_O/1071
{ class_kind, STAMP_chem__Alias_O, sizeof(chem::Alias_O), 0, "chem::Alias_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Alias_O),_MonomerAlias), "_MonomerAlias" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::Alias_O),_AtomAlias), "_AtomAlias" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::Alias_O),_MonomerId), "_MonomerId" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::Alias_O),_AtomId), "_AtomId" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = chem::AtomIdToAtomMap_O/1075
{ class_kind, STAMP_chem__AtomIdToAtomMap_O, sizeof(chem::AtomIdToAtomMap_O), 0, "chem::AtomIdToAtomMap_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomIdToAtomMap_O),_AtomIdMap._DefaultValue), "_AtomIdMap._DefaultValue" }, // public: (NIL T) fixable: SMART-PTR-FIX good-name: T
// Stamp = mp::Process_O/1079
{ class_kind, STAMP_mp__Process_O, sizeof(mp::Process_O), 0, "mp::Process_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(mp::Process_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(mp::Process_O),_Function), "_Function" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(mp::Process_O),_Arguments), "_Arguments" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(mp::Process_O),_InitialSpecialBindings), "_InitialSpecialBindings" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(mp::Process_O),_ReturnValuesList), "_ReturnValuesList" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(mp::Process_O),_SuspensionMutex._NameWord), "_SuspensionMutex._NameWord" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(mp::Process_O),_SuspensionMutex._Mutex.__count), "_SuspensionMutex._Mutex.__count" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(mp::Process_O),_SuspensionMutex._Mutex.__value.__wch), "_SuspensionMutex._Mutex.__value.__wch" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(mp::Process_O),_SuspensionMutex._Counter), "_SuspensionMutex._Counter" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(mp::Process_O),_SuspensionMutex._Recursive), "_SuspensionMutex._Recursive" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(mp::Process_O),_SuspensionCV._ConditionVariable.__count), "_SuspensionCV._ConditionVariable.__count" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(mp::Process_O),_SuspensionCV._ConditionVariable.__value.__wch), "_SuspensionCV._ConditionVariable.__value.__wch" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(mp::Process_O),_StackSize), "_StackSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(mp::Process_O),_Thread), "_Thread" }, // public: (T) fixable: NIL good-name: T
// Stamp = core::SingleDispatchMethod_O/1083
{ class_kind, STAMP_core__SingleDispatchMethod_O, sizeof(core::SingleDispatchMethod_O), 0, "core::SingleDispatchMethod_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchMethod_O),_name), "_name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchMethod_O),_receiver_class), "_receiver_class" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::LambdaListHandler_O>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchMethod_O),_argument_handler), "_argument_handler" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchMethod_O),_declares), "_declares" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchMethod_O),_docstring), "_docstring" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SingleDispatchMethodFunction_O>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchMethod_O),_body), "_body" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::Iterator_O/1087
{ templated_kind, STAMP_core__Iterator_O, sizeof(core::Iterator_O), 0, "core::Iterator_O" },
// Stamp = core::DirectoryIterator_O/1091
{ class_kind, STAMP_core__DirectoryIterator_O, sizeof(core::DirectoryIterator_O), 0, "core::DirectoryIterator_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Path_O>), offsetof(SAFE_TYPE_MACRO(core::DirectoryIterator_O),_Path), "_Path" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = chem::IterateRestraints_O/1095
{ class_kind, STAMP_chem__IterateRestraints_O, sizeof(chem::IterateRestraints_O), 0, "chem::IterateRestraints_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateRestraints_O),_Top), "_Top" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::IterateRestraints_O),_Restraints), "_Restraints" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(chem::IterateRestraints_O),_CurRestraint), "_CurRestraint" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = adapt::IterateCons_O/1099
{ class_kind, STAMP_adapt__IterateCons_O, sizeof(adapt::IterateCons_O), 0, "adapt::IterateCons_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(adapt::IterateCons_O),_Begin), "_Begin" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(adapt::IterateCons_O),_Cur), "_Cur" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::RecursiveDirectoryIterator_O/1103
{ class_kind, STAMP_core__RecursiveDirectoryIterator_O, sizeof(core::RecursiveDirectoryIterator_O), 0, "core::RecursiveDirectoryIterator_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Path_O>), offsetof(SAFE_TYPE_MACRO(core::RecursiveDirectoryIterator_O),_Path), "_Path" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::RecursiveDirectoryIterator_O),_EnterHidden), "_EnterHidden" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::IterateMatter_O/1107
{ class_kind, STAMP_chem__IterateMatter_O, sizeof(chem::IterateMatter_O), 0, "chem::IterateMatter_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Top), "_Top" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Goal), "_Goal" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.goal), "_Loop.goal" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.initialized), "_Loop.initialized" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.done), "_Loop.done" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.top), "_Loop.top" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.currentObject), "_Loop.currentObject" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.curSubLoop), "_Loop.curSubLoop" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopTop[0]), "_Loop.subLoopTop[0]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopTop[1]), "_Loop.subLoopTop[1]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopTop[2]), "_Loop.subLoopTop[2]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopTop[3]), "_Loop.subLoopTop[3]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopTop[4]), "_Loop.subLoopTop[4]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.iIndex0), "_Loop.iIndex0" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.iIndex1), "_Loop.iIndex1" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.iIndex2), "_Loop.iIndex2" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.iIndex3), "_Loop.iIndex3" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.atoms[0]), "_Loop.atoms[0]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.atoms[1]), "_Loop.atoms[1]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.atoms[2]), "_Loop.atoms[2]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.atoms[3]), "_Loop.atoms[3]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Bond_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop._Bond), "_Loop._Bond" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.aCurSpan), "_Loop.aCurSpan" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.aLastSpan), "_Loop.aLastSpan" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.iSeenId), "_Loop.iSeenId" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.iMaxDistanceFromRoot), "_Loop.iMaxDistanceFromRoot" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.iInvisibleCollisions), "_Loop.iInvisibleCollisions" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.aLastCollision), "_Loop.aLastCollision" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.aInvisibleAtom), "_Loop.aInvisibleAtom" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.fVisibilityFlags), "_Loop.fVisibilityFlags" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.fVisibleFlagsOn), "_Loop.fVisibleFlagsOn" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.fVisibleFlagsOff), "_Loop.fVisibleFlagsOff" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.iTempInt), "_Loop.iTempInt" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop._Impropers._Vector._Contents), "_Loop._Impropers._Vector._Contents" }, // public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop._ImproperIndex), "_Loop._ImproperIndex" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_IsDone), "_IsDone" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::IterateResidues_O/1111
{ class_kind, STAMP_chem__IterateResidues_O, sizeof(chem::IterateResidues_O), 0, "chem::IterateResidues_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Top), "_Top" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Goal), "_Goal" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.goal), "_Loop.goal" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.initialized), "_Loop.initialized" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.done), "_Loop.done" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.top), "_Loop.top" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.currentObject), "_Loop.currentObject" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.curSubLoop), "_Loop.curSubLoop" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopTop[0]), "_Loop.subLoopTop[0]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopTop[1]), "_Loop.subLoopTop[1]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopTop[2]), "_Loop.subLoopTop[2]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopTop[3]), "_Loop.subLoopTop[3]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopTop[4]), "_Loop.subLoopTop[4]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.iIndex0), "_Loop.iIndex0" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.iIndex1), "_Loop.iIndex1" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.iIndex2), "_Loop.iIndex2" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.iIndex3), "_Loop.iIndex3" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.atoms[0]), "_Loop.atoms[0]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.atoms[1]), "_Loop.atoms[1]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.atoms[2]), "_Loop.atoms[2]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.atoms[3]), "_Loop.atoms[3]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Bond_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop._Bond), "_Loop._Bond" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.aCurSpan), "_Loop.aCurSpan" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.aLastSpan), "_Loop.aLastSpan" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.iSeenId), "_Loop.iSeenId" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.iMaxDistanceFromRoot), "_Loop.iMaxDistanceFromRoot" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.iInvisibleCollisions), "_Loop.iInvisibleCollisions" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.aLastCollision), "_Loop.aLastCollision" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.aInvisibleAtom), "_Loop.aInvisibleAtom" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.fVisibilityFlags), "_Loop.fVisibilityFlags" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.fVisibleFlagsOn), "_Loop.fVisibleFlagsOn" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.fVisibleFlagsOff), "_Loop.fVisibleFlagsOff" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.iTempInt), "_Loop.iTempInt" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop._Impropers._Vector._Contents), "_Loop._Impropers._Vector._Contents" }, // public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop._ImproperIndex), "_Loop._ImproperIndex" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_IsDone), "_IsDone" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::IterateBonds_O/1115
{ class_kind, STAMP_chem__IterateBonds_O, sizeof(chem::IterateBonds_O), 0, "chem::IterateBonds_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Top), "_Top" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Goal), "_Goal" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.goal), "_Loop.goal" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.initialized), "_Loop.initialized" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.done), "_Loop.done" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.top), "_Loop.top" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.currentObject), "_Loop.currentObject" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.curSubLoop), "_Loop.curSubLoop" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopTop[0]), "_Loop.subLoopTop[0]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopTop[1]), "_Loop.subLoopTop[1]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopTop[2]), "_Loop.subLoopTop[2]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopTop[3]), "_Loop.subLoopTop[3]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopTop[4]), "_Loop.subLoopTop[4]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.iIndex0), "_Loop.iIndex0" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.iIndex1), "_Loop.iIndex1" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.iIndex2), "_Loop.iIndex2" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.iIndex3), "_Loop.iIndex3" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.atoms[0]), "_Loop.atoms[0]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.atoms[1]), "_Loop.atoms[1]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.atoms[2]), "_Loop.atoms[2]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.atoms[3]), "_Loop.atoms[3]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Bond_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop._Bond), "_Loop._Bond" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.aCurSpan), "_Loop.aCurSpan" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.aLastSpan), "_Loop.aLastSpan" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.iSeenId), "_Loop.iSeenId" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.iMaxDistanceFromRoot), "_Loop.iMaxDistanceFromRoot" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.iInvisibleCollisions), "_Loop.iInvisibleCollisions" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.aLastCollision), "_Loop.aLastCollision" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.aInvisibleAtom), "_Loop.aInvisibleAtom" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.fVisibilityFlags), "_Loop.fVisibilityFlags" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.fVisibleFlagsOn), "_Loop.fVisibleFlagsOn" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.fVisibleFlagsOff), "_Loop.fVisibleFlagsOff" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.iTempInt), "_Loop.iTempInt" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop._Impropers._Vector._Contents), "_Loop._Impropers._Vector._Contents" }, // public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop._ImproperIndex), "_Loop._ImproperIndex" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_IsDone), "_IsDone" }, // public: (T) fixable: NIL good-name: T
// Stamp = chem::IterateAtoms_O/1119
{ class_kind, STAMP_chem__IterateAtoms_O, sizeof(chem::IterateAtoms_O), 0, "chem::IterateAtoms_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Top), "_Top" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Goal), "_Goal" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.goal), "_Loop.goal" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.initialized), "_Loop.initialized" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.done), "_Loop.done" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.top), "_Loop.top" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.currentObject), "_Loop.currentObject" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.curSubLoop), "_Loop.curSubLoop" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopTop[0]), "_Loop.subLoopTop[0]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopTop[1]), "_Loop.subLoopTop[1]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopTop[2]), "_Loop.subLoopTop[2]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopTop[3]), "_Loop.subLoopTop[3]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopTop[4]), "_Loop.subLoopTop[4]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.iIndex0), "_Loop.iIndex0" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.iIndex1), "_Loop.iIndex1" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.iIndex2), "_Loop.iIndex2" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.iIndex3), "_Loop.iIndex3" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.atoms[0]), "_Loop.atoms[0]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.atoms[1]), "_Loop.atoms[1]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.atoms[2]), "_Loop.atoms[2]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.atoms[3]), "_Loop.atoms[3]" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Bond_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop._Bond), "_Loop._Bond" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.aCurSpan), "_Loop.aCurSpan" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.aLastSpan), "_Loop.aLastSpan" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.iSeenId), "_Loop.iSeenId" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.iMaxDistanceFromRoot), "_Loop.iMaxDistanceFromRoot" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.iInvisibleCollisions), "_Loop.iInvisibleCollisions" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.aLastCollision), "_Loop.aLastCollision" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.aInvisibleAtom), "_Loop.aInvisibleAtom" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.fVisibilityFlags), "_Loop.fVisibilityFlags" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.fVisibleFlagsOn), "_Loop.fVisibleFlagsOn" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.fVisibleFlagsOff), "_Loop.fVisibleFlagsOff" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.iTempInt), "_Loop.iTempInt" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop._Impropers._Vector._Contents), "_Loop._Impropers._Vector._Contents" }, // public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop._ImproperIndex), "_Loop._ImproperIndex" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_IsDone), "_IsDone" }, // public: (T) fixable: NIL good-name: T
// Stamp = core::Symbol_O/1123
{ class_kind, STAMP_core__Symbol_O, sizeof(core::Symbol_O), 0, "core::Symbol_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleString_O>), offsetof(SAFE_TYPE_MACRO(core::Symbol_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Symbol_O),_HomePackage._M_i), "_HomePackage._M_i" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Symbol_O),_GlobalValue), "_GlobalValue" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Function_O>), offsetof(SAFE_TYPE_MACRO(core::Symbol_O),_Function), "_Function" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Function_O>), offsetof(SAFE_TYPE_MACRO(core::Symbol_O),_SetfFunction), "_SetfFunction" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Symbol_O),_BindingIdx._M_i), "_BindingIdx._M_i" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Symbol_O),_Flags), "_Flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::Symbol_O),_PropertyList), "_PropertyList" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::Null_O/1127
{ class_kind, STAMP_core__Null_O, sizeof(core::Null_O), 0, "core::Null_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleString_O>), offsetof(SAFE_TYPE_MACRO(core::Null_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Null_O),_HomePackage._M_i), "_HomePackage._M_i" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Null_O),_GlobalValue), "_GlobalValue" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Function_O>), offsetof(SAFE_TYPE_MACRO(core::Null_O),_Function), "_Function" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Function_O>), offsetof(SAFE_TYPE_MACRO(core::Null_O),_SetfFunction), "_SetfFunction" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Null_O),_BindingIdx._M_i), "_BindingIdx._M_i" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Null_O),_Flags), "_Flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::Null_O),_PropertyList), "_PropertyList" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::SharpEqualWrapper_O/1131
{ class_kind, STAMP_core__SharpEqualWrapper_O, sizeof(core::SharpEqualWrapper_O), 0, "core::SharpEqualWrapper_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::SharpEqualWrapper_O),_Value), "_Value" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::SharpEqualWrapper_O),_Label), "_Label" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::ClaspJIT_O/1135
{ class_kind, STAMP_llvmo__ClaspJIT_O, sizeof(llvmo::ClaspJIT_O), 0, "llvmo::ClaspJIT_O" },
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_DataLayout.BigEndian), "_DataLayout.BigEndian" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_DataLayout.AllocaAddrSpace), "_DataLayout.AllocaAddrSpace" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_DataLayout.StackNaturalAlign), "_DataLayout.StackNaturalAlign" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_DataLayout.ProgramAddrSpace), "_DataLayout.ProgramAddrSpace" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_DataLayout.FunctionPtrAlign), "_DataLayout.FunctionPtrAlign" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_DataLayout.LegalIntWidths.Size), "_DataLayout.LegalIntWidths.Size" }, // public: (T NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_DataLayout.LegalIntWidths.Capacity), "_DataLayout.LegalIntWidths.Capacity" }, // public: (T NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_DataLayout.Alignments.Size), "_DataLayout.Alignments.Size" }, // public: (T NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_DataLayout.Alignments.Capacity), "_DataLayout.Alignments.Capacity" }, // public: (T NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_DataLayout.StringRepresentation._M_string_length), "_DataLayout.StringRepresentation._M_string_length" }, // public: (T NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_DataLayout.StringRepresentation.NO-NAME._M_allocated_capacity), "_DataLayout.StringRepresentation.NO-NAME._M_allocated_capacity" }, // public: (T NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_DataLayout.Pointers.Size), "_DataLayout.Pointers.Size" }, // public: (T NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_DataLayout.Pointers.Capacity), "_DataLayout.Pointers.Capacity" }, // public: (T NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_DataLayout.NonIntegralAddressSpaces.Size), "_DataLayout.NonIntegralAddressSpaces.Size" }, // public: (T NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_DataLayout.NonIntegralAddressSpaces.Capacity), "_DataLayout.NonIntegralAddressSpaces.Capacity" }, // public: (T NIL NIL) fixable: NIL good-name: T
// Stamp = core::Exposer_O/1139
{ class_kind, STAMP_core__Exposer_O, sizeof(core::Exposer_O), 0, "core::Exposer_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), offsetof(SAFE_TYPE_MACRO(core::Exposer_O),_Package), "_Package" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Exposer_O),_PackageName._M_string_length), "_PackageName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Exposer_O),_PackageName.NO-NAME._M_allocated_capacity), "_PackageName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// Stamp = units::UnitsExposer_O/1143
{ class_kind, STAMP_units__UnitsExposer_O, sizeof(units::UnitsExposer_O), 0, "units::UnitsExposer_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), offsetof(SAFE_TYPE_MACRO(units::UnitsExposer_O),_Package), "_Package" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(units::UnitsExposer_O),_PackageName._M_string_length), "_PackageName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(units::UnitsExposer_O),_PackageName.NO-NAME._M_allocated_capacity), "_PackageName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// Stamp = core::CoreExposer_O/1147
{ class_kind, STAMP_core__CoreExposer_O, sizeof(core::CoreExposer_O), 0, "core::CoreExposer_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), offsetof(SAFE_TYPE_MACRO(core::CoreExposer_O),_Package), "_Package" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::CoreExposer_O),_PackageName._M_string_length), "_PackageName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::CoreExposer_O),_PackageName.NO-NAME._M_allocated_capacity), "_PackageName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// Stamp = geom::GeomExposer_O/1151
{ class_kind, STAMP_geom__GeomExposer_O, sizeof(geom::GeomExposer_O), 0, "geom::GeomExposer_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), offsetof(SAFE_TYPE_MACRO(geom::GeomExposer_O),_Package), "_Package" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::GeomExposer_O),_PackageName._M_string_length), "_PackageName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::GeomExposer_O),_PackageName.NO-NAME._M_allocated_capacity), "_PackageName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// Stamp = adapt::AdaptExposer_O/1155
{ class_kind, STAMP_adapt__AdaptExposer_O, sizeof(adapt::AdaptExposer_O), 0, "adapt::AdaptExposer_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), offsetof(SAFE_TYPE_MACRO(adapt::AdaptExposer_O),_Package), "_Package" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(adapt::AdaptExposer_O),_PackageName._M_string_length), "_PackageName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(adapt::AdaptExposer_O),_PackageName.NO-NAME._M_allocated_capacity), "_PackageName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// Stamp = kinematics::KinematicsExposer_O/1159
{ class_kind, STAMP_kinematics__KinematicsExposer_O, sizeof(kinematics::KinematicsExposer_O), 0, "kinematics::KinematicsExposer_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), offsetof(SAFE_TYPE_MACRO(kinematics::KinematicsExposer_O),_Package), "_Package" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::KinematicsExposer_O),_PackageName._M_string_length), "_PackageName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(kinematics::KinematicsExposer_O),_PackageName.NO-NAME._M_allocated_capacity), "_PackageName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// Stamp = chem::ChemExposer_O/1163
{ class_kind, STAMP_chem__ChemExposer_O, sizeof(chem::ChemExposer_O), 0, "chem::ChemExposer_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), offsetof(SAFE_TYPE_MACRO(chem::ChemExposer_O),_Package), "_Package" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ChemExposer_O),_PackageName._M_string_length), "_PackageName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::ChemExposer_O),_PackageName.NO-NAME._M_allocated_capacity), "_PackageName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// Stamp = asttooling::AsttoolingExposer_O/1167
{ class_kind, STAMP_asttooling__AsttoolingExposer_O, sizeof(asttooling::AsttoolingExposer_O), 0, "asttooling::AsttoolingExposer_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), offsetof(SAFE_TYPE_MACRO(asttooling::AsttoolingExposer_O),_Package), "_Package" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(asttooling::AsttoolingExposer_O),_PackageName._M_string_length), "_PackageName._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(asttooling::AsttoolingExposer_O),_PackageName.NO-NAME._M_allocated_capacity), "_PackageName.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// Stamp = core::PosixTimeDuration_O/1171
{ class_kind, STAMP_core__PosixTimeDuration_O, sizeof(core::PosixTimeDuration_O), 0, "core::PosixTimeDuration_O" },
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::PosixTimeDuration_O),_Duration.ticks_.value_), "_Duration.ticks_.value_" }, // public: (NIL NIL NIL) fixable: NIL good-name: T
// Stamp = clasp_ffi::ForeignTypeSpec_O/1175
{ class_kind, STAMP_clasp_ffi__ForeignTypeSpec_O, sizeof(clasp_ffi::ForeignTypeSpec_O), 0, "clasp_ffi::ForeignTypeSpec_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_lisp_symbol), "m_lisp_symbol" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_lisp_name), "m_lisp_name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Integer_O>), offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_size), "m_size" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Fixnum_I>), offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_alignment), "m_alignment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_cxx_name), "m_cxx_name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Function_O>), offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_llvm_type_symbol_fn), "m_llvm_type_symbol_fn" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_to_object_fn_name), "m_to_object_fn_name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_from_object_fn_name), "m_from_object_fn_name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<clasp_ffi::ForeignData_O>), offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_to_object_fn_ptr), "m_to_object_fn_ptr" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<clasp_ffi::ForeignData_O>), offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_from_object_fn_ptr), "m_from_object_fn_ptr" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::SmallMap_O/1179
{ class_kind, STAMP_core__SmallMap_O, sizeof(core::SmallMap_O), 0, "core::SmallMap_O" },
// not-exposing {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>>), offsetof(SAFE_TYPE_MACRO(core::SmallMap_O),map._Contents), "map._Contents" }, // public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = core::Instance_O/1181
{ class_kind, STAMP_core__Instance_O, sizeof(core::Instance_O), 0, "core::Instance_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Instance_O),_Sig), "_Sig" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(core::Instance_O),_Class), "_Class" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Rack_O>), offsetof(SAFE_TYPE_MACRO(core::Instance_O),_Rack), "_Rack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = clbind::ClassRep_O/1185
{ class_kind, STAMP_clbind__ClassRep_O, sizeof(clbind::ClassRep_O), 0, "clbind::ClassRep_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(clbind::ClassRep_O),_Sig), "_Sig" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(clbind::ClassRep_O),_Class), "_Class" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Rack_O>), offsetof(SAFE_TYPE_MACRO(clbind::ClassRep_O),_Rack), "_Rack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>>), offsetof(SAFE_TYPE_MACRO(clbind::ClassRep_O),m_bases._Vector._Contents), "m_bases._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(clbind::ClassRep_O),m_name._M_string_length), "m_name._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(clbind::ClassRep_O),m_name.NO-NAME._M_allocated_capacity), "m_name.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(clbind::ClassRep_O),m_derivable), "m_derivable" }, // public: (T) fixable: NIL good-name: T
// Stamp = core::DerivableCxxObject_O/1188
{ class_kind, STAMP_core__DerivableCxxObject_O, sizeof(core::DerivableCxxObject_O), 0, "core::DerivableCxxObject_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::DerivableCxxObject_O),_Sig), "_Sig" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(core::DerivableCxxObject_O),_Class), "_Class" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Rack_O>), offsetof(SAFE_TYPE_MACRO(core::DerivableCxxObject_O),_Rack), "_Rack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = mpip::Mpi_O/1195
{ class_kind, STAMP_mpip__Mpi_O, sizeof(mpip::Mpi_O), 0, "mpip::Mpi_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(mpip::Mpi_O),_LastReturnCode), "_LastReturnCode" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(mpip::Mpi_O),_Source), "_Source" }, // public: (NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(mpip::Mpi_O),_Tag), "_Tag" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = core::Sigset_O/1199
{ class_kind, STAMP_core__Sigset_O, sizeof(core::Sigset_O), 0, "core::Sigset_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Sigset_O),_sigset.__count), "_sigset.__count" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Sigset_O),_sigset.__value.__wch), "_sigset.__value.__wch" }, // public: (T T T) fixable: NIL good-name: T
// Stamp = core::Environment_O/1203
{ class_kind, STAMP_core__Environment_O, sizeof(core::Environment_O), 0, "core::Environment_O" },
// Stamp = core::GlueEnvironment_O/1207
{ class_kind, STAMP_core__GlueEnvironment_O, sizeof(core::GlueEnvironment_O), 0, "core::GlueEnvironment_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::GlueEnvironment_O),_Map), "_Map" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::GlueEnvironment_O),_Args), "_Args" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::LexicalEnvironment_O/1211
{ class_kind, STAMP_core__LexicalEnvironment_O, sizeof(core::LexicalEnvironment_O), 0, "core::LexicalEnvironment_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::LexicalEnvironment_O),_ParentEnvironment), "_ParentEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::LexicalEnvironment_O),_Metadata), "_Metadata" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::CompileTimeEnvironment_O/1215
{ class_kind, STAMP_core__CompileTimeEnvironment_O, sizeof(core::CompileTimeEnvironment_O), 0, "core::CompileTimeEnvironment_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::CompileTimeEnvironment_O),_ParentEnvironment), "_ParentEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::CompileTimeEnvironment_O),_Metadata), "_Metadata" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::CatchEnvironment_O/1219
{ class_kind, STAMP_core__CatchEnvironment_O, sizeof(core::CatchEnvironment_O), 0, "core::CatchEnvironment_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::CatchEnvironment_O),_ParentEnvironment), "_ParentEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::CatchEnvironment_O),_Metadata), "_Metadata" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::SymbolMacroletEnvironment_O/1223
{ class_kind, STAMP_core__SymbolMacroletEnvironment_O, sizeof(core::SymbolMacroletEnvironment_O), 0, "core::SymbolMacroletEnvironment_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::SymbolMacroletEnvironment_O),_ParentEnvironment), "_ParentEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::SymbolMacroletEnvironment_O),_Metadata), "_Metadata" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::SymbolMacroletEnvironment_O),_Macros), "_Macros" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::FunctionContainerEnvironment_O/1227
{ class_kind, STAMP_core__FunctionContainerEnvironment_O, sizeof(core::FunctionContainerEnvironment_O), 0, "core::FunctionContainerEnvironment_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::FunctionContainerEnvironment_O),_ParentEnvironment), "_ParentEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::FunctionContainerEnvironment_O),_Metadata), "_Metadata" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::FunctionContainerEnvironment_O),_Closure), "_Closure" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::FunctionContainerEnvironment_O),_Function), "_Function" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::UnwindProtectEnvironment_O/1231
{ class_kind, STAMP_core__UnwindProtectEnvironment_O, sizeof(core::UnwindProtectEnvironment_O), 0, "core::UnwindProtectEnvironment_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::UnwindProtectEnvironment_O),_ParentEnvironment), "_ParentEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::UnwindProtectEnvironment_O),_Metadata), "_Metadata" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::UnwindProtectEnvironment_O),_CleanupForm), "_CleanupForm" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::MacroletEnvironment_O/1235
{ class_kind, STAMP_core__MacroletEnvironment_O, sizeof(core::MacroletEnvironment_O), 0, "core::MacroletEnvironment_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::MacroletEnvironment_O),_ParentEnvironment), "_ParentEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::MacroletEnvironment_O),_Metadata), "_Metadata" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::MacroletEnvironment_O),_Macros), "_Macros" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::RuntimeVisibleEnvironment_O/1239
{ class_kind, STAMP_core__RuntimeVisibleEnvironment_O, sizeof(core::RuntimeVisibleEnvironment_O), 0, "core::RuntimeVisibleEnvironment_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::RuntimeVisibleEnvironment_O),_ParentEnvironment), "_ParentEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::RuntimeVisibleEnvironment_O),_Metadata), "_Metadata" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::RuntimeVisibleEnvironment_O),_RuntimeEnvironment), "_RuntimeEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::RuntimeVisibleEnvironment_O),_Invisible), "_Invisible" }, // public: (T) fixable: NIL good-name: T
// Stamp = core::TagbodyEnvironment_O/1243
{ class_kind, STAMP_core__TagbodyEnvironment_O, sizeof(core::TagbodyEnvironment_O), 0, "core::TagbodyEnvironment_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),_ParentEnvironment), "_ParentEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),_Metadata), "_Metadata" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),_RuntimeEnvironment), "_RuntimeEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),_Invisible), "_Invisible" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),_Tags), "_Tags" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>>), offsetof(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),_TagCode._Vector._Contents), "_TagCode._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ActivationFrame_O>), offsetof(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),_ActivationFrame), "_ActivationFrame" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),_LocalBlocks), "_LocalBlocks" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::BlockEnvironment_O/1247
{ class_kind, STAMP_core__BlockEnvironment_O, sizeof(core::BlockEnvironment_O), 0, "core::BlockEnvironment_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::BlockEnvironment_O),_ParentEnvironment), "_ParentEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::BlockEnvironment_O),_Metadata), "_Metadata" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::BlockEnvironment_O),_RuntimeEnvironment), "_RuntimeEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::BlockEnvironment_O),_Invisible), "_Invisible" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(core::BlockEnvironment_O),_BlockSymbol), "_BlockSymbol" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ValueFrame_O>), offsetof(SAFE_TYPE_MACRO(core::BlockEnvironment_O),_ActivationFrame), "_ActivationFrame" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::BlockEnvironment_O),_LocalReturnBlock), "_LocalReturnBlock" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::BlockEnvironment_O),_LocalReturnValue), "_LocalReturnValue" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::FunctionValueEnvironment_O/1251
{ class_kind, STAMP_core__FunctionValueEnvironment_O, sizeof(core::FunctionValueEnvironment_O), 0, "core::FunctionValueEnvironment_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::FunctionValueEnvironment_O),_ParentEnvironment), "_ParentEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::FunctionValueEnvironment_O),_Metadata), "_Metadata" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::FunctionValueEnvironment_O),_RuntimeEnvironment), "_RuntimeEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::FunctionValueEnvironment_O),_Invisible), "_Invisible" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEqual_O>), offsetof(SAFE_TYPE_MACRO(core::FunctionValueEnvironment_O),_FunctionIndices), "_FunctionIndices" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::FunctionFrame_O>), offsetof(SAFE_TYPE_MACRO(core::FunctionValueEnvironment_O),_FunctionFrame), "_FunctionFrame" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::ValueEnvironment_O/1255
{ class_kind, STAMP_core__ValueEnvironment_O, sizeof(core::ValueEnvironment_O), 0, "core::ValueEnvironment_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::ValueEnvironment_O),_ParentEnvironment), "_ParentEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::ValueEnvironment_O),_Metadata), "_Metadata" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::ValueEnvironment_O),_RuntimeEnvironment), "_RuntimeEnvironment" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::ValueEnvironment_O),_Invisible), "_Invisible" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::ValueEnvironment_O),_SymbolIndex_alist), "_SymbolIndex_alist" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ValueFrame_O>), offsetof(SAFE_TYPE_MACRO(core::ValueEnvironment_O),_ActivationFrame), "_ActivationFrame" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::ActivationFrame_O/1259
{ class_kind, STAMP_core__ActivationFrame_O, sizeof(core::ActivationFrame_O), 0, "core::ActivationFrame_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::ActivationFrame_O),_Parent), "_Parent" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::ValueFrame_O/1263
{ class_kind, STAMP_core__ValueFrame_O, sizeof(core::ValueFrame_O), 0, "core::ValueFrame_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::ValueFrame_O),_Parent), "_Parent" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ValueFrame_O),_Objects._Data), "_Objects._Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::ValueFrame_O),_Objects._Length), offsetof(SAFE_TYPE_MACRO(core::ValueFrame_O),_Objects._Length), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), 0, "only" },
// Stamp = core::FunctionFrame_O/1267
{ class_kind, STAMP_core__FunctionFrame_O, sizeof(core::FunctionFrame_O), 0, "core::FunctionFrame_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::FunctionFrame_O),_Parent), "_Parent" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::FunctionFrame_O),_Objects._Data), "_Objects._Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::FunctionFrame_O),_Objects._Length), offsetof(SAFE_TYPE_MACRO(core::FunctionFrame_O),_Objects._Length), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), 0, "only" },
// Stamp = core::RandomState_O/1271
{ class_kind, STAMP_core__RandomState_O, sizeof(core::RandomState_O), 0, "core::RandomState_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::RandomState_O),_Producer.i), "_Producer.i" }, // public: (T NIL) fixable: NIL good-name: T
// Stamp = core::HashTableBase_O/1275
{ class_kind, STAMP_core__HashTableBase_O, sizeof(core::HashTableBase_O), 0, "core::HashTableBase_O" },
// Stamp = core::HashTable_O/1279
{ class_kind, STAMP_core__HashTable_O, sizeof(core::HashTable_O), 0, "core::HashTable_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Number_O>), offsetof(SAFE_TYPE_MACRO(core::HashTable_O),_RehashSize), "_RehashSize" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(core::HashTable_O),_RehashThreshold), "_RehashThreshold" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::Cons_O>>), offsetof(SAFE_TYPE_MACRO(core::HashTable_O),_Table._Vector._Contents), "_Table._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::HashTable_O),_HashTableCount), "_HashTableCount" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<mp::SharedMutex_O>), offsetof(SAFE_TYPE_MACRO(core::HashTable_O),_Mutex), "_Mutex" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::HashTable_O),_LocationDependency._epoch), "_LocationDependency._epoch" }, // public: (T T) fixable: NIL good-name: NIL
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::HashTable_O),_LocationDependency._rs), "_LocationDependency._rs" }, // public: (T T) fixable: NIL good-name: NIL
// Stamp = core::HashTableEqualp_O/1283
{ class_kind, STAMP_core__HashTableEqualp_O, sizeof(core::HashTableEqualp_O), 0, "core::HashTableEqualp_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Number_O>), offsetof(SAFE_TYPE_MACRO(core::HashTableEqualp_O),_RehashSize), "_RehashSize" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(core::HashTableEqualp_O),_RehashThreshold), "_RehashThreshold" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::Cons_O>>), offsetof(SAFE_TYPE_MACRO(core::HashTableEqualp_O),_Table._Vector._Contents), "_Table._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::HashTableEqualp_O),_HashTableCount), "_HashTableCount" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<mp::SharedMutex_O>), offsetof(SAFE_TYPE_MACRO(core::HashTableEqualp_O),_Mutex), "_Mutex" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::HashTableEqualp_O),_LocationDependency._epoch), "_LocationDependency._epoch" }, // public: (T T) fixable: NIL good-name: NIL
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::HashTableEqualp_O),_LocationDependency._rs), "_LocationDependency._rs" }, // public: (T T) fixable: NIL good-name: NIL
// Stamp = core::HashTableEq_O/1287
{ class_kind, STAMP_core__HashTableEq_O, sizeof(core::HashTableEq_O), 0, "core::HashTableEq_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Number_O>), offsetof(SAFE_TYPE_MACRO(core::HashTableEq_O),_RehashSize), "_RehashSize" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(core::HashTableEq_O),_RehashThreshold), "_RehashThreshold" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::Cons_O>>), offsetof(SAFE_TYPE_MACRO(core::HashTableEq_O),_Table._Vector._Contents), "_Table._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::HashTableEq_O),_HashTableCount), "_HashTableCount" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<mp::SharedMutex_O>), offsetof(SAFE_TYPE_MACRO(core::HashTableEq_O),_Mutex), "_Mutex" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::HashTableEq_O),_LocationDependency._epoch), "_LocationDependency._epoch" }, // public: (T T) fixable: NIL good-name: NIL
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::HashTableEq_O),_LocationDependency._rs), "_LocationDependency._rs" }, // public: (T T) fixable: NIL good-name: NIL
// Stamp = core::HashTableEqual_O/1291
{ class_kind, STAMP_core__HashTableEqual_O, sizeof(core::HashTableEqual_O), 0, "core::HashTableEqual_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Number_O>), offsetof(SAFE_TYPE_MACRO(core::HashTableEqual_O),_RehashSize), "_RehashSize" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(core::HashTableEqual_O),_RehashThreshold), "_RehashThreshold" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::Cons_O>>), offsetof(SAFE_TYPE_MACRO(core::HashTableEqual_O),_Table._Vector._Contents), "_Table._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::HashTableEqual_O),_HashTableCount), "_HashTableCount" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<mp::SharedMutex_O>), offsetof(SAFE_TYPE_MACRO(core::HashTableEqual_O),_Mutex), "_Mutex" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::HashTableEqual_O),_LocationDependency._epoch), "_LocationDependency._epoch" }, // public: (T T) fixable: NIL good-name: NIL
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::HashTableEqual_O),_LocationDependency._rs), "_LocationDependency._rs" }, // public: (T T) fixable: NIL good-name: NIL
// Stamp = core::HashTableEql_O/1295
{ class_kind, STAMP_core__HashTableEql_O, sizeof(core::HashTableEql_O), 0, "core::HashTableEql_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Number_O>), offsetof(SAFE_TYPE_MACRO(core::HashTableEql_O),_RehashSize), "_RehashSize" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(core::HashTableEql_O),_RehashThreshold), "_RehashThreshold" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::Cons_O>>), offsetof(SAFE_TYPE_MACRO(core::HashTableEql_O),_Table._Vector._Contents), "_Table._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::HashTableEql_O),_HashTableCount), "_HashTableCount" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<mp::SharedMutex_O>), offsetof(SAFE_TYPE_MACRO(core::HashTableEql_O),_Mutex), "_Mutex" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::HashTableEql_O),_LocationDependency._epoch), "_LocationDependency._epoch" }, // public: (T T) fixable: NIL good-name: NIL
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::HashTableEql_O),_LocationDependency._rs), "_LocationDependency._rs" }, // public: (T T) fixable: NIL good-name: NIL
// Stamp = core::WeakKeyHashTable_O/1299
{ class_kind, STAMP_core__WeakKeyHashTable_O, sizeof(core::WeakKeyHashTable_O), 0, "core::WeakKeyHashTable_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Number_O>), offsetof(SAFE_TYPE_MACRO(core::WeakKeyHashTable_O),_HashTable._RehashSize), "_HashTable._RehashSize" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(core::WeakKeyHashTable_O),_HashTable._RehashThreshold), "_HashTable._RehashThreshold" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::WeakKeyHashTable_O),_HashTable._Length), "_HashTable._Length" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::Buckets<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>,gctools::WeakLinks>>), offsetof(SAFE_TYPE_MACRO(core::WeakKeyHashTable_O),_HashTable._Keys), "_HashTable._Keys" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::Buckets<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>,gctools::StrongLinks>>), offsetof(SAFE_TYPE_MACRO(core::WeakKeyHashTable_O),_HashTable._Values), "_HashTable._Values" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::WeakKeyHashTable_O),_HashTable._LocationDependency._epoch), "_HashTable._LocationDependency._epoch" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::WeakKeyHashTable_O),_HashTable._LocationDependency._rs), "_HashTable._LocationDependency._rs" }, // public: (T T T) fixable: NIL good-name: T
// Stamp = llvmo::InsertPoint_O/1303
{ class_kind, STAMP_llvmo__InsertPoint_O, sizeof(llvmo::InsertPoint_O), 0, "llvmo::InsertPoint_O" },
// Stamp = core::Number_O/1307
{ class_kind, STAMP_core__Number_O, sizeof(core::Number_O), 0, "core::Number_O" },
// Stamp = core::Real_O/1311
{ class_kind, STAMP_core__Real_O, sizeof(core::Real_O), 0, "core::Real_O" },
// Stamp = core::Rational_O/1315
{ class_kind, STAMP_core__Rational_O, sizeof(core::Rational_O), 0, "core::Rational_O" },
// Stamp = core::Ratio_O/1319
{ class_kind, STAMP_core__Ratio_O, sizeof(core::Ratio_O), 0, "core::Ratio_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Integer_O>), offsetof(SAFE_TYPE_MACRO(core::Ratio_O),_numerator), "_numerator" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Integer_O>), offsetof(SAFE_TYPE_MACRO(core::Ratio_O),_denominator), "_denominator" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::Integer_O/1323
{ class_kind, STAMP_core__Integer_O, sizeof(core::Integer_O), 0, "core::Integer_O" },
// Stamp = core::Bignum_O/1327
{ class_kind, STAMP_core__Bignum_O, sizeof(core::Bignum_O), 0, "core::Bignum_O" },
// Stamp = core::Fixnum_dummy_O/1331
{ class_kind, STAMP_core__Fixnum_dummy_O, sizeof(core::Fixnum_dummy_O), 0, "core::Fixnum_dummy_O" },
// Stamp = core::Float_O/1335
{ class_kind, STAMP_core__Float_O, sizeof(core::Float_O), 0, "core::Float_O" },
// Stamp = core::DoubleFloat_O/1339
{ class_kind, STAMP_core__DoubleFloat_O, sizeof(core::DoubleFloat_O), 0, "core::DoubleFloat_O" },
// not-exposing {  fixed_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(core::DoubleFloat_O),_Value), "_Value" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = core::SingleFloat_dummy_O/1343
{ class_kind, STAMP_core__SingleFloat_dummy_O, sizeof(core::SingleFloat_dummy_O), 0, "core::SingleFloat_dummy_O" },
// Stamp = core::LongFloat_O/1347
{ class_kind, STAMP_core__LongFloat_O, sizeof(core::LongFloat_O), 0, "core::LongFloat_O" },
// Stamp = core::ShortFloat_O/1351
{ class_kind, STAMP_core__ShortFloat_O, sizeof(core::ShortFloat_O), 0, "core::ShortFloat_O" },
// not-exposing {  fixed_field, ctype_float, sizeof(float), offsetof(SAFE_TYPE_MACRO(core::ShortFloat_O),_Value), "_Value" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = core::Complex_O/1355
{ class_kind, STAMP_core__Complex_O, sizeof(core::Complex_O), 0, "core::Complex_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Real_O>), offsetof(SAFE_TYPE_MACRO(core::Complex_O),_real), "_real" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Real_O>), offsetof(SAFE_TYPE_MACRO(core::Complex_O),_imaginary), "_imaginary" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::SourcePosInfo_O/1359
{ class_kind, STAMP_core__SourcePosInfo_O, sizeof(core::SourcePosInfo_O), 0, "core::SourcePosInfo_O" },
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::SourcePosInfo_O),_FileId), "_FileId" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SourcePosInfo_O),_Filepos), "_Filepos" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::SourcePosInfo_O),_Lineno), "_Lineno" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::SourcePosInfo_O),_Column), "_Column" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::SourcePosInfo_O),_FunctionScope), "_FunctionScope" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::SourcePosInfo_O),_InlinedAt), "_InlinedAt" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::IntArray_O/1363
{ class_kind, STAMP_core__IntArray_O, sizeof(core::IntArray_O), 0, "core::IntArray_O" },
// Stamp = core::Record_O/1367
{ class_kind, STAMP_core__Record_O, sizeof(core::Record_O), 0, "core::Record_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::Record_O),_alist), "_alist" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Record_O),_replacement_table), "_replacement_table" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Record_O),_Seen), "_Seen" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = clbind::ClassRegistry_O/1371
{ class_kind, STAMP_clbind__ClassRegistry_O, sizeof(clbind::ClassRegistry_O), 0, "clbind::ClassRegistry_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEql_O>), offsetof(SAFE_TYPE_MACRO(clbind::ClassRegistry_O),m_classes), "m_classes" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::ClassHolder_O/1375
{ class_kind, STAMP_core__ClassHolder_O, sizeof(core::ClassHolder_O), 0, "core::ClassHolder_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(core::ClassHolder_O),_Class._M_i), "_Class._M_i" }, // public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::WrappedPointer_O/1378
{ templated_kind, STAMP_core__WrappedPointer_O, sizeof(core::WrappedPointer_O), 0, "core::WrappedPointer_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::WrappedPointer_O),ShiftedStamp_), "ShiftedStamp_" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(core::WrappedPointer_O),Class_), "Class_" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::FdSet_O/1383
{ class_kind, STAMP_core__FdSet_O, sizeof(core::FdSet_O), 0, "core::FdSet_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::FdSet_O),_fd_set.__count), "_fd_set.__count" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::FdSet_O),_fd_set.__value.__wch), "_fd_set.__value.__wch" }, // public: (T T T) fixable: NIL good-name: T
// Stamp = core::SymbolToEnumConverter_O/1387
{ class_kind, STAMP_core__SymbolToEnumConverter_O, sizeof(core::SymbolToEnumConverter_O), 0, "core::SymbolToEnumConverter_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleString_O>), offsetof(SAFE_TYPE_MACRO(core::SymbolToEnumConverter_O),_WhatTheEnumsRepresent), "_WhatTheEnumsRepresent" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEql_O>), offsetof(SAFE_TYPE_MACRO(core::SymbolToEnumConverter_O),_EnumToSymbol), "_EnumToSymbol" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::SymbolToEnumConverter_O),_ArchiveSymbolToEnum), "_ArchiveSymbolToEnum" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEql_O>), offsetof(SAFE_TYPE_MACRO(core::SymbolToEnumConverter_O),_EnumToArchiveSymbol), "_EnumToArchiveSymbol" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::SymbolToEnumConverter_O),_SymbolToEnum), "_SymbolToEnum" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::Attribute_O/1391
{ class_kind, STAMP_llvmo__Attribute_O, sizeof(llvmo::Attribute_O), 0, "llvmo::Attribute_O" },
// Stamp = core::ObjectFile_O/1395
{ class_kind, STAMP_core__ObjectFile_O, sizeof(core::ObjectFile_O), 0, "core::ObjectFile_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ObjectFile_O),_ObjectFileSize), "_ObjectFileSize" }, // public: (T) fixable: NIL good-name: T
// Stamp = core::Function_O/1399
{ class_kind, STAMP_core__Function_O, sizeof(core::Function_O), 0, "core::Function_O" },
// Stamp = core::FuncallableInstance_O/1401
{ class_kind, STAMP_core__FuncallableInstance_O, sizeof(core::FuncallableInstance_O), 0, "core::FuncallableInstance_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(core::FuncallableInstance_O),_Class), "_Class" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Rack_O>), offsetof(SAFE_TYPE_MACRO(core::FuncallableInstance_O),_Rack), "_Rack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::FuncallableInstance_O),_Sig), "_Sig" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::FuncallableInstance_O),_Compilations._M_i), "_Compilations._M_i" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::FuncallableInstance_O),_InterpretedCalls._M_i), "_InterpretedCalls._M_i" }, // public: (T NIL) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::FuncallableInstance_O),_CallHistory._Contents), "_CallHistory._Contents" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::FuncallableInstance_O),_SpecializerProfile._Contents), "_SpecializerProfile._Contents" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::FuncallableInstance_O),_CompiledDispatchFunction._Contents), "_CompiledDispatchFunction._Contents" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::Creator_O/1407
{ templated_kind, STAMP_core__Creator_O, sizeof(core::Creator_O), 0, "core::Creator_O" },
// Stamp = core::FuncallableInstanceCreator_O/1411
{ class_kind, STAMP_core__FuncallableInstanceCreator_O, sizeof(core::FuncallableInstanceCreator_O), 0, "core::FuncallableInstanceCreator_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(core::FuncallableInstanceCreator_O),_class), "_class" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = clbind::ConstructorCreator_O/1415
{ templated_kind, STAMP_clbind__ConstructorCreator_O, sizeof(clbind::ConstructorCreator_O), 0, "clbind::ConstructorCreator_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(clbind::ConstructorCreator_O),_mostDerivedClassSymbol), "_mostDerivedClassSymbol" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = clbind::DummyCreator_O/1419
{ class_kind, STAMP_clbind__DummyCreator_O, sizeof(clbind::DummyCreator_O), 0, "clbind::DummyCreator_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(clbind::DummyCreator_O),_name._M_string_length), "_name._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(clbind::DummyCreator_O),_name.NO-NAME._M_allocated_capacity), "_name.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// Stamp = core::InstanceCreator_O/1423
{ class_kind, STAMP_core__InstanceCreator_O, sizeof(core::InstanceCreator_O), 0, "core::InstanceCreator_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(core::InstanceCreator_O),_class), "_class" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::ClassRepCreator_O/1427
{ class_kind, STAMP_core__ClassRepCreator_O, sizeof(core::ClassRepCreator_O), 0, "core::ClassRepCreator_O" },
// Stamp = core::DerivableCxxClassCreator_O/1431
{ class_kind, STAMP_core__DerivableCxxClassCreator_O, sizeof(core::DerivableCxxClassCreator_O), 0, "core::DerivableCxxClassCreator_O" },
// Stamp = core::StandardClassCreator_O/1435
{ class_kind, STAMP_core__StandardClassCreator_O, sizeof(core::StandardClassCreator_O), 0, "core::StandardClassCreator_O" },
// Stamp = core::SpecialForm_O/1439
{ class_kind, STAMP_core__SpecialForm_O, sizeof(core::SpecialForm_O), 0, "core::SpecialForm_O" },
// Stamp = core::Closure_O/1443
{ templated_kind, STAMP_core__Closure_O, sizeof(core::Closure_O), 0, "core::Closure_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ObjectFile_O>), offsetof(SAFE_TYPE_MACRO(core::Closure_O),_ObjectFile), "_ObjectFile" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::SingleDispatchCxxEffectiveMethodFunction_O/1447
{ class_kind, STAMP_core__SingleDispatchCxxEffectiveMethodFunction_O, sizeof(core::SingleDispatchCxxEffectiveMethodFunction_O), 0, "core::SingleDispatchCxxEffectiveMethodFunction_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ObjectFile_O>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchCxxEffectiveMethodFunction_O),_ObjectFile), "_ObjectFile" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::CxxMethodFunction_O>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchCxxEffectiveMethodFunction_O),_onlyCxxMethodFunction), "_onlyCxxMethodFunction" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::SingleDispatchMethodFunction_O/1451
{ class_kind, STAMP_core__SingleDispatchMethodFunction_O, sizeof(core::SingleDispatchMethodFunction_O), 0, "core::SingleDispatchMethodFunction_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ObjectFile_O>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchMethodFunction_O),_ObjectFile), "_ObjectFile" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Function_O>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchMethodFunction_O),_body), "_body" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::CxxMethodFunction_O/1455
{ class_kind, STAMP_core__CxxMethodFunction_O, sizeof(core::CxxMethodFunction_O), 0, "core::CxxMethodFunction_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ObjectFile_O>), offsetof(SAFE_TYPE_MACRO(core::CxxMethodFunction_O),_ObjectFile), "_ObjectFile" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Function_O>), offsetof(SAFE_TYPE_MACRO(core::CxxMethodFunction_O),_body), "_body" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::BuiltinClosure_O/1459
{ templated_kind, STAMP_core__BuiltinClosure_O, sizeof(core::BuiltinClosure_O), 0, "core::BuiltinClosure_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ObjectFile_O>), offsetof(SAFE_TYPE_MACRO(core::BuiltinClosure_O),_ObjectFile), "_ObjectFile" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::LambdaListHandler_O>), offsetof(SAFE_TYPE_MACRO(core::BuiltinClosure_O),_lambdaListHandler), "_lambdaListHandler" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::TranslationFunctor_O/1463
{ class_kind, STAMP_core__TranslationFunctor_O, sizeof(core::TranslationFunctor_O), 0, "core::TranslationFunctor_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ObjectFile_O>), offsetof(SAFE_TYPE_MACRO(core::TranslationFunctor_O),_ObjectFile), "_ObjectFile" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::LambdaListHandler_O>), offsetof(SAFE_TYPE_MACRO(core::TranslationFunctor_O),_lambdaListHandler), "_lambdaListHandler" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::ClosureWithSlots_O/1467
{ class_kind, STAMP_core__ClosureWithSlots_O, sizeof(core::ClosureWithSlots_O), 0, "core::ClosureWithSlots_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ObjectFile_O>), offsetof(SAFE_TYPE_MACRO(core::ClosureWithSlots_O),_ObjectFile), "_ObjectFile" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ClosureWithSlots_O),_Slots._Data), "_Slots._Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::ClosureWithSlots_O),_Slots._Length), offsetof(SAFE_TYPE_MACRO(core::ClosureWithSlots_O),_Slots._Length), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), 0, "only" },
// Stamp = core::SingleDispatchGenericFunctionClosure_O/1471
{ class_kind, STAMP_core__SingleDispatchGenericFunctionClosure_O, sizeof(core::SingleDispatchGenericFunctionClosure_O), 0, "core::SingleDispatchGenericFunctionClosure_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ObjectFile_O>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchGenericFunctionClosure_O),_ObjectFile), "_ObjectFile" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchGenericFunctionClosure_O),_Methods), "_Methods" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::LambdaListHandler_O>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchGenericFunctionClosure_O),_lambdaListHandler), "_lambdaListHandler" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchGenericFunctionClosure_O),_SingleDispatchArgumentIndex), "_SingleDispatchArgumentIndex" }, // public: (T) fixable: NIL good-name: T
// Stamp = core::SingleDispatchEffectiveMethodFunction_O/1475
{ class_kind, STAMP_core__SingleDispatchEffectiveMethodFunction_O, sizeof(core::SingleDispatchEffectiveMethodFunction_O), 0, "core::SingleDispatchEffectiveMethodFunction_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ObjectFile_O>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchEffectiveMethodFunction_O),_ObjectFile), "_ObjectFile" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchEffectiveMethodFunction_O),_Befores), "_Befores" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchEffectiveMethodFunction_O),_Primaries), "_Primaries" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::SingleDispatchEffectiveMethodFunction_O),_Afters), "_Afters" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::WeakPointer_O/1479
{ class_kind, STAMP_core__WeakPointer_O, sizeof(core::WeakPointer_O), 0, "core::WeakPointer_O" },
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::WeakPointer>), offsetof(SAFE_TYPE_MACRO(core::WeakPointer_O),_WeakObject.pointer), "_WeakObject.pointer" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = llvmo::DebugLoc_O/1483
{ class_kind, STAMP_llvmo__DebugLoc_O, sizeof(llvmo::DebugLoc_O), 0, "llvmo::DebugLoc_O" },
// Stamp = core::Array_O/1487
{ class_kind, STAMP_core__Array_O, sizeof(core::Array_O), 0, "core::Array_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::Array_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// Stamp = core::MDArray_O/1491
{ class_kind, STAMP_core__MDArray_O, sizeof(core::MDArray_O), 0, "core::MDArray_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArray_int16_t_O,core::SimpleMDArray_int16_t_O,core::SimpleVector_int16_t_O,core::MDArray_O>/1495
// Stamp = core::MDArray_int16_t_O/1499
{ class_kind, STAMP_core__MDArray_int16_t_O, sizeof(core::MDArray_int16_t_O), 0, "core::MDArray_int16_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArray_int8_t_O,core::SimpleMDArray_int8_t_O,core::SimpleVector_int8_t_O,core::MDArray_O>/1503
// Stamp = core::MDArray_int8_t_O/1507
{ class_kind, STAMP_core__MDArray_int8_t_O, sizeof(core::MDArray_int8_t_O), 0, "core::MDArray_int8_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArray_int32_t_O,core::SimpleMDArray_int32_t_O,core::SimpleVector_int32_t_O,core::MDArray_O>/1511
// Stamp = core::MDArray_int32_t_O/1515
{ class_kind, STAMP_core__MDArray_int32_t_O, sizeof(core::MDArray_int32_t_O), 0, "core::MDArray_int32_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArray_byte4_t_O,core::SimpleMDArray_byte4_t_O,core::SimpleVector_byte4_t_O,core::MDArray_O>/1519
// Stamp = core::MDArray_byte4_t_O/1523
{ class_kind, STAMP_core__MDArray_byte4_t_O, sizeof(core::MDArray_byte4_t_O), 0, "core::MDArray_byte4_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArray_float_O,core::SimpleMDArray_float_O,core::SimpleVector_float_O,core::MDArray_O>/1527
// Stamp = core::MDArray_float_O/1531
{ class_kind, STAMP_core__MDArray_float_O, sizeof(core::MDArray_float_O), 0, "core::MDArray_float_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArray_size_t_O,core::SimpleMDArray_size_t_O,core::SimpleVector_size_t_O,core::MDArray_O>/1535
// Stamp = core::MDArray_size_t_O/1539
{ class_kind, STAMP_core__MDArray_size_t_O, sizeof(core::MDArray_size_t_O), 0, "core::MDArray_size_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArray_byte8_t_O,core::SimpleMDArray_byte8_t_O,core::SimpleVector_byte8_t_O,core::MDArray_O>/1543
// Stamp = core::MDArray_byte8_t_O/1547
{ class_kind, STAMP_core__MDArray_byte8_t_O, sizeof(core::MDArray_byte8_t_O), 0, "core::MDArray_byte8_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArray_int2_t_O,core::SimpleMDArray_int2_t_O,core::SimpleVector_int2_t_O,core::MDArray_O>/1551
// Stamp = core::MDArray_int2_t_O/1555
{ class_kind, STAMP_core__MDArray_int2_t_O, sizeof(core::MDArray_int2_t_O), 0, "core::MDArray_int2_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArray_fixnum_O,core::SimpleMDArray_fixnum_O,core::SimpleVector_fixnum_O,core::MDArray_O>/1559
// Stamp = core::MDArray_fixnum_O/1563
{ class_kind, STAMP_core__MDArray_fixnum_O, sizeof(core::MDArray_fixnum_O), 0, "core::MDArray_fixnum_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArrayBaseChar_O,core::SimpleMDArrayBaseChar_O,core::SimpleBaseString_O,core::MDArray_O>/1567
// Stamp = core::MDArrayBaseChar_O/1571
{ class_kind, STAMP_core__MDArrayBaseChar_O, sizeof(core::MDArrayBaseChar_O), 0, "core::MDArrayBaseChar_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArray_byte64_t_O,core::SimpleMDArray_byte64_t_O,core::SimpleVector_byte64_t_O,core::MDArray_O>/1575
// Stamp = core::MDArray_byte64_t_O/1579
{ class_kind, STAMP_core__MDArray_byte64_t_O, sizeof(core::MDArray_byte64_t_O), 0, "core::MDArray_byte64_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<geom::MDArrayCoordinate_O,geom::SimpleMDArrayCoordinate_O,geom::SimpleVectorCoordinate_O,core::MDArray_O>/1583
// Stamp = geom::MDArrayCoordinate_O/1587
{ class_kind, STAMP_geom__MDArrayCoordinate_O, sizeof(geom::MDArrayCoordinate_O), 0, "geom::MDArrayCoordinate_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArrayT_O,core::SimpleMDArrayT_O,core::SimpleVector_O,core::MDArray_O>/1591
// Stamp = core::MDArrayT_O/1595
{ class_kind, STAMP_core__MDArrayT_O, sizeof(core::MDArrayT_O), 0, "core::MDArrayT_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::SimpleMDArray_O/1599
{ class_kind, STAMP_core__SimpleMDArray_O, sizeof(core::SimpleMDArray_O), 0, "core::SimpleMDArray_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArray_int8_t_O,core::SimpleVector_int8_t_O,core::SimpleMDArray_O>/1603
// Stamp = core::SimpleMDArray_int8_t_O/1607
{ class_kind, STAMP_core__SimpleMDArray_int8_t_O, sizeof(core::SimpleMDArray_int8_t_O), 0, "core::SimpleMDArray_int8_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArray_byte32_t_O,core::SimpleVector_byte32_t_O,core::SimpleMDArray_O>/1611
// Stamp = core::SimpleMDArray_byte32_t_O/1615
{ class_kind, STAMP_core__SimpleMDArray_byte32_t_O, sizeof(core::SimpleMDArray_byte32_t_O), 0, "core::SimpleMDArray_byte32_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArray_int2_t_O,core::SimpleVector_int2_t_O,core::SimpleMDArray_O>/1619
// Stamp = core::SimpleMDArray_int2_t_O/1623
{ class_kind, STAMP_core__SimpleMDArray_int2_t_O, sizeof(core::SimpleMDArray_int2_t_O), 0, "core::SimpleMDArray_int2_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArray_byte4_t_O,core::SimpleVector_byte4_t_O,core::SimpleMDArray_O>/1627
// Stamp = core::SimpleMDArray_byte4_t_O/1631
{ class_kind, STAMP_core__SimpleMDArray_byte4_t_O, sizeof(core::SimpleMDArray_byte4_t_O), 0, "core::SimpleMDArray_byte4_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArray_int32_t_O,core::SimpleVector_int32_t_O,core::SimpleMDArray_O>/1635
// Stamp = core::SimpleMDArray_int32_t_O/1639
{ class_kind, STAMP_core__SimpleMDArray_int32_t_O, sizeof(core::SimpleMDArray_int32_t_O), 0, "core::SimpleMDArray_int32_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArray_float_O,core::SimpleVector_float_O,core::SimpleMDArray_O>/1643
// Stamp = core::SimpleMDArray_float_O/1647
{ class_kind, STAMP_core__SimpleMDArray_float_O, sizeof(core::SimpleMDArray_float_O), 0, "core::SimpleMDArray_float_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArray_int16_t_O,core::SimpleVector_int16_t_O,core::SimpleMDArray_O>/1651
// Stamp = core::SimpleMDArray_int16_t_O/1655
{ class_kind, STAMP_core__SimpleMDArray_int16_t_O, sizeof(core::SimpleMDArray_int16_t_O), 0, "core::SimpleMDArray_int16_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArray_size_t_O,core::SimpleVector_size_t_O,core::SimpleMDArray_O>/1659
// Stamp = core::SimpleMDArray_size_t_O/1663
{ class_kind, STAMP_core__SimpleMDArray_size_t_O, sizeof(core::SimpleMDArray_size_t_O), 0, "core::SimpleMDArray_size_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArrayCharacter_O,core::SimpleCharacterString_O,core::SimpleMDArray_O>/1667
// Stamp = core::SimpleMDArrayCharacter_O/1671
{ class_kind, STAMP_core__SimpleMDArrayCharacter_O, sizeof(core::SimpleMDArrayCharacter_O), 0, "core::SimpleMDArrayCharacter_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArray_byte2_t_O,core::SimpleVector_byte2_t_O,core::SimpleMDArray_O>/1675
// Stamp = core::SimpleMDArray_byte2_t_O/1679
{ class_kind, STAMP_core__SimpleMDArray_byte2_t_O, sizeof(core::SimpleMDArray_byte2_t_O), 0, "core::SimpleMDArray_byte2_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArray_byte16_t_O,core::SimpleVector_byte16_t_O,core::SimpleMDArray_O>/1683
// Stamp = core::SimpleMDArray_byte16_t_O/1687
{ class_kind, STAMP_core__SimpleMDArray_byte16_t_O, sizeof(core::SimpleMDArray_byte16_t_O), 0, "core::SimpleMDArray_byte16_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArrayBaseChar_O,core::SimpleBaseString_O,core::SimpleMDArray_O>/1691
// Stamp = core::SimpleMDArrayBaseChar_O/1695
{ class_kind, STAMP_core__SimpleMDArrayBaseChar_O, sizeof(core::SimpleMDArrayBaseChar_O), 0, "core::SimpleMDArrayBaseChar_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArray_byte64_t_O,core::SimpleVector_byte64_t_O,core::SimpleMDArray_O>/1699
// Stamp = core::SimpleMDArray_byte64_t_O/1703
{ class_kind, STAMP_core__SimpleMDArray_byte64_t_O, sizeof(core::SimpleMDArray_byte64_t_O), 0, "core::SimpleMDArray_byte64_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArray_double_O,core::SimpleVector_double_O,core::SimpleMDArray_O>/1707
// Stamp = core::SimpleMDArray_double_O/1711
{ class_kind, STAMP_core__SimpleMDArray_double_O, sizeof(core::SimpleMDArray_double_O), 0, "core::SimpleMDArray_double_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArrayT_O,core::SimpleVector_O,core::SimpleMDArray_O>/1715
// Stamp = core::SimpleMDArrayT_O/1719
{ class_kind, STAMP_core__SimpleMDArrayT_O, sizeof(core::SimpleMDArrayT_O), 0, "core::SimpleMDArrayT_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArray_int4_t_O,core::SimpleVector_int4_t_O,core::SimpleMDArray_O>/1723
// Stamp = core::SimpleMDArray_int4_t_O/1727
{ class_kind, STAMP_core__SimpleMDArray_int4_t_O, sizeof(core::SimpleMDArray_int4_t_O), 0, "core::SimpleMDArray_int4_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<geom::SimpleMDArrayCoordinate_O,geom::SimpleVectorCoordinate_O,core::SimpleMDArray_O>/1731
// Stamp = geom::SimpleMDArrayCoordinate_O/1735
{ class_kind, STAMP_geom__SimpleMDArrayCoordinate_O, sizeof(geom::SimpleMDArrayCoordinate_O), 0, "geom::SimpleMDArrayCoordinate_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArray_fixnum_O,core::SimpleVector_fixnum_O,core::SimpleMDArray_O>/1739
// Stamp = core::SimpleMDArray_fixnum_O/1743
{ class_kind, STAMP_core__SimpleMDArray_fixnum_O, sizeof(core::SimpleMDArray_fixnum_O), 0, "core::SimpleMDArray_fixnum_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArrayBit_O,core::SimpleBitVector_O,core::SimpleMDArray_O>/1747
// Stamp = core::SimpleMDArrayBit_O/1751
{ class_kind, STAMP_core__SimpleMDArrayBit_O, sizeof(core::SimpleMDArrayBit_O), 0, "core::SimpleMDArrayBit_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArray_byte8_t_O,core::SimpleVector_byte8_t_O,core::SimpleMDArray_O>/1755
// Stamp = core::SimpleMDArray_byte8_t_O/1759
{ class_kind, STAMP_core__SimpleMDArray_byte8_t_O, sizeof(core::SimpleMDArray_byte8_t_O), 0, "core::SimpleMDArray_byte8_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleArray<core::SimpleMDArray_int64_t_O,core::SimpleVector_int64_t_O,core::SimpleMDArray_O>/1763
// Stamp = core::SimpleMDArray_int64_t_O/1767
{ class_kind, STAMP_core__SimpleMDArray_int64_t_O, sizeof(core::SimpleMDArray_int64_t_O), 0, "core::SimpleMDArray_int64_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::ComplexVector_O/1771
{ class_kind, STAMP_core__ComplexVector_O, sizeof(core::ComplexVector_O), 0, "core::ComplexVector_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_double_O,core::SimpleVector_double_O,core::ComplexVector_O>/1775
// Stamp = core::ComplexVector_double_O/1779
{ class_kind, STAMP_core__ComplexVector_double_O, sizeof(core::ComplexVector_double_O), 0, "core::ComplexVector_double_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_int8_t_O,core::SimpleVector_int8_t_O,core::ComplexVector_O>/1783
// Stamp = core::ComplexVector_int8_t_O/1787
{ class_kind, STAMP_core__ComplexVector_int8_t_O, sizeof(core::ComplexVector_int8_t_O), 0, "core::ComplexVector_int8_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_T_O,core::SimpleVector_O,core::ComplexVector_O>/1791
// Stamp = core::ComplexVector_T_O/1795
{ class_kind, STAMP_core__ComplexVector_T_O, sizeof(core::ComplexVector_T_O), 0, "core::ComplexVector_T_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_int32_t_O,core::SimpleVector_int32_t_O,core::ComplexVector_O>/1799
// Stamp = core::ComplexVector_int32_t_O/1803
{ class_kind, STAMP_core__ComplexVector_int32_t_O, sizeof(core::ComplexVector_int32_t_O), 0, "core::ComplexVector_int32_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_byte16_t_O,core::SimpleVector_byte16_t_O,core::ComplexVector_O>/1807
// Stamp = core::ComplexVector_byte16_t_O/1811
{ class_kind, STAMP_core__ComplexVector_byte16_t_O, sizeof(core::ComplexVector_byte16_t_O), 0, "core::ComplexVector_byte16_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<geom::ComplexVectorCoordinate_O,geom::SimpleVectorCoordinate_O,core::ComplexVector_O>/1815
// Stamp = geom::ComplexVectorCoordinate_O/1819
{ class_kind, STAMP_geom__ComplexVectorCoordinate_O, sizeof(geom::ComplexVectorCoordinate_O), 0, "geom::ComplexVectorCoordinate_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_byte4_t_O,core::SimpleVector_byte4_t_O,core::ComplexVector_O>/1823
// Stamp = core::ComplexVector_byte4_t_O/1827
{ class_kind, STAMP_core__ComplexVector_byte4_t_O, sizeof(core::ComplexVector_byte4_t_O), 0, "core::ComplexVector_byte4_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_byte64_t_O,core::SimpleVector_byte64_t_O,core::ComplexVector_O>/1831
// Stamp = core::ComplexVector_byte64_t_O/1835
{ class_kind, STAMP_core__ComplexVector_byte64_t_O, sizeof(core::ComplexVector_byte64_t_O), 0, "core::ComplexVector_byte64_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_int2_t_O,core::SimpleVector_int2_t_O,core::ComplexVector_O>/1839
// Stamp = core::ComplexVector_int2_t_O/1843
{ class_kind, STAMP_core__ComplexVector_int2_t_O, sizeof(core::ComplexVector_int2_t_O), 0, "core::ComplexVector_int2_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_float_O,core::SimpleVector_float_O,core::ComplexVector_O>/1847
// Stamp = core::ComplexVector_float_O/1851
{ class_kind, STAMP_core__ComplexVector_float_O, sizeof(core::ComplexVector_float_O), 0, "core::ComplexVector_float_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_int16_t_O,core::SimpleVector_int16_t_O,core::ComplexVector_O>/1855
// Stamp = core::ComplexVector_int16_t_O/1859
{ class_kind, STAMP_core__ComplexVector_int16_t_O, sizeof(core::ComplexVector_int16_t_O), 0, "core::ComplexVector_int16_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_int4_t_O,core::SimpleVector_int4_t_O,core::ComplexVector_O>/1863
// Stamp = core::ComplexVector_int4_t_O/1867
{ class_kind, STAMP_core__ComplexVector_int4_t_O, sizeof(core::ComplexVector_int4_t_O), 0, "core::ComplexVector_int4_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_size_t_O,core::SimpleVector_size_t_O,core::ComplexVector_O>/1871
// Stamp = core::ComplexVector_size_t_O/1875
{ class_kind, STAMP_core__ComplexVector_size_t_O, sizeof(core::ComplexVector_size_t_O), 0, "core::ComplexVector_size_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_byte2_t_O,core::SimpleVector_byte2_t_O,core::ComplexVector_O>/1879
// Stamp = core::ComplexVector_byte2_t_O/1883
{ class_kind, STAMP_core__ComplexVector_byte2_t_O, sizeof(core::ComplexVector_byte2_t_O), 0, "core::ComplexVector_byte2_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_byte8_t_O,core::SimpleVector_byte8_t_O,core::ComplexVector_O>/1887
// Stamp = core::ComplexVector_byte8_t_O/1891
{ class_kind, STAMP_core__ComplexVector_byte8_t_O, sizeof(core::ComplexVector_byte8_t_O), 0, "core::ComplexVector_byte8_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_byte32_t_O,core::SimpleVector_byte32_t_O,core::ComplexVector_O>/1895
// Stamp = core::ComplexVector_byte32_t_O/1899
{ class_kind, STAMP_core__ComplexVector_byte32_t_O, sizeof(core::ComplexVector_byte32_t_O), 0, "core::ComplexVector_byte32_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::BitVectorNs_O,core::SimpleBitVector_O,core::ComplexVector_O>/1903
// Stamp = core::BitVectorNs_O/1907
{ class_kind, STAMP_core__BitVectorNs_O, sizeof(core::BitVectorNs_O), 0, "core::BitVectorNs_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::StrNs_O/1911
{ class_kind, STAMP_core__StrNs_O, sizeof(core::StrNs_O), 0, "core::StrNs_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::Str8Ns_O,core::SimpleBaseString_O,core::StrNs_O>/1915
// Stamp = core::Str8Ns_O/1919
{ class_kind, STAMP_core__Str8Ns_O, sizeof(core::Str8Ns_O), 0, "core::Str8Ns_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::StrWNs_O,core::SimpleCharacterString_O,core::StrNs_O>/1923
// Stamp = core::StrWNs_O/1927
{ class_kind, STAMP_core__StrWNs_O, sizeof(core::StrWNs_O), 0, "core::StrWNs_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_fixnum_O,core::SimpleVector_fixnum_O,core::ComplexVector_O>/1931
// Stamp = core::ComplexVector_fixnum_O/1935
{ class_kind, STAMP_core__ComplexVector_fixnum_O, sizeof(core::ComplexVector_fixnum_O), 0, "core::ComplexVector_fixnum_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Vector<core::ComplexVector_int64_t_O,core::SimpleVector_int64_t_O,core::ComplexVector_O>/1939
// Stamp = core::ComplexVector_int64_t_O/1943
{ class_kind, STAMP_core__ComplexVector_int64_t_O, sizeof(core::ComplexVector_int64_t_O), 0, "core::ComplexVector_int64_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArray_int64_t_O,core::SimpleMDArray_int64_t_O,core::SimpleVector_int64_t_O,core::MDArray_O>/1947
// Stamp = core::MDArray_int64_t_O/1951
{ class_kind, STAMP_core__MDArray_int64_t_O, sizeof(core::MDArray_int64_t_O), 0, "core::MDArray_int64_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArray_byte32_t_O,core::SimpleMDArray_byte32_t_O,core::SimpleVector_byte32_t_O,core::MDArray_O>/1955
// Stamp = core::MDArray_byte32_t_O/1959
{ class_kind, STAMP_core__MDArray_byte32_t_O, sizeof(core::MDArray_byte32_t_O), 0, "core::MDArray_byte32_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArray_byte2_t_O,core::SimpleMDArray_byte2_t_O,core::SimpleVector_byte2_t_O,core::MDArray_O>/1963
// Stamp = core::MDArray_byte2_t_O/1967
{ class_kind, STAMP_core__MDArray_byte2_t_O, sizeof(core::MDArray_byte2_t_O), 0, "core::MDArray_byte2_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArrayCharacter_O,core::SimpleMDArrayCharacter_O,core::SimpleCharacterString_O,core::MDArray_O>/1971
// Stamp = core::MDArrayCharacter_O/1975
{ class_kind, STAMP_core__MDArrayCharacter_O, sizeof(core::MDArrayCharacter_O), 0, "core::MDArrayCharacter_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArrayBit_O,core::SimpleMDArrayBit_O,core::SimpleBitVector_O,core::MDArray_O>/1979
// Stamp = core::MDArrayBit_O/1983
{ class_kind, STAMP_core__MDArrayBit_O, sizeof(core::MDArrayBit_O), 0, "core::MDArrayBit_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArray_byte16_t_O,core::SimpleMDArray_byte16_t_O,core::SimpleVector_byte16_t_O,core::MDArray_O>/1987
// Stamp = core::MDArray_byte16_t_O/1991
{ class_kind, STAMP_core__MDArray_byte16_t_O, sizeof(core::MDArray_byte16_t_O), 0, "core::MDArray_byte16_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArray_int4_t_O,core::SimpleMDArray_int4_t_O,core::SimpleVector_int4_t_O,core::MDArray_O>/1995
// Stamp = core::MDArray_int4_t_O/1999
{ class_kind, STAMP_core__MDArray_int4_t_O, sizeof(core::MDArray_int4_t_O), 0, "core::MDArray_int4_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_Array<core::MDArray_double_O,core::SimpleMDArray_double_O,core::SimpleVector_double_O,core::MDArray_O>/2003
// Stamp = core::MDArray_double_O/2007
{ class_kind, STAMP_core__MDArray_double_O, sizeof(core::MDArray_double_O), 0, "core::MDArray_double_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_FillPointerOrLengthOrDummy), "_FillPointerOrLengthOrDummy" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_ArrayTotalSize), "_ArrayTotalSize" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_Data), "_Data" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_DisplacedIndexOffset), "_DisplacedIndexOffset" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_Flags._Flags), "_Flags._Flags" }, // public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_Dimensions._Data), "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_Dimensions._Length), offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_Dimensions._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::AbstractSimpleVector_O/2011
{ class_kind, STAMP_core__AbstractSimpleVector_O, sizeof(core::AbstractSimpleVector_O), 0, "core::AbstractSimpleVector_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::AbstractSimpleVector_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// Stamp = core::template_SimpleVector<core::SimpleVector_byte32_t_O,unsigned int,core::AbstractSimpleVector_O>/2015
// Stamp = core::SimpleVector_byte32_t_O/2019
{ class_kind, STAMP_core__SimpleVector_byte32_t_O, sizeof(core::SimpleVector_byte32_t_O), 0, "core::SimpleVector_byte32_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte32_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte32_t_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte32_t_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte32_t_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")>
{    variable_field, ctype_unsigned_int, sizeof(unsigned int), 0, "only" },
// Stamp = core::template_SimpleVector<core::SimpleVector_size_t_O,unsigned long,core::AbstractSimpleVector_O>/2023
// Stamp = core::SimpleVector_size_t_O/2027
{ class_kind, STAMP_core__SimpleVector_size_t_O, sizeof(core::SimpleVector_size_t_O), 0, "core::SimpleVector_size_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_size_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_size_t_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_size_t_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_size_t_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleVector<core::SimpleVector_double_O,double,core::AbstractSimpleVector_O>/2031
// Stamp = core::SimpleVector_double_O/2035
{ class_kind, STAMP_core__SimpleVector_double_O, sizeof(core::SimpleVector_double_O), 0, "core::SimpleVector_double_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_double_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_double_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(double), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_double_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_double_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")>
{    variable_field, ctype_double, sizeof(double), 0, "only" },
// Stamp = core::template_SimpleBitUnitVector<core::SimpleVector_int2_t_O,2,1>/2039
// Stamp = core::SimpleVector_int2_t_O/2043
{ class_kind, STAMP_core__SimpleVector_int2_t_O, sizeof(core::SimpleVector_int2_t_O), 0, "core::SimpleVector_int2_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int2_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_bit_array0, 2, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int2_t_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int2_t_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int2_t_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleVector<core::SimpleVector_int64_t_O,long,core::AbstractSimpleVector_O>/2047
// Stamp = core::SimpleVector_int64_t_O/2051
{ class_kind, STAMP_core__SimpleVector_int64_t_O, sizeof(core::SimpleVector_int64_t_O), 0, "core::SimpleVector_int64_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int64_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int64_t_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int64_t_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int64_t_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long")>
{    variable_field, ctype_long, sizeof(long), 0, "only" },
// Stamp = core::template_SimpleVector<core::SimpleVector_int8_t_O,signed char,core::AbstractSimpleVector_O>/2055
// Stamp = core::SimpleVector_int8_t_O/2059
{ class_kind, STAMP_core__SimpleVector_int8_t_O, sizeof(core::SimpleVector_int8_t_O), 0, "core::SimpleVector_int8_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int8_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int8_t_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(signed char), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int8_t_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int8_t_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "signed char") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "signed char")>
{    variable_field, ctype_signed_char, sizeof(signed char), 0, "only" },
// Stamp = core::template_SimpleBitUnitVector<core::SimpleVector_byte4_t_O,4,0>/2063
// Stamp = core::SimpleVector_byte4_t_O/2067
{ class_kind, STAMP_core__SimpleVector_byte4_t_O, sizeof(core::SimpleVector_byte4_t_O), 0, "core::SimpleVector_byte4_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte4_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_bit_array0, 4, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte4_t_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte4_t_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte4_t_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleVector<geom::SimpleVectorCoordinate_O,Vector3,core::AbstractSimpleVector_O>/2071
// Stamp = geom::SimpleVectorCoordinate_O/2075
{ class_kind, STAMP_geom__SimpleVectorCoordinate_O, sizeof(geom::SimpleVectorCoordinate_O), 0, "geom::SimpleVectorCoordinate_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(geom::SimpleVectorCoordinate_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(geom::SimpleVectorCoordinate_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(Vector3), offsetof(SAFE_TYPE_MACRO(geom::SimpleVectorCoordinate_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(geom::SimpleVectorCoordinate_O),_Data._Length), NULL },
// Stamp = core::SimpleString_O/2079
{ class_kind, STAMP_core__SimpleString_O, sizeof(core::SimpleString_O), 0, "core::SimpleString_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleString_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
// Stamp = core::template_SimpleVector<core::SimpleBaseString_O,unsigned char,core::SimpleString_O>/2083
// Stamp = core::SimpleBaseString_O/2087
{ class_kind, STAMP_core__SimpleBaseString_O, sizeof(core::SimpleBaseString_O), 0, "core::SimpleBaseString_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleBaseString_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleBaseString_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(unsigned char), offsetof(SAFE_TYPE_MACRO(core::SimpleBaseString_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleBaseString_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char")>
{    variable_field, ctype_unsigned_char, sizeof(unsigned char), 0, "only" },
// Stamp = core::template_SimpleVector<core::SimpleCharacterString_O,int,core::SimpleString_O>/2091
// Stamp = core::SimpleCharacterString_O/2095
{ class_kind, STAMP_core__SimpleCharacterString_O, sizeof(core::SimpleCharacterString_O), 0, "core::SimpleCharacterString_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleCharacterString_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleCharacterString_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::SimpleCharacterString_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleCharacterString_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")>
{    variable_field, ctype_int, sizeof(int), 0, "only" },
// Stamp = core::template_SimpleVector<core::SimpleVector_int16_t_O,short,core::AbstractSimpleVector_O>/2099
// Stamp = core::SimpleVector_int16_t_O/2103
{ class_kind, STAMP_core__SimpleVector_int16_t_O, sizeof(core::SimpleVector_int16_t_O), 0, "core::SimpleVector_int16_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int16_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int16_t_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(short), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int16_t_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int16_t_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "short") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "short")>
{    variable_field, ctype_short, sizeof(short), 0, "only" },
// Stamp = core::template_SimpleVector<core::SimpleVector_byte16_t_O,unsigned short,core::AbstractSimpleVector_O>/2107
// Stamp = core::SimpleVector_byte16_t_O/2111
{ class_kind, STAMP_core__SimpleVector_byte16_t_O, sizeof(core::SimpleVector_byte16_t_O), 0, "core::SimpleVector_byte16_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte16_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte16_t_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(unsigned short), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte16_t_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte16_t_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned short") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned short")>
{    variable_field, ctype_unsigned_short, sizeof(unsigned short), 0, "only" },
// Stamp = core::template_SimpleBitUnitVector<core::SimpleBitVector_O,1,0>/2115
// Stamp = core::SimpleBitVector_O/2119
{ class_kind, STAMP_core__SimpleBitVector_O, sizeof(core::SimpleBitVector_O), 0, "core::SimpleBitVector_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleBitVector_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_bit_array0, 1, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleBitVector_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleBitVector_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleBitVector_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleBitUnitVector<core::SimpleVector_int4_t_O,4,1>/2123
// Stamp = core::SimpleVector_int4_t_O/2127
{ class_kind, STAMP_core__SimpleVector_int4_t_O, sizeof(core::SimpleVector_int4_t_O), 0, "core::SimpleVector_int4_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int4_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_bit_array0, 4, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int4_t_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int4_t_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int4_t_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleVector<core::SimpleVector_byte64_t_O,unsigned long,core::AbstractSimpleVector_O>/2131
// Stamp = core::SimpleVector_byte64_t_O/2135
{ class_kind, STAMP_core__SimpleVector_byte64_t_O, sizeof(core::SimpleVector_byte64_t_O), 0, "core::SimpleVector_byte64_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte64_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte64_t_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte64_t_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte64_t_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleVector<core::SimpleVector_fixnum_O,long,core::AbstractSimpleVector_O>/2139
// Stamp = core::SimpleVector_fixnum_O/2143
{ class_kind, STAMP_core__SimpleVector_fixnum_O, sizeof(core::SimpleVector_fixnum_O), 0, "core::SimpleVector_fixnum_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_fixnum_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_fixnum_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_fixnum_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_fixnum_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long")>
{    variable_field, ctype_long, sizeof(long), 0, "only" },
// Stamp = core::template_SimpleVector<core::SimpleVector_float_O,float,core::AbstractSimpleVector_O>/2147
// Stamp = core::SimpleVector_float_O/2151
{ class_kind, STAMP_core__SimpleVector_float_O, sizeof(core::SimpleVector_float_O), 0, "core::SimpleVector_float_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_float_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_float_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(float), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_float_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_float_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")>
{    variable_field, ctype_float, sizeof(float), 0, "only" },
// Stamp = core::template_SimpleVector<core::SimpleVector_O,gctools::smart_ptr<core::T_O>,core::AbstractSimpleVector_O>/2155
// Stamp = core::SimpleVector_O/2159
{ class_kind, STAMP_core__SimpleVector_O, sizeof(core::SimpleVector_O), 0, "core::SimpleVector_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_O),_Data._Length), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), 0, "only" },
// Stamp = core::template_SimpleVector<core::SimpleVector_byte8_t_O,unsigned char,core::AbstractSimpleVector_O>/2163
// Stamp = core::SimpleVector_byte8_t_O/2167
{ class_kind, STAMP_core__SimpleVector_byte8_t_O, sizeof(core::SimpleVector_byte8_t_O), 0, "core::SimpleVector_byte8_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte8_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte8_t_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(unsigned char), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte8_t_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte8_t_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char")>
{    variable_field, ctype_unsigned_char, sizeof(unsigned char), 0, "only" },
// Stamp = core::template_SimpleBitUnitVector<core::SimpleVector_byte2_t_O,2,0>/2171
// Stamp = core::SimpleVector_byte2_t_O/2175
{ class_kind, STAMP_core__SimpleVector_byte2_t_O, sizeof(core::SimpleVector_byte2_t_O), 0, "core::SimpleVector_byte2_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte2_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_bit_array0, 2, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte2_t_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte2_t_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte2_t_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = core::template_SimpleVector<core::SimpleVector_int32_t_O,int,core::AbstractSimpleVector_O>/2179
// Stamp = core::SimpleVector_int32_t_O/2183
{ class_kind, STAMP_core__SimpleVector_int32_t_O, sizeof(core::SimpleVector_int32_t_O), 0, "core::SimpleVector_int32_t_O" },
// not-exposing {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int32_t_O),_Length), "_Length" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int32_t_O),_Data._Data), "_Data._Data" },
 {  variable_capacity, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int32_t_O),_Data._Length), offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int32_t_O),_Data._Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")>
{    variable_field, ctype_int, sizeof(int), 0, "only" },
// Stamp = core::Character_dummy_O/2187
{ class_kind, STAMP_core__Character_dummy_O, sizeof(core::Character_dummy_O), 0, "core::Character_dummy_O" },
// Stamp = llvmo::DataLayout_O/2191
{ class_kind, STAMP_llvmo__DataLayout_O, sizeof(llvmo::DataLayout_O), 0, "llvmo::DataLayout_O" },
// Stamp = core::LoadTimeValues_O/2195
{ class_kind, STAMP_core__LoadTimeValues_O, sizeof(core::LoadTimeValues_O), 0, "core::LoadTimeValues_O" },
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>>), offsetof(SAFE_TYPE_MACRO(core::LoadTimeValues_O),_Objects._Vector._Contents), "_Objects._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = core::Readtable_O/2199
{ class_kind, STAMP_core__Readtable_O, sizeof(core::Readtable_O), 0, "core::Readtable_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(core::Readtable_O),Case_), "Case_" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTable_O>), offsetof(SAFE_TYPE_MACRO(core::Readtable_O),SyntaxTypes_), "SyntaxTypes_" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTable_O>), offsetof(SAFE_TYPE_MACRO(core::Readtable_O),MacroCharacters_), "MacroCharacters_" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTable_O>), offsetof(SAFE_TYPE_MACRO(core::Readtable_O),DispatchMacroCharacters_), "DispatchMacroCharacters_" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::PosixTime_O/2203
{ class_kind, STAMP_core__PosixTime_O, sizeof(core::PosixTime_O), 0, "core::PosixTime_O" },
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::PosixTime_O),_Time.time_.time_count_.value_), "_Time.time_.time_count_.value_" }, // public: (NIL NIL NIL NIL) fixable: NIL good-name: T
// Stamp = llvmo::StructLayout_O/2207
{ class_kind, STAMP_llvmo__StructLayout_O, sizeof(llvmo::StructLayout_O), 0, "llvmo::StructLayout_O" },
// Stamp = core::ExternalObject_O/2211
{ class_kind, STAMP_core__ExternalObject_O, sizeof(core::ExternalObject_O), 0, "core::ExternalObject_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(core::ExternalObject_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::Pass_O/2215
{ class_kind, STAMP_llvmo__Pass_O, sizeof(llvmo::Pass_O), 0, "llvmo::Pass_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::Pass_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::ModulePass_O/2219
{ class_kind, STAMP_llvmo__ModulePass_O, sizeof(llvmo::ModulePass_O), 0, "llvmo::ModulePass_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ModulePass_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::ImmutablePass_O/2223
{ class_kind, STAMP_llvmo__ImmutablePass_O, sizeof(llvmo::ImmutablePass_O), 0, "llvmo::ImmutablePass_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ImmutablePass_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::TargetLibraryInfoWrapperPass_O/2227
{ class_kind, STAMP_llvmo__TargetLibraryInfoWrapperPass_O, sizeof(llvmo::TargetLibraryInfoWrapperPass_O), 0, "llvmo::TargetLibraryInfoWrapperPass_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::TargetLibraryInfoWrapperPass_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::FunctionPass_O/2231
{ class_kind, STAMP_llvmo__FunctionPass_O, sizeof(llvmo::FunctionPass_O), 0, "llvmo::FunctionPass_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::FunctionPass_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::MCSubtargetInfo_O/2235
{ class_kind, STAMP_llvmo__MCSubtargetInfo_O, sizeof(llvmo::MCSubtargetInfo_O), 0, "llvmo::MCSubtargetInfo_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::MCSubtargetInfo_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::TargetSubtargetInfo_O/2239
{ class_kind, STAMP_llvmo__TargetSubtargetInfo_O, sizeof(llvmo::TargetSubtargetInfo_O), 0, "llvmo::TargetSubtargetInfo_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::TargetSubtargetInfo_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::JITDylib_O/2243
{ class_kind, STAMP_llvmo__JITDylib_O, sizeof(llvmo::JITDylib_O), 0, "llvmo::JITDylib_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::JITDylib_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::IRBuilderBase_O/2247
{ class_kind, STAMP_llvmo__IRBuilderBase_O, sizeof(llvmo::IRBuilderBase_O), 0, "llvmo::IRBuilderBase_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::IRBuilderBase_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(llvmo::IRBuilderBase_O),_CurrentDebugLocationSet), "_CurrentDebugLocationSet" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = llvmo::IRBuilder_O/2251
{ class_kind, STAMP_llvmo__IRBuilder_O, sizeof(llvmo::IRBuilder_O), 0, "llvmo::IRBuilder_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::IRBuilder_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(llvmo::IRBuilder_O),_CurrentDebugLocationSet), "_CurrentDebugLocationSet" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = llvmo::APInt_O/2255
{ class_kind, STAMP_llvmo__APInt_O, sizeof(llvmo::APInt_O), 0, "llvmo::APInt_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::APInt_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(llvmo::APInt_O),_value.U.VAL), "_value.U.VAL" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(llvmo::APInt_O),_value.BitWidth), "_value.BitWidth" }, // public: (T NIL) fixable: NIL good-name: T
// Stamp = llvmo::DIBuilder_O/2259
{ class_kind, STAMP_llvmo__DIBuilder_O, sizeof(llvmo::DIBuilder_O), 0, "llvmo::DIBuilder_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DIBuilder_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::EngineBuilder_O/2263
{ class_kind, STAMP_llvmo__EngineBuilder_O, sizeof(llvmo::EngineBuilder_O), 0, "llvmo::EngineBuilder_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::EngineBuilder_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(llvmo::EngineBuilder_O),_ErrorStr._M_string_length), "_ErrorStr._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(llvmo::EngineBuilder_O),_ErrorStr.NO-NAME._M_allocated_capacity), "_ErrorStr.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// Stamp = llvmo::PassManagerBase_O/2267
{ class_kind, STAMP_llvmo__PassManagerBase_O, sizeof(llvmo::PassManagerBase_O), 0, "llvmo::PassManagerBase_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::PassManagerBase_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::PassManager_O/2271
{ class_kind, STAMP_llvmo__PassManager_O, sizeof(llvmo::PassManager_O), 0, "llvmo::PassManager_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::PassManager_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::FunctionPassManager_O/2275
{ class_kind, STAMP_llvmo__FunctionPassManager_O, sizeof(llvmo::FunctionPassManager_O), 0, "llvmo::FunctionPassManager_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::FunctionPassManager_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::Value_O/2279
{ class_kind, STAMP_llvmo__Value_O, sizeof(llvmo::Value_O), 0, "llvmo::Value_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::Value_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::User_O/2283
{ class_kind, STAMP_llvmo__User_O, sizeof(llvmo::User_O), 0, "llvmo::User_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::User_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::Instruction_O/2287
{ class_kind, STAMP_llvmo__Instruction_O, sizeof(llvmo::Instruction_O), 0, "llvmo::Instruction_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::Instruction_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::StoreInst_O/2291
{ class_kind, STAMP_llvmo__StoreInst_O, sizeof(llvmo::StoreInst_O), 0, "llvmo::StoreInst_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::StoreInst_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::UnreachableInst_O/2295
{ class_kind, STAMP_llvmo__UnreachableInst_O, sizeof(llvmo::UnreachableInst_O), 0, "llvmo::UnreachableInst_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::UnreachableInst_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::ResumeInst_O/2299
{ class_kind, STAMP_llvmo__ResumeInst_O, sizeof(llvmo::ResumeInst_O), 0, "llvmo::ResumeInst_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ResumeInst_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::AtomicCmpXchgInst_O/2303
{ class_kind, STAMP_llvmo__AtomicCmpXchgInst_O, sizeof(llvmo::AtomicCmpXchgInst_O), 0, "llvmo::AtomicCmpXchgInst_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::AtomicCmpXchgInst_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::FenceInst_O/2307
{ class_kind, STAMP_llvmo__FenceInst_O, sizeof(llvmo::FenceInst_O), 0, "llvmo::FenceInst_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::FenceInst_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::CallBase_O/2311
{ class_kind, STAMP_llvmo__CallBase_O, sizeof(llvmo::CallBase_O), 0, "llvmo::CallBase_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::CallBase_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::CallInst_O/2315
{ class_kind, STAMP_llvmo__CallInst_O, sizeof(llvmo::CallInst_O), 0, "llvmo::CallInst_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::CallInst_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::InvokeInst_O/2319
{ class_kind, STAMP_llvmo__InvokeInst_O, sizeof(llvmo::InvokeInst_O), 0, "llvmo::InvokeInst_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::InvokeInst_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::BranchInst_O/2323
{ class_kind, STAMP_llvmo__BranchInst_O, sizeof(llvmo::BranchInst_O), 0, "llvmo::BranchInst_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::BranchInst_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::UnaryInstruction_O/2327
{ class_kind, STAMP_llvmo__UnaryInstruction_O, sizeof(llvmo::UnaryInstruction_O), 0, "llvmo::UnaryInstruction_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::UnaryInstruction_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::VAArgInst_O/2331
{ class_kind, STAMP_llvmo__VAArgInst_O, sizeof(llvmo::VAArgInst_O), 0, "llvmo::VAArgInst_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::VAArgInst_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::AllocaInst_O/2335
{ class_kind, STAMP_llvmo__AllocaInst_O, sizeof(llvmo::AllocaInst_O), 0, "llvmo::AllocaInst_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::AllocaInst_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::LoadInst_O/2339
{ class_kind, STAMP_llvmo__LoadInst_O, sizeof(llvmo::LoadInst_O), 0, "llvmo::LoadInst_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::LoadInst_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::SwitchInst_O/2343
{ class_kind, STAMP_llvmo__SwitchInst_O, sizeof(llvmo::SwitchInst_O), 0, "llvmo::SwitchInst_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::SwitchInst_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::AtomicRMWInst_O/2347
{ class_kind, STAMP_llvmo__AtomicRMWInst_O, sizeof(llvmo::AtomicRMWInst_O), 0, "llvmo::AtomicRMWInst_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::AtomicRMWInst_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::LandingPadInst_O/2351
{ class_kind, STAMP_llvmo__LandingPadInst_O, sizeof(llvmo::LandingPadInst_O), 0, "llvmo::LandingPadInst_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::LandingPadInst_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::ReturnInst_O/2355
{ class_kind, STAMP_llvmo__ReturnInst_O, sizeof(llvmo::ReturnInst_O), 0, "llvmo::ReturnInst_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ReturnInst_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::PHINode_O/2359
{ class_kind, STAMP_llvmo__PHINode_O, sizeof(llvmo::PHINode_O), 0, "llvmo::PHINode_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::PHINode_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::IndirectBrInst_O/2363
{ class_kind, STAMP_llvmo__IndirectBrInst_O, sizeof(llvmo::IndirectBrInst_O), 0, "llvmo::IndirectBrInst_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::IndirectBrInst_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::Constant_O/2367
{ class_kind, STAMP_llvmo__Constant_O, sizeof(llvmo::Constant_O), 0, "llvmo::Constant_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::Constant_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::GlobalValue_O/2371
{ class_kind, STAMP_llvmo__GlobalValue_O, sizeof(llvmo::GlobalValue_O), 0, "llvmo::GlobalValue_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::GlobalValue_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(llvmo::GlobalValue_O),_PtrIsOwned), "_PtrIsOwned" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = llvmo::Function_O/2375
{ class_kind, STAMP_llvmo__Function_O, sizeof(llvmo::Function_O), 0, "llvmo::Function_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::Function_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(llvmo::Function_O),_PtrIsOwned), "_PtrIsOwned" }, // public: (NIL) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::LoadTimeValues_O>), offsetof(SAFE_TYPE_MACRO(llvmo::Function_O),_RunTimeValues), "_RunTimeValues" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::GlobalVariable_O/2379
{ class_kind, STAMP_llvmo__GlobalVariable_O, sizeof(llvmo::GlobalVariable_O), 0, "llvmo::GlobalVariable_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::GlobalVariable_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(llvmo::GlobalVariable_O),_PtrIsOwned), "_PtrIsOwned" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = llvmo::BlockAddress_O/2383
{ class_kind, STAMP_llvmo__BlockAddress_O, sizeof(llvmo::BlockAddress_O), 0, "llvmo::BlockAddress_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::BlockAddress_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::ConstantStruct_O/2387
{ class_kind, STAMP_llvmo__ConstantStruct_O, sizeof(llvmo::ConstantStruct_O), 0, "llvmo::ConstantStruct_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ConstantStruct_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::ConstantInt_O/2391
{ class_kind, STAMP_llvmo__ConstantInt_O, sizeof(llvmo::ConstantInt_O), 0, "llvmo::ConstantInt_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ConstantInt_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::ConstantFP_O/2395
{ class_kind, STAMP_llvmo__ConstantFP_O, sizeof(llvmo::ConstantFP_O), 0, "llvmo::ConstantFP_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ConstantFP_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::ConstantPointerNull_O/2399
{ class_kind, STAMP_llvmo__ConstantPointerNull_O, sizeof(llvmo::ConstantPointerNull_O), 0, "llvmo::ConstantPointerNull_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ConstantPointerNull_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::ConstantDataSequential_O/2403
{ class_kind, STAMP_llvmo__ConstantDataSequential_O, sizeof(llvmo::ConstantDataSequential_O), 0, "llvmo::ConstantDataSequential_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ConstantDataSequential_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::ConstantDataArray_O/2407
{ class_kind, STAMP_llvmo__ConstantDataArray_O, sizeof(llvmo::ConstantDataArray_O), 0, "llvmo::ConstantDataArray_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ConstantDataArray_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::ConstantExpr_O/2411
{ class_kind, STAMP_llvmo__ConstantExpr_O, sizeof(llvmo::ConstantExpr_O), 0, "llvmo::ConstantExpr_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ConstantExpr_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::UndefValue_O/2415
{ class_kind, STAMP_llvmo__UndefValue_O, sizeof(llvmo::UndefValue_O), 0, "llvmo::UndefValue_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::UndefValue_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::ConstantArray_O/2419
{ class_kind, STAMP_llvmo__ConstantArray_O, sizeof(llvmo::ConstantArray_O), 0, "llvmo::ConstantArray_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ConstantArray_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::Argument_O/2423
{ class_kind, STAMP_llvmo__Argument_O, sizeof(llvmo::Argument_O), 0, "llvmo::Argument_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::Argument_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::BasicBlock_O/2427
{ class_kind, STAMP_llvmo__BasicBlock_O, sizeof(llvmo::BasicBlock_O), 0, "llvmo::BasicBlock_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::BasicBlock_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::MetadataAsValue_O/2431
{ class_kind, STAMP_llvmo__MetadataAsValue_O, sizeof(llvmo::MetadataAsValue_O), 0, "llvmo::MetadataAsValue_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::MetadataAsValue_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::ThreadSafeContext_O/2435
{ class_kind, STAMP_llvmo__ThreadSafeContext_O, sizeof(llvmo::ThreadSafeContext_O), 0, "llvmo::ThreadSafeContext_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ThreadSafeContext_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::TargetMachine_O/2439
{ class_kind, STAMP_llvmo__TargetMachine_O, sizeof(llvmo::TargetMachine_O), 0, "llvmo::TargetMachine_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::TargetMachine_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::LLVMTargetMachine_O/2443
{ class_kind, STAMP_llvmo__LLVMTargetMachine_O, sizeof(llvmo::LLVMTargetMachine_O), 0, "llvmo::LLVMTargetMachine_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::LLVMTargetMachine_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::Triple_O/2447
{ class_kind, STAMP_llvmo__Triple_O, sizeof(llvmo::Triple_O), 0, "llvmo::Triple_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::Triple_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::LLVMContext_O/2451
{ class_kind, STAMP_llvmo__LLVMContext_O, sizeof(llvmo::LLVMContext_O), 0, "llvmo::LLVMContext_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::LLVMContext_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::PassManagerBuilder_O/2455
{ class_kind, STAMP_llvmo__PassManagerBuilder_O, sizeof(llvmo::PassManagerBuilder_O), 0, "llvmo::PassManagerBuilder_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::PassManagerBuilder_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(llvmo::PassManagerBuilder_O),_ErrorStr._M_string_length), "_ErrorStr._M_string_length" }, // public: (NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(llvmo::PassManagerBuilder_O),_ErrorStr.NO-NAME._M_allocated_capacity), "_ErrorStr.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL T) fixable: NIL good-name: T
// Stamp = llvmo::ExecutionEngine_O/2459
{ class_kind, STAMP_llvmo__ExecutionEngine_O, sizeof(llvmo::ExecutionEngine_O), 0, "llvmo::ExecutionEngine_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ExecutionEngine_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEqual_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ExecutionEngine_O),_DependentModules), "_DependentModules" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::Type_O/2463
{ class_kind, STAMP_llvmo__Type_O, sizeof(llvmo::Type_O), 0, "llvmo::Type_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::Type_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::FunctionType_O/2467
{ class_kind, STAMP_llvmo__FunctionType_O, sizeof(llvmo::FunctionType_O), 0, "llvmo::FunctionType_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::FunctionType_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::IntegerType_O/2471
{ class_kind, STAMP_llvmo__IntegerType_O, sizeof(llvmo::IntegerType_O), 0, "llvmo::IntegerType_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::IntegerType_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::CompositeType_O/2475
{ class_kind, STAMP_llvmo__CompositeType_O, sizeof(llvmo::CompositeType_O), 0, "llvmo::CompositeType_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::CompositeType_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::SequentialType_O/2479
{ class_kind, STAMP_llvmo__SequentialType_O, sizeof(llvmo::SequentialType_O), 0, "llvmo::SequentialType_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::SequentialType_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::PointerType_O/2483
{ class_kind, STAMP_llvmo__PointerType_O, sizeof(llvmo::PointerType_O), 0, "llvmo::PointerType_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::PointerType_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::ArrayType_O/2487
{ class_kind, STAMP_llvmo__ArrayType_O, sizeof(llvmo::ArrayType_O), 0, "llvmo::ArrayType_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ArrayType_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::VectorType_O/2491
{ class_kind, STAMP_llvmo__VectorType_O, sizeof(llvmo::VectorType_O), 0, "llvmo::VectorType_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::VectorType_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::StructType_O/2495
{ class_kind, STAMP_llvmo__StructType_O, sizeof(llvmo::StructType_O), 0, "llvmo::StructType_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::StructType_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::TargetPassConfig_O/2499
{ class_kind, STAMP_llvmo__TargetPassConfig_O, sizeof(llvmo::TargetPassConfig_O), 0, "llvmo::TargetPassConfig_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::TargetPassConfig_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::APFloat_O/2503
{ class_kind, STAMP_llvmo__APFloat_O, sizeof(llvmo::APFloat_O), 0, "llvmo::APFloat_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::APFloat_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(llvmo::APFloat_O),_value.U.IEEE.significand.part), "_value.U.IEEE.significand.part" }, // public: (T NIL T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_short, sizeof(short), offsetof(SAFE_TYPE_MACRO(llvmo::APFloat_O),_value.U.IEEE.exponent), "_value.U.IEEE.exponent" }, // public: (T NIL T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(llvmo::APFloat_O),_value.U.IEEE.sign), "_value.U.IEEE.sign" }, // public: (T NIL T NIL) fixable: NIL good-name: T
// Stamp = llvmo::Metadata_O/2507
{ class_kind, STAMP_llvmo__Metadata_O, sizeof(llvmo::Metadata_O), 0, "llvmo::Metadata_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::Metadata_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::MDNode_O/2511
{ class_kind, STAMP_llvmo__MDNode_O, sizeof(llvmo::MDNode_O), 0, "llvmo::MDNode_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::MDNode_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DILocation_O/2515
{ class_kind, STAMP_llvmo__DILocation_O, sizeof(llvmo::DILocation_O), 0, "llvmo::DILocation_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DILocation_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DINode_O/2519
{ class_kind, STAMP_llvmo__DINode_O, sizeof(llvmo::DINode_O), 0, "llvmo::DINode_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DINode_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DIVariable_O/2523
{ class_kind, STAMP_llvmo__DIVariable_O, sizeof(llvmo::DIVariable_O), 0, "llvmo::DIVariable_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DIVariable_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DILocalVariable_O/2527
{ class_kind, STAMP_llvmo__DILocalVariable_O, sizeof(llvmo::DILocalVariable_O), 0, "llvmo::DILocalVariable_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DILocalVariable_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DIScope_O/2531
{ class_kind, STAMP_llvmo__DIScope_O, sizeof(llvmo::DIScope_O), 0, "llvmo::DIScope_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DIScope_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DIFile_O/2535
{ class_kind, STAMP_llvmo__DIFile_O, sizeof(llvmo::DIFile_O), 0, "llvmo::DIFile_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DIFile_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DILocalScope_O/2539
{ class_kind, STAMP_llvmo__DILocalScope_O, sizeof(llvmo::DILocalScope_O), 0, "llvmo::DILocalScope_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DILocalScope_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DISubprogram_O/2543
{ class_kind, STAMP_llvmo__DISubprogram_O, sizeof(llvmo::DISubprogram_O), 0, "llvmo::DISubprogram_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DISubprogram_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DILexicalBlockBase_O/2547
{ class_kind, STAMP_llvmo__DILexicalBlockBase_O, sizeof(llvmo::DILexicalBlockBase_O), 0, "llvmo::DILexicalBlockBase_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DILexicalBlockBase_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DILexicalBlock_O/2551
{ class_kind, STAMP_llvmo__DILexicalBlock_O, sizeof(llvmo::DILexicalBlock_O), 0, "llvmo::DILexicalBlock_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DILexicalBlock_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DICompileUnit_O/2555
{ class_kind, STAMP_llvmo__DICompileUnit_O, sizeof(llvmo::DICompileUnit_O), 0, "llvmo::DICompileUnit_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DICompileUnit_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DIType_O/2559
{ class_kind, STAMP_llvmo__DIType_O, sizeof(llvmo::DIType_O), 0, "llvmo::DIType_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DIType_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DICompositeType_O/2563
{ class_kind, STAMP_llvmo__DICompositeType_O, sizeof(llvmo::DICompositeType_O), 0, "llvmo::DICompositeType_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DICompositeType_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DIDerivedType_O/2567
{ class_kind, STAMP_llvmo__DIDerivedType_O, sizeof(llvmo::DIDerivedType_O), 0, "llvmo::DIDerivedType_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DIDerivedType_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DISubroutineType_O/2571
{ class_kind, STAMP_llvmo__DISubroutineType_O, sizeof(llvmo::DISubroutineType_O), 0, "llvmo::DISubroutineType_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DISubroutineType_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DIBasicType_O/2575
{ class_kind, STAMP_llvmo__DIBasicType_O, sizeof(llvmo::DIBasicType_O), 0, "llvmo::DIBasicType_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DIBasicType_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::DIExpression_O/2579
{ class_kind, STAMP_llvmo__DIExpression_O, sizeof(llvmo::DIExpression_O), 0, "llvmo::DIExpression_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::DIExpression_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::ValueAsMetadata_O/2583
{ class_kind, STAMP_llvmo__ValueAsMetadata_O, sizeof(llvmo::ValueAsMetadata_O), 0, "llvmo::ValueAsMetadata_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::ValueAsMetadata_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::MDString_O/2587
{ class_kind, STAMP_llvmo__MDString_O, sizeof(llvmo::MDString_O), 0, "llvmo::MDString_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::MDString_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::NamedMDNode_O/2591
{ class_kind, STAMP_llvmo__NamedMDNode_O, sizeof(llvmo::NamedMDNode_O), 0, "llvmo::NamedMDNode_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::NamedMDNode_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::TargetOptions_O/2595
{ class_kind, STAMP_llvmo__TargetOptions_O, sizeof(llvmo::TargetOptions_O), 0, "llvmo::TargetOptions_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::TargetOptions_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::Module_O/2599
{ class_kind, STAMP_llvmo__Module_O, sizeof(llvmo::Module_O), 0, "llvmo::Module_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::Module_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(llvmo::Module_O),_Id), "_Id" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEqual_O>), offsetof(SAFE_TYPE_MACRO(llvmo::Module_O),_UniqueGlobalVariableStrings), "_UniqueGlobalVariableStrings" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::Target_O/2603
{ class_kind, STAMP_llvmo__Target_O, sizeof(llvmo::Target_O), 0, "llvmo::Target_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::Target_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = llvmo::Linker_O/2607
{ class_kind, STAMP_llvmo__Linker_O, sizeof(llvmo::Linker_O), 0, "llvmo::Linker_O" },
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(llvmo::Linker_O),_Class), "_Class" }, // public: (NIL) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::Rack_O/2611
{ class_kind, STAMP_core__Rack_O, sizeof(core::Rack_O), 0, "core::Rack_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Rack_O),_ShiftedStamp), "_ShiftedStamp" }, // public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(core::Rack_O),_Slots._Data), "_Slots._Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Rack_O),_Slots._Length), offsetof(SAFE_TYPE_MACRO(core::Rack_O),_Slots._Length), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), 0, "only" },
// Stamp = core::SmallMultimap_O/2615
{ class_kind, STAMP_core__SmallMultimap_O, sizeof(core::SmallMultimap_O), 0, "core::SmallMultimap_O" },
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>>), offsetof(SAFE_TYPE_MACRO(core::SmallMultimap_O),map._Contents), "map._Contents" }, // public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = core::AtomicFixnumHolder_O/2619
{ class_kind, STAMP_core__AtomicFixnumHolder_O, sizeof(core::AtomicFixnumHolder_O), 0, "core::AtomicFixnumHolder_O" },
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::AtomicFixnumHolder_O),_Object._M_i), "_Object._M_i" }, // public: (T NIL) fixable: NIL good-name: T
// Stamp = core::Scope_O/2623
{ class_kind, STAMP_core__Scope_O, sizeof(core::Scope_O), 0, "core::Scope_O" },
// Stamp = core::FileScope_O/2627
{ class_kind, STAMP_core__FileScope_O, sizeof(core::FileScope_O), 0, "core::FileScope_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Pathname_O>), offsetof(SAFE_TYPE_MACRO(core::FileScope_O),_pathname), "_pathname" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::FileScope_O),_FileHandle), "_FileHandle" }, // public: (T) fixable: NIL good-name: T
// Stamp = core::Path_O/2631
{ class_kind, STAMP_core__Path_O, sizeof(core::Path_O), 0, "core::Path_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Path_O),_Path.m_pathname._M_string_length), "_Path.m_pathname._M_string_length" }, // public: (NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Path_O),_Path.m_pathname.NO-NAME._M_allocated_capacity), "_Path.m_pathname.NO-NAME._M_allocated_capacity" }, // public: (NIL NIL NIL T) fixable: NIL good-name: T
// Stamp = core::Pathname_O/2635
{ class_kind, STAMP_core__Pathname_O, sizeof(core::Pathname_O), 0, "core::Pathname_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Pathname_O),_Host), "_Host" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Pathname_O),_Device), "_Device" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Pathname_O),_Directory), "_Directory" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Pathname_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Pathname_O),_Type), "_Type" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Pathname_O),_Version), "_Version" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::LogicalPathname_O/2639
{ class_kind, STAMP_core__LogicalPathname_O, sizeof(core::LogicalPathname_O), 0, "core::LogicalPathname_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::LogicalPathname_O),_Host), "_Host" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::LogicalPathname_O),_Device), "_Device" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::LogicalPathname_O),_Directory), "_Directory" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::LogicalPathname_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::LogicalPathname_O),_Type), "_Type" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::LogicalPathname_O),_Version), "_Version" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::Cache_O/2643
{ class_kind, STAMP_core__Cache_O, sizeof(core::Cache_O), 0, "core::Cache_O" },
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Cache_O),_searches), "_searches" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Cache_O),_misses), "_misses" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Cache_O),_total_depth), "_total_depth" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>>), offsetof(SAFE_TYPE_MACRO(core::Cache_O),_keys._Vector._Contents), "_keys._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::CacheRecord>>), offsetof(SAFE_TYPE_MACRO(core::Cache_O),_table._Vector._Contents), "_table._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Cache_O),_generation), "_generation" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Cache_O),_clear_list_spinlock.lck._M_i), "_clear_list_spinlock.lck._M_i" }, // public: (T NIL T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Cache_O),_clear_list_safe), "_clear_list_safe" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::Stream_O/2647
{ class_kind, STAMP_core__Stream_O, sizeof(core::Stream_O), 0, "core::Stream_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Stream_O),_Closed), "_Closed" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Stream_O),_Format), "_Format" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Stream_O),_ByteSize), "_ByteSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Stream_O),_Flags), "_Flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::Stream_O),_ByteStack), "_ByteStack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Stream_O),_FormatTable), "_FormatTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Stream_O),_EofChar), "_EofChar" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Stream_O),_LastOp), "_LastOp" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Stream_O),_LastChar), "_LastChar" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Stream_O),_ExternalFormat), "_ExternalFormat" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Stream_O),_OutputColumn), "_OutputColumn" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Stream_O),_InputCursor._CursorIsValid), "_InputCursor._CursorIsValid" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::Stream_O),_InputCursor._LineNumber), "_InputCursor._LineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Stream_O),_InputCursor._Column), "_InputCursor._Column" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::Stream_O),_InputCursor._PrevLineNumber), "_InputCursor._PrevLineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Stream_O),_InputCursor._PrevColumn), "_InputCursor._PrevColumn" }, // public: (T T) fixable: NIL good-name: T
// Stamp = core::AnsiStream_O/2651
{ class_kind, STAMP_core__AnsiStream_O, sizeof(core::AnsiStream_O), 0, "core::AnsiStream_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_Closed), "_Closed" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_Format), "_Format" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_ByteSize), "_ByteSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_Flags), "_Flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_ByteStack), "_ByteStack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_FormatTable), "_FormatTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_EofChar), "_EofChar" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_LastOp), "_LastOp" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_LastChar), "_LastChar" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_ExternalFormat), "_ExternalFormat" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_OutputColumn), "_OutputColumn" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_InputCursor._CursorIsValid), "_InputCursor._CursorIsValid" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_InputCursor._LineNumber), "_InputCursor._LineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_InputCursor._Column), "_InputCursor._Column" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_InputCursor._PrevLineNumber), "_InputCursor._PrevLineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_InputCursor._PrevColumn), "_InputCursor._PrevColumn" }, // public: (T T) fixable: NIL good-name: T
// Stamp = core::SynonymStream_O/2655
{ class_kind, STAMP_core__SynonymStream_O, sizeof(core::SynonymStream_O), 0, "core::SynonymStream_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_Closed), "_Closed" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_Format), "_Format" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_ByteSize), "_ByteSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_Flags), "_Flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_ByteStack), "_ByteStack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_FormatTable), "_FormatTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_EofChar), "_EofChar" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_LastOp), "_LastOp" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_LastChar), "_LastChar" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_ExternalFormat), "_ExternalFormat" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_OutputColumn), "_OutputColumn" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_InputCursor._CursorIsValid), "_InputCursor._CursorIsValid" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_InputCursor._LineNumber), "_InputCursor._LineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_InputCursor._Column), "_InputCursor._Column" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_InputCursor._PrevLineNumber), "_InputCursor._PrevLineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_InputCursor._PrevColumn), "_InputCursor._PrevColumn" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_SynonymSymbol), "_SynonymSymbol" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::StringStream_O/2659
{ class_kind, STAMP_core__StringStream_O, sizeof(core::StringStream_O), 0, "core::StringStream_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_Closed), "_Closed" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_Format), "_Format" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_ByteSize), "_ByteSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_Flags), "_Flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_ByteStack), "_ByteStack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_FormatTable), "_FormatTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_EofChar), "_EofChar" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_LastOp), "_LastOp" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_LastChar), "_LastChar" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_ExternalFormat), "_ExternalFormat" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_OutputColumn), "_OutputColumn" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_InputCursor._CursorIsValid), "_InputCursor._CursorIsValid" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_InputCursor._LineNumber), "_InputCursor._LineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_InputCursor._Column), "_InputCursor._Column" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_InputCursor._PrevLineNumber), "_InputCursor._PrevLineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_InputCursor._PrevColumn), "_InputCursor._PrevColumn" }, // public: (T T) fixable: NIL good-name: T
// Stamp = core::StringOutputStream_O/2663
{ class_kind, STAMP_core__StringOutputStream_O, sizeof(core::StringOutputStream_O), 0, "core::StringOutputStream_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_Closed), "_Closed" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_Format), "_Format" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_ByteSize), "_ByteSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_Flags), "_Flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_ByteStack), "_ByteStack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_FormatTable), "_FormatTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_EofChar), "_EofChar" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_LastOp), "_LastOp" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_LastChar), "_LastChar" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_ExternalFormat), "_ExternalFormat" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_OutputColumn), "_OutputColumn" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_InputCursor._CursorIsValid), "_InputCursor._CursorIsValid" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_InputCursor._LineNumber), "_InputCursor._LineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_InputCursor._Column), "_InputCursor._Column" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_InputCursor._PrevLineNumber), "_InputCursor._PrevLineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_InputCursor._PrevColumn), "_InputCursor._PrevColumn" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_Contents), "_Contents" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::StringInputStream_O/2667
{ class_kind, STAMP_core__StringInputStream_O, sizeof(core::StringInputStream_O), 0, "core::StringInputStream_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_Closed), "_Closed" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_Format), "_Format" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_ByteSize), "_ByteSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_Flags), "_Flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_ByteStack), "_ByteStack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_FormatTable), "_FormatTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_EofChar), "_EofChar" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_LastOp), "_LastOp" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_LastChar), "_LastChar" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_ExternalFormat), "_ExternalFormat" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_OutputColumn), "_OutputColumn" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_InputCursor._CursorIsValid), "_InputCursor._CursorIsValid" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_InputCursor._LineNumber), "_InputCursor._LineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_InputCursor._Column), "_InputCursor._Column" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_InputCursor._PrevLineNumber), "_InputCursor._PrevLineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_InputCursor._PrevColumn), "_InputCursor._PrevColumn" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_Contents), "_Contents" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_InputPosition), "_InputPosition" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_InputLimit), "_InputLimit" }, // public: (T) fixable: NIL good-name: T
// Stamp = core::EchoStream_O/2671
{ class_kind, STAMP_core__EchoStream_O, sizeof(core::EchoStream_O), 0, "core::EchoStream_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_Closed), "_Closed" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_Format), "_Format" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_ByteSize), "_ByteSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_Flags), "_Flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_ByteStack), "_ByteStack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_FormatTable), "_FormatTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_EofChar), "_EofChar" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_LastOp), "_LastOp" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_LastChar), "_LastChar" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_ExternalFormat), "_ExternalFormat" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_OutputColumn), "_OutputColumn" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_InputCursor._CursorIsValid), "_InputCursor._CursorIsValid" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_InputCursor._LineNumber), "_InputCursor._LineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_InputCursor._Column), "_InputCursor._Column" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_InputCursor._PrevLineNumber), "_InputCursor._PrevLineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_InputCursor._PrevColumn), "_InputCursor._PrevColumn" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_In), "_In" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_Out), "_Out" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::ConcatenatedStream_O/2675
{ class_kind, STAMP_core__ConcatenatedStream_O, sizeof(core::ConcatenatedStream_O), 0, "core::ConcatenatedStream_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_Closed), "_Closed" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_Format), "_Format" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_ByteSize), "_ByteSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_Flags), "_Flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_ByteStack), "_ByteStack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_FormatTable), "_FormatTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_EofChar), "_EofChar" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_LastOp), "_LastOp" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_LastChar), "_LastChar" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_ExternalFormat), "_ExternalFormat" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_OutputColumn), "_OutputColumn" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_InputCursor._CursorIsValid), "_InputCursor._CursorIsValid" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_InputCursor._LineNumber), "_InputCursor._LineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_InputCursor._Column), "_InputCursor._Column" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_InputCursor._PrevLineNumber), "_InputCursor._PrevLineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_InputCursor._PrevColumn), "_InputCursor._PrevColumn" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_List), "_List" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::FileStream_O/2679
{ class_kind, STAMP_core__FileStream_O, sizeof(core::FileStream_O), 0, "core::FileStream_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_Closed), "_Closed" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_Format), "_Format" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_ByteSize), "_ByteSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_Flags), "_Flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_ByteStack), "_ByteStack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_FormatTable), "_FormatTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_EofChar), "_EofChar" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_LastOp), "_LastOp" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_LastChar), "_LastChar" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_ExternalFormat), "_ExternalFormat" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_OutputColumn), "_OutputColumn" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_InputCursor._CursorIsValid), "_InputCursor._CursorIsValid" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_InputCursor._LineNumber), "_InputCursor._LineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_InputCursor._Column), "_InputCursor._Column" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_InputCursor._PrevLineNumber), "_InputCursor._PrevLineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_InputCursor._PrevColumn), "_InputCursor._PrevColumn" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_Filename), "_Filename" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_ElementType), "_ElementType" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::IOFileStream_O/2683
{ class_kind, STAMP_core__IOFileStream_O, sizeof(core::IOFileStream_O), 0, "core::IOFileStream_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_Closed), "_Closed" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_Format), "_Format" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_ByteSize), "_ByteSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_Flags), "_Flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_ByteStack), "_ByteStack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_FormatTable), "_FormatTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_EofChar), "_EofChar" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_LastOp), "_LastOp" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_LastChar), "_LastChar" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_ExternalFormat), "_ExternalFormat" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_OutputColumn), "_OutputColumn" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_InputCursor._CursorIsValid), "_InputCursor._CursorIsValid" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_InputCursor._LineNumber), "_InputCursor._LineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_InputCursor._Column), "_InputCursor._Column" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_InputCursor._PrevLineNumber), "_InputCursor._PrevLineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_InputCursor._PrevColumn), "_InputCursor._PrevColumn" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_Filename), "_Filename" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_ElementType), "_ElementType" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_FileDescriptor), "_FileDescriptor" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = core::IOStreamStream_O/2687
{ class_kind, STAMP_core__IOStreamStream_O, sizeof(core::IOStreamStream_O), 0, "core::IOStreamStream_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_Closed), "_Closed" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_Format), "_Format" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_ByteSize), "_ByteSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_Flags), "_Flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_ByteStack), "_ByteStack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_FormatTable), "_FormatTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_EofChar), "_EofChar" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_LastOp), "_LastOp" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_LastChar), "_LastChar" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_ExternalFormat), "_ExternalFormat" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_OutputColumn), "_OutputColumn" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_InputCursor._CursorIsValid), "_InputCursor._CursorIsValid" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_InputCursor._LineNumber), "_InputCursor._LineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_InputCursor._Column), "_InputCursor._Column" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_InputCursor._PrevLineNumber), "_InputCursor._PrevLineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_InputCursor._PrevColumn), "_InputCursor._PrevColumn" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_Filename), "_Filename" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_ElementType), "_ElementType" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::BroadcastStream_O/2691
{ class_kind, STAMP_core__BroadcastStream_O, sizeof(core::BroadcastStream_O), 0, "core::BroadcastStream_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_Closed), "_Closed" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_Format), "_Format" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_ByteSize), "_ByteSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_Flags), "_Flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_ByteStack), "_ByteStack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_FormatTable), "_FormatTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_EofChar), "_EofChar" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_LastOp), "_LastOp" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_LastChar), "_LastChar" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_ExternalFormat), "_ExternalFormat" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_OutputColumn), "_OutputColumn" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_InputCursor._CursorIsValid), "_InputCursor._CursorIsValid" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_InputCursor._LineNumber), "_InputCursor._LineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_InputCursor._Column), "_InputCursor._Column" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_InputCursor._PrevLineNumber), "_InputCursor._PrevLineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_InputCursor._PrevColumn), "_InputCursor._PrevColumn" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_Streams), "_Streams" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::TwoWayStream_O/2695
{ class_kind, STAMP_core__TwoWayStream_O, sizeof(core::TwoWayStream_O), 0, "core::TwoWayStream_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_Closed), "_Closed" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_Format), "_Format" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_ByteSize), "_ByteSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_Flags), "_Flags" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_ByteStack), "_ByteStack" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_FormatTable), "_FormatTable" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_EofChar), "_EofChar" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_LastOp), "_LastOp" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_LastChar), "_LastChar" }, // public: (T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_ExternalFormat), "_ExternalFormat" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_OutputColumn), "_OutputColumn" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_InputCursor._CursorIsValid), "_InputCursor._CursorIsValid" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_InputCursor._LineNumber), "_InputCursor._LineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_InputCursor._Column), "_InputCursor._Column" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long_long, sizeof(long long), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_InputCursor._PrevLineNumber), "_InputCursor._PrevLineNumber" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_InputCursor._PrevColumn), "_InputCursor._PrevColumn" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_In), "_In" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_Out), "_Out" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::Package_O/2699
{ class_kind, STAMP_core__Package_O, sizeof(core::Package_O), 0, "core::Package_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEqual_O>), offsetof(SAFE_TYPE_MACRO(core::Package_O),_InternalSymbols), "_InternalSymbols" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEqual_O>), offsetof(SAFE_TYPE_MACRO(core::Package_O),_ExternalSymbols), "_ExternalSymbols" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::Package_O),_Shadowing), "_Shadowing" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleString_O>), offsetof(SAFE_TYPE_MACRO(core::Package_O),_Name), "_Name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>>), offsetof(SAFE_TYPE_MACRO(core::Package_O),_UsingPackages._Vector._Contents), "_UsingPackages._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>>), offsetof(SAFE_TYPE_MACRO(core::Package_O),_PackagesUsedBy._Vector._Contents), "_PackagesUsedBy._Vector._Contents" }, // public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Package_O),_KeywordPackage._M_base._M_i), "_KeywordPackage._M_base._M_i" }, // public: (T NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Package_O),_AmpPackage._M_base._M_i), "_AmpPackage._M_base._M_i" }, // public: (T NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Package_O),_ActsLikeKeywordPackage._M_base._M_i), "_ActsLikeKeywordPackage._M_base._M_i" }, // public: (T NIL NIL) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::Package_O),_Nicknames), "_Nicknames" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::Package_O),_LocalNicknames), "_LocalNicknames" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Package_O),_Documentation), "_Documentation" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Package_O),_Lock._r._NameWord), "_Lock._r._NameWord" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Package_O),_Lock._r._Mutex.__count), "_Lock._r._Mutex.__count" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Package_O),_Lock._r._Mutex.__value.__wch), "_Lock._r._Mutex.__value.__wch" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Package_O),_Lock._r._Counter), "_Lock._r._Counter" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Package_O),_Lock._r._Recursive), "_Lock._r._Recursive" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Package_O),_Lock._g._NameWord), "_Lock._g._NameWord" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Package_O),_Lock._g._Mutex.__count), "_Lock._g._Mutex.__count" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Package_O),_Lock._g._Mutex.__value.__wch), "_Lock._g._Mutex.__value.__wch" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Package_O),_Lock._g._Counter), "_Lock._g._Counter" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Package_O),_Lock._g._Recursive), "_Lock._g._Recursive" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Package_O),_Lock._b), "_Lock._b" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Package_O),systemLockedP), "systemLockedP" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Package_O),userLockedP), "userLockedP" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Package_O),zombieP), "zombieP" }, // public: (T) fixable: NIL good-name: T
// Stamp = core::FileStatus_O/2703
{ class_kind, STAMP_core__FileStatus_O, sizeof(core::FileStatus_O), 0, "core::FileStatus_O" },
// Stamp = core::InvocationHistoryFrameIterator_O/2707
{ class_kind, STAMP_core__InvocationHistoryFrameIterator_O, sizeof(core::InvocationHistoryFrameIterator_O), 0, "core::InvocationHistoryFrameIterator_O" },
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::InvocationHistoryFrameIterator_O),_Index), "_Index" }, // public: (NIL) fixable: NIL good-name: T
// Stamp = core::DirectoryEntry_O/2711
{ class_kind, STAMP_core__DirectoryEntry_O, sizeof(core::DirectoryEntry_O), 0, "core::DirectoryEntry_O" },
// Stamp = core::LightUserData_O/2715
{ class_kind, STAMP_core__LightUserData_O, sizeof(core::LightUserData_O), 0, "core::LightUserData_O" },
// Stamp = core::UserData_O/2719
{ class_kind, STAMP_core__UserData_O, sizeof(core::UserData_O), 0, "core::UserData_O" },
// Stamp = core::Cons_O/2723
{ class_kind, STAMP_core__Cons_O, sizeof(core::Cons_O), 0, "core::Cons_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Cons_O),_Car), "_Car" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Cons_O),_Cdr), "_Cdr" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = core::VaList_dummy_O/2727
{ class_kind, STAMP_core__VaList_dummy_O, sizeof(core::VaList_dummy_O), 0, "core::VaList_dummy_O" },
// Stamp = core::Lisp_O/2731
{ class_kind, STAMP_core__Lisp_O, sizeof(core::Lisp_O), 0, "core::Lisp_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._TerminalIO), "_Roots._TerminalIO" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ActiveThreads), "_Roots._ActiveThreads" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ActiveThreadsMutex._r._NameWord), "_Roots._ActiveThreadsMutex._r._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ActiveThreadsMutex._r._Mutex.__count), "_Roots._ActiveThreadsMutex._r._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ActiveThreadsMutex._r._Mutex.__value.__wch), "_Roots._ActiveThreadsMutex._r._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ActiveThreadsMutex._r._Counter), "_Roots._ActiveThreadsMutex._r._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ActiveThreadsMutex._r._Recursive), "_Roots._ActiveThreadsMutex._r._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ActiveThreadsMutex._g._NameWord), "_Roots._ActiveThreadsMutex._g._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ActiveThreadsMutex._g._Mutex.__count), "_Roots._ActiveThreadsMutex._g._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ActiveThreadsMutex._g._Mutex.__value.__wch), "_Roots._ActiveThreadsMutex._g._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ActiveThreadsMutex._g._Counter), "_Roots._ActiveThreadsMutex._g._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ActiveThreadsMutex._g._Recursive), "_Roots._ActiveThreadsMutex._g._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ActiveThreadsMutex._b), "_Roots._ActiveThreadsMutex._b" }, // public: (T T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DefaultSpecialBindings), "_Roots._DefaultSpecialBindings" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DefaultSpecialBindingsMutex._r._NameWord), "_Roots._DefaultSpecialBindingsMutex._r._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DefaultSpecialBindingsMutex._r._Mutex.__count), "_Roots._DefaultSpecialBindingsMutex._r._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DefaultSpecialBindingsMutex._r._Mutex.__value.__wch), "_Roots._DefaultSpecialBindingsMutex._r._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DefaultSpecialBindingsMutex._r._Counter), "_Roots._DefaultSpecialBindingsMutex._r._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DefaultSpecialBindingsMutex._r._Recursive), "_Roots._DefaultSpecialBindingsMutex._r._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DefaultSpecialBindingsMutex._g._NameWord), "_Roots._DefaultSpecialBindingsMutex._g._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DefaultSpecialBindingsMutex._g._Mutex.__count), "_Roots._DefaultSpecialBindingsMutex._g._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DefaultSpecialBindingsMutex._g._Mutex.__value.__wch), "_Roots._DefaultSpecialBindingsMutex._g._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DefaultSpecialBindingsMutex._g._Counter), "_Roots._DefaultSpecialBindingsMutex._g._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DefaultSpecialBindingsMutex._g._Recursive), "_Roots._DefaultSpecialBindingsMutex._g._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DefaultSpecialBindingsMutex._b), "_Roots._DefaultSpecialBindingsMutex._b" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SyspropMutex._r._NameWord), "_Roots._SyspropMutex._r._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SyspropMutex._r._Mutex.__count), "_Roots._SyspropMutex._r._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SyspropMutex._r._Mutex.__value.__wch), "_Roots._SyspropMutex._r._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SyspropMutex._r._Counter), "_Roots._SyspropMutex._r._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SyspropMutex._r._Recursive), "_Roots._SyspropMutex._r._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SyspropMutex._g._NameWord), "_Roots._SyspropMutex._g._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SyspropMutex._g._Mutex.__count), "_Roots._SyspropMutex._g._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SyspropMutex._g._Mutex.__value.__wch), "_Roots._SyspropMutex._g._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SyspropMutex._g._Counter), "_Roots._SyspropMutex._g._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SyspropMutex._g._Recursive), "_Roots._SyspropMutex._g._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SyspropMutex._b), "_Roots._SyspropMutex._b" }, // public: (T T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTable_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._Sysprop), "_Roots._Sysprop" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassTableMutex._r._NameWord), "_Roots._ClassTableMutex._r._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassTableMutex._r._Mutex.__count), "_Roots._ClassTableMutex._r._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassTableMutex._r._Mutex.__value.__wch), "_Roots._ClassTableMutex._r._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassTableMutex._r._Counter), "_Roots._ClassTableMutex._r._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassTableMutex._r._Recursive), "_Roots._ClassTableMutex._r._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassTableMutex._g._NameWord), "_Roots._ClassTableMutex._g._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassTableMutex._g._Mutex.__count), "_Roots._ClassTableMutex._g._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassTableMutex._g._Mutex.__value.__wch), "_Roots._ClassTableMutex._g._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassTableMutex._g._Counter), "_Roots._ClassTableMutex._g._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassTableMutex._g._Recursive), "_Roots._ClassTableMutex._g._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassTableMutex._b), "_Roots._ClassTableMutex._b" }, // public: (T T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTable_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassTable), "_Roots._ClassTable" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Integer_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._IntegerOverflowAdjust), "_Roots._IntegerOverflowAdjust" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots.charInfo.gNamesToCharacterIndex._M_t._M_impl._M_node_count), "_Roots.charInfo.gNamesToCharacterIndex._M_t._M_impl._M_node_count" }, // public: (T T T NIL NIL T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots.charInfo.gIndexedCharacters._Vector._Contents), "_Roots.charInfo.gIndexedCharacters._Vector._Contents" }, // public: (T T T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots.charInfo.gCharacterNames._Vector._Contents), "_Roots.charInfo.gCharacterNames._Vector._Contents" }, // public: (T T T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassSymbolsHolderUnshiftedNowhere._Vector._Contents), "_Roots._ClassSymbolsHolderUnshiftedNowhere._Vector._Contents" }, // public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots.staticClassesUnshiftedNowhere._Vector._Contents), "_Roots.staticClassesUnshiftedNowhere._Vector._Contents" }, // public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots.staticClassSymbolsUnshiftedNowhere._Vector._Contents), "_Roots.staticClassSymbolsUnshiftedNowhere._Vector._Contents" }, // public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots.staticInstanceCreatorsUnshiftedNowhere._Vector._Contents), "_Roots.staticInstanceCreatorsUnshiftedNowhere._Vector._Contents" }, // public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._JITDylibs._M_i), "_Roots._JITDylibs._M_i" }, // public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SourceFiles._Vector._Contents), "_Roots._SourceFiles._Vector._Contents" }, // public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SourceFileIndices._M_t._M_impl._M_node_count), "_Roots._SourceFileIndices._M_t._M_impl._M_node_count" }, // public: (T T NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SourceFilesMutex._r._NameWord), "_Roots._SourceFilesMutex._r._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SourceFilesMutex._r._Mutex.__count), "_Roots._SourceFilesMutex._r._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SourceFilesMutex._r._Mutex.__value.__wch), "_Roots._SourceFilesMutex._r._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SourceFilesMutex._r._Counter), "_Roots._SourceFilesMutex._r._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SourceFilesMutex._r._Recursive), "_Roots._SourceFilesMutex._r._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SourceFilesMutex._g._NameWord), "_Roots._SourceFilesMutex._g._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SourceFilesMutex._g._Mutex.__count), "_Roots._SourceFilesMutex._g._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SourceFilesMutex._g._Mutex.__value.__wch), "_Roots._SourceFilesMutex._g._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SourceFilesMutex._g._Counter), "_Roots._SourceFilesMutex._g._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SourceFilesMutex._g._Recursive), "_Roots._SourceFilesMutex._g._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SourceFilesMutex._b), "_Roots._SourceFilesMutex._b" }, // public: (T T T) fixable: NIL good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::SymbolClassHolderPair>>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots.bootClassTable._Vector._Contents), "_Roots.bootClassTable._Vector._Contents" }, // public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._CommandLineArguments), "_Roots._CommandLineArguments" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._Packages._Vector._Contents), "_Roots._Packages._Vector._Contents" }, // public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._PackageNameIndexMap._M_t._M_impl._M_node_count), "_Roots._PackageNameIndexMap._M_t._M_impl._M_node_count" }, // public: (T T NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._PackagesMutex._r._NameWord), "_Roots._PackagesMutex._r._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._PackagesMutex._r._Mutex.__count), "_Roots._PackagesMutex._r._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._PackagesMutex._r._Mutex.__value.__wch), "_Roots._PackagesMutex._r._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._PackagesMutex._r._Counter), "_Roots._PackagesMutex._r._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._PackagesMutex._r._Recursive), "_Roots._PackagesMutex._r._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._PackagesMutex._g._NameWord), "_Roots._PackagesMutex._g._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._PackagesMutex._g._Mutex.__count), "_Roots._PackagesMutex._g._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._PackagesMutex._g._Mutex.__value.__wch), "_Roots._PackagesMutex._g._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._PackagesMutex._g._Counter), "_Roots._PackagesMutex._g._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._PackagesMutex._g._Recursive), "_Roots._PackagesMutex._g._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._PackagesMutex._b), "_Roots._PackagesMutex._b" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MpiEnabled), "_Roots._MpiEnabled" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MpiRank), "_Roots._MpiRank" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MpiSize), "_Roots._MpiSize" }, // public: (T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<mpip::Mpi_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MpiWorld), "_Roots._MpiWorld" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassMap._Vector._Contents), "_Roots._ClassMap._Vector._Contents" }, // public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._TheClass), "_Roots._TheClass" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._TheBuiltInClass), "_Roots._TheBuiltInClass" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._TheStandardClass), "_Roots._TheStandardClass" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._TheStructureClass), "_Roots._TheStructureClass" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._TheDerivableCxxClass), "_Roots._TheDerivableCxxClass" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._TheClbindCxxClass), "_Roots._TheClbindCxxClass" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._CorePackage), "_Roots._CorePackage" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._KeywordPackage), "_Roots._KeywordPackage" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._CommonLispPackage), "_Roots._CommonLispPackage" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SpecialForms), "_Roots._SpecialForms" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEqual_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleDispatchGenericFunctionHashTableEqual), "_Roots._SingleDispatchGenericFunctionHashTableEqual" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._r._NameWord), "_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._r._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._r._Mutex.__count), "_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._r._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._r._Mutex.__value.__wch), "_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._r._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._r._Counter), "_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._r._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._r._Recursive), "_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._r._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._g._NameWord), "_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._g._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._g._Mutex.__count), "_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._g._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._g._Mutex.__value.__wch), "_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._g._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._g._Counter), "_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._g._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._g._Recursive), "_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._g._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._b), "_Roots._SingleDispatchGenericFunctionHashTableEqualMutex._b" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorMutex._r._NameWord), "_Roots._MonitorMutex._r._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorMutex._r._Mutex.__count), "_Roots._MonitorMutex._r._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorMutex._r._Mutex.__value.__wch), "_Roots._MonitorMutex._r._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorMutex._r._Counter), "_Roots._MonitorMutex._r._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorMutex._r._Recursive), "_Roots._MonitorMutex._r._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorMutex._g._NameWord), "_Roots._MonitorMutex._g._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorMutex._g._Mutex.__count), "_Roots._MonitorMutex._g._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorMutex._g._Mutex.__value.__wch), "_Roots._MonitorMutex._g._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorMutex._g._Counter), "_Roots._MonitorMutex._g._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorMutex._g._Recursive), "_Roots._MonitorMutex._g._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorMutex._b), "_Roots._MonitorMutex._b" }, // public: (T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_precision), "_Roots._MonitorStream._M_precision" }, // public: (T T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_width), "_Roots._MonitorStream._M_width" }, // public: (T T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_word_zero._M_iword), "_Roots._MonitorStream._M_word_zero._M_iword" }, // public: (T T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_word_size), "_Roots._MonitorStream._M_word_size" }, // public: (T T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_fill), "_Roots._MonitorStream._M_fill" }, // public: (T T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_fill_init), "_Roots._MonitorStream._M_fill_init" }, // public: (T T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_precision), "_Roots._MonitorStream._M_precision" }, // public: (T T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_width), "_Roots._MonitorStream._M_width" }, // public: (T T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_word_zero._M_iword), "_Roots._MonitorStream._M_word_zero._M_iword" }, // public: (T T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_word_size), "_Roots._MonitorStream._M_word_size" }, // public: (T T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_fill), "_Roots._MonitorStream._M_fill" }, // public: (T T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_fill_init), "_Roots._MonitorStream._M_fill_init" }, // public: (T T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_precision), "_Roots._MonitorStream._M_precision" }, // public: (T T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_width), "_Roots._MonitorStream._M_width" }, // public: (T T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_word_zero._M_iword), "_Roots._MonitorStream._M_word_zero._M_iword" }, // public: (T T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_word_size), "_Roots._MonitorStream._M_word_size" }, // public: (T T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_fill), "_Roots._MonitorStream._M_fill" }, // public: (T T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_fill_init), "_Roots._MonitorStream._M_fill_init" }, // public: (T T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_filebuf._M_lock.__count), "_Roots._MonitorStream._M_filebuf._M_lock.__count" }, // public: (T T NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_filebuf._M_lock.__value.__wch), "_Roots._MonitorStream._M_filebuf._M_lock.__value.__wch" }, // public: (T T NIL NIL T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_filebuf._M_file._M_cfile_created), "_Roots._MonitorStream._M_filebuf._M_file._M_cfile_created" }, // public: (T T NIL NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_filebuf._M_state_beg.__count), "_Roots._MonitorStream._M_filebuf._M_state_beg.__count" }, // public: (T T NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_filebuf._M_state_beg.__value.__wch), "_Roots._MonitorStream._M_filebuf._M_state_beg.__value.__wch" }, // public: (T T NIL NIL T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_filebuf._M_state_cur.__count), "_Roots._MonitorStream._M_filebuf._M_state_cur.__count" }, // public: (T T NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_filebuf._M_state_cur.__value.__wch), "_Roots._MonitorStream._M_filebuf._M_state_cur.__value.__wch" }, // public: (T T NIL NIL T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_filebuf._M_state_last.__count), "_Roots._MonitorStream._M_filebuf._M_state_last.__count" }, // public: (T T NIL NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_filebuf._M_state_last.__value.__wch), "_Roots._MonitorStream._M_filebuf._M_state_last.__value.__wch" }, // public: (T T NIL NIL T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_filebuf._M_buf_size), "_Roots._MonitorStream._M_filebuf._M_buf_size" }, // public: (T T NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_filebuf._M_buf_allocated), "_Roots._MonitorStream._M_filebuf._M_buf_allocated" }, // public: (T T NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_filebuf._M_reading), "_Roots._MonitorStream._M_filebuf._M_reading" }, // public: (T T NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_filebuf._M_writing), "_Roots._MonitorStream._M_filebuf._M_writing" }, // public: (T T NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_char, sizeof(char), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_filebuf._M_pback), "_Roots._MonitorStream._M_filebuf._M_pback" }, // public: (T T NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_filebuf._M_pback_init), "_Roots._MonitorStream._M_filebuf._M_pback_init" }, // public: (T T NIL NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MonitorStream._M_filebuf._M_ext_buf_size), "_Roots._MonitorStream._M_filebuf._M_ext_buf_size" }, // public: (T T NIL NIL) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._TrueObject), "_Roots._TrueObject" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::DoubleFloat_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._RehashSize), "_Roots._RehashSize" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::DoubleFloat_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._RehashThreshold), "_Roots._RehashThreshold" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._NullStream), "_Roots._NullStream" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ThePathnameTranslations), "_Roots._ThePathnameTranslations" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ThePathnameTranslationsMutex._r._NameWord), "_Roots._ThePathnameTranslationsMutex._r._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ThePathnameTranslationsMutex._r._Mutex.__count), "_Roots._ThePathnameTranslationsMutex._r._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ThePathnameTranslationsMutex._r._Mutex.__value.__wch), "_Roots._ThePathnameTranslationsMutex._r._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ThePathnameTranslationsMutex._r._Counter), "_Roots._ThePathnameTranslationsMutex._r._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ThePathnameTranslationsMutex._r._Recursive), "_Roots._ThePathnameTranslationsMutex._r._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ThePathnameTranslationsMutex._g._NameWord), "_Roots._ThePathnameTranslationsMutex._g._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ThePathnameTranslationsMutex._g._Mutex.__count), "_Roots._ThePathnameTranslationsMutex._g._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ThePathnameTranslationsMutex._g._Mutex.__value.__wch), "_Roots._ThePathnameTranslationsMutex._g._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ThePathnameTranslationsMutex._g._Counter), "_Roots._ThePathnameTranslationsMutex._g._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ThePathnameTranslationsMutex._g._Recursive), "_Roots._ThePathnameTranslationsMutex._g._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ThePathnameTranslationsMutex._b), "_Roots._ThePathnameTranslationsMutex._b" }, // public: (T T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Complex_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ImaginaryUnit), "_Roots._ImaginaryUnit" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Complex_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ImaginaryUnitNegative), "_Roots._ImaginaryUnitNegative" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Ratio_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._PlusHalf), "_Roots._PlusHalf" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Ratio_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MinusHalf), "_Roots._MinusHalf" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SingleFloat_I>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleFloatMinusZero), "_Roots._SingleFloatMinusZero" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SingleFloat_I>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleFloatPlusZero), "_Roots._SingleFloatPlusZero" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::DoubleFloat_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DoubleFloatMinusZero), "_Roots._DoubleFloatMinusZero" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::DoubleFloat_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DoubleFloatPlusZero), "_Roots._DoubleFloatPlusZero" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SingleFloat_I>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleFloatOne), "_Roots._SingleFloatOne" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::DoubleFloat_O>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DoubleFloatOne), "_Roots._DoubleFloatOne" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._Booted), "_Roots._Booted" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._UnixSignalHandlersMutex._r._NameWord), "_Roots._UnixSignalHandlersMutex._r._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._UnixSignalHandlersMutex._r._Mutex.__count), "_Roots._UnixSignalHandlersMutex._r._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._UnixSignalHandlersMutex._r._Mutex.__value.__wch), "_Roots._UnixSignalHandlersMutex._r._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._UnixSignalHandlersMutex._r._Counter), "_Roots._UnixSignalHandlersMutex._r._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._UnixSignalHandlersMutex._r._Recursive), "_Roots._UnixSignalHandlersMutex._r._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._UnixSignalHandlersMutex._g._NameWord), "_Roots._UnixSignalHandlersMutex._g._NameWord" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._UnixSignalHandlersMutex._g._Mutex.__count), "_Roots._UnixSignalHandlersMutex._g._Mutex.__count" }, // public: (T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._UnixSignalHandlersMutex._g._Mutex.__value.__wch), "_Roots._UnixSignalHandlersMutex._g._Mutex.__value.__wch" }, // public: (T T T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_long, sizeof(long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._UnixSignalHandlersMutex._g._Counter), "_Roots._UnixSignalHandlersMutex._g._Counter" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._UnixSignalHandlersMutex._g._Recursive), "_Roots._UnixSignalHandlersMutex._g._Recursive" }, // public: (T T T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._UnixSignalHandlersMutex._b), "_Roots._UnixSignalHandlersMutex._b" }, // public: (T T T) fixable: NIL good-name: T
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._UnixSignalHandlers), "_Roots._UnixSignalHandlers" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_TrapIntern), "_TrapIntern" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_TrapInternPackage._M_string_length), "_TrapInternPackage._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_TrapInternPackage.NO-NAME._M_allocated_capacity), "_TrapInternPackage.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_TrapInternName._M_string_length), "_TrapInternName._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_TrapInternName.NO-NAME._M_allocated_capacity), "_TrapInternName.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_StackWarnSize), "_StackWarnSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_StackSampleCount), "_StackSampleCount" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_StackSampleSize), "_StackSampleSize" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_StackSampleMax), "_StackSampleMax" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_PrintSymbolsProperly), "_PrintSymbolsProperly" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Argc), "_Argc" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_ReplCounter), "_ReplCounter" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_IntegerOrdering._BigEndian), "_IntegerOrdering._BigEndian" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_IntegerOrdering._MostSignificantWordFirst), "_IntegerOrdering._MostSignificantWordFirst" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_IntegerOrdering._mpz_import_word_order), "_IntegerOrdering._mpz_import_word_order" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_IntegerOrdering._mpz_import_size), "_IntegerOrdering._mpz_import_size" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_IntegerOrdering._mpz_import_endian), "_IntegerOrdering._mpz_import_endian" }, // public: (T T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_SingleStepLevel), "_SingleStepLevel" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_TraceLevel), "_TraceLevel" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_DebuggerLevel), "_DebuggerLevel" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_LockGlobalInitialization), "_LockGlobalInitialization" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Interactive), "_Interactive" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_FunctionName._M_string_length), "_FunctionName._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_FunctionName.NO-NAME._M_allocated_capacity), "_FunctionName.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_RCFileName._M_string_length), "_RCFileName._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_RCFileName.NO-NAME._M_allocated_capacity), "_RCFileName.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_IgnoreInitImage), "_IgnoreInitImage" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_IgnoreInitLsp), "_IgnoreInitLsp" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_EnvironmentId), "_EnvironmentId" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_RequireLevel), "_RequireLevel" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_CoreBuiltInClassesInitialized), "_CoreBuiltInClassesInitialized" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_BuiltInClassesInitialized), "_BuiltInClassesInitialized" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_PackagesInitialized), "_PackagesInitialized" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_EnvironmentInitialized), "_EnvironmentInitialized" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_NilsCreated), "_NilsCreated" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_LastCompileErrorMessage._M_string_length), "_LastCompileErrorMessage._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_LastCompileErrorMessage.NO-NAME._M_allocated_capacity), "_LastCompileErrorMessage.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_BootClassTableIsValid), "_BootClassTableIsValid" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_PathMax), "_PathMax" }, // public: (T) fixable: NIL good-name: T
// not-exposing {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_LineNumber), "_LineNumber" }, // public: (T) fixable: NIL good-name: T
// Stamp = clang::RecursiveASTVisitor<asttooling::AstVisitor_O>/2735
// Stamp = asttooling::AstVisitor_O/2739
{ class_kind, STAMP_asttooling__AstVisitor_O, sizeof(asttooling::AstVisitor_O), 0, "asttooling::AstVisitor_O" },
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(asttooling::AstVisitor_O),_Target), "_Target" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCContainer/2743
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>/2747
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>" :SPECIALIZER "class kinematics::BackboneDependentRotamerSet_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>" :SPECIALIZER "class kinematics::BackboneDependentRotamerSet_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>/2751
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ChemInfoNode_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ChemInfoNode_O>" :SPECIALIZER "class chem::ChemInfoNode_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ChemInfoNode_O>" :SPECIALIZER "class chem::ChemInfoNode_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ChemInfoNode_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<chem::EnergyChiralRestraint>/2755
{ container_kind, STAMP_gctools__GCVector_moveable_chem__EnergyChiralRestraint_, sizeof(gctools::GCVector_moveable<chem::EnergyChiralRestraint>), 0, "gctools::GCVector_moveable<chem::EnergyChiralRestraint>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyChiralRestraint>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::EnergyChiralRestraint), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyChiralRestraint>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyChiralRestraint>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),_Atom1), "_Atom1" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),_Atom2), "_Atom2" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),_Atom3), "_Atom3" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),_Atom4), "_Atom4" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),term.K), "term.K" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),term.CO), "term.CO" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),term.I1), "term.I1" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),term.I2), "term.I2" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),term.I3), "term.I3" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),term.I4), "term.I4" }, // public: (T T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>/2759
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::BondToAtomTest_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondToAtomTest_O>" :SPECIALIZER "class chem::BondToAtomTest_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondToAtomTest_O>" :SPECIALIZER "class chem::BondToAtomTest_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BondToAtomTest_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>/2763
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::StereoConfiguration_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoConfiguration_O>" :SPECIALIZER "class chem::StereoConfiguration_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoConfiguration_O>" :SPECIALIZER "class chem::StereoConfiguration_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::StereoConfiguration_O>), 0, "only" },
// Stamp = gctools::GCArray_moveable<short>/2767
{ container_kind, STAMP_gctools__GCArray_moveable_short_, sizeof(gctools::GCArray_moveable<short>), 0, "gctools::GCArray_moveable<short>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<short>),_Data), "_Data" },
 {  variable_capacity, sizeof(short), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<short>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<short>),_Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "short") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "short")>
{    variable_field, ctype_short, sizeof(short), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>/2771
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Rotamer_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Rotamer_O>" :SPECIALIZER "class chem::Rotamer_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Rotamer_O>" :SPECIALIZER "class chem::Rotamer_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Rotamer_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>/2775
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___, sizeof(gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>), 0, "gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>),_Capacity), NULL },
    {    variable_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), offsetof(SAFE_TYPE_MACRO(gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>),_Contents), "_Contents" }, // public: (T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>/2779
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::FFTypeRule_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFTypeRule_O>" :SPECIALIZER "class chem::FFTypeRule_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFTypeRule_O>" :SPECIALIZER "class chem::FFTypeRule_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFTypeRule_O>), 0, "only" },
// Stamp = gctools::GCBitUnitArray_moveable<4,0>/2783
{ bitunit_container_kind, STAMP_gctools__GCBitUnitArray_moveable_4_0_, sizeof(gctools::GCBitUnitArray_moveable<4,0>), 4, "gctools::GCBitUnitArray_moveable<4,0>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<4,0>),_Data), "_Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<4,0>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<4,0>),_Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = gctools::GCVector_moveable<core::SymbolClassHolderPair>/2787
{ container_kind, STAMP_gctools__GCVector_moveable_core__SymbolClassHolderPair_, sizeof(gctools::GCVector_moveable<core::SymbolClassHolderPair>), 0, "gctools::GCVector_moveable<core::SymbolClassHolderPair>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::SymbolClassHolderPair>),_Data), "_Data" },
 {  variable_capacity, sizeof(core::SymbolClassHolderPair), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::SymbolClassHolderPair>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::SymbolClassHolderPair>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(core::SymbolClassHolderPair),symbol), "symbol" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ClassHolder_O>), offsetof(SAFE_TYPE_MACRO(core::SymbolClassHolderPair),theClassHolder), "theClassHolder" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>/2791
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>/2795
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<kinematics::ChainNode_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::ChainNode_O>" :SPECIALIZER "class kinematics::ChainNode_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::ChainNode_O>" :SPECIALIZER "class kinematics::ChainNode_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::ChainNode_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>/2799
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>/2803
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::FFNonbond_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFNonbond_O>" :SPECIALIZER "class chem::FFNonbond_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFNonbond_O>" :SPECIALIZER "class chem::FFNonbond_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFNonbond_O>), 0, "only" },
// Stamp = gctools::GCArray_moveable<unsigned char>/2807
{ container_kind, STAMP_gctools__GCArray_moveable_unsigned_char_, sizeof(gctools::GCArray_moveable<unsigned char>), 0, "gctools::GCArray_moveable<unsigned char>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned char>),_Data), "_Data" },
 {  variable_capacity, sizeof(unsigned char), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned char>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned char>),_Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char")>
{    variable_field, ctype_unsigned_char, sizeof(unsigned char), 0, "only" },
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>/2811
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>/2815
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EntityNameSetBase_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>/2819
{ container_kind, STAMP_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_, sizeof(gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>), 0, "gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::EnergyRigidBodyStaple), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>),_Capacity), NULL },
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple),ks), "ks" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple),r0), "r0" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple),rigidBodyK), "rigidBodyK" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple),rigidBodyL), "rigidBodyL" }, // public: (T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>/2823
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<chem::EnergyAngle>/2827
{ container_kind, STAMP_gctools__GCVector_moveable_chem__EnergyAngle_, sizeof(gctools::GCVector_moveable<chem::EnergyAngle>), 0, "gctools::GCVector_moveable<chem::EnergyAngle>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAngle>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::EnergyAngle), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAngle>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAngle>),_Capacity), NULL },
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle),term.kt), "term.kt" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle),term.t0), "term.t0" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle),term.I1), "term.I1" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle),term.I2), "term.I2" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle),term.I3), "term.I3" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle),_Atom1), "_Atom1" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle),_Atom2), "_Atom2" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle),_Atom3), "_Atom3" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>/2831
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::SimpleBitVector_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBitVector_O>" :SPECIALIZER "class core::SimpleBitVector_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBitVector_O>" :SPECIALIZER "class core::SimpleBitVector_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleBitVector_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>/2835
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Monomer_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Monomer_O>" :SPECIALIZER "class chem::Monomer_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Monomer_O>" :SPECIALIZER "class chem::Monomer_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Monomer_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>/2839
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::CDFragment_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDFragment_O>" :SPECIALIZER "class chem::CDFragment_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDFragment_O>" :SPECIALIZER "class chem::CDFragment_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CDFragment_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>/2843
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::MonomerCoordinates_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>/2847
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::TrajectoryFrame_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::TrajectoryFrame_O>" :SPECIALIZER "class chem::TrajectoryFrame_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::TrajectoryFrame_O>" :SPECIALIZER "class chem::TrajectoryFrame_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::TrajectoryFrame_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<core::OptionalArgument>/2851
{ container_kind, STAMP_gctools__GCVector_moveable_core__OptionalArgument_, sizeof(gctools::GCVector_moveable<core::OptionalArgument>), 0, "gctools::GCVector_moveable<core::OptionalArgument>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::OptionalArgument>),_Data), "_Data" },
 {  variable_capacity, sizeof(core::OptionalArgument), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::OptionalArgument>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::OptionalArgument>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::OptionalArgument),_ArgTarget), "_ArgTarget" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::OptionalArgument),_ArgTargetFrameIndex), "_ArgTargetFrameIndex" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::OptionalArgument),_Default), "_Default" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::OptionalArgument),_Sensor._ArgTarget), "_Sensor._ArgTarget" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::OptionalArgument),_Sensor._ArgTargetFrameIndex), "_Sensor._ArgTargetFrameIndex" }, // public: (T T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<core::KeywordArgument>/2855
{ container_kind, STAMP_gctools__GCVector_moveable_core__KeywordArgument_, sizeof(gctools::GCVector_moveable<core::KeywordArgument>), 0, "gctools::GCVector_moveable<core::KeywordArgument>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::KeywordArgument>),_Data), "_Data" },
 {  variable_capacity, sizeof(core::KeywordArgument), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::KeywordArgument>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::KeywordArgument>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::KeywordArgument),_ArgTarget), "_ArgTarget" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::KeywordArgument),_ArgTargetFrameIndex), "_ArgTargetFrameIndex" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::KeywordArgument),_Default), "_Default" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::KeywordArgument),_Keyword), "_Keyword" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::KeywordArgument),_Sensor._ArgTarget), "_Sensor._ArgTarget" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::KeywordArgument),_Sensor._ArgTargetFrameIndex), "_Sensor._ArgTargetFrameIndex" }, // public: (T T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<chem::KeyEntry>/2859
{ container_kind, STAMP_gctools__GCVector_moveable_chem__KeyEntry_, sizeof(gctools::GCVector_moveable<chem::KeyEntry>), 0, "gctools::GCVector_moveable<chem::KeyEntry>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::KeyEntry>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::KeyEntry), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::KeyEntry>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::KeyEntry>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::KeyEntry),_Coupling), "_Coupling" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::KeyEntry),_Monomer), "_Monomer" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>/2863
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Stereoisomer_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>/2867
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ReportBase_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ReportBase_O>" :SPECIALIZER "class chem::ReportBase_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ReportBase_O>" :SPECIALIZER "class chem::ReportBase_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ReportBase_O>), 0, "only" },
// Stamp = gctools::GCArray_moveable<Vector3>/2871
{ container_kind, STAMP_gctools__GCArray_moveable_Vector3_, sizeof(gctools::GCArray_moveable<Vector3>), 0, "gctools::GCArray_moveable<Vector3>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<Vector3>),_Data), "_Data" },
 {  variable_capacity, sizeof(Vector3), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<Vector3>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<Vector3>),_Length), NULL },
// Stamp = gctools::GCVector_moveable<chem::EnergyAnchorRestraint>/2875
{ container_kind, STAMP_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_, sizeof(gctools::GCVector_moveable<chem::EnergyAnchorRestraint>), 0, "gctools::GCVector_moveable<chem::EnergyAnchorRestraint>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAnchorRestraint>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::EnergyAnchorRestraint), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAnchorRestraint>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAnchorRestraint>),_Capacity), NULL },
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint),term.ka), "term.ka" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint),term.I1), "term.I1" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint),term.xa), "term.xa" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint),term.ya), "term.ya" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint),term.za), "term.za" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint),_Atom1), "_Atom1" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>/2879
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::StereoisomerAtom_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoisomerAtom_O>" :SPECIALIZER "class chem::StereoisomerAtom_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoisomerAtom_O>" :SPECIALIZER "class chem::StereoisomerAtom_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::StereoisomerAtom_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>/2883
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::SpecificContext_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>/2887
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<kinematics::MonomerNode_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::MonomerNode_O>" :SPECIALIZER "class kinematics::MonomerNode_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::MonomerNode_O>" :SPECIALIZER "class kinematics::MonomerNode_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::MonomerNode_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>/2891
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___, sizeof(gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>), 0, "gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<int,gctools::smart_ptr<chem::Residue_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>),_Capacity), NULL },
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(std::pair<int,gctools::smart_ptr<chem::Residue_O>>),first), "first" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Residue_O>), offsetof(SAFE_TYPE_MACRO(std::pair<int,gctools::smart_ptr<chem::Residue_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<chem::EnergyImproperRestraint>/2895
{ container_kind, STAMP_gctools__GCVector_moveable_chem__EnergyImproperRestraint_, sizeof(gctools::GCVector_moveable<chem::EnergyImproperRestraint>), 0, "gctools::GCVector_moveable<chem::EnergyImproperRestraint>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyImproperRestraint>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::EnergyImproperRestraint), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyImproperRestraint>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyImproperRestraint>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint),_Atom1), "_Atom1" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint),_Atom2), "_Atom2" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint),_Atom3), "_Atom3" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint),_Atom4), "_Atom4" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint),_AboveThreshold), "_AboveThreshold" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint),_AboveThreshold_Phi), "_AboveThreshold_Phi" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint),term.K), "term.K" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint),term.U), "term.U" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint),term.L), "term.L" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint),term.I1), "term.I1" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint),term.I2), "term.I2" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint),term.I3), "term.I3" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyImproperRestraint),term.I4), "term.I4" }, // public: (T T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>/2899
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ConstitutionBond_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionBond_O>" :SPECIALIZER "class chem::ConstitutionBond_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionBond_O>" :SPECIALIZER "class chem::ConstitutionBond_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConstitutionBond_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>/2903
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Structure_Old_ListEntry_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Structure_Old_ListEntry_O>" :SPECIALIZER "class chem::Structure_Old_ListEntry_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Structure_Old_ListEntry_O>" :SPECIALIZER "class chem::Structure_Old_ListEntry_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Structure_Old_ListEntry_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>/2907
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>),second._ti), "second._ti" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>),second._tj), "second._tj" }, // public: (T T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>),second._rij), "second._rij" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>),second._lnKij), "second._lnKij" }, // public: (T T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>/2911
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ConformationCollectionEntry_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationCollectionEntry_O>" :SPECIALIZER "class chem::ConformationCollectionEntry_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationCollectionEntry_O>" :SPECIALIZER "class chem::ConformationCollectionEntry_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConformationCollectionEntry_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>/2915
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::BondId_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>/2919
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Coupling_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>/2923
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Matter_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>/2927
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AtomIndexer_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>/2931
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::AGEdge_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AGEdge_O>" :SPECIALIZER "class chem::AGEdge_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AGEdge_O>" :SPECIALIZER "class chem::AGEdge_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AGEdge_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>/2935
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ComplexRestraint_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ComplexRestraint_O>" :SPECIALIZER "class chem::ComplexRestraint_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ComplexRestraint_O>" :SPECIALIZER "class chem::ComplexRestraint_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ComplexRestraint_O>), 0, "only" },
// Stamp = gctools::GCBitUnitArray_moveable<2,0>/2939
{ bitunit_container_kind, STAMP_gctools__GCBitUnitArray_moveable_2_0_, sizeof(gctools::GCBitUnitArray_moveable<2,0>), 2, "gctools::GCBitUnitArray_moveable<2,0>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<2,0>),_Data), "_Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<2,0>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<2,0>),_Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>/2943
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<kinematics::ChiDihedral_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::ChiDihedral_O>" :SPECIALIZER "class kinematics::ChiDihedral_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::ChiDihedral_O>" :SPECIALIZER "class kinematics::ChiDihedral_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::ChiDihedral_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>/2947
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Coupling_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Coupling_O>" :SPECIALIZER "class chem::Coupling_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Coupling_O>" :SPECIALIZER "class chem::Coupling_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Coupling_O>), 0, "only" },
// Stamp = gctools::GCBitUnitArray_moveable<1,0>/2951
{ bitunit_container_kind, STAMP_gctools__GCBitUnitArray_moveable_1_0_, sizeof(gctools::GCBitUnitArray_moveable<1,0>), 1, "gctools::GCBitUnitArray_moveable<1,0>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<1,0>),_Data), "_Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<1,0>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<1,0>),_Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = gctools::GCBitUnitArray_moveable<2,1>/2955
{ bitunit_container_kind, STAMP_gctools__GCBitUnitArray_moveable_2_1_, sizeof(gctools::GCBitUnitArray_moveable<2,1>), 2, "gctools::GCBitUnitArray_moveable<2,1>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<2,1>),_Data), "_Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<2,1>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<2,1>),_Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>/2959
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Topology_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Topology_O>" :SPECIALIZER "class chem::Topology_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Topology_O>" :SPECIALIZER "class chem::Topology_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Topology_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<int>/2963
{ container_kind, STAMP_gctools__GCVector_moveable_int_, sizeof(gctools::GCVector_moveable<int>), 0, "gctools::GCVector_moveable<int>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<int>),_Data), "_Data" },
 {  variable_capacity, sizeof(int), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<int>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<int>),_Capacity), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")>
{    variable_field, ctype_int, sizeof(int), 0, "only" },
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>/2967
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FrameRecognizer_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>/2971
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Stereoisomer_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Stereoisomer_O>" :SPECIALIZER "class chem::Stereoisomer_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Stereoisomer_O>" :SPECIALIZER "class chem::Stereoisomer_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Stereoisomer_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>/2975
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Mate_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Mate_O>" :SPECIALIZER "class chem::Mate_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Mate_O>" :SPECIALIZER "class chem::Mate_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Mate_O>), 0, "only" },
// Stamp = gctools::GCArray_moveable<float>/2979
{ container_kind, STAMP_gctools__GCArray_moveable_float_, sizeof(gctools::GCArray_moveable<float>), 0, "gctools::GCArray_moveable<float>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<float>),_Data), "_Data" },
 {  variable_capacity, sizeof(float), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<float>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<float>),_Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")>
{    variable_field, ctype_float, sizeof(float), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>/2983
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>/2987
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Bond_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Bond_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<core::T_O *>/2991
{ container_kind, STAMP_gctools__GCVector_moveable_core__T_O___, sizeof(gctools::GCVector_moveable<core::T_O *>), 0, "gctools::GCVector_moveable<core::T_O *>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::T_O *>),_Data), "_Data" },
 {  variable_capacity, sizeof(core::T_O*), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::T_O *>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::T_O *>),_Capacity), NULL },
// one -> #<POINTER-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::T_O" :NAME "T_O")) :base #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::T_O" :NAME "T_O"))>
{    variable_field, POINTER_OFFSET, sizeof(core::T_O*), 0, "only" },
// Stamp = gctools::GCVector_moveable<chem::EnergyDihedral>/2995
{ container_kind, STAMP_gctools__GCVector_moveable_chem__EnergyDihedral_, sizeof(gctools::GCVector_moveable<chem::EnergyDihedral>), 0, "gctools::GCVector_moveable<chem::EnergyDihedral>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyDihedral>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::EnergyDihedral), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyDihedral>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyDihedral>),_Capacity), NULL },
    {    variable_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),_Proper), "_Proper" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),_Atom1), "_Atom1" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),_Atom2), "_Atom2" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),_Atom3), "_Atom3" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),_Atom4), "_Atom4" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),_PhaseRad), "_PhaseRad" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.sinPhase), "term.sinPhase" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.cosPhase), "term.cosPhase" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.V), "term.V" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.DN), "term.DN" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.IN), "term.IN" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.I1), "term.I1" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.I2), "term.I2" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.I3), "term.I3" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.I4), "term.I4" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),_CalculatedDihedralDeviation), "_CalculatedDihedralDeviation" }, // public: (T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>/2999
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::MonomerNode_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCArray_moveable<unsigned int>/3003
{ container_kind, STAMP_gctools__GCArray_moveable_unsigned_int_, sizeof(gctools::GCArray_moveable<unsigned int>), 0, "gctools::GCArray_moveable<unsigned int>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned int>),_Data), "_Data" },
 {  variable_capacity, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned int>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned int>),_Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")>
{    variable_field, ctype_unsigned_int, sizeof(unsigned int), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>/3007
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::BondList_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BondList_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>/3011
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ConformationExplorerEntry_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntry_O>" :SPECIALIZER "class chem::ConformationExplorerEntry_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntry_O>" :SPECIALIZER "class chem::ConformationExplorerEntry_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConformationExplorerEntry_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<core::CacheRecord>/3015
{ container_kind, STAMP_gctools__GCVector_moveable_core__CacheRecord_, sizeof(gctools::GCVector_moveable<core::CacheRecord>), 0, "gctools::GCVector_moveable<core::CacheRecord>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::CacheRecord>),_Data), "_Data" },
 {  variable_capacity, sizeof(core::CacheRecord), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::CacheRecord>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::CacheRecord>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::CacheRecord),_key), "_key" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::CacheRecord),_value), "_value" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::CacheRecord),_generation), "_generation" }, // public: (T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>/3019
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::Cons_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Cons_O>" :SPECIALIZER "class core::Cons_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Cons_O>" :SPECIALIZER "class core::Cons_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Cons_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<double>/3023
{ container_kind, STAMP_gctools__GCVector_moveable_double_, sizeof(gctools::GCVector_moveable<double>), 0, "gctools::GCVector_moveable<double>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<double>),_Data), "_Data" },
 {  variable_capacity, sizeof(double), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<double>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<double>),_Capacity), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")>
{    variable_field, ctype_double, sizeof(double), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>/3027
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<kinematics::Rotamer_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Rotamer_O>" :SPECIALIZER "class kinematics::Rotamer_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Rotamer_O>" :SPECIALIZER "class kinematics::Rotamer_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Rotamer_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>/3031
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Residue_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Residue_O>" :SPECIALIZER "class chem::Residue_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Residue_O>" :SPECIALIZER "class chem::Residue_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Residue_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>/3035
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Molecule_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>/3039
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<clbind::ClassRep_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<clbind::ClassRep_O>" :SPECIALIZER "class clbind::ClassRep_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<clbind::ClassRep_O>" :SPECIALIZER "class clbind::ClassRep_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<clbind::ClassRep_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<chem::AtomPdbRec>/3043
{ container_kind, STAMP_gctools__GCVector_moveable_chem__AtomPdbRec_, sizeof(gctools::GCVector_moveable<chem::AtomPdbRec>), 0, "gctools::GCVector_moveable<chem::AtomPdbRec>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::AtomPdbRec>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::AtomPdbRec), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::AtomPdbRec>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::AtomPdbRec>),_Capacity), NULL },
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_line._M_string_length), "_line._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_line.NO-NAME._M_allocated_capacity), "_line.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_recordName._M_string_length), "_recordName._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_recordName.NO-NAME._M_allocated_capacity), "_recordName.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_serial), "_serial" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_name), "_name" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_altLoc._M_string_length), "_altLoc._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_altLoc.NO-NAME._M_allocated_capacity), "_altLoc.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_resName), "_resName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_chainId._M_string_length), "_chainId._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_chainId.NO-NAME._M_allocated_capacity), "_chainId.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_resSeq), "_resSeq" }, // public: (T) fixable: NIL good-name: T
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_iCode._M_string_length), "_iCode._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_iCode.NO-NAME._M_allocated_capacity), "_iCode.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_x), "_x" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_y), "_y" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_z), "_z" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_occupancy), "_occupancy" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_tempFactor), "_tempFactor" }, // public: (T) fixable: NIL good-name: T
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_element._M_string_length), "_element._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_element.NO-NAME._M_allocated_capacity), "_element.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_charge._M_string_length), "_charge._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_charge.NO-NAME._M_allocated_capacity), "_charge.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_atom), "_atom" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_residueIdx), "_residueIdx" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_moleculeIdx), "_moleculeIdx" }, // public: (T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<core::Cons_O>/3047
{ container_kind, STAMP_gctools__GCVector_moveable_core__Cons_O_, sizeof(gctools::GCVector_moveable<core::Cons_O>), 0, "gctools::GCVector_moveable<core::Cons_O>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::Cons_O>),_Data), "_Data" },
 {  variable_capacity, sizeof(core::Cons_O), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::Cons_O>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::Cons_O>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Cons_O),_Car), "_Car" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::Cons_O),_Cdr), "_Cdr" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<chem::EnergySketchStretch>/3051
{ container_kind, STAMP_gctools__GCVector_moveable_chem__EnergySketchStretch_, sizeof(gctools::GCVector_moveable<chem::EnergySketchStretch>), 0, "gctools::GCVector_moveable<chem::EnergySketchStretch>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergySketchStretch>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::EnergySketchStretch), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergySketchStretch>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergySketchStretch>),_Capacity), NULL },
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch),term.kb), "term.kb" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch),term.r0), "term.r0" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch),term.I1), "term.I1" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch),term.I2), "term.I2" }, // public: (T T) fixable: NIL good-name: T
// Stamp = gctools::GCArray_moveable<signed char>/3055
{ container_kind, STAMP_gctools__GCArray_moveable_signed_char_, sizeof(gctools::GCArray_moveable<signed char>), 0, "gctools::GCArray_moveable<signed char>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<signed char>),_Data), "_Data" },
 {  variable_capacity, sizeof(signed char), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<signed char>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<signed char>),_Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "signed char") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "signed char")>
{    variable_field, ctype_signed_char, sizeof(signed char), 0, "only" },
// Stamp = gctools::GCVector_moveable<chem::EnergyOutOfZPlane>/3059
{ container_kind, STAMP_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_, sizeof(gctools::GCVector_moveable<chem::EnergyOutOfZPlane>), 0, "gctools::GCVector_moveable<chem::EnergyOutOfZPlane>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyOutOfZPlane>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::EnergyOutOfZPlane), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyOutOfZPlane>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyOutOfZPlane>),_Capacity), NULL },
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane),term.kb), "term.kb" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane),term.I1), "term.I1" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane),term.za), "term.za" }, // public: (T T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>/3063
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::List_V>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), 0, "only" },
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>/3067
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Plug_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>/3071
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::CDBond_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDBond_O>" :SPECIALIZER "class chem::CDBond_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDBond_O>" :SPECIALIZER "class chem::CDBond_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CDBond_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>/3075
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>" :SPECIALIZER "class chem::ConformationExplorerEntryStage_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>" :SPECIALIZER "class chem::ConformationExplorerEntryStage_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<chem::EnergySketchNonbond>/3079
{ container_kind, STAMP_gctools__GCVector_moveable_chem__EnergySketchNonbond_, sizeof(gctools::GCVector_moveable<chem::EnergySketchNonbond>), 0, "gctools::GCVector_moveable<chem::EnergySketchNonbond>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergySketchNonbond>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::EnergySketchNonbond), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergySketchNonbond>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergySketchNonbond>),_Capacity), NULL },
    {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond),_FreezeFlags), "_FreezeFlags" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond),_Constant), "_Constant" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond),I1), "I1" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond),I2), "I2" }, // public: (T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>/3083
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>/3087
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Twister_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Twister_O>" :SPECIALIZER "class chem::Twister_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Twister_O>" :SPECIALIZER "class chem::Twister_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Twister_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<chem::FixedNonbondRestraint>/3091
{ container_kind, STAMP_gctools__GCVector_moveable_chem__FixedNonbondRestraint_, sizeof(gctools::GCVector_moveable<chem::FixedNonbondRestraint>), 0, "gctools::GCVector_moveable<chem::FixedNonbondRestraint>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::FixedNonbondRestraint>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::FixedNonbondRestraint), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::FixedNonbondRestraint>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::FixedNonbondRestraint>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::FixedNonbondRestraint),_FixedAtom), "_FixedAtom" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::FixedNonbondRestraint),_FixedCharge), "_FixedCharge" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::FixedNonbondRestraint),_FixedType), "_FixedType" }, // public: (T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>/3095
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::SingleDispatchMethod_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SingleDispatchMethod_O>" :SPECIALIZER "class core::SingleDispatchMethod_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SingleDispatchMethod_O>" :SPECIALIZER "class core::SingleDispatchMethod_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SingleDispatchMethod_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>/3099
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<adapt::QDomNode_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<adapt::QDomNode_O>" :SPECIALIZER "class adapt::QDomNode_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<adapt::QDomNode_O>" :SPECIALIZER "class adapt::QDomNode_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<adapt::QDomNode_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>/3103
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ZMatrixInternal_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixInternal_O>" :SPECIALIZER "class chem::ZMatrixInternal_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixInternal_O>" :SPECIALIZER "class chem::ZMatrixInternal_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrixInternal_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>/3107
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CDFragment_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>/3111
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Molecule_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Molecule_O>" :SPECIALIZER "class chem::Molecule_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Molecule_O>" :SPECIALIZER "class chem::Molecule_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Molecule_O>), 0, "only" },
// Stamp = gctools::GCArray_moveable<double>/3115
{ container_kind, STAMP_gctools__GCArray_moveable_double_, sizeof(gctools::GCArray_moveable<double>), 0, "gctools::GCArray_moveable<double>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<double>),_Data), "_Data" },
 {  variable_capacity, sizeof(double), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<double>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<double>),_Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")>
{    variable_field, ctype_double, sizeof(double), 0, "only" },
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>/3119
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::PdbMonomerConnectivity_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>/3123
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___, sizeof(gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>), 0, "gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>),_Capacity), NULL },
    {    variable_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>),first), "first" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Residue_O>), offsetof(SAFE_TYPE_MACRO(std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>/3127
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>),second), "second" }, // public: (T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>/3131
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::PathMessage_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::PathMessage_O>" :SPECIALIZER "class chem::PathMessage_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::PathMessage_O>" :SPECIALIZER "class chem::PathMessage_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::PathMessage_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<core::RequiredArgument>/3135
{ container_kind, STAMP_gctools__GCVector_moveable_core__RequiredArgument_, sizeof(gctools::GCVector_moveable<core::RequiredArgument>), 0, "gctools::GCVector_moveable<core::RequiredArgument>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::RequiredArgument>),_Data), "_Data" },
 {  variable_capacity, sizeof(core::RequiredArgument), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::RequiredArgument>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::RequiredArgument>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::RequiredArgument),_ArgTarget), "_ArgTarget" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::RequiredArgument),_ArgTargetFrameIndex), "_ArgTargetFrameIndex" }, // public: (T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>/3139
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::FileScope_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::FileScope_O>" :SPECIALIZER "class core::FileScope_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::FileScope_O>" :SPECIALIZER "class core::FileScope_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::FileScope_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>/3143
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ZMatrixEntry_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixEntry_O>" :SPECIALIZER "class chem::ZMatrixEntry_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixEntry_O>" :SPECIALIZER "class chem::ZMatrixEntry_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrixEntry_O>), 0, "only" },
// Stamp = gctools::GCBitUnitArray_moveable<4,1>/3147
{ bitunit_container_kind, STAMP_gctools__GCBitUnitArray_moveable_4_1_, sizeof(gctools::GCBitUnitArray_moveable<4,1>), 4, "gctools::GCBitUnitArray_moveable<4,1>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<4,1>),_Data), "_Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<4,1>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<4,1>),_Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = gctools::GCVector_moveable<core::SymbolStorage>/3151
{ container_kind, STAMP_gctools__GCVector_moveable_core__SymbolStorage_, sizeof(gctools::GCVector_moveable<core::SymbolStorage>), 0, "gctools::GCVector_moveable<core::SymbolStorage>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::SymbolStorage>),_Data), "_Data" },
 {  variable_capacity, sizeof(core::SymbolStorage), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::SymbolStorage>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::SymbolStorage>),_Capacity), NULL },
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SymbolStorage),_PackageName._M_string_length), "_PackageName._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SymbolStorage),_PackageName.NO-NAME._M_allocated_capacity), "_PackageName.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SymbolStorage),_SymbolName._M_string_length), "_SymbolName._M_string_length" }, // public: (T NIL) fixable: NIL good-name: T
// not-exposed-yet     {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(core::SymbolStorage),_SymbolName.NO-NAME._M_allocated_capacity), "_SymbolName.NO-NAME._M_allocated_capacity" }, // public: (T NIL T) fixable: NIL good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(core::SymbolStorage),_Symbol), "_Symbol" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::SymbolStorage),_Export), "_Export" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(core::SymbolStorage),_Shadow), "_Shadow" }, // public: (T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>/3155
{ container_kind, STAMP_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_, sizeof(gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>), 0, "gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::BeyondThresholdFixedNonbondRestraint), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::BeyondThresholdFixedNonbondRestraint),_MobileAtom), "_MobileAtom" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::BeyondThresholdFixedNonbondRestraint),_FixedAtom), "_FixedAtom" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::BeyondThresholdFixedNonbondRestraint),_NonbondDistance), "_NonbondDistance" }, // public: (T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>/3159
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___, sizeof(gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>), 0, "gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<int,gctools::smart_ptr<chem::CDNode_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>),_Capacity), NULL },
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(std::pair<int,gctools::smart_ptr<chem::CDNode_O>>),first), "first" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CDNode_O>), offsetof(SAFE_TYPE_MACRO(std::pair<int,gctools::smart_ptr<chem::CDNode_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>/3163
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::DoubleFloat_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>/3167
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::Instance_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>/3171
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<chem::Atom_O>,int>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<chem::Atom_O>,int>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<chem::Atom_O>,int>),second), "second" }, // public: (T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>/3175
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>/3179
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::MonomerCoordinates_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::MonomerCoordinates_O>" :SPECIALIZER "class chem::MonomerCoordinates_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::MonomerCoordinates_O>" :SPECIALIZER "class chem::MonomerCoordinates_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::MonomerCoordinates_O>), 0, "only" },
// Stamp = gctools::GCArray_moveable<unsigned long>/3183
{ container_kind, STAMP_gctools__GCArray_moveable_unsigned_long_, sizeof(gctools::GCArray_moveable<unsigned long>), 0, "gctools::GCArray_moveable<unsigned long>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned long>),_Data), "_Data" },
 {  variable_capacity, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned long>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned long>),_Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, "only" },
// Stamp = gctools::GCVector_moveable<chem::EnergyNonbond>/3187
{ container_kind, STAMP_gctools__GCVector_moveable_chem__EnergyNonbond_, sizeof(gctools::GCVector_moveable<chem::EnergyNonbond>), 0, "gctools::GCVector_moveable<chem::EnergyNonbond>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyNonbond>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::EnergyNonbond), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyNonbond>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyNonbond>),_Capacity), NULL },
    {    variable_field, ctype__Bool, sizeof(_Bool), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),_Is14), "_Is14" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),_Atom1), "_Atom1" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),_Atom2), "_Atom2" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),_A), "_A" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),_C), "_C" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),_Charge1), "_Charge1" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),_Charge2), "_Charge2" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),_RStar), "_RStar" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),term.dQ1Q2), "term.dQ1Q2" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),term.dA), "term.dA" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),term.dC), "term.dC" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),term.I1), "term.I1" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),term.I2), "term.I2" }, // public: (T T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>/3191
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<chem::AtomInfo>/3195
{ container_kind, STAMP_gctools__GCVector_moveable_chem__AtomInfo_, sizeof(gctools::GCVector_moveable<chem::AtomInfo>), 0, "gctools::GCVector_moveable<chem::AtomInfo>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::AtomInfo>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::AtomInfo), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::AtomInfo>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::AtomInfo>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomInfo),_Atom), "_Atom" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Residue_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomInfo),_Residue), "_Residue" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::AtomInfo),_Type), "_Type" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>/3199
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::FFVdw_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFVdw_O>" :SPECIALIZER "class chem::FFVdw_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFVdw_O>" :SPECIALIZER "class chem::FFVdw_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFVdw_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>/3203
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ConstitutionAtom_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionAtom_O>" :SPECIALIZER "class chem::ConstitutionAtom_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionAtom_O>" :SPECIALIZER "class chem::ConstitutionAtom_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConstitutionAtom_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<chem::EnergyAtom>/3207
{ container_kind, STAMP_gctools__GCVector_moveable_chem__EnergyAtom_, sizeof(gctools::GCVector_moveable<chem::EnergyAtom>), 0, "gctools::GCVector_moveable<chem::EnergyAtom>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAtom>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::EnergyAtom), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAtom>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAtom>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_SharedAtom), "_SharedAtom" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_IndexTimes3), "_IndexTimes3" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_AtomName), "_AtomName" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_Charge), "_Charge" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_Mass), "_Mass" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_TypeIndex), "_TypeIndex" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_AtomicNumber), "_AtomicNumber" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_Flag), "_Flag" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_AtomsAtRemoveBondAngle14[0]._Contents), "_AtomsAtRemoveBondAngle14[0]._Contents" }, // public: (T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
    {    variable_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_AtomsAtRemoveBondAngle14[1]._Contents), "_AtomsAtRemoveBondAngle14[1]._Contents" }, // public: (T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
    {    variable_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_AtomsAtRemoveBondAngle14[2]._Contents), "_AtomsAtRemoveBondAngle14[2]._Contents" }, // public: (T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>/3211
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CDNode_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCArray_moveable<int>/3215
{ container_kind, STAMP_gctools__GCArray_moveable_int_, sizeof(gctools::GCArray_moveable<int>), 0, "gctools::GCArray_moveable<int>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<int>),_Data), "_Data" },
 {  variable_capacity, sizeof(int), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<int>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<int>),_Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")>
{    variable_field, ctype_int, sizeof(int), 0, "only" },
// Stamp = gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>/3219
{ container_kind, STAMP_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__, sizeof(gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>), 0, "gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>),_Length), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<core::AuxArgument>/3223
{ container_kind, STAMP_gctools__GCVector_moveable_core__AuxArgument_, sizeof(gctools::GCVector_moveable<core::AuxArgument>), 0, "gctools::GCVector_moveable<core::AuxArgument>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::AuxArgument>),_Data), "_Data" },
 {  variable_capacity, sizeof(core::AuxArgument), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::AuxArgument>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::AuxArgument>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::AuxArgument),_ArgTarget), "_ArgTarget" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(core::AuxArgument),_ArgTargetFrameIndex), "_ArgTargetFrameIndex" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(core::AuxArgument),_Expression), "_Expression" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<chem::ResidueOut>/3227
{ container_kind, STAMP_gctools__GCVector_moveable_chem__ResidueOut_, sizeof(gctools::GCVector_moveable<chem::ResidueOut>), 0, "gctools::GCVector_moveable<chem::ResidueOut>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::ResidueOut>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::ResidueOut), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::ResidueOut>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::ResidueOut>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Molecule_O>), offsetof(SAFE_TYPE_MACRO(chem::ResidueOut),mol), "mol" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Residue_O>), offsetof(SAFE_TYPE_MACRO(chem::ResidueOut),res), "res" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_unsigned_int, sizeof(unsigned int), offsetof(SAFE_TYPE_MACRO(chem::ResidueOut),firstAtom), "firstAtom" }, // public: (T) fixable: NIL good-name: T
// Stamp = gctools::GCArray_moveable<long>/3231
{ container_kind, STAMP_gctools__GCArray_moveable_long_, sizeof(gctools::GCArray_moveable<long>), 0, "gctools::GCArray_moveable<long>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<long>),_Data), "_Data" },
 {  variable_capacity, sizeof(long), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<long>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<long>),_Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long")>
{    variable_field, ctype_long, sizeof(long), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>/3235
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<kinematics::JointTemplate_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::JointTemplate_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<chem::RigidBodyAtomInfo>/3239
{ container_kind, STAMP_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_, sizeof(gctools::GCVector_moveable<chem::RigidBodyAtomInfo>), 0, "gctools::GCVector_moveable<chem::RigidBodyAtomInfo>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::RigidBodyAtomInfo>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::RigidBodyAtomInfo), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::RigidBodyAtomInfo>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::RigidBodyAtomInfo>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), offsetof(SAFE_TYPE_MACRO(chem::RigidBodyAtomInfo),_Object), "_Object" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, ctype_unsigned_long, sizeof(unsigned long), offsetof(SAFE_TYPE_MACRO(chem::RigidBodyAtomInfo),_TypeIndex), "_TypeIndex" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::RigidBodyAtomInfo),_Radius), "_Radius" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::RigidBodyAtomInfo),_Epsilon), "_Epsilon" }, // public: (T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::RigidBodyAtomInfo),_Charge), "_Charge" }, // public: (T) fixable: NIL good-name: T
// Stamp = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>/3243
{ container_kind, STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>), 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>),_Data), "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>),_Capacity), NULL },
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>),first), "first" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Topology_O>), offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>),second), "second" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>/3247
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::StereoisomerAtoms_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoisomerAtoms_O>" :SPECIALIZER "class chem::StereoisomerAtoms_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoisomerAtoms_O>" :SPECIALIZER "class chem::StereoisomerAtoms_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::StereoisomerAtoms_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>/3251
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::Package_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<chem::EnergyStretch>/3255
{ container_kind, STAMP_gctools__GCVector_moveable_chem__EnergyStretch_, sizeof(gctools::GCVector_moveable<chem::EnergyStretch>), 0, "gctools::GCVector_moveable<chem::EnergyStretch>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyStretch>),_Data), "_Data" },
 {  variable_capacity, sizeof(chem::EnergyStretch), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyStretch>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyStretch>),_Capacity), NULL },
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch),term.kb), "term.kb" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_double, sizeof(double), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch),term.r0), "term.r0" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch),term.I1), "term.I1" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, ctype_int, sizeof(int), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch),term.I2), "term.I2" }, // public: (T T) fixable: NIL good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch),_Atom1), "_Atom1" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch),_Atom2), "_Atom2" }, // public: (T) fixable: SMART-PTR-FIX good-name: T
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>/3259
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::Creator_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Creator_O>" :SPECIALIZER "class core::Creator_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Creator_O>" :SPECIALIZER "class core::Creator_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Creator_O>), 0, "only" },
// Stamp = gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>/3263
{ container_kind, STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>), 0, "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>),_Data), "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<kinematics::Joint_O>), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>),_Capacity), NULL },
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), 0, "only" },
// Stamp = gctools::GCArray_moveable<unsigned short>/3267
{ container_kind, STAMP_gctools__GCArray_moveable_unsigned_short_, sizeof(gctools::GCArray_moveable<unsigned short>), 0, "gctools::GCArray_moveable<unsigned short>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned short>),_Data), "_Data" },
 {  variable_capacity, sizeof(unsigned short), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned short>),_Length), offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned short>),_Length), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned short") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned short")>
{    variable_field, ctype_unsigned_short, sizeof(unsigned short), 0, "only" },
// Stamp = gctools::GCVector_moveable<float>/3271
{ container_kind, STAMP_gctools__GCVector_moveable_float_, sizeof(gctools::GCVector_moveable<float>), 0, "gctools::GCVector_moveable<float>" },
 {  variable_array0, 0, 0, offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<float>),_Data), "_Data" },
 {  variable_capacity, sizeof(float), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<float>),_End), offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<float>),_Capacity), NULL },
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")>
{    variable_field, ctype_float, sizeof(float), 0, "only" },
// Stamp = clang::FrontendAction/3275
// Stamp = clang::ASTFrontendAction/3279
// Stamp = clang::SyntaxOnlyAction/3283
// Stamp = clang::tooling::ToolAction/3287
// Stamp = clang::tooling::FrontendActionFactory/3291
// Stamp = clang::ast_matchers::MatchFinder::MatchCallback/3295

#endif // defined(GC_OBJ_SCAN_HELPERS)
#if defined(GC_OBJ_SCAN_TABLE)
static void* OBJ_SCAN_table[] = { 
  /* 0 */ NULL,
   NULL
};
#endif // defined(GC_OBJ_SCAN_TABLE)
#if defined(GC_OBJ_FINALIZE)
obj_finalize_STAMP_core__T_O:
{
     // stamp value 7
    core::T_O* obj_gc_safe = reinterpret_cast<core::T_O*>(client);
    obj_gc_safe->~T_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Unused_dummy_O:
{
     // stamp value 11
    core::Unused_dummy_O* obj_gc_safe = reinterpret_cast<core::Unused_dummy_O*>(client);
    obj_gc_safe->~Unused_dummy_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__General_O:
{
     // stamp value 15
    core::General_O* obj_gc_safe = reinterpret_cast<core::General_O*>(client);
    obj_gc_safe->~General_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__MultiStringBuffer_O:
{
     // stamp value 19
    core::MultiStringBuffer_O* obj_gc_safe = reinterpret_cast<core::MultiStringBuffer_O*>(client);
    obj_gc_safe->~MultiStringBuffer_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__LambdaListHandler_O:
{
     // stamp value 23
    core::LambdaListHandler_O* obj_gc_safe = reinterpret_cast<core::LambdaListHandler_O*>(client);
    obj_gc_safe->~LambdaListHandler_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__AttributeSet_O:
{
     // stamp value 27
    llvmo::AttributeSet_O* obj_gc_safe = reinterpret_cast<llvmo::AttributeSet_O*>(client);
    obj_gc_safe->~AttributeSet_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__AtomicT_Holder_O:
{
     // stamp value 31
    core::AtomicT_Holder_O* obj_gc_safe = reinterpret_cast<core::AtomicT_Holder_O*>(client);
    obj_gc_safe->~AtomicT_Holder_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Pointer_O:
{
     // stamp value 35
    core::Pointer_O* obj_gc_safe = reinterpret_cast<core::Pointer_O*>(client);
    obj_gc_safe->~Pointer_O();
    goto finalize_done;
}
obj_finalize_STAMP_clasp_ffi__ForeignData_O:
{
     // stamp value 39
    clasp_ffi::ForeignData_O* obj_gc_safe = reinterpret_cast<clasp_ffi::ForeignData_O*>(client);
    obj_gc_safe->~ForeignData_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__CxxObject_O:
{
     // stamp value 43
    core::CxxObject_O* obj_gc_safe = reinterpret_cast<core::CxxObject_O*>(client);
    obj_gc_safe->~CxxObject_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__ChiList_O:
{
     // stamp value 47
    kinematics::ChiList_O* obj_gc_safe = reinterpret_cast<kinematics::ChiList_O*>(client);
    obj_gc_safe->~ChiList_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__NumericalFunction_O:
{
     // stamp value 51
    chem::NumericalFunction_O* obj_gc_safe = reinterpret_cast<chem::NumericalFunction_O*>(client);
    obj_gc_safe->~NumericalFunction_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__FoldTree_O:
{
     // stamp value 55
    kinematics::FoldTree_O* obj_gc_safe = reinterpret_cast<kinematics::FoldTree_O*>(client);
    obj_gc_safe->~FoldTree_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__StatusTracker_O:
{
     // stamp value 59
    chem::StatusTracker_O* obj_gc_safe = reinterpret_cast<chem::StatusTracker_O*>(client);
    obj_gc_safe->~StatusTracker_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__RotamerSetBase_O:
{
     // stamp value 63
    kinematics::RotamerSetBase_O* obj_gc_safe = reinterpret_cast<kinematics::RotamerSetBase_O*>(client);
    obj_gc_safe->~RotamerSetBase_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__BackboneDependentRotamerSet_O:
{
     // stamp value 67
    kinematics::BackboneDependentRotamerSet_O* obj_gc_safe = reinterpret_cast<kinematics::BackboneDependentRotamerSet_O*>(client);
    obj_gc_safe->~BackboneDependentRotamerSet_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__RotamerSet_O:
{
     // stamp value 71
    kinematics::RotamerSet_O* obj_gc_safe = reinterpret_cast<kinematics::RotamerSet_O*>(client);
    obj_gc_safe->~RotamerSet_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergyComponent_O:
{
     // stamp value 75
    chem::EnergyComponent_O* obj_gc_safe = reinterpret_cast<chem::EnergyComponent_O*>(client);
    obj_gc_safe->~EnergyComponent_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergyStretch_O:
{
     // stamp value 79
    chem::EnergyStretch_O* obj_gc_safe = reinterpret_cast<chem::EnergyStretch_O*>(client);
    obj_gc_safe->~EnergyStretch_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergyRigidBodyComponent_O:
{
     // stamp value 83
    chem::EnergyRigidBodyComponent_O* obj_gc_safe = reinterpret_cast<chem::EnergyRigidBodyComponent_O*>(client);
    obj_gc_safe->~EnergyRigidBodyComponent_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergyRigidBodyStaple_O:
{
     // stamp value 87
    chem::EnergyRigidBodyStaple_O* obj_gc_safe = reinterpret_cast<chem::EnergyRigidBodyStaple_O*>(client);
    obj_gc_safe->~EnergyRigidBodyStaple_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergyRigidBodyNonbond_O:
{
     // stamp value 91
    chem::EnergyRigidBodyNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergyRigidBodyNonbond_O*>(client);
    obj_gc_safe->~EnergyRigidBodyNonbond_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergyOutOfZPlane_O:
{
     // stamp value 95
    chem::EnergyOutOfZPlane_O* obj_gc_safe = reinterpret_cast<chem::EnergyOutOfZPlane_O*>(client);
    obj_gc_safe->~EnergyOutOfZPlane_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergySketchNonbond_O:
{
     // stamp value 99
    chem::EnergySketchNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergySketchNonbond_O*>(client);
    obj_gc_safe->~EnergySketchNonbond_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergyChiralRestraint_O:
{
     // stamp value 103
    chem::EnergyChiralRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyChiralRestraint_O*>(client);
    obj_gc_safe->~EnergyChiralRestraint_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergyPointToLineRestraint_O:
{
     // stamp value 107
    chem::EnergyPointToLineRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyPointToLineRestraint_O*>(client);
    obj_gc_safe->~EnergyPointToLineRestraint_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergyDihedral_O:
{
     // stamp value 111
    chem::EnergyDihedral_O* obj_gc_safe = reinterpret_cast<chem::EnergyDihedral_O*>(client);
    obj_gc_safe->~EnergyDihedral_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergyNonbond_O:
{
     // stamp value 115
    chem::EnergyNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergyNonbond_O*>(client);
    obj_gc_safe->~EnergyNonbond_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergyPeriodicBoundaryConditionsNonbond_O:
{
     // stamp value 119
    chem::EnergyPeriodicBoundaryConditionsNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergyPeriodicBoundaryConditionsNonbond_O*>(client);
    obj_gc_safe->~EnergyPeriodicBoundaryConditionsNonbond_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergyAnchorRestraint_O:
{
     // stamp value 123
    chem::EnergyAnchorRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyAnchorRestraint_O*>(client);
    obj_gc_safe->~EnergyAnchorRestraint_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergyFixedNonbondRestraint_O:
{
     // stamp value 127
    chem::EnergyFixedNonbondRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyFixedNonbondRestraint_O*>(client);
    obj_gc_safe->~EnergyFixedNonbondRestraint_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergySketchStretch_O:
{
     // stamp value 131
    chem::EnergySketchStretch_O* obj_gc_safe = reinterpret_cast<chem::EnergySketchStretch_O*>(client);
    obj_gc_safe->~EnergySketchStretch_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergyImproperRestraint_O:
{
     // stamp value 135
    chem::EnergyImproperRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyImproperRestraint_O*>(client);
    obj_gc_safe->~EnergyImproperRestraint_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergyAngle_O:
{
     // stamp value 139
    chem::EnergyAngle_O* obj_gc_safe = reinterpret_cast<chem::EnergyAngle_O*>(client);
    obj_gc_safe->~EnergyAngle_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Matter_O:
{
     // stamp value 143
    chem::Matter_O* obj_gc_safe = reinterpret_cast<chem::Matter_O*>(client);
    obj_gc_safe->~Matter_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Aggregate_O:
{
     // stamp value 147
    chem::Aggregate_O* obj_gc_safe = reinterpret_cast<chem::Aggregate_O*>(client);
    obj_gc_safe->~Aggregate_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Atom_O:
{
     // stamp value 151
    chem::Atom_O* obj_gc_safe = reinterpret_cast<chem::Atom_O*>(client);
    obj_gc_safe->~Atom_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__VirtualAtom_O:
{
     // stamp value 155
    chem::VirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::VirtualAtom_O*>(client);
    obj_gc_safe->~VirtualAtom_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Residue_O:
{
     // stamp value 159
    chem::Residue_O* obj_gc_safe = reinterpret_cast<chem::Residue_O*>(client);
    obj_gc_safe->~Residue_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Molecule_O:
{
     // stamp value 163
    chem::Molecule_O* obj_gc_safe = reinterpret_cast<chem::Molecule_O*>(client);
    obj_gc_safe->~Molecule_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__PdbWriter_O:
{
     // stamp value 167
    chem::PdbWriter_O* obj_gc_safe = reinterpret_cast<chem::PdbWriter_O*>(client);
    obj_gc_safe->~PdbWriter_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__TrajectoryFrame_O:
{
     // stamp value 171
    chem::TrajectoryFrame_O* obj_gc_safe = reinterpret_cast<chem::TrajectoryFrame_O*>(client);
    obj_gc_safe->~TrajectoryFrame_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__MDBuilder_O:
{
     // stamp value 175
    llvmo::MDBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::MDBuilder_O*>(client);
    obj_gc_safe->~MDBuilder_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Topology_O:
{
     // stamp value 179
    chem::Topology_O* obj_gc_safe = reinterpret_cast<chem::Topology_O*>(client);
    obj_gc_safe->~Topology_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__AtomTable_O:
{
     // stamp value 183
    chem::AtomTable_O* obj_gc_safe = reinterpret_cast<chem::AtomTable_O*>(client);
    obj_gc_safe->~AtomTable_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__CipPrioritizer_O:
{
     // stamp value 187
    chem::CipPrioritizer_O* obj_gc_safe = reinterpret_cast<chem::CipPrioritizer_O*>(client);
    obj_gc_safe->~CipPrioritizer_O();
    goto finalize_done;
}
obj_finalize_STAMP_adapt__IndexedObjectBag_O:
{
     // stamp value 191
    adapt::IndexedObjectBag_O* obj_gc_safe = reinterpret_cast<adapt::IndexedObjectBag_O*>(client);
    obj_gc_safe->~IndexedObjectBag_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__VirtualSphere_O:
{
     // stamp value 195
    chem::VirtualSphere_O* obj_gc_safe = reinterpret_cast<chem::VirtualSphere_O*>(client);
    obj_gc_safe->~VirtualSphere_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__TwisterDriver_O:
{
     // stamp value 199
    chem::TwisterDriver_O* obj_gc_safe = reinterpret_cast<chem::TwisterDriver_O*>(client);
    obj_gc_safe->~TwisterDriver_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__NativeVector_double_O:
{
     // stamp value 203
    core::NativeVector_double_O* obj_gc_safe = reinterpret_cast<core::NativeVector_double_O*>(client);
    obj_gc_safe->~NativeVector_double_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__RingFinder_O:
{
     // stamp value 207
    chem::RingFinder_O* obj_gc_safe = reinterpret_cast<chem::RingFinder_O*>(client);
    obj_gc_safe->~RingFinder_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__FunctionCallee_O:
{
     // stamp value 211
    llvmo::FunctionCallee_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionCallee_O*>(client);
    obj_gc_safe->~FunctionCallee_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__Joint_O:
{
     // stamp value 215
    kinematics::Joint_O* obj_gc_safe = reinterpret_cast<kinematics::Joint_O*>(client);
    obj_gc_safe->~Joint_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__JumpJoint_O:
{
     // stamp value 219
    kinematics::JumpJoint_O* obj_gc_safe = reinterpret_cast<kinematics::JumpJoint_O*>(client);
    obj_gc_safe->~JumpJoint_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__OriginJumpJoint_O:
{
     // stamp value 223
    kinematics::OriginJumpJoint_O* obj_gc_safe = reinterpret_cast<kinematics::OriginJumpJoint_O*>(client);
    obj_gc_safe->~OriginJumpJoint_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__BondedJoint_O:
{
     // stamp value 227
    kinematics::BondedJoint_O* obj_gc_safe = reinterpret_cast<kinematics::BondedJoint_O*>(client);
    obj_gc_safe->~BondedJoint_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__RootBondedJoint_O:
{
     // stamp value 231
    kinematics::RootBondedJoint_O* obj_gc_safe = reinterpret_cast<kinematics::RootBondedJoint_O*>(client);
    obj_gc_safe->~RootBondedJoint_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__DelayedBondedJoint_O:
{
     // stamp value 235
    kinematics::DelayedBondedJoint_O* obj_gc_safe = reinterpret_cast<kinematics::DelayedBondedJoint_O*>(client);
    obj_gc_safe->~DelayedBondedJoint_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__SearchStatistics_O:
{
     // stamp value 239
    chem::SearchStatistics_O* obj_gc_safe = reinterpret_cast<chem::SearchStatistics_O*>(client);
    obj_gc_safe->~SearchStatistics_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__PdbMonomerDatabase_O:
{
     // stamp value 243
    chem::PdbMonomerDatabase_O* obj_gc_safe = reinterpret_cast<chem::PdbMonomerDatabase_O*>(client);
    obj_gc_safe->~PdbMonomerDatabase_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Twister_O:
{
     // stamp value 247
    chem::Twister_O* obj_gc_safe = reinterpret_cast<chem::Twister_O*>(client);
    obj_gc_safe->~Twister_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__MonomerCoordinates_O:
{
     // stamp value 251
    chem::MonomerCoordinates_O* obj_gc_safe = reinterpret_cast<chem::MonomerCoordinates_O*>(client);
    obj_gc_safe->~MonomerCoordinates_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFParameter_O:
{
     // stamp value 255
    chem::FFParameter_O* obj_gc_safe = reinterpret_cast<chem::FFParameter_O*>(client);
    obj_gc_safe->~FFParameter_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFVdw_O:
{
     // stamp value 259
    chem::FFVdw_O* obj_gc_safe = reinterpret_cast<chem::FFVdw_O*>(client);
    obj_gc_safe->~FFVdw_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFStretch_O:
{
     // stamp value 263
    chem::FFStretch_O* obj_gc_safe = reinterpret_cast<chem::FFStretch_O*>(client);
    obj_gc_safe->~FFStretch_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFPtor_O:
{
     // stamp value 267
    chem::FFPtor_O* obj_gc_safe = reinterpret_cast<chem::FFPtor_O*>(client);
    obj_gc_safe->~FFPtor_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFItor_O:
{
     // stamp value 271
    chem::FFItor_O* obj_gc_safe = reinterpret_cast<chem::FFItor_O*>(client);
    obj_gc_safe->~FFItor_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFNonbond_O:
{
     // stamp value 275
    chem::FFNonbond_O* obj_gc_safe = reinterpret_cast<chem::FFNonbond_O*>(client);
    obj_gc_safe->~FFNonbond_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFAngle_O:
{
     // stamp value 279
    chem::FFAngle_O* obj_gc_safe = reinterpret_cast<chem::FFAngle_O*>(client);
    obj_gc_safe->~FFAngle_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Restraint_O:
{
     // stamp value 283
    chem::Restraint_O* obj_gc_safe = reinterpret_cast<chem::Restraint_O*>(client);
    obj_gc_safe->~Restraint_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__RestraintChiral_O:
{
     // stamp value 287
    chem::RestraintChiral_O* obj_gc_safe = reinterpret_cast<chem::RestraintChiral_O*>(client);
    obj_gc_safe->~RestraintChiral_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__RestraintDistance_O:
{
     // stamp value 291
    chem::RestraintDistance_O* obj_gc_safe = reinterpret_cast<chem::RestraintDistance_O*>(client);
    obj_gc_safe->~RestraintDistance_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__RestraintAngle_O:
{
     // stamp value 295
    chem::RestraintAngle_O* obj_gc_safe = reinterpret_cast<chem::RestraintAngle_O*>(client);
    obj_gc_safe->~RestraintAngle_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__RestraintAnchor_O:
{
     // stamp value 299
    chem::RestraintAnchor_O* obj_gc_safe = reinterpret_cast<chem::RestraintAnchor_O*>(client);
    obj_gc_safe->~RestraintAnchor_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__RestraintFixedNonbond_O:
{
     // stamp value 303
    chem::RestraintFixedNonbond_O* obj_gc_safe = reinterpret_cast<chem::RestraintFixedNonbond_O*>(client);
    obj_gc_safe->~RestraintFixedNonbond_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__RestraintDihedral_O:
{
     // stamp value 307
    chem::RestraintDihedral_O* obj_gc_safe = reinterpret_cast<chem::RestraintDihedral_O*>(client);
    obj_gc_safe->~RestraintDihedral_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__AtomIndexer_O:
{
     // stamp value 311
    chem::AtomIndexer_O* obj_gc_safe = reinterpret_cast<chem::AtomIndexer_O*>(client);
    obj_gc_safe->~AtomIndexer_O();
    goto finalize_done;
}
obj_finalize_STAMP_geom__BoundingCuboid_O:
{
     // stamp value 315
    geom::BoundingCuboid_O* obj_gc_safe = reinterpret_cast<geom::BoundingCuboid_O*>(client);
    obj_gc_safe->~BoundingCuboid_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__StereoInformation_O:
{
     // stamp value 319
    chem::StereoInformation_O* obj_gc_safe = reinterpret_cast<chem::StereoInformation_O*>(client);
    obj_gc_safe->~StereoInformation_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__AddIonOctree_O:
{
     // stamp value 323
    chem::AddIonOctree_O* obj_gc_safe = reinterpret_cast<chem::AddIonOctree_O*>(client);
    obj_gc_safe->~AddIonOctree_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__CDNode_O:
{
     // stamp value 327
    chem::CDNode_O* obj_gc_safe = reinterpret_cast<chem::CDNode_O*>(client);
    obj_gc_safe->~CDNode_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__OligomerPart_Base_O:
{
     // stamp value 331
    chem::OligomerPart_Base_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Base_O*>(client);
    obj_gc_safe->~OligomerPart_Base_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__OligomerPart_Link_O:
{
     // stamp value 335
    chem::OligomerPart_Link_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Link_O*>(client);
    obj_gc_safe->~OligomerPart_Link_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__OligomerPart_Monomer_O:
{
     // stamp value 339
    chem::OligomerPart_Monomer_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Monomer_O*>(client);
    obj_gc_safe->~OligomerPart_Monomer_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__BondId_O:
{
     // stamp value 343
    kinematics::BondId_O* obj_gc_safe = reinterpret_cast<kinematics::BondId_O*>(client);
    obj_gc_safe->~BondId_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Serializer_O:
{
     // stamp value 347
    core::Serializer_O* obj_gc_safe = reinterpret_cast<core::Serializer_O*>(client);
    obj_gc_safe->~Serializer_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__CoordinateSystem_O:
{
     // stamp value 351
    chem::CoordinateSystem_O* obj_gc_safe = reinterpret_cast<chem::CoordinateSystem_O*>(client);
    obj_gc_safe->~CoordinateSystem_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Bond_O:
{
     // stamp value 355
    chem::Bond_O* obj_gc_safe = reinterpret_cast<chem::Bond_O*>(client);
    obj_gc_safe->~Bond_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__CandoDatabase_O:
{
     // stamp value 359
    chem::CandoDatabase_O* obj_gc_safe = reinterpret_cast<chem::CandoDatabase_O*>(client);
    obj_gc_safe->~CandoDatabase_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__AbstractLargeSquareMatrix_O:
{
     // stamp value 363
    chem::AbstractLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::AbstractLargeSquareMatrix_O*>(client);
    obj_gc_safe->~AbstractLargeSquareMatrix_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__SparseLargeSquareMatrix_O:
{
     // stamp value 367
    chem::SparseLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::SparseLargeSquareMatrix_O*>(client);
    obj_gc_safe->~SparseLargeSquareMatrix_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FullLargeSquareMatrix_O:
{
     // stamp value 371
    chem::FullLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::FullLargeSquareMatrix_O*>(client);
    obj_gc_safe->~FullLargeSquareMatrix_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFBaseDb_O:
{
     // stamp value 375
    chem::FFBaseDb_O* obj_gc_safe = reinterpret_cast<chem::FFBaseDb_O*>(client);
    obj_gc_safe->~FFBaseDb_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFParameterBaseDb_O:
{
     // stamp value 379
    chem::FFParameterBaseDb_O* obj_gc_safe = reinterpret_cast<chem::FFParameterBaseDb_O*>(client);
    obj_gc_safe->~FFParameterBaseDb_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFItorDb_O:
{
     // stamp value 383
    chem::FFItorDb_O* obj_gc_safe = reinterpret_cast<chem::FFItorDb_O*>(client);
    obj_gc_safe->~FFItorDb_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFStretchDb_O:
{
     // stamp value 387
    chem::FFStretchDb_O* obj_gc_safe = reinterpret_cast<chem::FFStretchDb_O*>(client);
    obj_gc_safe->~FFStretchDb_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFAngleDb_O:
{
     // stamp value 391
    chem::FFAngleDb_O* obj_gc_safe = reinterpret_cast<chem::FFAngleDb_O*>(client);
    obj_gc_safe->~FFAngleDb_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFNonbondDb_O:
{
     // stamp value 395
    chem::FFNonbondDb_O* obj_gc_safe = reinterpret_cast<chem::FFNonbondDb_O*>(client);
    obj_gc_safe->~FFNonbondDb_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFPtorDb_O:
{
     // stamp value 399
    chem::FFPtorDb_O* obj_gc_safe = reinterpret_cast<chem::FFPtorDb_O*>(client);
    obj_gc_safe->~FFPtorDb_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFVdwDb_O:
{
     // stamp value 403
    chem::FFVdwDb_O* obj_gc_safe = reinterpret_cast<chem::FFVdwDb_O*>(client);
    obj_gc_safe->~FFVdwDb_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFTypesDb_O:
{
     // stamp value 407
    chem::FFTypesDb_O* obj_gc_safe = reinterpret_cast<chem::FFTypesDb_O*>(client);
    obj_gc_safe->~FFTypesDb_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__AGVertex_O:
{
     // stamp value 411
    chem::AGVertex_O* obj_gc_safe = reinterpret_cast<chem::AGVertex_O*>(client);
    obj_gc_safe->~AGVertex_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ForceField_O:
{
     // stamp value 415
    chem::ForceField_O* obj_gc_safe = reinterpret_cast<chem::ForceField_O*>(client);
    obj_gc_safe->~ForceField_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__AtomReferenceBase_O:
{
     // stamp value 419
    chem::AtomReferenceBase_O* obj_gc_safe = reinterpret_cast<chem::AtomReferenceBase_O*>(client);
    obj_gc_safe->~AtomReferenceBase_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__AtomReference_O:
{
     // stamp value 423
    chem::AtomReference_O* obj_gc_safe = reinterpret_cast<chem::AtomReference_O*>(client);
    obj_gc_safe->~AtomReference_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ScoringFunction_O:
{
     // stamp value 427
    chem::ScoringFunction_O* obj_gc_safe = reinterpret_cast<chem::ScoringFunction_O*>(client);
    obj_gc_safe->~ScoringFunction_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EnergyFunction_O:
{
     // stamp value 431
    chem::EnergyFunction_O* obj_gc_safe = reinterpret_cast<chem::EnergyFunction_O*>(client);
    obj_gc_safe->~EnergyFunction_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__SketchFunction_O:
{
     // stamp value 435
    chem::SketchFunction_O* obj_gc_safe = reinterpret_cast<chem::SketchFunction_O*>(client);
    obj_gc_safe->~SketchFunction_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__RigidBodyEnergyFunction_O:
{
     // stamp value 439
    chem::RigidBodyEnergyFunction_O* obj_gc_safe = reinterpret_cast<chem::RigidBodyEnergyFunction_O*>(client);
    obj_gc_safe->~RigidBodyEnergyFunction_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__WildElementDict_O:
{
     // stamp value 443
    chem::WildElementDict_O* obj_gc_safe = reinterpret_cast<chem::WildElementDict_O*>(client);
    obj_gc_safe->~WildElementDict_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DITypeRefArray_O:
{
     // stamp value 447
    llvmo::DITypeRefArray_O* obj_gc_safe = reinterpret_cast<llvmo::DITypeRefArray_O*>(client);
    obj_gc_safe->~DITypeRefArray_O();
    goto finalize_done;
}
obj_finalize_STAMP_geom__OVector3_O:
{
     // stamp value 451
    geom::OVector3_O* obj_gc_safe = reinterpret_cast<geom::OVector3_O*>(client);
    obj_gc_safe->~OVector3_O();
    goto finalize_done;
}
obj_finalize_STAMP_geom__OVector2_O:
{
     // stamp value 455
    geom::OVector2_O* obj_gc_safe = reinterpret_cast<geom::OVector2_O*>(client);
    obj_gc_safe->~OVector2_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Structure_Old_ListEntry_O:
{
     // stamp value 459
    chem::Structure_Old_ListEntry_O* obj_gc_safe = reinterpret_cast<chem::Structure_Old_ListEntry_O*>(client);
    obj_gc_safe->~Structure_Old_ListEntry_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFTypeRule_O:
{
     // stamp value 463
    chem::FFTypeRule_O* obj_gc_safe = reinterpret_cast<chem::FFTypeRule_O*>(client);
    obj_gc_safe->~FFTypeRule_O();
    goto finalize_done;
}
obj_finalize_STAMP_adapt__QDomNode_O:
{
     // stamp value 467
    adapt::QDomNode_O* obj_gc_safe = reinterpret_cast<adapt::QDomNode_O*>(client);
    obj_gc_safe->~QDomNode_O();
    goto finalize_done;
}
obj_finalize_STAMP_mp__SharedMutex_O:
{
     // stamp value 471
    mp::SharedMutex_O* obj_gc_safe = reinterpret_cast<mp::SharedMutex_O*>(client);
    obj_gc_safe->~SharedMutex_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ConstitutionAtom_O:
{
     // stamp value 475
    chem::ConstitutionAtom_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionAtom_O*>(client);
    obj_gc_safe->~ConstitutionAtom_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ConstitutionVirtualAtom_O:
{
     // stamp value 479
    chem::ConstitutionVirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionVirtualAtom_O*>(client);
    obj_gc_safe->~ConstitutionVirtualAtom_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ReadAmberParameters_O:
{
     // stamp value 483
    chem::ReadAmberParameters_O* obj_gc_safe = reinterpret_cast<chem::ReadAmberParameters_O*>(client);
    obj_gc_safe->~ReadAmberParameters_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__AGEdge_O:
{
     // stamp value 487
    chem::AGEdge_O* obj_gc_safe = reinterpret_cast<chem::AGEdge_O*>(client);
    obj_gc_safe->~AGEdge_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Entity_O:
{
     // stamp value 491
    chem::Entity_O* obj_gc_safe = reinterpret_cast<chem::Entity_O*>(client);
    obj_gc_safe->~Entity_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Stereoisomer_O:
{
     // stamp value 495
    chem::Stereoisomer_O* obj_gc_safe = reinterpret_cast<chem::Stereoisomer_O*>(client);
    obj_gc_safe->~Stereoisomer_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EntityNameSetBase_O:
{
     // stamp value 499
    chem::EntityNameSetBase_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSetBase_O*>(client);
    obj_gc_safe->~EntityNameSetBase_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EntityNameSetWithCap_O:
{
     // stamp value 503
    chem::EntityNameSetWithCap_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSetWithCap_O*>(client);
    obj_gc_safe->~EntityNameSetWithCap_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Mate_O:
{
     // stamp value 507
    chem::Mate_O* obj_gc_safe = reinterpret_cast<chem::Mate_O*>(client);
    obj_gc_safe->~Mate_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__RingClosingMate_O:
{
     // stamp value 511
    chem::RingClosingMate_O* obj_gc_safe = reinterpret_cast<chem::RingClosingMate_O*>(client);
    obj_gc_safe->~RingClosingMate_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__EntityNameSet_O:
{
     // stamp value 515
    chem::EntityNameSet_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSet_O*>(client);
    obj_gc_safe->~EntityNameSet_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__RepresentedEntityNameSet_O:
{
     // stamp value 519
    chem::RepresentedEntityNameSet_O* obj_gc_safe = reinterpret_cast<chem::RepresentedEntityNameSet_O*>(client);
    obj_gc_safe->~RepresentedEntityNameSet_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__MonomerPack_O:
{
     // stamp value 523
    chem::MonomerPack_O* obj_gc_safe = reinterpret_cast<chem::MonomerPack_O*>(client);
    obj_gc_safe->~MonomerPack_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Constitution_O:
{
     // stamp value 527
    chem::Constitution_O* obj_gc_safe = reinterpret_cast<chem::Constitution_O*>(client);
    obj_gc_safe->~Constitution_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Monomer_O:
{
     // stamp value 531
    chem::Monomer_O* obj_gc_safe = reinterpret_cast<chem::Monomer_O*>(client);
    obj_gc_safe->~Monomer_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__OctNode_O:
{
     // stamp value 535
    chem::OctNode_O* obj_gc_safe = reinterpret_cast<chem::OctNode_O*>(client);
    obj_gc_safe->~OctNode_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Structure_Old_List_O:
{
     // stamp value 539
    chem::Structure_Old_List_O* obj_gc_safe = reinterpret_cast<chem::Structure_Old_List_O*>(client);
    obj_gc_safe->~Structure_Old_List_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__BackboneDependentRotamerLibrary_O:
{
     // stamp value 543
    kinematics::BackboneDependentRotamerLibrary_O* obj_gc_safe = reinterpret_cast<kinematics::BackboneDependentRotamerLibrary_O*>(client);
    obj_gc_safe->~BackboneDependentRotamerLibrary_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ReportBase_O:
{
     // stamp value 547
    chem::ReportBase_O* obj_gc_safe = reinterpret_cast<chem::ReportBase_O*>(client);
    obj_gc_safe->~ReportBase_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__StepReport_O:
{
     // stamp value 551
    chem::StepReport_O* obj_gc_safe = reinterpret_cast<chem::StepReport_O*>(client);
    obj_gc_safe->~StepReport_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__MessageReport_O:
{
     // stamp value 555
    chem::MessageReport_O* obj_gc_safe = reinterpret_cast<chem::MessageReport_O*>(client);
    obj_gc_safe->~MessageReport_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ForceMatchReport_O:
{
     // stamp value 559
    chem::ForceMatchReport_O* obj_gc_safe = reinterpret_cast<chem::ForceMatchReport_O*>(client);
    obj_gc_safe->~ForceMatchReport_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ChemDraw_O:
{
     // stamp value 563
    chem::ChemDraw_O* obj_gc_safe = reinterpret_cast<chem::ChemDraw_O*>(client);
    obj_gc_safe->~ChemDraw_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ZMatrixInternal_O:
{
     // stamp value 567
    chem::ZMatrixInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixInternal_O*>(client);
    obj_gc_safe->~ZMatrixInternal_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ZMatrixBondInternal_O:
{
     // stamp value 571
    chem::ZMatrixBondInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixBondInternal_O*>(client);
    obj_gc_safe->~ZMatrixBondInternal_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ZMatrixDihedralInternal_O:
{
     // stamp value 575
    chem::ZMatrixDihedralInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixDihedralInternal_O*>(client);
    obj_gc_safe->~ZMatrixDihedralInternal_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ZMatrixAngleInternal_O:
{
     // stamp value 579
    chem::ZMatrixAngleInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixAngleInternal_O*>(client);
    obj_gc_safe->~ZMatrixAngleInternal_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__StereoisomerAtom_O:
{
     // stamp value 583
    chem::StereoisomerAtom_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerAtom_O*>(client);
    obj_gc_safe->~StereoisomerAtom_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__StereoisomerVirtualAtom_O:
{
     // stamp value 587
    chem::StereoisomerVirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerVirtualAtom_O*>(client);
    obj_gc_safe->~StereoisomerVirtualAtom_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ZMatrix_O:
{
     // stamp value 591
    chem::ZMatrix_O* obj_gc_safe = reinterpret_cast<chem::ZMatrix_O*>(client);
    obj_gc_safe->~ZMatrix_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Isoname_O:
{
     // stamp value 595
    chem::Isoname_O* obj_gc_safe = reinterpret_cast<chem::Isoname_O*>(client);
    obj_gc_safe->~Isoname_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__PathMessage_O:
{
     // stamp value 599
    chem::PathMessage_O* obj_gc_safe = reinterpret_cast<chem::PathMessage_O*>(client);
    obj_gc_safe->~PathMessage_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__MonomerId_O:
{
     // stamp value 603
    kinematics::MonomerId_O* obj_gc_safe = reinterpret_cast<kinematics::MonomerId_O*>(client);
    obj_gc_safe->~MonomerId_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__JointTemplate_O:
{
     // stamp value 607
    kinematics::JointTemplate_O* obj_gc_safe = reinterpret_cast<kinematics::JointTemplate_O*>(client);
    obj_gc_safe->~JointTemplate_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__BondedJointTemplate_O:
{
     // stamp value 611
    kinematics::BondedJointTemplate_O* obj_gc_safe = reinterpret_cast<kinematics::BondedJointTemplate_O*>(client);
    obj_gc_safe->~BondedJointTemplate_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__DelayedBondedJointTemplate_O:
{
     // stamp value 615
    kinematics::DelayedBondedJointTemplate_O* obj_gc_safe = reinterpret_cast<kinematics::DelayedBondedJointTemplate_O*>(client);
    obj_gc_safe->~DelayedBondedJointTemplate_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__RootBondedJointTemplate_O:
{
     // stamp value 619
    kinematics::RootBondedJointTemplate_O* obj_gc_safe = reinterpret_cast<kinematics::RootBondedJointTemplate_O*>(client);
    obj_gc_safe->~RootBondedJointTemplate_O();
    goto finalize_done;
}
obj_finalize_STAMP_geom__Color_O:
{
     // stamp value 623
    geom::Color_O* obj_gc_safe = reinterpret_cast<geom::Color_O*>(client);
    obj_gc_safe->~Color_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ConformationCollection_O:
{
     // stamp value 627
    chem::ConformationCollection_O* obj_gc_safe = reinterpret_cast<chem::ConformationCollection_O*>(client);
    obj_gc_safe->~ConformationCollection_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__SuperposableConformationCollection_O:
{
     // stamp value 631
    chem::SuperposableConformationCollection_O* obj_gc_safe = reinterpret_cast<chem::SuperposableConformationCollection_O*>(client);
    obj_gc_safe->~SuperposableConformationCollection_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__NativeVector_float_O:
{
     // stamp value 635
    core::NativeVector_float_O* obj_gc_safe = reinterpret_cast<core::NativeVector_float_O*>(client);
    obj_gc_safe->~NativeVector_float_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Coupling_O:
{
     // stamp value 639
    chem::Coupling_O* obj_gc_safe = reinterpret_cast<chem::Coupling_O*>(client);
    obj_gc_safe->~Coupling_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__RingCoupling_O:
{
     // stamp value 643
    chem::RingCoupling_O* obj_gc_safe = reinterpret_cast<chem::RingCoupling_O*>(client);
    obj_gc_safe->~RingCoupling_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__DirectionalCoupling_O:
{
     // stamp value 647
    chem::DirectionalCoupling_O* obj_gc_safe = reinterpret_cast<chem::DirectionalCoupling_O*>(client);
    obj_gc_safe->~DirectionalCoupling_O();
    goto finalize_done;
}
obj_finalize_STAMP_adapt__ObjectSet_O:
{
     // stamp value 651
    adapt::ObjectSet_O* obj_gc_safe = reinterpret_cast<adapt::ObjectSet_O*>(client);
    obj_gc_safe->~ObjectSet_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Oligomer_O:
{
     // stamp value 655
    chem::Oligomer_O* obj_gc_safe = reinterpret_cast<chem::Oligomer_O*>(client);
    obj_gc_safe->~Oligomer_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__PdbMonomerConnectivity_O:
{
     // stamp value 659
    chem::PdbMonomerConnectivity_O* obj_gc_safe = reinterpret_cast<chem::PdbMonomerConnectivity_O*>(client);
    obj_gc_safe->~PdbMonomerConnectivity_O();
    goto finalize_done;
}
obj_finalize_STAMP_units__Dimension_O:
{
     // stamp value 663
    units::Dimension_O* obj_gc_safe = reinterpret_cast<units::Dimension_O*>(client);
    obj_gc_safe->~Dimension_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ConformationExplorerEntry_O:
{
     // stamp value 667
    chem::ConformationExplorerEntry_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerEntry_O*>(client);
    obj_gc_safe->~ConformationExplorerEntry_O();
    goto finalize_done;
}
obj_finalize_STAMP_mp__ConditionVariable_O:
{
     // stamp value 671
    mp::ConditionVariable_O* obj_gc_safe = reinterpret_cast<mp::ConditionVariable_O*>(client);
    obj_gc_safe->~ConditionVariable_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__PdbReader_O:
{
     // stamp value 675
    chem::PdbReader_O* obj_gc_safe = reinterpret_cast<chem::PdbReader_O*>(client);
    obj_gc_safe->~PdbReader_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__SpanningLoop_O:
{
     // stamp value 679
    chem::SpanningLoop_O* obj_gc_safe = reinterpret_cast<chem::SpanningLoop_O*>(client);
    obj_gc_safe->~SpanningLoop_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ProperTorsion_O:
{
     // stamp value 683
    chem::ProperTorsion_O* obj_gc_safe = reinterpret_cast<chem::ProperTorsion_O*>(client);
    obj_gc_safe->~ProperTorsion_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ResidueList_O:
{
     // stamp value 687
    chem::ResidueList_O* obj_gc_safe = reinterpret_cast<chem::ResidueList_O*>(client);
    obj_gc_safe->~ResidueList_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__SuperposeEngine_O:
{
     // stamp value 691
    chem::SuperposeEngine_O* obj_gc_safe = reinterpret_cast<chem::SuperposeEngine_O*>(client);
    obj_gc_safe->~SuperposeEngine_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__SuperposeSelectedAtoms_O:
{
     // stamp value 695
    chem::SuperposeSelectedAtoms_O* obj_gc_safe = reinterpret_cast<chem::SuperposeSelectedAtoms_O*>(client);
    obj_gc_safe->~SuperposeSelectedAtoms_O();
    goto finalize_done;
}
obj_finalize_STAMP_adapt__StringSet_O:
{
     // stamp value 699
    adapt::StringSet_O* obj_gc_safe = reinterpret_cast<adapt::StringSet_O*>(client);
    obj_gc_safe->~StringSet_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Command_O:
{
     // stamp value 703
    chem::Command_O* obj_gc_safe = reinterpret_cast<chem::Command_O*>(client);
    obj_gc_safe->~Command_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__StereoConfiguration_O:
{
     // stamp value 707
    chem::StereoConfiguration_O* obj_gc_safe = reinterpret_cast<chem::StereoConfiguration_O*>(client);
    obj_gc_safe->~StereoConfiguration_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__MonomerBaseNode_O:
{
     // stamp value 711
    kinematics::MonomerBaseNode_O* obj_gc_safe = reinterpret_cast<kinematics::MonomerBaseNode_O*>(client);
    obj_gc_safe->~MonomerBaseNode_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__AggregateNode_O:
{
     // stamp value 715
    kinematics::AggregateNode_O* obj_gc_safe = reinterpret_cast<kinematics::AggregateNode_O*>(client);
    obj_gc_safe->~AggregateNode_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__ChainNode_O:
{
     // stamp value 719
    kinematics::ChainNode_O* obj_gc_safe = reinterpret_cast<kinematics::ChainNode_O*>(client);
    obj_gc_safe->~ChainNode_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__MonomerNode_O:
{
     // stamp value 723
    kinematics::MonomerNode_O* obj_gc_safe = reinterpret_cast<kinematics::MonomerNode_O*>(client);
    obj_gc_safe->~MonomerNode_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__RingClosingMonomerNode_O:
{
     // stamp value 727
    kinematics::RingClosingMonomerNode_O* obj_gc_safe = reinterpret_cast<kinematics::RingClosingMonomerNode_O*>(client);
    obj_gc_safe->~RingClosingMonomerNode_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FFNonbondCrossTermTable_O:
{
     // stamp value 731
    chem::FFNonbondCrossTermTable_O* obj_gc_safe = reinterpret_cast<chem::FFNonbondCrossTermTable_O*>(client);
    obj_gc_safe->~FFNonbondCrossTermTable_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Plug_O:
{
     // stamp value 735
    chem::Plug_O* obj_gc_safe = reinterpret_cast<chem::Plug_O*>(client);
    obj_gc_safe->~Plug_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__JumpPlug_O:
{
     // stamp value 739
    chem::JumpPlug_O* obj_gc_safe = reinterpret_cast<chem::JumpPlug_O*>(client);
    obj_gc_safe->~JumpPlug_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__PlugWithMates_O:
{
     // stamp value 743
    chem::PlugWithMates_O* obj_gc_safe = reinterpret_cast<chem::PlugWithMates_O*>(client);
    obj_gc_safe->~PlugWithMates_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__InPlug_O:
{
     // stamp value 747
    chem::InPlug_O* obj_gc_safe = reinterpret_cast<chem::InPlug_O*>(client);
    obj_gc_safe->~InPlug_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__OutPlug_O:
{
     // stamp value 751
    chem::OutPlug_O* obj_gc_safe = reinterpret_cast<chem::OutPlug_O*>(client);
    obj_gc_safe->~OutPlug_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__OriginPlug_O:
{
     // stamp value 755
    chem::OriginPlug_O* obj_gc_safe = reinterpret_cast<chem::OriginPlug_O*>(client);
    obj_gc_safe->~OriginPlug_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__Rotamer_O:
{
     // stamp value 759
    kinematics::Rotamer_O* obj_gc_safe = reinterpret_cast<kinematics::Rotamer_O*>(client);
    obj_gc_safe->~Rotamer_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__MonomerContext_O:
{
     // stamp value 763
    chem::MonomerContext_O* obj_gc_safe = reinterpret_cast<chem::MonomerContext_O*>(client);
    obj_gc_safe->~MonomerContext_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__CDFragment_O:
{
     // stamp value 767
    chem::CDFragment_O* obj_gc_safe = reinterpret_cast<chem::CDFragment_O*>(client);
    obj_gc_safe->~CDFragment_O();
    goto finalize_done;
}
obj_finalize_STAMP_units__Unit_O:
{
     // stamp value 771
    units::Unit_O* obj_gc_safe = reinterpret_cast<units::Unit_O*>(client);
    obj_gc_safe->~Unit_O();
    goto finalize_done;
}
obj_finalize_STAMP_units__NamedUnit_O:
{
     // stamp value 775
    units::NamedUnit_O* obj_gc_safe = reinterpret_cast<units::NamedUnit_O*>(client);
    obj_gc_safe->~NamedUnit_O();
    goto finalize_done;
}
obj_finalize_STAMP_adapt__StringList_O:
{
     // stamp value 779
    adapt::StringList_O* obj_gc_safe = reinterpret_cast<adapt::StringList_O*>(client);
    obj_gc_safe->~StringList_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__NativeVector_int_O:
{
     // stamp value 783
    core::NativeVector_int_O* obj_gc_safe = reinterpret_cast<core::NativeVector_int_O*>(client);
    obj_gc_safe->~NativeVector_int_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__InfoDb_O:
{
     // stamp value 787
    chem::InfoDb_O* obj_gc_safe = reinterpret_cast<chem::InfoDb_O*>(client);
    obj_gc_safe->~InfoDb_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__MinimizerLog_O:
{
     // stamp value 791
    chem::MinimizerLog_O* obj_gc_safe = reinterpret_cast<chem::MinimizerLog_O*>(client);
    obj_gc_safe->~MinimizerLog_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__GenericOctree_O:
{
     // stamp value 795
    chem::GenericOctree_O* obj_gc_safe = reinterpret_cast<chem::GenericOctree_O*>(client);
    obj_gc_safe->~GenericOctree_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__AtomTree_O:
{
     // stamp value 799
    kinematics::AtomTree_O* obj_gc_safe = reinterpret_cast<kinematics::AtomTree_O*>(client);
    obj_gc_safe->~AtomTree_O();
    goto finalize_done;
}
obj_finalize_STAMP_units__Quantity_O:
{
     // stamp value 803
    units::Quantity_O* obj_gc_safe = reinterpret_cast<units::Quantity_O*>(client);
    obj_gc_safe->~Quantity_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ChemInfoMatch_O:
{
     // stamp value 807
    chem::ChemInfoMatch_O* obj_gc_safe = reinterpret_cast<chem::ChemInfoMatch_O*>(client);
    obj_gc_safe->~ChemInfoMatch_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ZMatrixEntry_O:
{
     // stamp value 811
    chem::ZMatrixEntry_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixEntry_O*>(client);
    obj_gc_safe->~ZMatrixEntry_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__SpecificContextSet_O:
{
     // stamp value 815
    chem::SpecificContextSet_O* obj_gc_safe = reinterpret_cast<chem::SpecificContextSet_O*>(client);
    obj_gc_safe->~SpecificContextSet_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Angle_O:
{
     // stamp value 819
    chem::Angle_O* obj_gc_safe = reinterpret_cast<chem::Angle_O*>(client);
    obj_gc_safe->~Angle_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__MacroModelFile_O:
{
     // stamp value 823
    chem::MacroModelFile_O* obj_gc_safe = reinterpret_cast<chem::MacroModelFile_O*>(client);
    obj_gc_safe->~MacroModelFile_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__BondList_O:
{
     // stamp value 827
    chem::BondList_O* obj_gc_safe = reinterpret_cast<chem::BondList_O*>(client);
    obj_gc_safe->~BondList_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ConformationExplorer_O:
{
     // stamp value 831
    chem::ConformationExplorer_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorer_O*>(client);
    obj_gc_safe->~ConformationExplorer_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ChemInfoGraph_O:
{
     // stamp value 835
    chem::ChemInfoGraph_O* obj_gc_safe = reinterpret_cast<chem::ChemInfoGraph_O*>(client);
    obj_gc_safe->~ChemInfoGraph_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__CDText_O:
{
     // stamp value 839
    chem::CDText_O* obj_gc_safe = reinterpret_cast<chem::CDText_O*>(client);
    obj_gc_safe->~CDText_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DINodeArray_O:
{
     // stamp value 843
    llvmo::DINodeArray_O* obj_gc_safe = reinterpret_cast<llvmo::DINodeArray_O*>(client);
    obj_gc_safe->~DINodeArray_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__Checkpoint_O:
{
     // stamp value 847
    kinematics::Checkpoint_O* obj_gc_safe = reinterpret_cast<kinematics::Checkpoint_O*>(client);
    obj_gc_safe->~Checkpoint_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__CheckpointJoint_O:
{
     // stamp value 851
    kinematics::CheckpointJoint_O* obj_gc_safe = reinterpret_cast<kinematics::CheckpointJoint_O*>(client);
    obj_gc_safe->~CheckpointJoint_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__CheckpointOutPlugJoint_O:
{
     // stamp value 855
    kinematics::CheckpointOutPlugJoint_O* obj_gc_safe = reinterpret_cast<kinematics::CheckpointOutPlugJoint_O*>(client);
    obj_gc_safe->~CheckpointOutPlugJoint_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ConformationExplorerMatch_O:
{
     // stamp value 859
    chem::ConformationExplorerMatch_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerMatch_O*>(client);
    obj_gc_safe->~ConformationExplorerMatch_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__StereoisomerAtoms_O:
{
     // stamp value 863
    chem::StereoisomerAtoms_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerAtoms_O*>(client);
    obj_gc_safe->~StereoisomerAtoms_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Rotamer_O:
{
     // stamp value 867
    chem::Rotamer_O* obj_gc_safe = reinterpret_cast<chem::Rotamer_O*>(client);
    obj_gc_safe->~Rotamer_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ImproperTorsion_O:
{
     // stamp value 871
    chem::ImproperTorsion_O* obj_gc_safe = reinterpret_cast<chem::ImproperTorsion_O*>(client);
    obj_gc_safe->~ImproperTorsion_O();
    goto finalize_done;
}
obj_finalize_STAMP_adapt__SymbolList_O:
{
     // stamp value 875
    adapt::SymbolList_O* obj_gc_safe = reinterpret_cast<adapt::SymbolList_O*>(client);
    obj_gc_safe->~SymbolList_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__FrameRecognizer_O:
{
     // stamp value 879
    chem::FrameRecognizer_O* obj_gc_safe = reinterpret_cast<chem::FrameRecognizer_O*>(client);
    obj_gc_safe->~FrameRecognizer_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ConformationExplorerEntryStage_O:
{
     // stamp value 883
    chem::ConformationExplorerEntryStage_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerEntryStage_O*>(client);
    obj_gc_safe->~ConformationExplorerEntryStage_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Trajectory_O:
{
     // stamp value 887
    chem::Trajectory_O* obj_gc_safe = reinterpret_cast<chem::Trajectory_O*>(client);
    obj_gc_safe->~Trajectory_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__CalculatePosition_O:
{
     // stamp value 891
    chem::CalculatePosition_O* obj_gc_safe = reinterpret_cast<chem::CalculatePosition_O*>(client);
    obj_gc_safe->~CalculatePosition_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__CalculatePositionRelativeToOrigin_O:
{
     // stamp value 895
    chem::CalculatePositionRelativeToOrigin_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionRelativeToOrigin_O*>(client);
    obj_gc_safe->~CalculatePositionRelativeToOrigin_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__CalculatePositionUsingInternals_O:
{
     // stamp value 899
    chem::CalculatePositionUsingInternals_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionUsingInternals_O*>(client);
    obj_gc_safe->~CalculatePositionUsingInternals_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__CalculatePositionAlongBond_O:
{
     // stamp value 903
    chem::CalculatePositionAlongBond_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionAlongBond_O*>(client);
    obj_gc_safe->~CalculatePositionAlongBond_O();
    goto finalize_done;
}
obj_finalize_STAMP_geom__OMatrix_O:
{
     // stamp value 907
    geom::OMatrix_O* obj_gc_safe = reinterpret_cast<geom::OMatrix_O*>(client);
    obj_gc_safe->~OMatrix_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ConformationCollectionEntry_O:
{
     // stamp value 911
    chem::ConformationCollectionEntry_O* obj_gc_safe = reinterpret_cast<chem::ConformationCollectionEntry_O*>(client);
    obj_gc_safe->~ConformationCollectionEntry_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ComplexRestraint_O:
{
     // stamp value 915
    chem::ComplexRestraint_O* obj_gc_safe = reinterpret_cast<chem::ComplexRestraint_O*>(client);
    obj_gc_safe->~ComplexRestraint_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__RestrainedExoCyclicAtom_O:
{
     // stamp value 919
    chem::RestrainedExoCyclicAtom_O* obj_gc_safe = reinterpret_cast<chem::RestrainedExoCyclicAtom_O*>(client);
    obj_gc_safe->~RestrainedExoCyclicAtom_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__RestrainedPiBond_O:
{
     // stamp value 923
    chem::RestrainedPiBond_O* obj_gc_safe = reinterpret_cast<chem::RestrainedPiBond_O*>(client);
    obj_gc_safe->~RestrainedPiBond_O();
    goto finalize_done;
}
obj_finalize_STAMP_mp__Mutex_O:
{
     // stamp value 927
    mp::Mutex_O* obj_gc_safe = reinterpret_cast<mp::Mutex_O*>(client);
    obj_gc_safe->~Mutex_O();
    goto finalize_done;
}
obj_finalize_STAMP_mp__RecursiveMutex_O:
{
     // stamp value 931
    mp::RecursiveMutex_O* obj_gc_safe = reinterpret_cast<mp::RecursiveMutex_O*>(client);
    obj_gc_safe->~RecursiveMutex_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__CombinedForceField_O:
{
     // stamp value 935
    chem::CombinedForceField_O* obj_gc_safe = reinterpret_cast<chem::CombinedForceField_O*>(client);
    obj_gc_safe->~CombinedForceField_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__CDBond_O:
{
     // stamp value 939
    chem::CDBond_O* obj_gc_safe = reinterpret_cast<chem::CDBond_O*>(client);
    obj_gc_safe->~CDBond_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ConstitutionBond_O:
{
     // stamp value 943
    chem::ConstitutionBond_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionBond_O*>(client);
    obj_gc_safe->~ConstitutionBond_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__ChiDihedral_O:
{
     // stamp value 947
    kinematics::ChiDihedral_O* obj_gc_safe = reinterpret_cast<kinematics::ChiDihedral_O*>(client);
    obj_gc_safe->~ChiDihedral_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ConstitutionAtoms_O:
{
     // stamp value 951
    chem::ConstitutionAtoms_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionAtoms_O*>(client);
    obj_gc_safe->~ConstitutionAtoms_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__Conformation_O:
{
     // stamp value 955
    kinematics::Conformation_O* obj_gc_safe = reinterpret_cast<kinematics::Conformation_O*>(client);
    obj_gc_safe->~Conformation_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__MoleculeGraph_O:
{
     // stamp value 959
    chem::MoleculeGraph_O* obj_gc_safe = reinterpret_cast<chem::MoleculeGraph_O*>(client);
    obj_gc_safe->~MoleculeGraph_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__StructureComparer_O:
{
     // stamp value 963
    chem::StructureComparer_O* obj_gc_safe = reinterpret_cast<chem::StructureComparer_O*>(client);
    obj_gc_safe->~StructureComparer_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__BoundingBox_O:
{
     // stamp value 967
    chem::BoundingBox_O* obj_gc_safe = reinterpret_cast<chem::BoundingBox_O*>(client);
    obj_gc_safe->~BoundingBox_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ChemInfoNode_O:
{
     // stamp value 971
    chem::ChemInfoNode_O* obj_gc_safe = reinterpret_cast<chem::ChemInfoNode_O*>(client);
    obj_gc_safe->~ChemInfoNode_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__BondMatcher_O:
{
     // stamp value 975
    chem::BondMatcher_O* obj_gc_safe = reinterpret_cast<chem::BondMatcher_O*>(client);
    obj_gc_safe->~BondMatcher_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__BondTest_O:
{
     // stamp value 979
    chem::BondTest_O* obj_gc_safe = reinterpret_cast<chem::BondTest_O*>(client);
    obj_gc_safe->~BondTest_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__BondLogical_O:
{
     // stamp value 983
    chem::BondLogical_O* obj_gc_safe = reinterpret_cast<chem::BondLogical_O*>(client);
    obj_gc_safe->~BondLogical_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__BondMatchNode_O:
{
     // stamp value 987
    chem::BondMatchNode_O* obj_gc_safe = reinterpret_cast<chem::BondMatchNode_O*>(client);
    obj_gc_safe->~BondMatchNode_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__AtomOrBondMatchNode_O:
{
     // stamp value 991
    chem::AtomOrBondMatchNode_O* obj_gc_safe = reinterpret_cast<chem::AtomOrBondMatchNode_O*>(client);
    obj_gc_safe->~AtomOrBondMatchNode_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Root_O:
{
     // stamp value 995
    chem::Root_O* obj_gc_safe = reinterpret_cast<chem::Root_O*>(client);
    obj_gc_safe->~Root_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__SmartsRoot_O:
{
     // stamp value 999
    chem::SmartsRoot_O* obj_gc_safe = reinterpret_cast<chem::SmartsRoot_O*>(client);
    obj_gc_safe->~SmartsRoot_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__AntechamberRoot_O:
{
     // stamp value 1003
    chem::AntechamberRoot_O* obj_gc_safe = reinterpret_cast<chem::AntechamberRoot_O*>(client);
    obj_gc_safe->~AntechamberRoot_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ResidueTest_O:
{
     // stamp value 1007
    chem::ResidueTest_O* obj_gc_safe = reinterpret_cast<chem::ResidueTest_O*>(client);
    obj_gc_safe->~ResidueTest_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__AntechamberFocusAtomMatch_O:
{
     // stamp value 1011
    chem::AntechamberFocusAtomMatch_O* obj_gc_safe = reinterpret_cast<chem::AntechamberFocusAtomMatch_O*>(client);
    obj_gc_safe->~AntechamberFocusAtomMatch_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Logical_O:
{
     // stamp value 1015
    chem::Logical_O* obj_gc_safe = reinterpret_cast<chem::Logical_O*>(client);
    obj_gc_safe->~Logical_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__AtomTest_O:
{
     // stamp value 1019
    chem::AtomTest_O* obj_gc_safe = reinterpret_cast<chem::AtomTest_O*>(client);
    obj_gc_safe->~AtomTest_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__BondToAtomTest_O:
{
     // stamp value 1023
    chem::BondToAtomTest_O* obj_gc_safe = reinterpret_cast<chem::BondToAtomTest_O*>(client);
    obj_gc_safe->~BondToAtomTest_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__AntechamberBondToAtomTest_O:
{
     // stamp value 1027
    chem::AntechamberBondToAtomTest_O* obj_gc_safe = reinterpret_cast<chem::AntechamberBondToAtomTest_O*>(client);
    obj_gc_safe->~AntechamberBondToAtomTest_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__BondListMatchNode_O:
{
     // stamp value 1031
    chem::BondListMatchNode_O* obj_gc_safe = reinterpret_cast<chem::BondListMatchNode_O*>(client);
    obj_gc_safe->~BondListMatchNode_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Chain_O:
{
     // stamp value 1035
    chem::Chain_O* obj_gc_safe = reinterpret_cast<chem::Chain_O*>(client);
    obj_gc_safe->~Chain_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Branch_O:
{
     // stamp value 1039
    chem::Branch_O* obj_gc_safe = reinterpret_cast<chem::Branch_O*>(client);
    obj_gc_safe->~Branch_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__RootMatchNode_O:
{
     // stamp value 1043
    chem::RootMatchNode_O* obj_gc_safe = reinterpret_cast<chem::RootMatchNode_O*>(client);
    obj_gc_safe->~RootMatchNode_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__AfterMatchBondToAtomTest_O:
{
     // stamp value 1047
    chem::AfterMatchBondToAtomTest_O* obj_gc_safe = reinterpret_cast<chem::AfterMatchBondToAtomTest_O*>(client);
    obj_gc_safe->~AfterMatchBondToAtomTest_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Dimacs_O:
{
     // stamp value 1051
    chem::Dimacs_O* obj_gc_safe = reinterpret_cast<chem::Dimacs_O*>(client);
    obj_gc_safe->~Dimacs_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__SpecificContext_O:
{
     // stamp value 1055
    chem::SpecificContext_O* obj_gc_safe = reinterpret_cast<chem::SpecificContext_O*>(client);
    obj_gc_safe->~SpecificContext_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Minimizer_O:
{
     // stamp value 1059
    chem::Minimizer_O* obj_gc_safe = reinterpret_cast<chem::Minimizer_O*>(client);
    obj_gc_safe->~Minimizer_O();
    goto finalize_done;
}
obj_finalize_STAMP_adapt__SymbolSet_O:
{
     // stamp value 1063
    adapt::SymbolSet_O* obj_gc_safe = reinterpret_cast<adapt::SymbolSet_O*>(client);
    obj_gc_safe->~SymbolSet_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__MapOfMonomerNamesToAtomIndexers_O:
{
     // stamp value 1067
    chem::MapOfMonomerNamesToAtomIndexers_O* obj_gc_safe = reinterpret_cast<chem::MapOfMonomerNamesToAtomIndexers_O*>(client);
    obj_gc_safe->~MapOfMonomerNamesToAtomIndexers_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__Alias_O:
{
     // stamp value 1071
    chem::Alias_O* obj_gc_safe = reinterpret_cast<chem::Alias_O*>(client);
    obj_gc_safe->~Alias_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__AtomIdToAtomMap_O:
{
     // stamp value 1075
    chem::AtomIdToAtomMap_O* obj_gc_safe = reinterpret_cast<chem::AtomIdToAtomMap_O*>(client);
    obj_gc_safe->~AtomIdToAtomMap_O();
    goto finalize_done;
}
obj_finalize_STAMP_mp__Process_O:
{
     // stamp value 1079
    mp::Process_O* obj_gc_safe = reinterpret_cast<mp::Process_O*>(client);
    obj_gc_safe->~Process_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__SingleDispatchMethod_O:
{
     // stamp value 1083
    core::SingleDispatchMethod_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchMethod_O*>(client);
    obj_gc_safe->~SingleDispatchMethod_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Iterator_O:
{
     // stamp value 1087
    core::Iterator_O* obj_gc_safe = reinterpret_cast<core::Iterator_O*>(client);
    obj_gc_safe->~Iterator_O();
}
obj_finalize_STAMP_core__DirectoryIterator_O:
{
     // stamp value 1091
    core::DirectoryIterator_O* obj_gc_safe = reinterpret_cast<core::DirectoryIterator_O*>(client);
    obj_gc_safe->~DirectoryIterator_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__IterateRestraints_O:
{
     // stamp value 1095
    chem::IterateRestraints_O* obj_gc_safe = reinterpret_cast<chem::IterateRestraints_O*>(client);
    obj_gc_safe->~IterateRestraints_O();
    goto finalize_done;
}
obj_finalize_STAMP_adapt__IterateCons_O:
{
     // stamp value 1099
    adapt::IterateCons_O* obj_gc_safe = reinterpret_cast<adapt::IterateCons_O*>(client);
    obj_gc_safe->~IterateCons_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__RecursiveDirectoryIterator_O:
{
     // stamp value 1103
    core::RecursiveDirectoryIterator_O* obj_gc_safe = reinterpret_cast<core::RecursiveDirectoryIterator_O*>(client);
    obj_gc_safe->~RecursiveDirectoryIterator_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__IterateMatter_O:
{
     // stamp value 1107
    chem::IterateMatter_O* obj_gc_safe = reinterpret_cast<chem::IterateMatter_O*>(client);
    obj_gc_safe->~IterateMatter_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__IterateResidues_O:
{
     // stamp value 1111
    chem::IterateResidues_O* obj_gc_safe = reinterpret_cast<chem::IterateResidues_O*>(client);
    obj_gc_safe->~IterateResidues_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__IterateBonds_O:
{
     // stamp value 1115
    chem::IterateBonds_O* obj_gc_safe = reinterpret_cast<chem::IterateBonds_O*>(client);
    obj_gc_safe->~IterateBonds_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__IterateAtoms_O:
{
     // stamp value 1119
    chem::IterateAtoms_O* obj_gc_safe = reinterpret_cast<chem::IterateAtoms_O*>(client);
    obj_gc_safe->~IterateAtoms_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Symbol_O:
{
     // stamp value 1123
    core::Symbol_O* obj_gc_safe = reinterpret_cast<core::Symbol_O*>(client);
    obj_gc_safe->~Symbol_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Null_O:
{
     // stamp value 1127
    core::Null_O* obj_gc_safe = reinterpret_cast<core::Null_O*>(client);
    obj_gc_safe->~Null_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__SharpEqualWrapper_O:
{
     // stamp value 1131
    core::SharpEqualWrapper_O* obj_gc_safe = reinterpret_cast<core::SharpEqualWrapper_O*>(client);
    obj_gc_safe->~SharpEqualWrapper_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ClaspJIT_O:
{
     // stamp value 1135
    llvmo::ClaspJIT_O* obj_gc_safe = reinterpret_cast<llvmo::ClaspJIT_O*>(client);
    obj_gc_safe->~ClaspJIT_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Exposer_O:
{
     // stamp value 1139
    core::Exposer_O* obj_gc_safe = reinterpret_cast<core::Exposer_O*>(client);
    obj_gc_safe->~Exposer_O();
    goto finalize_done;
}
obj_finalize_STAMP_units__UnitsExposer_O:
{
     // stamp value 1143
    units::UnitsExposer_O* obj_gc_safe = reinterpret_cast<units::UnitsExposer_O*>(client);
    obj_gc_safe->~UnitsExposer_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__CoreExposer_O:
{
     // stamp value 1147
    core::CoreExposer_O* obj_gc_safe = reinterpret_cast<core::CoreExposer_O*>(client);
    obj_gc_safe->~CoreExposer_O();
    goto finalize_done;
}
obj_finalize_STAMP_geom__GeomExposer_O:
{
     // stamp value 1151
    geom::GeomExposer_O* obj_gc_safe = reinterpret_cast<geom::GeomExposer_O*>(client);
    obj_gc_safe->~GeomExposer_O();
    goto finalize_done;
}
obj_finalize_STAMP_adapt__AdaptExposer_O:
{
     // stamp value 1155
    adapt::AdaptExposer_O* obj_gc_safe = reinterpret_cast<adapt::AdaptExposer_O*>(client);
    obj_gc_safe->~AdaptExposer_O();
    goto finalize_done;
}
obj_finalize_STAMP_kinematics__KinematicsExposer_O:
{
     // stamp value 1159
    kinematics::KinematicsExposer_O* obj_gc_safe = reinterpret_cast<kinematics::KinematicsExposer_O*>(client);
    obj_gc_safe->~KinematicsExposer_O();
    goto finalize_done;
}
obj_finalize_STAMP_chem__ChemExposer_O:
{
     // stamp value 1163
    chem::ChemExposer_O* obj_gc_safe = reinterpret_cast<chem::ChemExposer_O*>(client);
    obj_gc_safe->~ChemExposer_O();
    goto finalize_done;
}
obj_finalize_STAMP_asttooling__AsttoolingExposer_O:
{
     // stamp value 1167
    asttooling::AsttoolingExposer_O* obj_gc_safe = reinterpret_cast<asttooling::AsttoolingExposer_O*>(client);
    obj_gc_safe->~AsttoolingExposer_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__PosixTimeDuration_O:
{
     // stamp value 1171
    core::PosixTimeDuration_O* obj_gc_safe = reinterpret_cast<core::PosixTimeDuration_O*>(client);
    obj_gc_safe->~PosixTimeDuration_O();
    goto finalize_done;
}
obj_finalize_STAMP_clasp_ffi__ForeignTypeSpec_O:
{
     // stamp value 1175
    clasp_ffi::ForeignTypeSpec_O* obj_gc_safe = reinterpret_cast<clasp_ffi::ForeignTypeSpec_O*>(client);
    obj_gc_safe->~ForeignTypeSpec_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__SmallMap_O:
{
     // stamp value 1179
    core::SmallMap_O* obj_gc_safe = reinterpret_cast<core::SmallMap_O*>(client);
    obj_gc_safe->~SmallMap_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Instance_O:
{
     // stamp value 1181
    core::Instance_O* obj_gc_safe = reinterpret_cast<core::Instance_O*>(client);
    obj_gc_safe->~Instance_O();
    goto finalize_done;
}
obj_finalize_STAMP_clbind__ClassRep_O:
{
     // stamp value 1185
    clbind::ClassRep_O* obj_gc_safe = reinterpret_cast<clbind::ClassRep_O*>(client);
    obj_gc_safe->~ClassRep_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__DerivableCxxObject_O:
{
     // stamp value 1188
    core::DerivableCxxObject_O* obj_gc_safe = reinterpret_cast<core::DerivableCxxObject_O*>(client);
    obj_gc_safe->~DerivableCxxObject_O();
    goto finalize_done;
}
obj_finalize_STAMP_mpip__Mpi_O:
{
     // stamp value 1195
    mpip::Mpi_O* obj_gc_safe = reinterpret_cast<mpip::Mpi_O*>(client);
    obj_gc_safe->~Mpi_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Sigset_O:
{
     // stamp value 1199
    core::Sigset_O* obj_gc_safe = reinterpret_cast<core::Sigset_O*>(client);
    obj_gc_safe->~Sigset_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Environment_O:
{
     // stamp value 1203
    core::Environment_O* obj_gc_safe = reinterpret_cast<core::Environment_O*>(client);
    obj_gc_safe->~Environment_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__GlueEnvironment_O:
{
     // stamp value 1207
    core::GlueEnvironment_O* obj_gc_safe = reinterpret_cast<core::GlueEnvironment_O*>(client);
    obj_gc_safe->~GlueEnvironment_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__LexicalEnvironment_O:
{
     // stamp value 1211
    core::LexicalEnvironment_O* obj_gc_safe = reinterpret_cast<core::LexicalEnvironment_O*>(client);
    obj_gc_safe->~LexicalEnvironment_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__CompileTimeEnvironment_O:
{
     // stamp value 1215
    core::CompileTimeEnvironment_O* obj_gc_safe = reinterpret_cast<core::CompileTimeEnvironment_O*>(client);
    obj_gc_safe->~CompileTimeEnvironment_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__CatchEnvironment_O:
{
     // stamp value 1219
    core::CatchEnvironment_O* obj_gc_safe = reinterpret_cast<core::CatchEnvironment_O*>(client);
    obj_gc_safe->~CatchEnvironment_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__SymbolMacroletEnvironment_O:
{
     // stamp value 1223
    core::SymbolMacroletEnvironment_O* obj_gc_safe = reinterpret_cast<core::SymbolMacroletEnvironment_O*>(client);
    obj_gc_safe->~SymbolMacroletEnvironment_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__FunctionContainerEnvironment_O:
{
     // stamp value 1227
    core::FunctionContainerEnvironment_O* obj_gc_safe = reinterpret_cast<core::FunctionContainerEnvironment_O*>(client);
    obj_gc_safe->~FunctionContainerEnvironment_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__UnwindProtectEnvironment_O:
{
     // stamp value 1231
    core::UnwindProtectEnvironment_O* obj_gc_safe = reinterpret_cast<core::UnwindProtectEnvironment_O*>(client);
    obj_gc_safe->~UnwindProtectEnvironment_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__MacroletEnvironment_O:
{
     // stamp value 1235
    core::MacroletEnvironment_O* obj_gc_safe = reinterpret_cast<core::MacroletEnvironment_O*>(client);
    obj_gc_safe->~MacroletEnvironment_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__RuntimeVisibleEnvironment_O:
{
     // stamp value 1239
    core::RuntimeVisibleEnvironment_O* obj_gc_safe = reinterpret_cast<core::RuntimeVisibleEnvironment_O*>(client);
    obj_gc_safe->~RuntimeVisibleEnvironment_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__TagbodyEnvironment_O:
{
     // stamp value 1243
    core::TagbodyEnvironment_O* obj_gc_safe = reinterpret_cast<core::TagbodyEnvironment_O*>(client);
    obj_gc_safe->~TagbodyEnvironment_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__BlockEnvironment_O:
{
     // stamp value 1247
    core::BlockEnvironment_O* obj_gc_safe = reinterpret_cast<core::BlockEnvironment_O*>(client);
    obj_gc_safe->~BlockEnvironment_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__FunctionValueEnvironment_O:
{
     // stamp value 1251
    core::FunctionValueEnvironment_O* obj_gc_safe = reinterpret_cast<core::FunctionValueEnvironment_O*>(client);
    obj_gc_safe->~FunctionValueEnvironment_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__ValueEnvironment_O:
{
     // stamp value 1255
    core::ValueEnvironment_O* obj_gc_safe = reinterpret_cast<core::ValueEnvironment_O*>(client);
    obj_gc_safe->~ValueEnvironment_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__ActivationFrame_O:
{
     // stamp value 1259
    core::ActivationFrame_O* obj_gc_safe = reinterpret_cast<core::ActivationFrame_O*>(client);
    obj_gc_safe->~ActivationFrame_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__ValueFrame_O:
{
     // stamp value 1263
    core::ValueFrame_O* obj_gc_safe = reinterpret_cast<core::ValueFrame_O*>(client);
    obj_gc_safe->~ValueFrame_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__FunctionFrame_O:
{
     // stamp value 1267
    core::FunctionFrame_O* obj_gc_safe = reinterpret_cast<core::FunctionFrame_O*>(client);
    obj_gc_safe->~FunctionFrame_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__RandomState_O:
{
     // stamp value 1271
    core::RandomState_O* obj_gc_safe = reinterpret_cast<core::RandomState_O*>(client);
    obj_gc_safe->~RandomState_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__HashTableBase_O:
{
     // stamp value 1275
    core::HashTableBase_O* obj_gc_safe = reinterpret_cast<core::HashTableBase_O*>(client);
    obj_gc_safe->~HashTableBase_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__HashTable_O:
{
     // stamp value 1279
    core::HashTable_O* obj_gc_safe = reinterpret_cast<core::HashTable_O*>(client);
    obj_gc_safe->~HashTable_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__HashTableEqualp_O:
{
     // stamp value 1283
    core::HashTableEqualp_O* obj_gc_safe = reinterpret_cast<core::HashTableEqualp_O*>(client);
    obj_gc_safe->~HashTableEqualp_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__HashTableEq_O:
{
     // stamp value 1287
    core::HashTableEq_O* obj_gc_safe = reinterpret_cast<core::HashTableEq_O*>(client);
    obj_gc_safe->~HashTableEq_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__HashTableEqual_O:
{
     // stamp value 1291
    core::HashTableEqual_O* obj_gc_safe = reinterpret_cast<core::HashTableEqual_O*>(client);
    obj_gc_safe->~HashTableEqual_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__HashTableEql_O:
{
     // stamp value 1295
    core::HashTableEql_O* obj_gc_safe = reinterpret_cast<core::HashTableEql_O*>(client);
    obj_gc_safe->~HashTableEql_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__WeakKeyHashTable_O:
{
     // stamp value 1299
    core::WeakKeyHashTable_O* obj_gc_safe = reinterpret_cast<core::WeakKeyHashTable_O*>(client);
    obj_gc_safe->~WeakKeyHashTable_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__InsertPoint_O:
{
     // stamp value 1303
    llvmo::InsertPoint_O* obj_gc_safe = reinterpret_cast<llvmo::InsertPoint_O*>(client);
    obj_gc_safe->~InsertPoint_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Number_O:
{
     // stamp value 1307
    core::Number_O* obj_gc_safe = reinterpret_cast<core::Number_O*>(client);
    obj_gc_safe->~Number_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Real_O:
{
     // stamp value 1311
    core::Real_O* obj_gc_safe = reinterpret_cast<core::Real_O*>(client);
    obj_gc_safe->~Real_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Rational_O:
{
     // stamp value 1315
    core::Rational_O* obj_gc_safe = reinterpret_cast<core::Rational_O*>(client);
    obj_gc_safe->~Rational_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Ratio_O:
{
     // stamp value 1319
    core::Ratio_O* obj_gc_safe = reinterpret_cast<core::Ratio_O*>(client);
    obj_gc_safe->~Ratio_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Integer_O:
{
     // stamp value 1323
    core::Integer_O* obj_gc_safe = reinterpret_cast<core::Integer_O*>(client);
    obj_gc_safe->~Integer_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Bignum_O:
{
     // stamp value 1327
    core::Bignum_O* obj_gc_safe = reinterpret_cast<core::Bignum_O*>(client);
    obj_gc_safe->~Bignum_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Fixnum_dummy_O:
{
     // stamp value 1331
    core::Fixnum_dummy_O* obj_gc_safe = reinterpret_cast<core::Fixnum_dummy_O*>(client);
    obj_gc_safe->~Fixnum_dummy_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Float_O:
{
     // stamp value 1335
    core::Float_O* obj_gc_safe = reinterpret_cast<core::Float_O*>(client);
    obj_gc_safe->~Float_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__DoubleFloat_O:
{
     // stamp value 1339
    core::DoubleFloat_O* obj_gc_safe = reinterpret_cast<core::DoubleFloat_O*>(client);
    obj_gc_safe->~DoubleFloat_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__SingleFloat_dummy_O:
{
     // stamp value 1343
    core::SingleFloat_dummy_O* obj_gc_safe = reinterpret_cast<core::SingleFloat_dummy_O*>(client);
    obj_gc_safe->~SingleFloat_dummy_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__LongFloat_O:
{
     // stamp value 1347
    core::LongFloat_O* obj_gc_safe = reinterpret_cast<core::LongFloat_O*>(client);
    obj_gc_safe->~LongFloat_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__ShortFloat_O:
{
     // stamp value 1351
    core::ShortFloat_O* obj_gc_safe = reinterpret_cast<core::ShortFloat_O*>(client);
    obj_gc_safe->~ShortFloat_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Complex_O:
{
     // stamp value 1355
    core::Complex_O* obj_gc_safe = reinterpret_cast<core::Complex_O*>(client);
    obj_gc_safe->~Complex_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__SourcePosInfo_O:
{
     // stamp value 1359
    core::SourcePosInfo_O* obj_gc_safe = reinterpret_cast<core::SourcePosInfo_O*>(client);
    obj_gc_safe->~SourcePosInfo_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__IntArray_O:
{
     // stamp value 1363
    core::IntArray_O* obj_gc_safe = reinterpret_cast<core::IntArray_O*>(client);
    obj_gc_safe->~IntArray_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Record_O:
{
     // stamp value 1367
    core::Record_O* obj_gc_safe = reinterpret_cast<core::Record_O*>(client);
    obj_gc_safe->~Record_O();
    goto finalize_done;
}
obj_finalize_STAMP_clbind__ClassRegistry_O:
{
     // stamp value 1371
    clbind::ClassRegistry_O* obj_gc_safe = reinterpret_cast<clbind::ClassRegistry_O*>(client);
    obj_gc_safe->~ClassRegistry_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__ClassHolder_O:
{
     // stamp value 1375
    core::ClassHolder_O* obj_gc_safe = reinterpret_cast<core::ClassHolder_O*>(client);
    obj_gc_safe->~ClassHolder_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__WrappedPointer_O:
{
     // stamp value 1378
    core::WrappedPointer_O* obj_gc_safe = reinterpret_cast<core::WrappedPointer_O*>(client);
    obj_gc_safe->~WrappedPointer_O();
}
obj_finalize_STAMP_core__FdSet_O:
{
     // stamp value 1383
    core::FdSet_O* obj_gc_safe = reinterpret_cast<core::FdSet_O*>(client);
    obj_gc_safe->~FdSet_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__SymbolToEnumConverter_O:
{
     // stamp value 1387
    core::SymbolToEnumConverter_O* obj_gc_safe = reinterpret_cast<core::SymbolToEnumConverter_O*>(client);
    obj_gc_safe->~SymbolToEnumConverter_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__Attribute_O:
{
     // stamp value 1391
    llvmo::Attribute_O* obj_gc_safe = reinterpret_cast<llvmo::Attribute_O*>(client);
    obj_gc_safe->~Attribute_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__ObjectFile_O:
{
     // stamp value 1395
    core::ObjectFile_O* obj_gc_safe = reinterpret_cast<core::ObjectFile_O*>(client);
    obj_gc_safe->~ObjectFile_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Function_O:
{
     // stamp value 1399
    core::Function_O* obj_gc_safe = reinterpret_cast<core::Function_O*>(client);
    obj_gc_safe->~Function_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__FuncallableInstance_O:
{
     // stamp value 1401
    core::FuncallableInstance_O* obj_gc_safe = reinterpret_cast<core::FuncallableInstance_O*>(client);
    obj_gc_safe->~FuncallableInstance_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Creator_O:
{
     // stamp value 1407
    core::Creator_O* obj_gc_safe = reinterpret_cast<core::Creator_O*>(client);
    obj_gc_safe->~Creator_O();
}
obj_finalize_STAMP_core__FuncallableInstanceCreator_O:
{
     // stamp value 1411
    core::FuncallableInstanceCreator_O* obj_gc_safe = reinterpret_cast<core::FuncallableInstanceCreator_O*>(client);
    obj_gc_safe->~FuncallableInstanceCreator_O();
    goto finalize_done;
}
obj_finalize_STAMP_clbind__ConstructorCreator_O:
{
     // stamp value 1415
    clbind::ConstructorCreator_O* obj_gc_safe = reinterpret_cast<clbind::ConstructorCreator_O*>(client);
    obj_gc_safe->~ConstructorCreator_O();
}
obj_finalize_STAMP_clbind__DummyCreator_O:
{
     // stamp value 1419
    clbind::DummyCreator_O* obj_gc_safe = reinterpret_cast<clbind::DummyCreator_O*>(client);
    obj_gc_safe->~DummyCreator_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__InstanceCreator_O:
{
     // stamp value 1423
    core::InstanceCreator_O* obj_gc_safe = reinterpret_cast<core::InstanceCreator_O*>(client);
    obj_gc_safe->~InstanceCreator_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__ClassRepCreator_O:
{
     // stamp value 1427
    core::ClassRepCreator_O* obj_gc_safe = reinterpret_cast<core::ClassRepCreator_O*>(client);
    obj_gc_safe->~ClassRepCreator_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__DerivableCxxClassCreator_O:
{
     // stamp value 1431
    core::DerivableCxxClassCreator_O* obj_gc_safe = reinterpret_cast<core::DerivableCxxClassCreator_O*>(client);
    obj_gc_safe->~DerivableCxxClassCreator_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__StandardClassCreator_O:
{
     // stamp value 1435
    core::StandardClassCreator_O* obj_gc_safe = reinterpret_cast<core::StandardClassCreator_O*>(client);
    obj_gc_safe->~StandardClassCreator_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__SpecialForm_O:
{
     // stamp value 1439
    core::SpecialForm_O* obj_gc_safe = reinterpret_cast<core::SpecialForm_O*>(client);
    obj_gc_safe->~SpecialForm_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Closure_O:
{
     // stamp value 1443
    core::Closure_O* obj_gc_safe = reinterpret_cast<core::Closure_O*>(client);
    obj_gc_safe->~Closure_O();
}
obj_finalize_STAMP_core__SingleDispatchCxxEffectiveMethodFunction_O:
{
     // stamp value 1447
    core::SingleDispatchCxxEffectiveMethodFunction_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchCxxEffectiveMethodFunction_O*>(client);
    obj_gc_safe->~SingleDispatchCxxEffectiveMethodFunction_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__SingleDispatchMethodFunction_O:
{
     // stamp value 1451
    core::SingleDispatchMethodFunction_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchMethodFunction_O*>(client);
    obj_gc_safe->~SingleDispatchMethodFunction_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__CxxMethodFunction_O:
{
     // stamp value 1455
    core::CxxMethodFunction_O* obj_gc_safe = reinterpret_cast<core::CxxMethodFunction_O*>(client);
    obj_gc_safe->~CxxMethodFunction_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__BuiltinClosure_O:
{
     // stamp value 1459
    core::BuiltinClosure_O* obj_gc_safe = reinterpret_cast<core::BuiltinClosure_O*>(client);
    obj_gc_safe->~BuiltinClosure_O();
}
obj_finalize_STAMP_core__TranslationFunctor_O:
{
     // stamp value 1463
    core::TranslationFunctor_O* obj_gc_safe = reinterpret_cast<core::TranslationFunctor_O*>(client);
    obj_gc_safe->~TranslationFunctor_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__ClosureWithSlots_O:
{
     // stamp value 1467
    core::ClosureWithSlots_O* obj_gc_safe = reinterpret_cast<core::ClosureWithSlots_O*>(client);
    obj_gc_safe->~ClosureWithSlots_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__SingleDispatchGenericFunctionClosure_O:
{
     // stamp value 1471
    core::SingleDispatchGenericFunctionClosure_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchGenericFunctionClosure_O*>(client);
    obj_gc_safe->~SingleDispatchGenericFunctionClosure_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__SingleDispatchEffectiveMethodFunction_O:
{
     // stamp value 1475
    core::SingleDispatchEffectiveMethodFunction_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchEffectiveMethodFunction_O*>(client);
    obj_gc_safe->~SingleDispatchEffectiveMethodFunction_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__WeakPointer_O:
{
     // stamp value 1479
    core::WeakPointer_O* obj_gc_safe = reinterpret_cast<core::WeakPointer_O*>(client);
    obj_gc_safe->~WeakPointer_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DebugLoc_O:
{
     // stamp value 1483
    llvmo::DebugLoc_O* obj_gc_safe = reinterpret_cast<llvmo::DebugLoc_O*>(client);
    obj_gc_safe->~DebugLoc_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Array_O:
{
     // stamp value 1487
    core::Array_O* obj_gc_safe = reinterpret_cast<core::Array_O*>(client);
    obj_gc_safe->~Array_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__MDArray_O:
{
     // stamp value 1491
    core::MDArray_O* obj_gc_safe = reinterpret_cast<core::MDArray_O*>(client);
    obj_gc_safe->~MDArray_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArray_int16_t_O_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1495
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_int16_t_O,core::SimpleMDArray_int16_t_O,core::SimpleVector_int16_t_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArray_int16_t_O:
{
     // stamp value 1499
    core::MDArray_int16_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int16_t_O*>(client);
    obj_gc_safe->~MDArray_int16_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArray_int8_t_O_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1503
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_int8_t_O,core::SimpleMDArray_int8_t_O,core::SimpleVector_int8_t_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArray_int8_t_O:
{
     // stamp value 1507
    core::MDArray_int8_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int8_t_O*>(client);
    obj_gc_safe->~MDArray_int8_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArray_int32_t_O_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1511
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_int32_t_O,core::SimpleMDArray_int32_t_O,core::SimpleVector_int32_t_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArray_int32_t_O:
{
     // stamp value 1515
    core::MDArray_int32_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int32_t_O*>(client);
    obj_gc_safe->~MDArray_int32_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArray_byte4_t_O_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1519
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_byte4_t_O,core::SimpleMDArray_byte4_t_O,core::SimpleVector_byte4_t_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArray_byte4_t_O:
{
     // stamp value 1523
    core::MDArray_byte4_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte4_t_O*>(client);
    obj_gc_safe->~MDArray_byte4_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArray_float_O_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__MDArray_O_:
{
     // do nothing stamp value 1527
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_float_O,core::SimpleMDArray_float_O,core::SimpleVector_float_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArray_float_O:
{
     // stamp value 1531
    core::MDArray_float_O* obj_gc_safe = reinterpret_cast<core::MDArray_float_O*>(client);
    obj_gc_safe->~MDArray_float_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArray_size_t_O_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1535
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_size_t_O,core::SimpleMDArray_size_t_O,core::SimpleVector_size_t_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArray_size_t_O:
{
     // stamp value 1539
    core::MDArray_size_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_size_t_O*>(client);
    obj_gc_safe->~MDArray_size_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArray_byte8_t_O_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1543
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_byte8_t_O,core::SimpleMDArray_byte8_t_O,core::SimpleVector_byte8_t_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArray_byte8_t_O:
{
     // stamp value 1547
    core::MDArray_byte8_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte8_t_O*>(client);
    obj_gc_safe->~MDArray_byte8_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArray_int2_t_O_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1551
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_int2_t_O,core::SimpleMDArray_int2_t_O,core::SimpleVector_int2_t_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArray_int2_t_O:
{
     // stamp value 1555
    core::MDArray_int2_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int2_t_O*>(client);
    obj_gc_safe->~MDArray_int2_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArray_fixnum_O_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__MDArray_O_:
{
     // do nothing stamp value 1559
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_fixnum_O,core::SimpleMDArray_fixnum_O,core::SimpleVector_fixnum_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArray_fixnum_O:
{
     // stamp value 1563
    core::MDArray_fixnum_O* obj_gc_safe = reinterpret_cast<core::MDArray_fixnum_O*>(client);
    obj_gc_safe->~MDArray_fixnum_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArrayBaseChar_O_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__MDArray_O_:
{
     // do nothing stamp value 1567
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArrayBaseChar_O,core::SimpleMDArrayBaseChar_O,core::SimpleBaseString_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArrayBaseChar_O:
{
     // stamp value 1571
    core::MDArrayBaseChar_O* obj_gc_safe = reinterpret_cast<core::MDArrayBaseChar_O*>(client);
    obj_gc_safe->~MDArrayBaseChar_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArray_byte64_t_O_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1575
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_byte64_t_O,core::SimpleMDArray_byte64_t_O,core::SimpleVector_byte64_t_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArray_byte64_t_O:
{
     // stamp value 1579
    core::MDArray_byte64_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte64_t_O*>(client);
    obj_gc_safe->~MDArray_byte64_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_geom__MDArrayCoordinate_O_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__MDArray_O_:
{
     // do nothing stamp value 1583
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<geom::MDArrayCoordinate_O,geom::SimpleMDArrayCoordinate_O,geom::SimpleVectorCoordinate_O,core::MDArray_O>"));
}
obj_finalize_STAMP_geom__MDArrayCoordinate_O:
{
     // stamp value 1587
    geom::MDArrayCoordinate_O* obj_gc_safe = reinterpret_cast<geom::MDArrayCoordinate_O*>(client);
    obj_gc_safe->~MDArrayCoordinate_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArrayT_O_core__SimpleMDArrayT_O_core__SimpleVector_O_core__MDArray_O_:
{
     // do nothing stamp value 1591
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArrayT_O,core::SimpleMDArrayT_O,core::SimpleVector_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArrayT_O:
{
     // stamp value 1595
    core::MDArrayT_O* obj_gc_safe = reinterpret_cast<core::MDArrayT_O*>(client);
    obj_gc_safe->~MDArrayT_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__SimpleMDArray_O:
{
     // stamp value 1599
    core::SimpleMDArray_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_O*>(client);
    obj_gc_safe->~SimpleMDArray_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1603
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_int8_t_O,core::SimpleVector_int8_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArray_int8_t_O:
{
     // stamp value 1607
    core::SimpleMDArray_int8_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int8_t_O*>(client);
    obj_gc_safe->~SimpleMDArray_int8_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1611
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_byte32_t_O,core::SimpleVector_byte32_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArray_byte32_t_O:
{
     // stamp value 1615
    core::SimpleMDArray_byte32_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte32_t_O*>(client);
    obj_gc_safe->~SimpleMDArray_byte32_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1619
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_int2_t_O,core::SimpleVector_int2_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArray_int2_t_O:
{
     // stamp value 1623
    core::SimpleMDArray_int2_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int2_t_O*>(client);
    obj_gc_safe->~SimpleMDArray_int2_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1627
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_byte4_t_O,core::SimpleVector_byte4_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArray_byte4_t_O:
{
     // stamp value 1631
    core::SimpleMDArray_byte4_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte4_t_O*>(client);
    obj_gc_safe->~SimpleMDArray_byte4_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1635
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_int32_t_O,core::SimpleVector_int32_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArray_int32_t_O:
{
     // stamp value 1639
    core::SimpleMDArray_int32_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int32_t_O*>(client);
    obj_gc_safe->~SimpleMDArray_int32_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1643
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_float_O,core::SimpleVector_float_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArray_float_O:
{
     // stamp value 1647
    core::SimpleMDArray_float_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_float_O*>(client);
    obj_gc_safe->~SimpleMDArray_float_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1651
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_int16_t_O,core::SimpleVector_int16_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArray_int16_t_O:
{
     // stamp value 1655
    core::SimpleMDArray_int16_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int16_t_O*>(client);
    obj_gc_safe->~SimpleMDArray_int16_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1659
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_size_t_O,core::SimpleVector_size_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArray_size_t_O:
{
     // stamp value 1663
    core::SimpleMDArray_size_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_size_t_O*>(client);
    obj_gc_safe->~SimpleMDArray_size_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1667
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArrayCharacter_O,core::SimpleCharacterString_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArrayCharacter_O:
{
     // stamp value 1671
    core::SimpleMDArrayCharacter_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArrayCharacter_O*>(client);
    obj_gc_safe->~SimpleMDArrayCharacter_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1675
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_byte2_t_O,core::SimpleVector_byte2_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArray_byte2_t_O:
{
     // stamp value 1679
    core::SimpleMDArray_byte2_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte2_t_O*>(client);
    obj_gc_safe->~SimpleMDArray_byte2_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1683
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_byte16_t_O,core::SimpleVector_byte16_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArray_byte16_t_O:
{
     // stamp value 1687
    core::SimpleMDArray_byte16_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte16_t_O*>(client);
    obj_gc_safe->~SimpleMDArray_byte16_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1691
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArrayBaseChar_O,core::SimpleBaseString_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArrayBaseChar_O:
{
     // stamp value 1695
    core::SimpleMDArrayBaseChar_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArrayBaseChar_O*>(client);
    obj_gc_safe->~SimpleMDArrayBaseChar_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1699
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_byte64_t_O,core::SimpleVector_byte64_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArray_byte64_t_O:
{
     // stamp value 1703
    core::SimpleMDArray_byte64_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte64_t_O*>(client);
    obj_gc_safe->~SimpleMDArray_byte64_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1707
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_double_O,core::SimpleVector_double_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArray_double_O:
{
     // stamp value 1711
    core::SimpleMDArray_double_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_double_O*>(client);
    obj_gc_safe->~SimpleMDArray_double_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArrayT_O_core__SimpleVector_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1715
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArrayT_O,core::SimpleVector_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArrayT_O:
{
     // stamp value 1719
    core::SimpleMDArrayT_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArrayT_O*>(client);
    obj_gc_safe->~SimpleMDArrayT_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1723
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_int4_t_O,core::SimpleVector_int4_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArray_int4_t_O:
{
     // stamp value 1727
    core::SimpleMDArray_int4_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int4_t_O*>(client);
    obj_gc_safe->~SimpleMDArray_int4_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1731
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<geom::SimpleMDArrayCoordinate_O,geom::SimpleVectorCoordinate_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_geom__SimpleMDArrayCoordinate_O:
{
     // stamp value 1735
    geom::SimpleMDArrayCoordinate_O* obj_gc_safe = reinterpret_cast<geom::SimpleMDArrayCoordinate_O*>(client);
    obj_gc_safe->~SimpleMDArrayCoordinate_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1739
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_fixnum_O,core::SimpleVector_fixnum_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArray_fixnum_O:
{
     // stamp value 1743
    core::SimpleMDArray_fixnum_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_fixnum_O*>(client);
    obj_gc_safe->~SimpleMDArray_fixnum_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1747
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArrayBit_O,core::SimpleBitVector_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArrayBit_O:
{
     // stamp value 1751
    core::SimpleMDArrayBit_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArrayBit_O*>(client);
    obj_gc_safe->~SimpleMDArrayBit_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1755
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_byte8_t_O,core::SimpleVector_byte8_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArray_byte8_t_O:
{
     // stamp value 1759
    core::SimpleMDArray_byte8_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte8_t_O*>(client);
    obj_gc_safe->~SimpleMDArray_byte8_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1763
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_int64_t_O,core::SimpleVector_int64_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMP_core__SimpleMDArray_int64_t_O:
{
     // stamp value 1767
    core::SimpleMDArray_int64_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int64_t_O*>(client);
    obj_gc_safe->~SimpleMDArray_int64_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__ComplexVector_O:
{
     // stamp value 1771
    core::ComplexVector_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_O*>(client);
    obj_gc_safe->~ComplexVector_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_double_O_core__SimpleVector_double_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1775
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_double_O,core::SimpleVector_double_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_double_O:
{
     // stamp value 1779
    core::ComplexVector_double_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_double_O*>(client);
    obj_gc_safe->~ComplexVector_double_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_int8_t_O_core__SimpleVector_int8_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1783
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_int8_t_O,core::SimpleVector_int8_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_int8_t_O:
{
     // stamp value 1787
    core::ComplexVector_int8_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int8_t_O*>(client);
    obj_gc_safe->~ComplexVector_int8_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_T_O_core__SimpleVector_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1791
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_T_O,core::SimpleVector_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_T_O:
{
     // stamp value 1795
    core::ComplexVector_T_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_T_O*>(client);
    obj_gc_safe->~ComplexVector_T_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_int32_t_O_core__SimpleVector_int32_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1799
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_int32_t_O,core::SimpleVector_int32_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_int32_t_O:
{
     // stamp value 1803
    core::ComplexVector_int32_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int32_t_O*>(client);
    obj_gc_safe->~ComplexVector_int32_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_byte16_t_O_core__SimpleVector_byte16_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1807
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_byte16_t_O,core::SimpleVector_byte16_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_byte16_t_O:
{
     // stamp value 1811
    core::ComplexVector_byte16_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte16_t_O*>(client);
    obj_gc_safe->~ComplexVector_byte16_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_geom__ComplexVectorCoordinate_O_geom__SimpleVectorCoordinate_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1815
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<geom::ComplexVectorCoordinate_O,geom::SimpleVectorCoordinate_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_geom__ComplexVectorCoordinate_O:
{
     // stamp value 1819
    geom::ComplexVectorCoordinate_O* obj_gc_safe = reinterpret_cast<geom::ComplexVectorCoordinate_O*>(client);
    obj_gc_safe->~ComplexVectorCoordinate_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_byte4_t_O_core__SimpleVector_byte4_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1823
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_byte4_t_O,core::SimpleVector_byte4_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_byte4_t_O:
{
     // stamp value 1827
    core::ComplexVector_byte4_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte4_t_O*>(client);
    obj_gc_safe->~ComplexVector_byte4_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_byte64_t_O_core__SimpleVector_byte64_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1831
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_byte64_t_O,core::SimpleVector_byte64_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_byte64_t_O:
{
     // stamp value 1835
    core::ComplexVector_byte64_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte64_t_O*>(client);
    obj_gc_safe->~ComplexVector_byte64_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_int2_t_O_core__SimpleVector_int2_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1839
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_int2_t_O,core::SimpleVector_int2_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_int2_t_O:
{
     // stamp value 1843
    core::ComplexVector_int2_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int2_t_O*>(client);
    obj_gc_safe->~ComplexVector_int2_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_float_O_core__SimpleVector_float_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1847
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_float_O,core::SimpleVector_float_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_float_O:
{
     // stamp value 1851
    core::ComplexVector_float_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_float_O*>(client);
    obj_gc_safe->~ComplexVector_float_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_int16_t_O_core__SimpleVector_int16_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1855
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_int16_t_O,core::SimpleVector_int16_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_int16_t_O:
{
     // stamp value 1859
    core::ComplexVector_int16_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int16_t_O*>(client);
    obj_gc_safe->~ComplexVector_int16_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_int4_t_O_core__SimpleVector_int4_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1863
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_int4_t_O,core::SimpleVector_int4_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_int4_t_O:
{
     // stamp value 1867
    core::ComplexVector_int4_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int4_t_O*>(client);
    obj_gc_safe->~ComplexVector_int4_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_size_t_O_core__SimpleVector_size_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1871
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_size_t_O,core::SimpleVector_size_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_size_t_O:
{
     // stamp value 1875
    core::ComplexVector_size_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_size_t_O*>(client);
    obj_gc_safe->~ComplexVector_size_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_byte2_t_O_core__SimpleVector_byte2_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1879
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_byte2_t_O,core::SimpleVector_byte2_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_byte2_t_O:
{
     // stamp value 1883
    core::ComplexVector_byte2_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte2_t_O*>(client);
    obj_gc_safe->~ComplexVector_byte2_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_byte8_t_O_core__SimpleVector_byte8_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1887
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_byte8_t_O,core::SimpleVector_byte8_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_byte8_t_O:
{
     // stamp value 1891
    core::ComplexVector_byte8_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte8_t_O*>(client);
    obj_gc_safe->~ComplexVector_byte8_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_byte32_t_O_core__SimpleVector_byte32_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1895
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_byte32_t_O,core::SimpleVector_byte32_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_byte32_t_O:
{
     // stamp value 1899
    core::ComplexVector_byte32_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte32_t_O*>(client);
    obj_gc_safe->~ComplexVector_byte32_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__BitVectorNs_O_core__SimpleBitVector_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1903
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::BitVectorNs_O,core::SimpleBitVector_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__BitVectorNs_O:
{
     // stamp value 1907
    core::BitVectorNs_O* obj_gc_safe = reinterpret_cast<core::BitVectorNs_O*>(client);
    obj_gc_safe->~BitVectorNs_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__StrNs_O:
{
     // stamp value 1911
    core::StrNs_O* obj_gc_safe = reinterpret_cast<core::StrNs_O*>(client);
    obj_gc_safe->~StrNs_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__Str8Ns_O_core__SimpleBaseString_O_core__StrNs_O_:
{
     // do nothing stamp value 1915
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::Str8Ns_O,core::SimpleBaseString_O,core::StrNs_O>"));
}
obj_finalize_STAMP_core__Str8Ns_O:
{
     // stamp value 1919
    core::Str8Ns_O* obj_gc_safe = reinterpret_cast<core::Str8Ns_O*>(client);
    obj_gc_safe->~Str8Ns_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__StrWNs_O_core__SimpleCharacterString_O_core__StrNs_O_:
{
     // do nothing stamp value 1923
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::StrWNs_O,core::SimpleCharacterString_O,core::StrNs_O>"));
}
obj_finalize_STAMP_core__StrWNs_O:
{
     // stamp value 1927
    core::StrWNs_O* obj_gc_safe = reinterpret_cast<core::StrWNs_O*>(client);
    obj_gc_safe->~StrWNs_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_fixnum_O_core__SimpleVector_fixnum_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1931
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_fixnum_O,core::SimpleVector_fixnum_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_fixnum_O:
{
     // stamp value 1935
    core::ComplexVector_fixnum_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_fixnum_O*>(client);
    obj_gc_safe->~ComplexVector_fixnum_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Vector_core__ComplexVector_int64_t_O_core__SimpleVector_int64_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1939
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_int64_t_O,core::SimpleVector_int64_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMP_core__ComplexVector_int64_t_O:
{
     // stamp value 1943
    core::ComplexVector_int64_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int64_t_O*>(client);
    obj_gc_safe->~ComplexVector_int64_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArray_int64_t_O_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1947
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_int64_t_O,core::SimpleMDArray_int64_t_O,core::SimpleVector_int64_t_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArray_int64_t_O:
{
     // stamp value 1951
    core::MDArray_int64_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int64_t_O*>(client);
    obj_gc_safe->~MDArray_int64_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArray_byte32_t_O_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1955
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_byte32_t_O,core::SimpleMDArray_byte32_t_O,core::SimpleVector_byte32_t_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArray_byte32_t_O:
{
     // stamp value 1959
    core::MDArray_byte32_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte32_t_O*>(client);
    obj_gc_safe->~MDArray_byte32_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArray_byte2_t_O_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1963
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_byte2_t_O,core::SimpleMDArray_byte2_t_O,core::SimpleVector_byte2_t_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArray_byte2_t_O:
{
     // stamp value 1967
    core::MDArray_byte2_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte2_t_O*>(client);
    obj_gc_safe->~MDArray_byte2_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArrayCharacter_O_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__MDArray_O_:
{
     // do nothing stamp value 1971
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArrayCharacter_O,core::SimpleMDArrayCharacter_O,core::SimpleCharacterString_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArrayCharacter_O:
{
     // stamp value 1975
    core::MDArrayCharacter_O* obj_gc_safe = reinterpret_cast<core::MDArrayCharacter_O*>(client);
    obj_gc_safe->~MDArrayCharacter_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArrayBit_O_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__MDArray_O_:
{
     // do nothing stamp value 1979
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArrayBit_O,core::SimpleMDArrayBit_O,core::SimpleBitVector_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArrayBit_O:
{
     // stamp value 1983
    core::MDArrayBit_O* obj_gc_safe = reinterpret_cast<core::MDArrayBit_O*>(client);
    obj_gc_safe->~MDArrayBit_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArray_byte16_t_O_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1987
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_byte16_t_O,core::SimpleMDArray_byte16_t_O,core::SimpleVector_byte16_t_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArray_byte16_t_O:
{
     // stamp value 1991
    core::MDArray_byte16_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte16_t_O*>(client);
    obj_gc_safe->~MDArray_byte16_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArray_int4_t_O_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1995
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_int4_t_O,core::SimpleMDArray_int4_t_O,core::SimpleVector_int4_t_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArray_int4_t_O:
{
     // stamp value 1999
    core::MDArray_int4_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int4_t_O*>(client);
    obj_gc_safe->~MDArray_int4_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_Array_core__MDArray_double_O_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__MDArray_O_:
{
     // do nothing stamp value 2003
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_double_O,core::SimpleMDArray_double_O,core::SimpleVector_double_O,core::MDArray_O>"));
}
obj_finalize_STAMP_core__MDArray_double_O:
{
     // stamp value 2007
    core::MDArray_double_O* obj_gc_safe = reinterpret_cast<core::MDArray_double_O*>(client);
    obj_gc_safe->~MDArray_double_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__AbstractSimpleVector_O:
{
     // stamp value 2011
    core::AbstractSimpleVector_O* obj_gc_safe = reinterpret_cast<core::AbstractSimpleVector_O*>(client);
    obj_gc_safe->~AbstractSimpleVector_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_byte32_t_O_unsigned_int_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2015
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_byte32_t_O,unsigned int,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMP_core__SimpleVector_byte32_t_O:
{
     // stamp value 2019
    core::SimpleVector_byte32_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte32_t_O*>(client);
    obj_gc_safe->~SimpleVector_byte32_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_size_t_O_unsigned_long_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2023
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_size_t_O,unsigned long,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMP_core__SimpleVector_size_t_O:
{
     // stamp value 2027
    core::SimpleVector_size_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_size_t_O*>(client);
    obj_gc_safe->~SimpleVector_size_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_double_O_double_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2031
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_double_O,double,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMP_core__SimpleVector_double_O:
{
     // stamp value 2035
    core::SimpleVector_double_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_double_O*>(client);
    obj_gc_safe->~SimpleVector_double_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_int2_t_O_2_1_:
{
     // do nothing stamp value 2039
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleBitUnitVector<core::SimpleVector_int2_t_O,2,1>"));
}
obj_finalize_STAMP_core__SimpleVector_int2_t_O:
{
     // stamp value 2043
    core::SimpleVector_int2_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int2_t_O*>(client);
    obj_gc_safe->~SimpleVector_int2_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_int64_t_O_long_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2047
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_int64_t_O,long,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMP_core__SimpleVector_int64_t_O:
{
     // stamp value 2051
    core::SimpleVector_int64_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int64_t_O*>(client);
    obj_gc_safe->~SimpleVector_int64_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_int8_t_O_signed_char_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2055
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_int8_t_O,signed char,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMP_core__SimpleVector_int8_t_O:
{
     // stamp value 2059
    core::SimpleVector_int8_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int8_t_O*>(client);
    obj_gc_safe->~SimpleVector_int8_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_byte4_t_O_4_0_:
{
     // do nothing stamp value 2063
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleBitUnitVector<core::SimpleVector_byte4_t_O,4,0>"));
}
obj_finalize_STAMP_core__SimpleVector_byte4_t_O:
{
     // stamp value 2067
    core::SimpleVector_byte4_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte4_t_O*>(client);
    obj_gc_safe->~SimpleVector_byte4_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleVector_geom__SimpleVectorCoordinate_O_Vector3_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2071
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<geom::SimpleVectorCoordinate_O,Vector3,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMP_geom__SimpleVectorCoordinate_O:
{
     // stamp value 2075
    geom::SimpleVectorCoordinate_O* obj_gc_safe = reinterpret_cast<geom::SimpleVectorCoordinate_O*>(client);
    obj_gc_safe->~SimpleVectorCoordinate_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__SimpleString_O:
{
     // stamp value 2079
    core::SimpleString_O* obj_gc_safe = reinterpret_cast<core::SimpleString_O*>(client);
    obj_gc_safe->~SimpleString_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleVector_core__SimpleBaseString_O_unsigned_char_core__SimpleString_O_:
{
     // do nothing stamp value 2083
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleBaseString_O,unsigned char,core::SimpleString_O>"));
}
obj_finalize_STAMP_core__SimpleBaseString_O:
{
     // stamp value 2087
    core::SimpleBaseString_O* obj_gc_safe = reinterpret_cast<core::SimpleBaseString_O*>(client);
    obj_gc_safe->~SimpleBaseString_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleVector_core__SimpleCharacterString_O_int_core__SimpleString_O_:
{
     // do nothing stamp value 2091
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleCharacterString_O,int,core::SimpleString_O>"));
}
obj_finalize_STAMP_core__SimpleCharacterString_O:
{
     // stamp value 2095
    core::SimpleCharacterString_O* obj_gc_safe = reinterpret_cast<core::SimpleCharacterString_O*>(client);
    obj_gc_safe->~SimpleCharacterString_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_int16_t_O_short_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2099
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_int16_t_O,short,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMP_core__SimpleVector_int16_t_O:
{
     // stamp value 2103
    core::SimpleVector_int16_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int16_t_O*>(client);
    obj_gc_safe->~SimpleVector_int16_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_byte16_t_O_unsigned_short_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2107
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_byte16_t_O,unsigned short,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMP_core__SimpleVector_byte16_t_O:
{
     // stamp value 2111
    core::SimpleVector_byte16_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte16_t_O*>(client);
    obj_gc_safe->~SimpleVector_byte16_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleBitUnitVector_core__SimpleBitVector_O_1_0_:
{
     // do nothing stamp value 2115
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleBitUnitVector<core::SimpleBitVector_O,1,0>"));
}
obj_finalize_STAMP_core__SimpleBitVector_O:
{
     // stamp value 2119
    core::SimpleBitVector_O* obj_gc_safe = reinterpret_cast<core::SimpleBitVector_O*>(client);
    obj_gc_safe->~SimpleBitVector_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_int4_t_O_4_1_:
{
     // do nothing stamp value 2123
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleBitUnitVector<core::SimpleVector_int4_t_O,4,1>"));
}
obj_finalize_STAMP_core__SimpleVector_int4_t_O:
{
     // stamp value 2127
    core::SimpleVector_int4_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int4_t_O*>(client);
    obj_gc_safe->~SimpleVector_int4_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_byte64_t_O_unsigned_long_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2131
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_byte64_t_O,unsigned long,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMP_core__SimpleVector_byte64_t_O:
{
     // stamp value 2135
    core::SimpleVector_byte64_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte64_t_O*>(client);
    obj_gc_safe->~SimpleVector_byte64_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_fixnum_O_long_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2139
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_fixnum_O,long,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMP_core__SimpleVector_fixnum_O:
{
     // stamp value 2143
    core::SimpleVector_fixnum_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_fixnum_O*>(client);
    obj_gc_safe->~SimpleVector_fixnum_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_float_O_float_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2147
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_float_O,float,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMP_core__SimpleVector_float_O:
{
     // stamp value 2151
    core::SimpleVector_float_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_float_O*>(client);
    obj_gc_safe->~SimpleVector_float_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_O_gctools__smart_ptr_core__T_O__core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2155
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_O,gctools::smart_ptr<core::T_O>,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMP_core__SimpleVector_O:
{
     // stamp value 2159
    core::SimpleVector_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_O*>(client);
    obj_gc_safe->~SimpleVector_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_byte8_t_O_unsigned_char_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2163
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_byte8_t_O,unsigned char,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMP_core__SimpleVector_byte8_t_O:
{
     // stamp value 2167
    core::SimpleVector_byte8_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte8_t_O*>(client);
    obj_gc_safe->~SimpleVector_byte8_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_byte2_t_O_2_0_:
{
     // do nothing stamp value 2171
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleBitUnitVector<core::SimpleVector_byte2_t_O,2,0>"));
}
obj_finalize_STAMP_core__SimpleVector_byte2_t_O:
{
     // stamp value 2175
    core::SimpleVector_byte2_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte2_t_O*>(client);
    obj_gc_safe->~SimpleVector_byte2_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_int32_t_O_int_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2179
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_int32_t_O,int,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMP_core__SimpleVector_int32_t_O:
{
     // stamp value 2183
    core::SimpleVector_int32_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int32_t_O*>(client);
    obj_gc_safe->~SimpleVector_int32_t_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Character_dummy_O:
{
     // stamp value 2187
    core::Character_dummy_O* obj_gc_safe = reinterpret_cast<core::Character_dummy_O*>(client);
    obj_gc_safe->~Character_dummy_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DataLayout_O:
{
     // stamp value 2191
    llvmo::DataLayout_O* obj_gc_safe = reinterpret_cast<llvmo::DataLayout_O*>(client);
    obj_gc_safe->~DataLayout_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__LoadTimeValues_O:
{
     // stamp value 2195
    core::LoadTimeValues_O* obj_gc_safe = reinterpret_cast<core::LoadTimeValues_O*>(client);
    obj_gc_safe->~LoadTimeValues_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Readtable_O:
{
     // stamp value 2199
    core::Readtable_O* obj_gc_safe = reinterpret_cast<core::Readtable_O*>(client);
    obj_gc_safe->~Readtable_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__PosixTime_O:
{
     // stamp value 2203
    core::PosixTime_O* obj_gc_safe = reinterpret_cast<core::PosixTime_O*>(client);
    obj_gc_safe->~PosixTime_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__StructLayout_O:
{
     // stamp value 2207
    llvmo::StructLayout_O* obj_gc_safe = reinterpret_cast<llvmo::StructLayout_O*>(client);
    obj_gc_safe->~StructLayout_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__ExternalObject_O:
{
     // stamp value 2211
    core::ExternalObject_O* obj_gc_safe = reinterpret_cast<core::ExternalObject_O*>(client);
    obj_gc_safe->~ExternalObject_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__Pass_O:
{
     // stamp value 2215
    llvmo::Pass_O* obj_gc_safe = reinterpret_cast<llvmo::Pass_O*>(client);
    obj_gc_safe->~Pass_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ModulePass_O:
{
     // stamp value 2219
    llvmo::ModulePass_O* obj_gc_safe = reinterpret_cast<llvmo::ModulePass_O*>(client);
    obj_gc_safe->~ModulePass_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ImmutablePass_O:
{
     // stamp value 2223
    llvmo::ImmutablePass_O* obj_gc_safe = reinterpret_cast<llvmo::ImmutablePass_O*>(client);
    obj_gc_safe->~ImmutablePass_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__TargetLibraryInfoWrapperPass_O:
{
     // stamp value 2227
    llvmo::TargetLibraryInfoWrapperPass_O* obj_gc_safe = reinterpret_cast<llvmo::TargetLibraryInfoWrapperPass_O*>(client);
    obj_gc_safe->~TargetLibraryInfoWrapperPass_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__FunctionPass_O:
{
     // stamp value 2231
    llvmo::FunctionPass_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionPass_O*>(client);
    obj_gc_safe->~FunctionPass_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__MCSubtargetInfo_O:
{
     // stamp value 2235
    llvmo::MCSubtargetInfo_O* obj_gc_safe = reinterpret_cast<llvmo::MCSubtargetInfo_O*>(client);
    obj_gc_safe->~MCSubtargetInfo_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__TargetSubtargetInfo_O:
{
     // stamp value 2239
    llvmo::TargetSubtargetInfo_O* obj_gc_safe = reinterpret_cast<llvmo::TargetSubtargetInfo_O*>(client);
    obj_gc_safe->~TargetSubtargetInfo_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__JITDylib_O:
{
     // stamp value 2243
    llvmo::JITDylib_O* obj_gc_safe = reinterpret_cast<llvmo::JITDylib_O*>(client);
    obj_gc_safe->~JITDylib_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__IRBuilderBase_O:
{
     // stamp value 2247
    llvmo::IRBuilderBase_O* obj_gc_safe = reinterpret_cast<llvmo::IRBuilderBase_O*>(client);
    obj_gc_safe->~IRBuilderBase_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__IRBuilder_O:
{
     // stamp value 2251
    llvmo::IRBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::IRBuilder_O*>(client);
    obj_gc_safe->~IRBuilder_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__APInt_O:
{
     // stamp value 2255
    llvmo::APInt_O* obj_gc_safe = reinterpret_cast<llvmo::APInt_O*>(client);
    obj_gc_safe->~APInt_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DIBuilder_O:
{
     // stamp value 2259
    llvmo::DIBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::DIBuilder_O*>(client);
    obj_gc_safe->~DIBuilder_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__EngineBuilder_O:
{
     // stamp value 2263
    llvmo::EngineBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::EngineBuilder_O*>(client);
    obj_gc_safe->~EngineBuilder_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__PassManagerBase_O:
{
     // stamp value 2267
    llvmo::PassManagerBase_O* obj_gc_safe = reinterpret_cast<llvmo::PassManagerBase_O*>(client);
    obj_gc_safe->~PassManagerBase_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__PassManager_O:
{
     // stamp value 2271
    llvmo::PassManager_O* obj_gc_safe = reinterpret_cast<llvmo::PassManager_O*>(client);
    obj_gc_safe->~PassManager_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__FunctionPassManager_O:
{
     // stamp value 2275
    llvmo::FunctionPassManager_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionPassManager_O*>(client);
    obj_gc_safe->~FunctionPassManager_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__Value_O:
{
     // stamp value 2279
    llvmo::Value_O* obj_gc_safe = reinterpret_cast<llvmo::Value_O*>(client);
    obj_gc_safe->~Value_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__User_O:
{
     // stamp value 2283
    llvmo::User_O* obj_gc_safe = reinterpret_cast<llvmo::User_O*>(client);
    obj_gc_safe->~User_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__Instruction_O:
{
     // stamp value 2287
    llvmo::Instruction_O* obj_gc_safe = reinterpret_cast<llvmo::Instruction_O*>(client);
    obj_gc_safe->~Instruction_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__StoreInst_O:
{
     // stamp value 2291
    llvmo::StoreInst_O* obj_gc_safe = reinterpret_cast<llvmo::StoreInst_O*>(client);
    obj_gc_safe->~StoreInst_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__UnreachableInst_O:
{
     // stamp value 2295
    llvmo::UnreachableInst_O* obj_gc_safe = reinterpret_cast<llvmo::UnreachableInst_O*>(client);
    obj_gc_safe->~UnreachableInst_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ResumeInst_O:
{
     // stamp value 2299
    llvmo::ResumeInst_O* obj_gc_safe = reinterpret_cast<llvmo::ResumeInst_O*>(client);
    obj_gc_safe->~ResumeInst_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__AtomicCmpXchgInst_O:
{
     // stamp value 2303
    llvmo::AtomicCmpXchgInst_O* obj_gc_safe = reinterpret_cast<llvmo::AtomicCmpXchgInst_O*>(client);
    obj_gc_safe->~AtomicCmpXchgInst_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__FenceInst_O:
{
     // stamp value 2307
    llvmo::FenceInst_O* obj_gc_safe = reinterpret_cast<llvmo::FenceInst_O*>(client);
    obj_gc_safe->~FenceInst_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__CallBase_O:
{
     // stamp value 2311
    llvmo::CallBase_O* obj_gc_safe = reinterpret_cast<llvmo::CallBase_O*>(client);
    obj_gc_safe->~CallBase_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__CallInst_O:
{
     // stamp value 2315
    llvmo::CallInst_O* obj_gc_safe = reinterpret_cast<llvmo::CallInst_O*>(client);
    obj_gc_safe->~CallInst_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__InvokeInst_O:
{
     // stamp value 2319
    llvmo::InvokeInst_O* obj_gc_safe = reinterpret_cast<llvmo::InvokeInst_O*>(client);
    obj_gc_safe->~InvokeInst_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__BranchInst_O:
{
     // stamp value 2323
    llvmo::BranchInst_O* obj_gc_safe = reinterpret_cast<llvmo::BranchInst_O*>(client);
    obj_gc_safe->~BranchInst_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__UnaryInstruction_O:
{
     // stamp value 2327
    llvmo::UnaryInstruction_O* obj_gc_safe = reinterpret_cast<llvmo::UnaryInstruction_O*>(client);
    obj_gc_safe->~UnaryInstruction_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__VAArgInst_O:
{
     // stamp value 2331
    llvmo::VAArgInst_O* obj_gc_safe = reinterpret_cast<llvmo::VAArgInst_O*>(client);
    obj_gc_safe->~VAArgInst_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__AllocaInst_O:
{
     // stamp value 2335
    llvmo::AllocaInst_O* obj_gc_safe = reinterpret_cast<llvmo::AllocaInst_O*>(client);
    obj_gc_safe->~AllocaInst_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__LoadInst_O:
{
     // stamp value 2339
    llvmo::LoadInst_O* obj_gc_safe = reinterpret_cast<llvmo::LoadInst_O*>(client);
    obj_gc_safe->~LoadInst_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__SwitchInst_O:
{
     // stamp value 2343
    llvmo::SwitchInst_O* obj_gc_safe = reinterpret_cast<llvmo::SwitchInst_O*>(client);
    obj_gc_safe->~SwitchInst_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__AtomicRMWInst_O:
{
     // stamp value 2347
    llvmo::AtomicRMWInst_O* obj_gc_safe = reinterpret_cast<llvmo::AtomicRMWInst_O*>(client);
    obj_gc_safe->~AtomicRMWInst_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__LandingPadInst_O:
{
     // stamp value 2351
    llvmo::LandingPadInst_O* obj_gc_safe = reinterpret_cast<llvmo::LandingPadInst_O*>(client);
    obj_gc_safe->~LandingPadInst_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ReturnInst_O:
{
     // stamp value 2355
    llvmo::ReturnInst_O* obj_gc_safe = reinterpret_cast<llvmo::ReturnInst_O*>(client);
    obj_gc_safe->~ReturnInst_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__PHINode_O:
{
     // stamp value 2359
    llvmo::PHINode_O* obj_gc_safe = reinterpret_cast<llvmo::PHINode_O*>(client);
    obj_gc_safe->~PHINode_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__IndirectBrInst_O:
{
     // stamp value 2363
    llvmo::IndirectBrInst_O* obj_gc_safe = reinterpret_cast<llvmo::IndirectBrInst_O*>(client);
    obj_gc_safe->~IndirectBrInst_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__Constant_O:
{
     // stamp value 2367
    llvmo::Constant_O* obj_gc_safe = reinterpret_cast<llvmo::Constant_O*>(client);
    obj_gc_safe->~Constant_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__GlobalValue_O:
{
     // stamp value 2371
    llvmo::GlobalValue_O* obj_gc_safe = reinterpret_cast<llvmo::GlobalValue_O*>(client);
    obj_gc_safe->~GlobalValue_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__Function_O:
{
     // stamp value 2375
    llvmo::Function_O* obj_gc_safe = reinterpret_cast<llvmo::Function_O*>(client);
    obj_gc_safe->~Function_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__GlobalVariable_O:
{
     // stamp value 2379
    llvmo::GlobalVariable_O* obj_gc_safe = reinterpret_cast<llvmo::GlobalVariable_O*>(client);
    obj_gc_safe->~GlobalVariable_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__BlockAddress_O:
{
     // stamp value 2383
    llvmo::BlockAddress_O* obj_gc_safe = reinterpret_cast<llvmo::BlockAddress_O*>(client);
    obj_gc_safe->~BlockAddress_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ConstantStruct_O:
{
     // stamp value 2387
    llvmo::ConstantStruct_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantStruct_O*>(client);
    obj_gc_safe->~ConstantStruct_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ConstantInt_O:
{
     // stamp value 2391
    llvmo::ConstantInt_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantInt_O*>(client);
    obj_gc_safe->~ConstantInt_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ConstantFP_O:
{
     // stamp value 2395
    llvmo::ConstantFP_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantFP_O*>(client);
    obj_gc_safe->~ConstantFP_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ConstantPointerNull_O:
{
     // stamp value 2399
    llvmo::ConstantPointerNull_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantPointerNull_O*>(client);
    obj_gc_safe->~ConstantPointerNull_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ConstantDataSequential_O:
{
     // stamp value 2403
    llvmo::ConstantDataSequential_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantDataSequential_O*>(client);
    obj_gc_safe->~ConstantDataSequential_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ConstantDataArray_O:
{
     // stamp value 2407
    llvmo::ConstantDataArray_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantDataArray_O*>(client);
    obj_gc_safe->~ConstantDataArray_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ConstantExpr_O:
{
     // stamp value 2411
    llvmo::ConstantExpr_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantExpr_O*>(client);
    obj_gc_safe->~ConstantExpr_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__UndefValue_O:
{
     // stamp value 2415
    llvmo::UndefValue_O* obj_gc_safe = reinterpret_cast<llvmo::UndefValue_O*>(client);
    obj_gc_safe->~UndefValue_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ConstantArray_O:
{
     // stamp value 2419
    llvmo::ConstantArray_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantArray_O*>(client);
    obj_gc_safe->~ConstantArray_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__Argument_O:
{
     // stamp value 2423
    llvmo::Argument_O* obj_gc_safe = reinterpret_cast<llvmo::Argument_O*>(client);
    obj_gc_safe->~Argument_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__BasicBlock_O:
{
     // stamp value 2427
    llvmo::BasicBlock_O* obj_gc_safe = reinterpret_cast<llvmo::BasicBlock_O*>(client);
    obj_gc_safe->~BasicBlock_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__MetadataAsValue_O:
{
     // stamp value 2431
    llvmo::MetadataAsValue_O* obj_gc_safe = reinterpret_cast<llvmo::MetadataAsValue_O*>(client);
    obj_gc_safe->~MetadataAsValue_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ThreadSafeContext_O:
{
     // stamp value 2435
    llvmo::ThreadSafeContext_O* obj_gc_safe = reinterpret_cast<llvmo::ThreadSafeContext_O*>(client);
    obj_gc_safe->~ThreadSafeContext_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__TargetMachine_O:
{
     // stamp value 2439
    llvmo::TargetMachine_O* obj_gc_safe = reinterpret_cast<llvmo::TargetMachine_O*>(client);
    obj_gc_safe->~TargetMachine_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__LLVMTargetMachine_O:
{
     // stamp value 2443
    llvmo::LLVMTargetMachine_O* obj_gc_safe = reinterpret_cast<llvmo::LLVMTargetMachine_O*>(client);
    obj_gc_safe->~LLVMTargetMachine_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__Triple_O:
{
     // stamp value 2447
    llvmo::Triple_O* obj_gc_safe = reinterpret_cast<llvmo::Triple_O*>(client);
    obj_gc_safe->~Triple_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__LLVMContext_O:
{
     // stamp value 2451
    llvmo::LLVMContext_O* obj_gc_safe = reinterpret_cast<llvmo::LLVMContext_O*>(client);
    obj_gc_safe->~LLVMContext_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__PassManagerBuilder_O:
{
     // stamp value 2455
    llvmo::PassManagerBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::PassManagerBuilder_O*>(client);
    obj_gc_safe->~PassManagerBuilder_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ExecutionEngine_O:
{
     // stamp value 2459
    llvmo::ExecutionEngine_O* obj_gc_safe = reinterpret_cast<llvmo::ExecutionEngine_O*>(client);
    obj_gc_safe->~ExecutionEngine_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__Type_O:
{
     // stamp value 2463
    llvmo::Type_O* obj_gc_safe = reinterpret_cast<llvmo::Type_O*>(client);
    obj_gc_safe->~Type_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__FunctionType_O:
{
     // stamp value 2467
    llvmo::FunctionType_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionType_O*>(client);
    obj_gc_safe->~FunctionType_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__IntegerType_O:
{
     // stamp value 2471
    llvmo::IntegerType_O* obj_gc_safe = reinterpret_cast<llvmo::IntegerType_O*>(client);
    obj_gc_safe->~IntegerType_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__CompositeType_O:
{
     // stamp value 2475
    llvmo::CompositeType_O* obj_gc_safe = reinterpret_cast<llvmo::CompositeType_O*>(client);
    obj_gc_safe->~CompositeType_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__SequentialType_O:
{
     // stamp value 2479
    llvmo::SequentialType_O* obj_gc_safe = reinterpret_cast<llvmo::SequentialType_O*>(client);
    obj_gc_safe->~SequentialType_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__PointerType_O:
{
     // stamp value 2483
    llvmo::PointerType_O* obj_gc_safe = reinterpret_cast<llvmo::PointerType_O*>(client);
    obj_gc_safe->~PointerType_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ArrayType_O:
{
     // stamp value 2487
    llvmo::ArrayType_O* obj_gc_safe = reinterpret_cast<llvmo::ArrayType_O*>(client);
    obj_gc_safe->~ArrayType_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__VectorType_O:
{
     // stamp value 2491
    llvmo::VectorType_O* obj_gc_safe = reinterpret_cast<llvmo::VectorType_O*>(client);
    obj_gc_safe->~VectorType_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__StructType_O:
{
     // stamp value 2495
    llvmo::StructType_O* obj_gc_safe = reinterpret_cast<llvmo::StructType_O*>(client);
    obj_gc_safe->~StructType_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__TargetPassConfig_O:
{
     // stamp value 2499
    llvmo::TargetPassConfig_O* obj_gc_safe = reinterpret_cast<llvmo::TargetPassConfig_O*>(client);
    obj_gc_safe->~TargetPassConfig_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__APFloat_O:
{
     // stamp value 2503
    llvmo::APFloat_O* obj_gc_safe = reinterpret_cast<llvmo::APFloat_O*>(client);
    obj_gc_safe->~APFloat_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__Metadata_O:
{
     // stamp value 2507
    llvmo::Metadata_O* obj_gc_safe = reinterpret_cast<llvmo::Metadata_O*>(client);
    obj_gc_safe->~Metadata_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__MDNode_O:
{
     // stamp value 2511
    llvmo::MDNode_O* obj_gc_safe = reinterpret_cast<llvmo::MDNode_O*>(client);
    obj_gc_safe->~MDNode_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DILocation_O:
{
     // stamp value 2515
    llvmo::DILocation_O* obj_gc_safe = reinterpret_cast<llvmo::DILocation_O*>(client);
    obj_gc_safe->~DILocation_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DINode_O:
{
     // stamp value 2519
    llvmo::DINode_O* obj_gc_safe = reinterpret_cast<llvmo::DINode_O*>(client);
    obj_gc_safe->~DINode_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DIVariable_O:
{
     // stamp value 2523
    llvmo::DIVariable_O* obj_gc_safe = reinterpret_cast<llvmo::DIVariable_O*>(client);
    obj_gc_safe->~DIVariable_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DILocalVariable_O:
{
     // stamp value 2527
    llvmo::DILocalVariable_O* obj_gc_safe = reinterpret_cast<llvmo::DILocalVariable_O*>(client);
    obj_gc_safe->~DILocalVariable_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DIScope_O:
{
     // stamp value 2531
    llvmo::DIScope_O* obj_gc_safe = reinterpret_cast<llvmo::DIScope_O*>(client);
    obj_gc_safe->~DIScope_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DIFile_O:
{
     // stamp value 2535
    llvmo::DIFile_O* obj_gc_safe = reinterpret_cast<llvmo::DIFile_O*>(client);
    obj_gc_safe->~DIFile_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DILocalScope_O:
{
     // stamp value 2539
    llvmo::DILocalScope_O* obj_gc_safe = reinterpret_cast<llvmo::DILocalScope_O*>(client);
    obj_gc_safe->~DILocalScope_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DISubprogram_O:
{
     // stamp value 2543
    llvmo::DISubprogram_O* obj_gc_safe = reinterpret_cast<llvmo::DISubprogram_O*>(client);
    obj_gc_safe->~DISubprogram_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DILexicalBlockBase_O:
{
     // stamp value 2547
    llvmo::DILexicalBlockBase_O* obj_gc_safe = reinterpret_cast<llvmo::DILexicalBlockBase_O*>(client);
    obj_gc_safe->~DILexicalBlockBase_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DILexicalBlock_O:
{
     // stamp value 2551
    llvmo::DILexicalBlock_O* obj_gc_safe = reinterpret_cast<llvmo::DILexicalBlock_O*>(client);
    obj_gc_safe->~DILexicalBlock_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DICompileUnit_O:
{
     // stamp value 2555
    llvmo::DICompileUnit_O* obj_gc_safe = reinterpret_cast<llvmo::DICompileUnit_O*>(client);
    obj_gc_safe->~DICompileUnit_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DIType_O:
{
     // stamp value 2559
    llvmo::DIType_O* obj_gc_safe = reinterpret_cast<llvmo::DIType_O*>(client);
    obj_gc_safe->~DIType_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DICompositeType_O:
{
     // stamp value 2563
    llvmo::DICompositeType_O* obj_gc_safe = reinterpret_cast<llvmo::DICompositeType_O*>(client);
    obj_gc_safe->~DICompositeType_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DIDerivedType_O:
{
     // stamp value 2567
    llvmo::DIDerivedType_O* obj_gc_safe = reinterpret_cast<llvmo::DIDerivedType_O*>(client);
    obj_gc_safe->~DIDerivedType_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DISubroutineType_O:
{
     // stamp value 2571
    llvmo::DISubroutineType_O* obj_gc_safe = reinterpret_cast<llvmo::DISubroutineType_O*>(client);
    obj_gc_safe->~DISubroutineType_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DIBasicType_O:
{
     // stamp value 2575
    llvmo::DIBasicType_O* obj_gc_safe = reinterpret_cast<llvmo::DIBasicType_O*>(client);
    obj_gc_safe->~DIBasicType_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__DIExpression_O:
{
     // stamp value 2579
    llvmo::DIExpression_O* obj_gc_safe = reinterpret_cast<llvmo::DIExpression_O*>(client);
    obj_gc_safe->~DIExpression_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__ValueAsMetadata_O:
{
     // stamp value 2583
    llvmo::ValueAsMetadata_O* obj_gc_safe = reinterpret_cast<llvmo::ValueAsMetadata_O*>(client);
    obj_gc_safe->~ValueAsMetadata_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__MDString_O:
{
     // stamp value 2587
    llvmo::MDString_O* obj_gc_safe = reinterpret_cast<llvmo::MDString_O*>(client);
    obj_gc_safe->~MDString_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__NamedMDNode_O:
{
     // stamp value 2591
    llvmo::NamedMDNode_O* obj_gc_safe = reinterpret_cast<llvmo::NamedMDNode_O*>(client);
    obj_gc_safe->~NamedMDNode_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__TargetOptions_O:
{
     // stamp value 2595
    llvmo::TargetOptions_O* obj_gc_safe = reinterpret_cast<llvmo::TargetOptions_O*>(client);
    obj_gc_safe->~TargetOptions_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__Module_O:
{
     // stamp value 2599
    llvmo::Module_O* obj_gc_safe = reinterpret_cast<llvmo::Module_O*>(client);
    obj_gc_safe->~Module_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__Target_O:
{
     // stamp value 2603
    llvmo::Target_O* obj_gc_safe = reinterpret_cast<llvmo::Target_O*>(client);
    obj_gc_safe->~Target_O();
    goto finalize_done;
}
obj_finalize_STAMP_llvmo__Linker_O:
{
     // stamp value 2607
    llvmo::Linker_O* obj_gc_safe = reinterpret_cast<llvmo::Linker_O*>(client);
    obj_gc_safe->~Linker_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Rack_O:
{
     // stamp value 2611
    core::Rack_O* obj_gc_safe = reinterpret_cast<core::Rack_O*>(client);
    obj_gc_safe->~Rack_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__SmallMultimap_O:
{
     // stamp value 2615
    core::SmallMultimap_O* obj_gc_safe = reinterpret_cast<core::SmallMultimap_O*>(client);
    obj_gc_safe->~SmallMultimap_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__AtomicFixnumHolder_O:
{
     // stamp value 2619
    core::AtomicFixnumHolder_O* obj_gc_safe = reinterpret_cast<core::AtomicFixnumHolder_O*>(client);
    obj_gc_safe->~AtomicFixnumHolder_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Scope_O:
{
     // stamp value 2623
    core::Scope_O* obj_gc_safe = reinterpret_cast<core::Scope_O*>(client);
    obj_gc_safe->~Scope_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__FileScope_O:
{
     // stamp value 2627
    core::FileScope_O* obj_gc_safe = reinterpret_cast<core::FileScope_O*>(client);
    obj_gc_safe->~FileScope_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Path_O:
{
     // stamp value 2631
    core::Path_O* obj_gc_safe = reinterpret_cast<core::Path_O*>(client);
    obj_gc_safe->~Path_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Pathname_O:
{
     // stamp value 2635
    core::Pathname_O* obj_gc_safe = reinterpret_cast<core::Pathname_O*>(client);
    obj_gc_safe->~Pathname_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__LogicalPathname_O:
{
     // stamp value 2639
    core::LogicalPathname_O* obj_gc_safe = reinterpret_cast<core::LogicalPathname_O*>(client);
    obj_gc_safe->~LogicalPathname_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Cache_O:
{
     // stamp value 2643
    core::Cache_O* obj_gc_safe = reinterpret_cast<core::Cache_O*>(client);
    obj_gc_safe->~Cache_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Stream_O:
{
     // stamp value 2647
    core::Stream_O* obj_gc_safe = reinterpret_cast<core::Stream_O*>(client);
    obj_gc_safe->~Stream_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__AnsiStream_O:
{
     // stamp value 2651
    core::AnsiStream_O* obj_gc_safe = reinterpret_cast<core::AnsiStream_O*>(client);
    obj_gc_safe->~AnsiStream_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__SynonymStream_O:
{
     // stamp value 2655
    core::SynonymStream_O* obj_gc_safe = reinterpret_cast<core::SynonymStream_O*>(client);
    obj_gc_safe->~SynonymStream_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__StringStream_O:
{
     // stamp value 2659
    core::StringStream_O* obj_gc_safe = reinterpret_cast<core::StringStream_O*>(client);
    obj_gc_safe->~StringStream_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__StringOutputStream_O:
{
     // stamp value 2663
    core::StringOutputStream_O* obj_gc_safe = reinterpret_cast<core::StringOutputStream_O*>(client);
    obj_gc_safe->~StringOutputStream_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__StringInputStream_O:
{
     // stamp value 2667
    core::StringInputStream_O* obj_gc_safe = reinterpret_cast<core::StringInputStream_O*>(client);
    obj_gc_safe->~StringInputStream_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__EchoStream_O:
{
     // stamp value 2671
    core::EchoStream_O* obj_gc_safe = reinterpret_cast<core::EchoStream_O*>(client);
    obj_gc_safe->~EchoStream_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__ConcatenatedStream_O:
{
     // stamp value 2675
    core::ConcatenatedStream_O* obj_gc_safe = reinterpret_cast<core::ConcatenatedStream_O*>(client);
    obj_gc_safe->~ConcatenatedStream_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__FileStream_O:
{
     // stamp value 2679
    core::FileStream_O* obj_gc_safe = reinterpret_cast<core::FileStream_O*>(client);
    obj_gc_safe->~FileStream_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__IOFileStream_O:
{
     // stamp value 2683
    core::IOFileStream_O* obj_gc_safe = reinterpret_cast<core::IOFileStream_O*>(client);
    obj_gc_safe->~IOFileStream_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__IOStreamStream_O:
{
     // stamp value 2687
    core::IOStreamStream_O* obj_gc_safe = reinterpret_cast<core::IOStreamStream_O*>(client);
    obj_gc_safe->~IOStreamStream_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__BroadcastStream_O:
{
     // stamp value 2691
    core::BroadcastStream_O* obj_gc_safe = reinterpret_cast<core::BroadcastStream_O*>(client);
    obj_gc_safe->~BroadcastStream_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__TwoWayStream_O:
{
     // stamp value 2695
    core::TwoWayStream_O* obj_gc_safe = reinterpret_cast<core::TwoWayStream_O*>(client);
    obj_gc_safe->~TwoWayStream_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Package_O:
{
     // stamp value 2699
    core::Package_O* obj_gc_safe = reinterpret_cast<core::Package_O*>(client);
    obj_gc_safe->~Package_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__FileStatus_O:
{
     // stamp value 2703
    core::FileStatus_O* obj_gc_safe = reinterpret_cast<core::FileStatus_O*>(client);
    obj_gc_safe->~FileStatus_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__InvocationHistoryFrameIterator_O:
{
     // stamp value 2707
    core::InvocationHistoryFrameIterator_O* obj_gc_safe = reinterpret_cast<core::InvocationHistoryFrameIterator_O*>(client);
    obj_gc_safe->~InvocationHistoryFrameIterator_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__DirectoryEntry_O:
{
     // stamp value 2711
    core::DirectoryEntry_O* obj_gc_safe = reinterpret_cast<core::DirectoryEntry_O*>(client);
    obj_gc_safe->~DirectoryEntry_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__LightUserData_O:
{
     // stamp value 2715
    core::LightUserData_O* obj_gc_safe = reinterpret_cast<core::LightUserData_O*>(client);
    obj_gc_safe->~LightUserData_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__UserData_O:
{
     // stamp value 2719
    core::UserData_O* obj_gc_safe = reinterpret_cast<core::UserData_O*>(client);
    obj_gc_safe->~UserData_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Cons_O:
{
     // stamp value 2723
    core::Cons_O* obj_gc_safe = reinterpret_cast<core::Cons_O*>(client);
    obj_gc_safe->~Cons_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__VaList_dummy_O:
{
     // stamp value 2727
    core::VaList_dummy_O* obj_gc_safe = reinterpret_cast<core::VaList_dummy_O*>(client);
    obj_gc_safe->~VaList_dummy_O();
    goto finalize_done;
}
obj_finalize_STAMP_core__Lisp_O:
{
     // stamp value 2731
    core::Lisp_O* obj_gc_safe = reinterpret_cast<core::Lisp_O*>(client);
    obj_gc_safe->~Lisp_O();
    goto finalize_done;
}
obj_finalize_STAMP_clang__RecursiveASTVisitor_asttooling__AstVisitor_O_:
{
     // do nothing stamp value 2735
    THROW_HARD_ERROR(BF("Should never finalize object clang::RecursiveASTVisitor<asttooling::AstVisitor_O>"));
}
obj_finalize_STAMP_asttooling__AstVisitor_O:
{
     // stamp value 2739
    asttooling::AstVisitor_O* obj_gc_safe = reinterpret_cast<asttooling::AstVisitor_O*>(client);
    obj_gc_safe->~AstVisitor_O();
    goto finalize_done;
}
obj_finalize_STAMP_gctools__GCContainer:
{
     // do nothing stamp value 2743
    THROW_HARD_ERROR(BF("Should never finalize object gctools::GCContainer"));
}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__:
{
     // stamp value 2747
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__:
{
     // stamp value 2751
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyChiralRestraint_:
{
     // stamp value 2755
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyChiralRestraint>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__:
{
     // stamp value 2759
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__:
{
     // stamp value 2763
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>"));}
obj_finalize_STAMP_gctools__GCArray_moveable_short_:
{
     // stamp value 2767
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<short>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__:
{
     // stamp value 2771
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___:
{
     // stamp value 2775
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__:
{
     // stamp value 2779
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>"));}
obj_finalize_STAMP_gctools__GCBitUnitArray_moveable_4_0_:
{
     // stamp value 2783
    THROW_HARD_ERROR(BF("Should never finalize gctools::GCBitUnitArray_moveable<4,0>"));
}
obj_finalize_STAMP_gctools__GCVector_moveable_core__SymbolClassHolderPair_:
{
     // stamp value 2787
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::SymbolClassHolderPair>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___:
{
     // stamp value 2791
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__:
{
     // stamp value 2795
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___:
{
     // stamp value 2799
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__:
{
     // stamp value 2803
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>"));}
obj_finalize_STAMP_gctools__GCArray_moveable_unsigned_char_:
{
     // stamp value 2807
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<unsigned char>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___:
{
     // stamp value 2811
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___:
{
     // stamp value 2815
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_:
{
     // stamp value 2819
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__:
{
     // stamp value 2823
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyAngle_:
{
     // stamp value 2827
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyAngle>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__:
{
     // stamp value 2831
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__:
{
     // stamp value 2835
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__:
{
     // stamp value 2839
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___:
{
     // stamp value 2843
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__:
{
     // stamp value 2847
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_core__OptionalArgument_:
{
     // stamp value 2851
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::OptionalArgument>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_core__KeywordArgument_:
{
     // stamp value 2855
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::KeywordArgument>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__KeyEntry_:
{
     // stamp value 2859
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::KeyEntry>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___:
{
     // stamp value 2863
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__:
{
     // stamp value 2867
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>"));}
obj_finalize_STAMP_gctools__GCArray_moveable_Vector3_:
{
     // stamp value 2871
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<Vector3>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_:
{
     // stamp value 2875
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyAnchorRestraint>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__:
{
     // stamp value 2879
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___:
{
     // stamp value 2883
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__:
{
     // stamp value 2887
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___:
{
     // stamp value 2891
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyImproperRestraint_:
{
     // stamp value 2895
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyImproperRestraint>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__:
{
     // stamp value 2899
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__:
{
     // stamp value 2903
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__:
{
     // stamp value 2907
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__:
{
     // stamp value 2911
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___:
{
     // stamp value 2915
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___:
{
     // stamp value 2919
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__:
{
     // stamp value 2923
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___:
{
     // stamp value 2927
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__:
{
     // stamp value 2931
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__:
{
     // stamp value 2935
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>"));}
obj_finalize_STAMP_gctools__GCBitUnitArray_moveable_2_0_:
{
     // stamp value 2939
    THROW_HARD_ERROR(BF("Should never finalize gctools::GCBitUnitArray_moveable<2,0>"));
}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__:
{
     // stamp value 2943
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__:
{
     // stamp value 2947
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>"));}
obj_finalize_STAMP_gctools__GCBitUnitArray_moveable_1_0_:
{
     // stamp value 2951
    THROW_HARD_ERROR(BF("Should never finalize gctools::GCBitUnitArray_moveable<1,0>"));
}
obj_finalize_STAMP_gctools__GCBitUnitArray_moveable_2_1_:
{
     // stamp value 2955
    THROW_HARD_ERROR(BF("Should never finalize gctools::GCBitUnitArray_moveable<2,1>"));
}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__:
{
     // stamp value 2959
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_int_:
{
     // stamp value 2963
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<int>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___:
{
     // stamp value 2967
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__:
{
     // stamp value 2971
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__:
{
     // stamp value 2975
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>"));}
obj_finalize_STAMP_gctools__GCArray_moveable_float_:
{
     // stamp value 2979
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<float>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__:
{
     // stamp value 2983
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__:
{
     // stamp value 2987
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_core__T_O___:
{
     // stamp value 2991
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::T_O *>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyDihedral_:
{
     // stamp value 2995
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyDihedral>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___:
{
     // stamp value 2999
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>"));}
obj_finalize_STAMP_gctools__GCArray_moveable_unsigned_int_:
{
     // stamp value 3003
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<unsigned int>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__:
{
     // stamp value 3007
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__:
{
     // stamp value 3011
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_core__CacheRecord_:
{
     // stamp value 3015
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::CacheRecord>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__:
{
     // stamp value 3019
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_double_:
{
     // stamp value 3023
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<double>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__:
{
     // stamp value 3027
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__:
{
     // stamp value 3031
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___:
{
     // stamp value 3035
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__:
{
     // stamp value 3039
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__AtomPdbRec_:
{
     // stamp value 3043
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::AtomPdbRec>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_core__Cons_O_:
{
     // stamp value 3047
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::Cons_O>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergySketchStretch_:
{
     // stamp value 3051
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergySketchStretch>"));}
obj_finalize_STAMP_gctools__GCArray_moveable_signed_char_:
{
     // stamp value 3055
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<signed char>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_:
{
     // stamp value 3059
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyOutOfZPlane>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__:
{
     // stamp value 3063
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___:
{
     // stamp value 3067
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__:
{
     // stamp value 3071
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__:
{
     // stamp value 3075
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergySketchNonbond_:
{
     // stamp value 3079
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergySketchNonbond>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__:
{
     // stamp value 3083
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__:
{
     // stamp value 3087
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__FixedNonbondRestraint_:
{
     // stamp value 3091
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::FixedNonbondRestraint>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__:
{
     // stamp value 3095
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__:
{
     // stamp value 3099
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__:
{
     // stamp value 3103
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___:
{
     // stamp value 3107
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__:
{
     // stamp value 3111
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>"));}
obj_finalize_STAMP_gctools__GCArray_moveable_double_:
{
     // stamp value 3115
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<double>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___:
{
     // stamp value 3119
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___:
{
     // stamp value 3123
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__:
{
     // stamp value 3127
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__:
{
     // stamp value 3131
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_core__RequiredArgument_:
{
     // stamp value 3135
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::RequiredArgument>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__:
{
     // stamp value 3139
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__:
{
     // stamp value 3143
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>"));}
obj_finalize_STAMP_gctools__GCBitUnitArray_moveable_4_1_:
{
     // stamp value 3147
    THROW_HARD_ERROR(BF("Should never finalize gctools::GCBitUnitArray_moveable<4,1>"));
}
obj_finalize_STAMP_gctools__GCVector_moveable_core__SymbolStorage_:
{
     // stamp value 3151
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::SymbolStorage>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_:
{
     // stamp value 3155
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___:
{
     // stamp value 3159
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___:
{
     // stamp value 3163
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__:
{
     // stamp value 3167
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__:
{
     // stamp value 3171
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___:
{
     // stamp value 3175
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__:
{
     // stamp value 3179
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>"));}
obj_finalize_STAMP_gctools__GCArray_moveable_unsigned_long_:
{
     // stamp value 3183
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<unsigned long>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyNonbond_:
{
     // stamp value 3187
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyNonbond>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___:
{
     // stamp value 3191
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__AtomInfo_:
{
     // stamp value 3195
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::AtomInfo>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__:
{
     // stamp value 3199
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__:
{
     // stamp value 3203
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyAtom_:
{
     // stamp value 3207
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyAtom>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___:
{
     // stamp value 3211
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>"));}
obj_finalize_STAMP_gctools__GCArray_moveable_int_:
{
     // stamp value 3215
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<int>"));}
obj_finalize_STAMP_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__:
{
     // stamp value 3219
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_core__AuxArgument_:
{
     // stamp value 3223
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::AuxArgument>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__ResidueOut_:
{
     // stamp value 3227
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::ResidueOut>"));}
obj_finalize_STAMP_gctools__GCArray_moveable_long_:
{
     // stamp value 3231
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<long>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__:
{
     // stamp value 3235
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_:
{
     // stamp value 3239
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::RigidBodyAtomInfo>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___:
{
     // stamp value 3243
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__:
{
     // stamp value 3247
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__:
{
     // stamp value 3251
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyStretch_:
{
     // stamp value 3255
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyStretch>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__:
{
     // stamp value 3259
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__:
{
     // stamp value 3263
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>"));}
obj_finalize_STAMP_gctools__GCArray_moveable_unsigned_short_:
{
     // stamp value 3267
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<unsigned short>"));}
obj_finalize_STAMP_gctools__GCVector_moveable_float_:
{
     // stamp value 3271
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<float>"));}
obj_finalize_STAMP_clang__FrontendAction:
{
     // do nothing stamp value 3275
    THROW_HARD_ERROR(BF("Should never finalize object clang::FrontendAction"));
}
obj_finalize_STAMP_clang__ASTFrontendAction:
{
     // do nothing stamp value 3279
    THROW_HARD_ERROR(BF("Should never finalize object clang::ASTFrontendAction"));
}
obj_finalize_STAMP_clang__SyntaxOnlyAction:
{
     // do nothing stamp value 3283
    THROW_HARD_ERROR(BF("Should never finalize object clang::SyntaxOnlyAction"));
}
obj_finalize_STAMP_clang__tooling__ToolAction:
{
     // do nothing stamp value 3287
    THROW_HARD_ERROR(BF("Should never finalize object clang::tooling::ToolAction"));
}
obj_finalize_STAMP_clang__tooling__FrontendActionFactory:
{
     // do nothing stamp value 3291
    THROW_HARD_ERROR(BF("Should never finalize object clang::tooling::FrontendActionFactory"));
}
obj_finalize_STAMP_clang__ast_matchers__MatchFinder__MatchCallback:
{
     // do nothing stamp value 3295
    THROW_HARD_ERROR(BF("Should never finalize object clang::ast_matchers::MatchFinder::MatchCallback"));
}
#endif // defined(GC_OBJ_FINALIZE)
#if defined(GC_OBJ_FINALIZE_HELPERS)

#endif // defined(GC_OBJ_FINALIZE_HELPERS)
#if defined(GC_OBJ_FINALIZE_TABLE)
static void* OBJ_FINALIZE_table[] = { 
  /* 0 */ NULL,
  /* 7 */ &&obj_finalize_STAMP_core__T_O,
  /* 11 */ &&obj_finalize_STAMP_core__Unused_dummy_O,
  /* 15 */ &&obj_finalize_STAMP_core__General_O,
  /* 19 */ &&obj_finalize_STAMP_core__MultiStringBuffer_O,
  /* 23 */ &&obj_finalize_STAMP_core__LambdaListHandler_O,
  /* 27 */ &&obj_finalize_STAMP_llvmo__AttributeSet_O,
  /* 31 */ &&obj_finalize_STAMP_core__AtomicT_Holder_O,
  /* 35 */ &&obj_finalize_STAMP_core__Pointer_O,
  /* 39 */ &&obj_finalize_STAMP_clasp_ffi__ForeignData_O,
  /* 43 */ &&obj_finalize_STAMP_core__CxxObject_O,
  /* 47 */ &&obj_finalize_STAMP_kinematics__ChiList_O,
  /* 51 */ &&obj_finalize_STAMP_chem__NumericalFunction_O,
  /* 55 */ &&obj_finalize_STAMP_kinematics__FoldTree_O,
  /* 59 */ &&obj_finalize_STAMP_chem__StatusTracker_O,
  /* 63 */ &&obj_finalize_STAMP_kinematics__RotamerSetBase_O,
  /* 67 */ &&obj_finalize_STAMP_kinematics__BackboneDependentRotamerSet_O,
  /* 71 */ &&obj_finalize_STAMP_kinematics__RotamerSet_O,
  /* 75 */ &&obj_finalize_STAMP_chem__EnergyComponent_O,
  /* 79 */ &&obj_finalize_STAMP_chem__EnergyStretch_O,
  /* 83 */ &&obj_finalize_STAMP_chem__EnergyRigidBodyComponent_O,
  /* 87 */ &&obj_finalize_STAMP_chem__EnergyRigidBodyStaple_O,
  /* 91 */ &&obj_finalize_STAMP_chem__EnergyRigidBodyNonbond_O,
  /* 95 */ &&obj_finalize_STAMP_chem__EnergyOutOfZPlane_O,
  /* 99 */ &&obj_finalize_STAMP_chem__EnergySketchNonbond_O,
  /* 103 */ &&obj_finalize_STAMP_chem__EnergyChiralRestraint_O,
  /* 107 */ &&obj_finalize_STAMP_chem__EnergyPointToLineRestraint_O,
  /* 111 */ &&obj_finalize_STAMP_chem__EnergyDihedral_O,
  /* 115 */ &&obj_finalize_STAMP_chem__EnergyNonbond_O,
  /* 119 */ &&obj_finalize_STAMP_chem__EnergyPeriodicBoundaryConditionsNonbond_O,
  /* 123 */ &&obj_finalize_STAMP_chem__EnergyAnchorRestraint_O,
  /* 127 */ &&obj_finalize_STAMP_chem__EnergyFixedNonbondRestraint_O,
  /* 131 */ &&obj_finalize_STAMP_chem__EnergySketchStretch_O,
  /* 135 */ &&obj_finalize_STAMP_chem__EnergyImproperRestraint_O,
  /* 139 */ &&obj_finalize_STAMP_chem__EnergyAngle_O,
  /* 143 */ &&obj_finalize_STAMP_chem__Matter_O,
  /* 147 */ &&obj_finalize_STAMP_chem__Aggregate_O,
  /* 151 */ &&obj_finalize_STAMP_chem__Atom_O,
  /* 155 */ &&obj_finalize_STAMP_chem__VirtualAtom_O,
  /* 159 */ &&obj_finalize_STAMP_chem__Residue_O,
  /* 163 */ &&obj_finalize_STAMP_chem__Molecule_O,
  /* 167 */ &&obj_finalize_STAMP_chem__PdbWriter_O,
  /* 171 */ &&obj_finalize_STAMP_chem__TrajectoryFrame_O,
  /* 175 */ &&obj_finalize_STAMP_llvmo__MDBuilder_O,
  /* 179 */ &&obj_finalize_STAMP_chem__Topology_O,
  /* 183 */ &&obj_finalize_STAMP_chem__AtomTable_O,
  /* 187 */ &&obj_finalize_STAMP_chem__CipPrioritizer_O,
  /* 191 */ &&obj_finalize_STAMP_adapt__IndexedObjectBag_O,
  /* 195 */ &&obj_finalize_STAMP_chem__VirtualSphere_O,
  /* 199 */ &&obj_finalize_STAMP_chem__TwisterDriver_O,
  /* 203 */ &&obj_finalize_STAMP_core__NativeVector_double_O,
  /* 207 */ &&obj_finalize_STAMP_chem__RingFinder_O,
  /* 211 */ &&obj_finalize_STAMP_llvmo__FunctionCallee_O,
  /* 215 */ &&obj_finalize_STAMP_kinematics__Joint_O,
  /* 219 */ &&obj_finalize_STAMP_kinematics__JumpJoint_O,
  /* 223 */ &&obj_finalize_STAMP_kinematics__OriginJumpJoint_O,
  /* 227 */ &&obj_finalize_STAMP_kinematics__BondedJoint_O,
  /* 231 */ &&obj_finalize_STAMP_kinematics__RootBondedJoint_O,
  /* 235 */ &&obj_finalize_STAMP_kinematics__DelayedBondedJoint_O,
  /* 239 */ &&obj_finalize_STAMP_chem__SearchStatistics_O,
  /* 243 */ &&obj_finalize_STAMP_chem__PdbMonomerDatabase_O,
  /* 247 */ &&obj_finalize_STAMP_chem__Twister_O,
  /* 251 */ &&obj_finalize_STAMP_chem__MonomerCoordinates_O,
  /* 255 */ &&obj_finalize_STAMP_chem__FFParameter_O,
  /* 259 */ &&obj_finalize_STAMP_chem__FFVdw_O,
  /* 263 */ &&obj_finalize_STAMP_chem__FFStretch_O,
  /* 267 */ &&obj_finalize_STAMP_chem__FFPtor_O,
  /* 271 */ &&obj_finalize_STAMP_chem__FFItor_O,
  /* 275 */ &&obj_finalize_STAMP_chem__FFNonbond_O,
  /* 279 */ &&obj_finalize_STAMP_chem__FFAngle_O,
  /* 283 */ &&obj_finalize_STAMP_chem__Restraint_O,
  /* 287 */ &&obj_finalize_STAMP_chem__RestraintChiral_O,
  /* 291 */ &&obj_finalize_STAMP_chem__RestraintDistance_O,
  /* 295 */ &&obj_finalize_STAMP_chem__RestraintAngle_O,
  /* 299 */ &&obj_finalize_STAMP_chem__RestraintAnchor_O,
  /* 303 */ &&obj_finalize_STAMP_chem__RestraintFixedNonbond_O,
  /* 307 */ &&obj_finalize_STAMP_chem__RestraintDihedral_O,
  /* 311 */ &&obj_finalize_STAMP_chem__AtomIndexer_O,
  /* 315 */ &&obj_finalize_STAMP_geom__BoundingCuboid_O,
  /* 319 */ &&obj_finalize_STAMP_chem__StereoInformation_O,
  /* 323 */ &&obj_finalize_STAMP_chem__AddIonOctree_O,
  /* 327 */ &&obj_finalize_STAMP_chem__CDNode_O,
  /* 331 */ &&obj_finalize_STAMP_chem__OligomerPart_Base_O,
  /* 335 */ &&obj_finalize_STAMP_chem__OligomerPart_Link_O,
  /* 339 */ &&obj_finalize_STAMP_chem__OligomerPart_Monomer_O,
  /* 343 */ &&obj_finalize_STAMP_kinematics__BondId_O,
  /* 347 */ &&obj_finalize_STAMP_core__Serializer_O,
  /* 351 */ &&obj_finalize_STAMP_chem__CoordinateSystem_O,
  /* 355 */ &&obj_finalize_STAMP_chem__Bond_O,
  /* 359 */ &&obj_finalize_STAMP_chem__CandoDatabase_O,
  /* 363 */ &&obj_finalize_STAMP_chem__AbstractLargeSquareMatrix_O,
  /* 367 */ &&obj_finalize_STAMP_chem__SparseLargeSquareMatrix_O,
  /* 371 */ &&obj_finalize_STAMP_chem__FullLargeSquareMatrix_O,
  /* 375 */ &&obj_finalize_STAMP_chem__FFBaseDb_O,
  /* 379 */ &&obj_finalize_STAMP_chem__FFParameterBaseDb_O,
  /* 383 */ &&obj_finalize_STAMP_chem__FFItorDb_O,
  /* 387 */ &&obj_finalize_STAMP_chem__FFStretchDb_O,
  /* 391 */ &&obj_finalize_STAMP_chem__FFAngleDb_O,
  /* 395 */ &&obj_finalize_STAMP_chem__FFNonbondDb_O,
  /* 399 */ &&obj_finalize_STAMP_chem__FFPtorDb_O,
  /* 403 */ &&obj_finalize_STAMP_chem__FFVdwDb_O,
  /* 407 */ &&obj_finalize_STAMP_chem__FFTypesDb_O,
  /* 411 */ &&obj_finalize_STAMP_chem__AGVertex_O,
  /* 415 */ &&obj_finalize_STAMP_chem__ForceField_O,
  /* 419 */ &&obj_finalize_STAMP_chem__AtomReferenceBase_O,
  /* 423 */ &&obj_finalize_STAMP_chem__AtomReference_O,
  /* 427 */ &&obj_finalize_STAMP_chem__ScoringFunction_O,
  /* 431 */ &&obj_finalize_STAMP_chem__EnergyFunction_O,
  /* 435 */ &&obj_finalize_STAMP_chem__SketchFunction_O,
  /* 439 */ &&obj_finalize_STAMP_chem__RigidBodyEnergyFunction_O,
  /* 443 */ &&obj_finalize_STAMP_chem__WildElementDict_O,
  /* 447 */ &&obj_finalize_STAMP_llvmo__DITypeRefArray_O,
  /* 451 */ &&obj_finalize_STAMP_geom__OVector3_O,
  /* 455 */ &&obj_finalize_STAMP_geom__OVector2_O,
  /* 459 */ &&obj_finalize_STAMP_chem__Structure_Old_ListEntry_O,
  /* 463 */ &&obj_finalize_STAMP_chem__FFTypeRule_O,
  /* 467 */ &&obj_finalize_STAMP_adapt__QDomNode_O,
  /* 471 */ &&obj_finalize_STAMP_mp__SharedMutex_O,
  /* 475 */ &&obj_finalize_STAMP_chem__ConstitutionAtom_O,
  /* 479 */ &&obj_finalize_STAMP_chem__ConstitutionVirtualAtom_O,
  /* 483 */ &&obj_finalize_STAMP_chem__ReadAmberParameters_O,
  /* 487 */ &&obj_finalize_STAMP_chem__AGEdge_O,
  /* 491 */ &&obj_finalize_STAMP_chem__Entity_O,
  /* 495 */ &&obj_finalize_STAMP_chem__Stereoisomer_O,
  /* 499 */ &&obj_finalize_STAMP_chem__EntityNameSetBase_O,
  /* 503 */ &&obj_finalize_STAMP_chem__EntityNameSetWithCap_O,
  /* 507 */ &&obj_finalize_STAMP_chem__Mate_O,
  /* 511 */ &&obj_finalize_STAMP_chem__RingClosingMate_O,
  /* 515 */ &&obj_finalize_STAMP_chem__EntityNameSet_O,
  /* 519 */ &&obj_finalize_STAMP_chem__RepresentedEntityNameSet_O,
  /* 523 */ &&obj_finalize_STAMP_chem__MonomerPack_O,
  /* 527 */ &&obj_finalize_STAMP_chem__Constitution_O,
  /* 531 */ &&obj_finalize_STAMP_chem__Monomer_O,
  /* 535 */ &&obj_finalize_STAMP_chem__OctNode_O,
  /* 539 */ &&obj_finalize_STAMP_chem__Structure_Old_List_O,
  /* 543 */ &&obj_finalize_STAMP_kinematics__BackboneDependentRotamerLibrary_O,
  /* 547 */ &&obj_finalize_STAMP_chem__ReportBase_O,
  /* 551 */ &&obj_finalize_STAMP_chem__StepReport_O,
  /* 555 */ &&obj_finalize_STAMP_chem__MessageReport_O,
  /* 559 */ &&obj_finalize_STAMP_chem__ForceMatchReport_O,
  /* 563 */ &&obj_finalize_STAMP_chem__ChemDraw_O,
  /* 567 */ &&obj_finalize_STAMP_chem__ZMatrixInternal_O,
  /* 571 */ &&obj_finalize_STAMP_chem__ZMatrixBondInternal_O,
  /* 575 */ &&obj_finalize_STAMP_chem__ZMatrixDihedralInternal_O,
  /* 579 */ &&obj_finalize_STAMP_chem__ZMatrixAngleInternal_O,
  /* 583 */ &&obj_finalize_STAMP_chem__StereoisomerAtom_O,
  /* 587 */ &&obj_finalize_STAMP_chem__StereoisomerVirtualAtom_O,
  /* 591 */ &&obj_finalize_STAMP_chem__ZMatrix_O,
  /* 595 */ &&obj_finalize_STAMP_chem__Isoname_O,
  /* 599 */ &&obj_finalize_STAMP_chem__PathMessage_O,
  /* 603 */ &&obj_finalize_STAMP_kinematics__MonomerId_O,
  /* 607 */ &&obj_finalize_STAMP_kinematics__JointTemplate_O,
  /* 611 */ &&obj_finalize_STAMP_kinematics__BondedJointTemplate_O,
  /* 615 */ &&obj_finalize_STAMP_kinematics__DelayedBondedJointTemplate_O,
  /* 619 */ &&obj_finalize_STAMP_kinematics__RootBondedJointTemplate_O,
  /* 623 */ &&obj_finalize_STAMP_geom__Color_O,
  /* 627 */ &&obj_finalize_STAMP_chem__ConformationCollection_O,
  /* 631 */ &&obj_finalize_STAMP_chem__SuperposableConformationCollection_O,
  /* 635 */ &&obj_finalize_STAMP_core__NativeVector_float_O,
  /* 639 */ &&obj_finalize_STAMP_chem__Coupling_O,
  /* 643 */ &&obj_finalize_STAMP_chem__RingCoupling_O,
  /* 647 */ &&obj_finalize_STAMP_chem__DirectionalCoupling_O,
  /* 651 */ &&obj_finalize_STAMP_adapt__ObjectSet_O,
  /* 655 */ &&obj_finalize_STAMP_chem__Oligomer_O,
  /* 659 */ &&obj_finalize_STAMP_chem__PdbMonomerConnectivity_O,
  /* 663 */ &&obj_finalize_STAMP_units__Dimension_O,
  /* 667 */ &&obj_finalize_STAMP_chem__ConformationExplorerEntry_O,
  /* 671 */ &&obj_finalize_STAMP_mp__ConditionVariable_O,
  /* 675 */ &&obj_finalize_STAMP_chem__PdbReader_O,
  /* 679 */ &&obj_finalize_STAMP_chem__SpanningLoop_O,
  /* 683 */ &&obj_finalize_STAMP_chem__ProperTorsion_O,
  /* 687 */ &&obj_finalize_STAMP_chem__ResidueList_O,
  /* 691 */ &&obj_finalize_STAMP_chem__SuperposeEngine_O,
  /* 695 */ &&obj_finalize_STAMP_chem__SuperposeSelectedAtoms_O,
  /* 699 */ &&obj_finalize_STAMP_adapt__StringSet_O,
  /* 703 */ &&obj_finalize_STAMP_chem__Command_O,
  /* 707 */ &&obj_finalize_STAMP_chem__StereoConfiguration_O,
  /* 711 */ &&obj_finalize_STAMP_kinematics__MonomerBaseNode_O,
  /* 715 */ &&obj_finalize_STAMP_kinematics__AggregateNode_O,
  /* 719 */ &&obj_finalize_STAMP_kinematics__ChainNode_O,
  /* 723 */ &&obj_finalize_STAMP_kinematics__MonomerNode_O,
  /* 727 */ &&obj_finalize_STAMP_kinematics__RingClosingMonomerNode_O,
  /* 731 */ &&obj_finalize_STAMP_chem__FFNonbondCrossTermTable_O,
  /* 735 */ &&obj_finalize_STAMP_chem__Plug_O,
  /* 739 */ &&obj_finalize_STAMP_chem__JumpPlug_O,
  /* 743 */ &&obj_finalize_STAMP_chem__PlugWithMates_O,
  /* 747 */ &&obj_finalize_STAMP_chem__InPlug_O,
  /* 751 */ &&obj_finalize_STAMP_chem__OutPlug_O,
  /* 755 */ &&obj_finalize_STAMP_chem__OriginPlug_O,
  /* 759 */ &&obj_finalize_STAMP_kinematics__Rotamer_O,
  /* 763 */ &&obj_finalize_STAMP_chem__MonomerContext_O,
  /* 767 */ &&obj_finalize_STAMP_chem__CDFragment_O,
  /* 771 */ &&obj_finalize_STAMP_units__Unit_O,
  /* 775 */ &&obj_finalize_STAMP_units__NamedUnit_O,
  /* 779 */ &&obj_finalize_STAMP_adapt__StringList_O,
  /* 783 */ &&obj_finalize_STAMP_core__NativeVector_int_O,
  /* 787 */ &&obj_finalize_STAMP_chem__InfoDb_O,
  /* 791 */ &&obj_finalize_STAMP_chem__MinimizerLog_O,
  /* 795 */ &&obj_finalize_STAMP_chem__GenericOctree_O,
  /* 799 */ &&obj_finalize_STAMP_kinematics__AtomTree_O,
  /* 803 */ &&obj_finalize_STAMP_units__Quantity_O,
  /* 807 */ &&obj_finalize_STAMP_chem__ChemInfoMatch_O,
  /* 811 */ &&obj_finalize_STAMP_chem__ZMatrixEntry_O,
  /* 815 */ &&obj_finalize_STAMP_chem__SpecificContextSet_O,
  /* 819 */ &&obj_finalize_STAMP_chem__Angle_O,
  /* 823 */ &&obj_finalize_STAMP_chem__MacroModelFile_O,
  /* 827 */ &&obj_finalize_STAMP_chem__BondList_O,
  /* 831 */ &&obj_finalize_STAMP_chem__ConformationExplorer_O,
  /* 835 */ &&obj_finalize_STAMP_chem__ChemInfoGraph_O,
  /* 839 */ &&obj_finalize_STAMP_chem__CDText_O,
  /* 843 */ &&obj_finalize_STAMP_llvmo__DINodeArray_O,
  /* 847 */ &&obj_finalize_STAMP_kinematics__Checkpoint_O,
  /* 851 */ &&obj_finalize_STAMP_kinematics__CheckpointJoint_O,
  /* 855 */ &&obj_finalize_STAMP_kinematics__CheckpointOutPlugJoint_O,
  /* 859 */ &&obj_finalize_STAMP_chem__ConformationExplorerMatch_O,
  /* 863 */ &&obj_finalize_STAMP_chem__StereoisomerAtoms_O,
  /* 867 */ &&obj_finalize_STAMP_chem__Rotamer_O,
  /* 871 */ &&obj_finalize_STAMP_chem__ImproperTorsion_O,
  /* 875 */ &&obj_finalize_STAMP_adapt__SymbolList_O,
  /* 879 */ &&obj_finalize_STAMP_chem__FrameRecognizer_O,
  /* 883 */ &&obj_finalize_STAMP_chem__ConformationExplorerEntryStage_O,
  /* 887 */ &&obj_finalize_STAMP_chem__Trajectory_O,
  /* 891 */ &&obj_finalize_STAMP_chem__CalculatePosition_O,
  /* 895 */ &&obj_finalize_STAMP_chem__CalculatePositionRelativeToOrigin_O,
  /* 899 */ &&obj_finalize_STAMP_chem__CalculatePositionUsingInternals_O,
  /* 903 */ &&obj_finalize_STAMP_chem__CalculatePositionAlongBond_O,
  /* 907 */ &&obj_finalize_STAMP_geom__OMatrix_O,
  /* 911 */ &&obj_finalize_STAMP_chem__ConformationCollectionEntry_O,
  /* 915 */ &&obj_finalize_STAMP_chem__ComplexRestraint_O,
  /* 919 */ &&obj_finalize_STAMP_chem__RestrainedExoCyclicAtom_O,
  /* 923 */ &&obj_finalize_STAMP_chem__RestrainedPiBond_O,
  /* 927 */ &&obj_finalize_STAMP_mp__Mutex_O,
  /* 931 */ &&obj_finalize_STAMP_mp__RecursiveMutex_O,
  /* 935 */ &&obj_finalize_STAMP_chem__CombinedForceField_O,
  /* 939 */ &&obj_finalize_STAMP_chem__CDBond_O,
  /* 943 */ &&obj_finalize_STAMP_chem__ConstitutionBond_O,
  /* 947 */ &&obj_finalize_STAMP_kinematics__ChiDihedral_O,
  /* 951 */ &&obj_finalize_STAMP_chem__ConstitutionAtoms_O,
  /* 955 */ &&obj_finalize_STAMP_kinematics__Conformation_O,
  /* 959 */ &&obj_finalize_STAMP_chem__MoleculeGraph_O,
  /* 963 */ &&obj_finalize_STAMP_chem__StructureComparer_O,
  /* 967 */ &&obj_finalize_STAMP_chem__BoundingBox_O,
  /* 971 */ &&obj_finalize_STAMP_chem__ChemInfoNode_O,
  /* 975 */ &&obj_finalize_STAMP_chem__BondMatcher_O,
  /* 979 */ &&obj_finalize_STAMP_chem__BondTest_O,
  /* 983 */ &&obj_finalize_STAMP_chem__BondLogical_O,
  /* 987 */ &&obj_finalize_STAMP_chem__BondMatchNode_O,
  /* 991 */ &&obj_finalize_STAMP_chem__AtomOrBondMatchNode_O,
  /* 995 */ &&obj_finalize_STAMP_chem__Root_O,
  /* 999 */ &&obj_finalize_STAMP_chem__SmartsRoot_O,
  /* 1003 */ &&obj_finalize_STAMP_chem__AntechamberRoot_O,
  /* 1007 */ &&obj_finalize_STAMP_chem__ResidueTest_O,
  /* 1011 */ &&obj_finalize_STAMP_chem__AntechamberFocusAtomMatch_O,
  /* 1015 */ &&obj_finalize_STAMP_chem__Logical_O,
  /* 1019 */ &&obj_finalize_STAMP_chem__AtomTest_O,
  /* 1023 */ &&obj_finalize_STAMP_chem__BondToAtomTest_O,
  /* 1027 */ &&obj_finalize_STAMP_chem__AntechamberBondToAtomTest_O,
  /* 1031 */ &&obj_finalize_STAMP_chem__BondListMatchNode_O,
  /* 1035 */ &&obj_finalize_STAMP_chem__Chain_O,
  /* 1039 */ &&obj_finalize_STAMP_chem__Branch_O,
  /* 1043 */ &&obj_finalize_STAMP_chem__RootMatchNode_O,
  /* 1047 */ &&obj_finalize_STAMP_chem__AfterMatchBondToAtomTest_O,
  /* 1051 */ &&obj_finalize_STAMP_chem__Dimacs_O,
  /* 1055 */ &&obj_finalize_STAMP_chem__SpecificContext_O,
  /* 1059 */ &&obj_finalize_STAMP_chem__Minimizer_O,
  /* 1063 */ &&obj_finalize_STAMP_adapt__SymbolSet_O,
  /* 1067 */ &&obj_finalize_STAMP_chem__MapOfMonomerNamesToAtomIndexers_O,
  /* 1071 */ &&obj_finalize_STAMP_chem__Alias_O,
  /* 1075 */ &&obj_finalize_STAMP_chem__AtomIdToAtomMap_O,
  /* 1079 */ &&obj_finalize_STAMP_mp__Process_O,
  /* 1083 */ &&obj_finalize_STAMP_core__SingleDispatchMethod_O,
  /* 1087 */ &&obj_finalize_STAMP_core__Iterator_O,
  /* 1091 */ &&obj_finalize_STAMP_core__DirectoryIterator_O,
  /* 1095 */ &&obj_finalize_STAMP_chem__IterateRestraints_O,
  /* 1099 */ &&obj_finalize_STAMP_adapt__IterateCons_O,
  /* 1103 */ &&obj_finalize_STAMP_core__RecursiveDirectoryIterator_O,
  /* 1107 */ &&obj_finalize_STAMP_chem__IterateMatter_O,
  /* 1111 */ &&obj_finalize_STAMP_chem__IterateResidues_O,
  /* 1115 */ &&obj_finalize_STAMP_chem__IterateBonds_O,
  /* 1119 */ &&obj_finalize_STAMP_chem__IterateAtoms_O,
  /* 1123 */ &&obj_finalize_STAMP_core__Symbol_O,
  /* 1127 */ &&obj_finalize_STAMP_core__Null_O,
  /* 1131 */ &&obj_finalize_STAMP_core__SharpEqualWrapper_O,
  /* 1135 */ &&obj_finalize_STAMP_llvmo__ClaspJIT_O,
  /* 1139 */ &&obj_finalize_STAMP_core__Exposer_O,
  /* 1143 */ &&obj_finalize_STAMP_units__UnitsExposer_O,
  /* 1147 */ &&obj_finalize_STAMP_core__CoreExposer_O,
  /* 1151 */ &&obj_finalize_STAMP_geom__GeomExposer_O,
  /* 1155 */ &&obj_finalize_STAMP_adapt__AdaptExposer_O,
  /* 1159 */ &&obj_finalize_STAMP_kinematics__KinematicsExposer_O,
  /* 1163 */ &&obj_finalize_STAMP_chem__ChemExposer_O,
  /* 1167 */ &&obj_finalize_STAMP_asttooling__AsttoolingExposer_O,
  /* 1171 */ &&obj_finalize_STAMP_core__PosixTimeDuration_O,
  /* 1175 */ &&obj_finalize_STAMP_clasp_ffi__ForeignTypeSpec_O,
  /* 1179 */ &&obj_finalize_STAMP_core__SmallMap_O,
  /* 1181 */ &&obj_finalize_STAMP_core__Instance_O,
  /* 1185 */ &&obj_finalize_STAMP_clbind__ClassRep_O,
  /* 1188 */ &&obj_finalize_STAMP_core__DerivableCxxObject_O,
  /* 1195 */ &&obj_finalize_STAMP_mpip__Mpi_O,
  /* 1199 */ &&obj_finalize_STAMP_core__Sigset_O,
  /* 1203 */ &&obj_finalize_STAMP_core__Environment_O,
  /* 1207 */ &&obj_finalize_STAMP_core__GlueEnvironment_O,
  /* 1211 */ &&obj_finalize_STAMP_core__LexicalEnvironment_O,
  /* 1215 */ &&obj_finalize_STAMP_core__CompileTimeEnvironment_O,
  /* 1219 */ &&obj_finalize_STAMP_core__CatchEnvironment_O,
  /* 1223 */ &&obj_finalize_STAMP_core__SymbolMacroletEnvironment_O,
  /* 1227 */ &&obj_finalize_STAMP_core__FunctionContainerEnvironment_O,
  /* 1231 */ &&obj_finalize_STAMP_core__UnwindProtectEnvironment_O,
  /* 1235 */ &&obj_finalize_STAMP_core__MacroletEnvironment_O,
  /* 1239 */ &&obj_finalize_STAMP_core__RuntimeVisibleEnvironment_O,
  /* 1243 */ &&obj_finalize_STAMP_core__TagbodyEnvironment_O,
  /* 1247 */ &&obj_finalize_STAMP_core__BlockEnvironment_O,
  /* 1251 */ &&obj_finalize_STAMP_core__FunctionValueEnvironment_O,
  /* 1255 */ &&obj_finalize_STAMP_core__ValueEnvironment_O,
  /* 1259 */ &&obj_finalize_STAMP_core__ActivationFrame_O,
  /* 1263 */ &&obj_finalize_STAMP_core__ValueFrame_O,
  /* 1267 */ &&obj_finalize_STAMP_core__FunctionFrame_O,
  /* 1271 */ &&obj_finalize_STAMP_core__RandomState_O,
  /* 1275 */ &&obj_finalize_STAMP_core__HashTableBase_O,
  /* 1279 */ &&obj_finalize_STAMP_core__HashTable_O,
  /* 1283 */ &&obj_finalize_STAMP_core__HashTableEqualp_O,
  /* 1287 */ &&obj_finalize_STAMP_core__HashTableEq_O,
  /* 1291 */ &&obj_finalize_STAMP_core__HashTableEqual_O,
  /* 1295 */ &&obj_finalize_STAMP_core__HashTableEql_O,
  /* 1299 */ &&obj_finalize_STAMP_core__WeakKeyHashTable_O,
  /* 1303 */ &&obj_finalize_STAMP_llvmo__InsertPoint_O,
  /* 1307 */ &&obj_finalize_STAMP_core__Number_O,
  /* 1311 */ &&obj_finalize_STAMP_core__Real_O,
  /* 1315 */ &&obj_finalize_STAMP_core__Rational_O,
  /* 1319 */ &&obj_finalize_STAMP_core__Ratio_O,
  /* 1323 */ &&obj_finalize_STAMP_core__Integer_O,
  /* 1327 */ &&obj_finalize_STAMP_core__Bignum_O,
  /* 1331 */ &&obj_finalize_STAMP_core__Fixnum_dummy_O,
  /* 1335 */ &&obj_finalize_STAMP_core__Float_O,
  /* 1339 */ &&obj_finalize_STAMP_core__DoubleFloat_O,
  /* 1343 */ &&obj_finalize_STAMP_core__SingleFloat_dummy_O,
  /* 1347 */ &&obj_finalize_STAMP_core__LongFloat_O,
  /* 1351 */ &&obj_finalize_STAMP_core__ShortFloat_O,
  /* 1355 */ &&obj_finalize_STAMP_core__Complex_O,
  /* 1359 */ &&obj_finalize_STAMP_core__SourcePosInfo_O,
  /* 1363 */ &&obj_finalize_STAMP_core__IntArray_O,
  /* 1367 */ &&obj_finalize_STAMP_core__Record_O,
  /* 1371 */ &&obj_finalize_STAMP_clbind__ClassRegistry_O,
  /* 1375 */ &&obj_finalize_STAMP_core__ClassHolder_O,
  /* 1378 */ &&obj_finalize_STAMP_core__WrappedPointer_O,
  /* 1383 */ &&obj_finalize_STAMP_core__FdSet_O,
  /* 1387 */ &&obj_finalize_STAMP_core__SymbolToEnumConverter_O,
  /* 1391 */ &&obj_finalize_STAMP_llvmo__Attribute_O,
  /* 1395 */ &&obj_finalize_STAMP_core__ObjectFile_O,
  /* 1399 */ &&obj_finalize_STAMP_core__Function_O,
  /* 1401 */ &&obj_finalize_STAMP_core__FuncallableInstance_O,
  /* 1407 */ &&obj_finalize_STAMP_core__Creator_O,
  /* 1411 */ &&obj_finalize_STAMP_core__FuncallableInstanceCreator_O,
  /* 1415 */ &&obj_finalize_STAMP_clbind__ConstructorCreator_O,
  /* 1419 */ &&obj_finalize_STAMP_clbind__DummyCreator_O,
  /* 1423 */ &&obj_finalize_STAMP_core__InstanceCreator_O,
  /* 1427 */ &&obj_finalize_STAMP_core__ClassRepCreator_O,
  /* 1431 */ &&obj_finalize_STAMP_core__DerivableCxxClassCreator_O,
  /* 1435 */ &&obj_finalize_STAMP_core__StandardClassCreator_O,
  /* 1439 */ &&obj_finalize_STAMP_core__SpecialForm_O,
  /* 1443 */ &&obj_finalize_STAMP_core__Closure_O,
  /* 1447 */ &&obj_finalize_STAMP_core__SingleDispatchCxxEffectiveMethodFunction_O,
  /* 1451 */ &&obj_finalize_STAMP_core__SingleDispatchMethodFunction_O,
  /* 1455 */ &&obj_finalize_STAMP_core__CxxMethodFunction_O,
  /* 1459 */ &&obj_finalize_STAMP_core__BuiltinClosure_O,
  /* 1463 */ &&obj_finalize_STAMP_core__TranslationFunctor_O,
  /* 1467 */ &&obj_finalize_STAMP_core__ClosureWithSlots_O,
  /* 1471 */ &&obj_finalize_STAMP_core__SingleDispatchGenericFunctionClosure_O,
  /* 1475 */ &&obj_finalize_STAMP_core__SingleDispatchEffectiveMethodFunction_O,
  /* 1479 */ &&obj_finalize_STAMP_core__WeakPointer_O,
  /* 1483 */ &&obj_finalize_STAMP_llvmo__DebugLoc_O,
  /* 1487 */ &&obj_finalize_STAMP_core__Array_O,
  /* 1491 */ &&obj_finalize_STAMP_core__MDArray_O,
  /* 1495 */ &&obj_finalize_STAMP_core__template_Array_core__MDArray_int16_t_O_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__MDArray_O_,
  /* 1499 */ &&obj_finalize_STAMP_core__MDArray_int16_t_O,
  /* 1503 */ &&obj_finalize_STAMP_core__template_Array_core__MDArray_int8_t_O_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__MDArray_O_,
  /* 1507 */ &&obj_finalize_STAMP_core__MDArray_int8_t_O,
  /* 1511 */ &&obj_finalize_STAMP_core__template_Array_core__MDArray_int32_t_O_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__MDArray_O_,
  /* 1515 */ &&obj_finalize_STAMP_core__MDArray_int32_t_O,
  /* 1519 */ &&obj_finalize_STAMP_core__template_Array_core__MDArray_byte4_t_O_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__MDArray_O_,
  /* 1523 */ &&obj_finalize_STAMP_core__MDArray_byte4_t_O,
  /* 1527 */ &&obj_finalize_STAMP_core__template_Array_core__MDArray_float_O_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__MDArray_O_,
  /* 1531 */ &&obj_finalize_STAMP_core__MDArray_float_O,
  /* 1535 */ &&obj_finalize_STAMP_core__template_Array_core__MDArray_size_t_O_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__MDArray_O_,
  /* 1539 */ &&obj_finalize_STAMP_core__MDArray_size_t_O,
  /* 1543 */ &&obj_finalize_STAMP_core__template_Array_core__MDArray_byte8_t_O_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__MDArray_O_,
  /* 1547 */ &&obj_finalize_STAMP_core__MDArray_byte8_t_O,
  /* 1551 */ &&obj_finalize_STAMP_core__template_Array_core__MDArray_int2_t_O_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__MDArray_O_,
  /* 1555 */ &&obj_finalize_STAMP_core__MDArray_int2_t_O,
  /* 1559 */ &&obj_finalize_STAMP_core__template_Array_core__MDArray_fixnum_O_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__MDArray_O_,
  /* 1563 */ &&obj_finalize_STAMP_core__MDArray_fixnum_O,
  /* 1567 */ &&obj_finalize_STAMP_core__template_Array_core__MDArrayBaseChar_O_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__MDArray_O_,
  /* 1571 */ &&obj_finalize_STAMP_core__MDArrayBaseChar_O,
  /* 1575 */ &&obj_finalize_STAMP_core__template_Array_core__MDArray_byte64_t_O_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__MDArray_O_,
  /* 1579 */ &&obj_finalize_STAMP_core__MDArray_byte64_t_O,
  /* 1583 */ &&obj_finalize_STAMP_core__template_Array_geom__MDArrayCoordinate_O_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__MDArray_O_,
  /* 1587 */ &&obj_finalize_STAMP_geom__MDArrayCoordinate_O,
  /* 1591 */ &&obj_finalize_STAMP_core__template_Array_core__MDArrayT_O_core__SimpleMDArrayT_O_core__SimpleVector_O_core__MDArray_O_,
  /* 1595 */ &&obj_finalize_STAMP_core__MDArrayT_O,
  /* 1599 */ &&obj_finalize_STAMP_core__SimpleMDArray_O,
  /* 1603 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__SimpleMDArray_O_,
  /* 1607 */ &&obj_finalize_STAMP_core__SimpleMDArray_int8_t_O,
  /* 1611 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__SimpleMDArray_O_,
  /* 1615 */ &&obj_finalize_STAMP_core__SimpleMDArray_byte32_t_O,
  /* 1619 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__SimpleMDArray_O_,
  /* 1623 */ &&obj_finalize_STAMP_core__SimpleMDArray_int2_t_O,
  /* 1627 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__SimpleMDArray_O_,
  /* 1631 */ &&obj_finalize_STAMP_core__SimpleMDArray_byte4_t_O,
  /* 1635 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__SimpleMDArray_O_,
  /* 1639 */ &&obj_finalize_STAMP_core__SimpleMDArray_int32_t_O,
  /* 1643 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__SimpleMDArray_O_,
  /* 1647 */ &&obj_finalize_STAMP_core__SimpleMDArray_float_O,
  /* 1651 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__SimpleMDArray_O_,
  /* 1655 */ &&obj_finalize_STAMP_core__SimpleMDArray_int16_t_O,
  /* 1659 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__SimpleMDArray_O_,
  /* 1663 */ &&obj_finalize_STAMP_core__SimpleMDArray_size_t_O,
  /* 1667 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__SimpleMDArray_O_,
  /* 1671 */ &&obj_finalize_STAMP_core__SimpleMDArrayCharacter_O,
  /* 1675 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__SimpleMDArray_O_,
  /* 1679 */ &&obj_finalize_STAMP_core__SimpleMDArray_byte2_t_O,
  /* 1683 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__SimpleMDArray_O_,
  /* 1687 */ &&obj_finalize_STAMP_core__SimpleMDArray_byte16_t_O,
  /* 1691 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__SimpleMDArray_O_,
  /* 1695 */ &&obj_finalize_STAMP_core__SimpleMDArrayBaseChar_O,
  /* 1699 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__SimpleMDArray_O_,
  /* 1703 */ &&obj_finalize_STAMP_core__SimpleMDArray_byte64_t_O,
  /* 1707 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__SimpleMDArray_O_,
  /* 1711 */ &&obj_finalize_STAMP_core__SimpleMDArray_double_O,
  /* 1715 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArrayT_O_core__SimpleVector_O_core__SimpleMDArray_O_,
  /* 1719 */ &&obj_finalize_STAMP_core__SimpleMDArrayT_O,
  /* 1723 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__SimpleMDArray_O_,
  /* 1727 */ &&obj_finalize_STAMP_core__SimpleMDArray_int4_t_O,
  /* 1731 */ &&obj_finalize_STAMP_core__template_SimpleArray_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__SimpleMDArray_O_,
  /* 1735 */ &&obj_finalize_STAMP_geom__SimpleMDArrayCoordinate_O,
  /* 1739 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__SimpleMDArray_O_,
  /* 1743 */ &&obj_finalize_STAMP_core__SimpleMDArray_fixnum_O,
  /* 1747 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__SimpleMDArray_O_,
  /* 1751 */ &&obj_finalize_STAMP_core__SimpleMDArrayBit_O,
  /* 1755 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__SimpleMDArray_O_,
  /* 1759 */ &&obj_finalize_STAMP_core__SimpleMDArray_byte8_t_O,
  /* 1763 */ &&obj_finalize_STAMP_core__template_SimpleArray_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__SimpleMDArray_O_,
  /* 1767 */ &&obj_finalize_STAMP_core__SimpleMDArray_int64_t_O,
  /* 1771 */ &&obj_finalize_STAMP_core__ComplexVector_O,
  /* 1775 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_double_O_core__SimpleVector_double_O_core__ComplexVector_O_,
  /* 1779 */ &&obj_finalize_STAMP_core__ComplexVector_double_O,
  /* 1783 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_int8_t_O_core__SimpleVector_int8_t_O_core__ComplexVector_O_,
  /* 1787 */ &&obj_finalize_STAMP_core__ComplexVector_int8_t_O,
  /* 1791 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_T_O_core__SimpleVector_O_core__ComplexVector_O_,
  /* 1795 */ &&obj_finalize_STAMP_core__ComplexVector_T_O,
  /* 1799 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_int32_t_O_core__SimpleVector_int32_t_O_core__ComplexVector_O_,
  /* 1803 */ &&obj_finalize_STAMP_core__ComplexVector_int32_t_O,
  /* 1807 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_byte16_t_O_core__SimpleVector_byte16_t_O_core__ComplexVector_O_,
  /* 1811 */ &&obj_finalize_STAMP_core__ComplexVector_byte16_t_O,
  /* 1815 */ &&obj_finalize_STAMP_core__template_Vector_geom__ComplexVectorCoordinate_O_geom__SimpleVectorCoordinate_O_core__ComplexVector_O_,
  /* 1819 */ &&obj_finalize_STAMP_geom__ComplexVectorCoordinate_O,
  /* 1823 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_byte4_t_O_core__SimpleVector_byte4_t_O_core__ComplexVector_O_,
  /* 1827 */ &&obj_finalize_STAMP_core__ComplexVector_byte4_t_O,
  /* 1831 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_byte64_t_O_core__SimpleVector_byte64_t_O_core__ComplexVector_O_,
  /* 1835 */ &&obj_finalize_STAMP_core__ComplexVector_byte64_t_O,
  /* 1839 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_int2_t_O_core__SimpleVector_int2_t_O_core__ComplexVector_O_,
  /* 1843 */ &&obj_finalize_STAMP_core__ComplexVector_int2_t_O,
  /* 1847 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_float_O_core__SimpleVector_float_O_core__ComplexVector_O_,
  /* 1851 */ &&obj_finalize_STAMP_core__ComplexVector_float_O,
  /* 1855 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_int16_t_O_core__SimpleVector_int16_t_O_core__ComplexVector_O_,
  /* 1859 */ &&obj_finalize_STAMP_core__ComplexVector_int16_t_O,
  /* 1863 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_int4_t_O_core__SimpleVector_int4_t_O_core__ComplexVector_O_,
  /* 1867 */ &&obj_finalize_STAMP_core__ComplexVector_int4_t_O,
  /* 1871 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_size_t_O_core__SimpleVector_size_t_O_core__ComplexVector_O_,
  /* 1875 */ &&obj_finalize_STAMP_core__ComplexVector_size_t_O,
  /* 1879 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_byte2_t_O_core__SimpleVector_byte2_t_O_core__ComplexVector_O_,
  /* 1883 */ &&obj_finalize_STAMP_core__ComplexVector_byte2_t_O,
  /* 1887 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_byte8_t_O_core__SimpleVector_byte8_t_O_core__ComplexVector_O_,
  /* 1891 */ &&obj_finalize_STAMP_core__ComplexVector_byte8_t_O,
  /* 1895 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_byte32_t_O_core__SimpleVector_byte32_t_O_core__ComplexVector_O_,
  /* 1899 */ &&obj_finalize_STAMP_core__ComplexVector_byte32_t_O,
  /* 1903 */ &&obj_finalize_STAMP_core__template_Vector_core__BitVectorNs_O_core__SimpleBitVector_O_core__ComplexVector_O_,
  /* 1907 */ &&obj_finalize_STAMP_core__BitVectorNs_O,
  /* 1911 */ &&obj_finalize_STAMP_core__StrNs_O,
  /* 1915 */ &&obj_finalize_STAMP_core__template_Vector_core__Str8Ns_O_core__SimpleBaseString_O_core__StrNs_O_,
  /* 1919 */ &&obj_finalize_STAMP_core__Str8Ns_O,
  /* 1923 */ &&obj_finalize_STAMP_core__template_Vector_core__StrWNs_O_core__SimpleCharacterString_O_core__StrNs_O_,
  /* 1927 */ &&obj_finalize_STAMP_core__StrWNs_O,
  /* 1931 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_fixnum_O_core__SimpleVector_fixnum_O_core__ComplexVector_O_,
  /* 1935 */ &&obj_finalize_STAMP_core__ComplexVector_fixnum_O,
  /* 1939 */ &&obj_finalize_STAMP_core__template_Vector_core__ComplexVector_int64_t_O_core__SimpleVector_int64_t_O_core__ComplexVector_O_,
  /* 1943 */ &&obj_finalize_STAMP_core__ComplexVector_int64_t_O,
  /* 1947 */ &&obj_finalize_STAMP_core__template_Array_core__MDArray_int64_t_O_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__MDArray_O_,
  /* 1951 */ &&obj_finalize_STAMP_core__MDArray_int64_t_O,
  /* 1955 */ &&obj_finalize_STAMP_core__template_Array_core__MDArray_byte32_t_O_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__MDArray_O_,
  /* 1959 */ &&obj_finalize_STAMP_core__MDArray_byte32_t_O,
  /* 1963 */ &&obj_finalize_STAMP_core__template_Array_core__MDArray_byte2_t_O_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__MDArray_O_,
  /* 1967 */ &&obj_finalize_STAMP_core__MDArray_byte2_t_O,
  /* 1971 */ &&obj_finalize_STAMP_core__template_Array_core__MDArrayCharacter_O_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__MDArray_O_,
  /* 1975 */ &&obj_finalize_STAMP_core__MDArrayCharacter_O,
  /* 1979 */ &&obj_finalize_STAMP_core__template_Array_core__MDArrayBit_O_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__MDArray_O_,
  /* 1983 */ &&obj_finalize_STAMP_core__MDArrayBit_O,
  /* 1987 */ &&obj_finalize_STAMP_core__template_Array_core__MDArray_byte16_t_O_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__MDArray_O_,
  /* 1991 */ &&obj_finalize_STAMP_core__MDArray_byte16_t_O,
  /* 1995 */ &&obj_finalize_STAMP_core__template_Array_core__MDArray_int4_t_O_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__MDArray_O_,
  /* 1999 */ &&obj_finalize_STAMP_core__MDArray_int4_t_O,
  /* 2003 */ &&obj_finalize_STAMP_core__template_Array_core__MDArray_double_O_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__MDArray_O_,
  /* 2007 */ &&obj_finalize_STAMP_core__MDArray_double_O,
  /* 2011 */ &&obj_finalize_STAMP_core__AbstractSimpleVector_O,
  /* 2015 */ &&obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_byte32_t_O_unsigned_int_core__AbstractSimpleVector_O_,
  /* 2019 */ &&obj_finalize_STAMP_core__SimpleVector_byte32_t_O,
  /* 2023 */ &&obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_size_t_O_unsigned_long_core__AbstractSimpleVector_O_,
  /* 2027 */ &&obj_finalize_STAMP_core__SimpleVector_size_t_O,
  /* 2031 */ &&obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_double_O_double_core__AbstractSimpleVector_O_,
  /* 2035 */ &&obj_finalize_STAMP_core__SimpleVector_double_O,
  /* 2039 */ &&obj_finalize_STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_int2_t_O_2_1_,
  /* 2043 */ &&obj_finalize_STAMP_core__SimpleVector_int2_t_O,
  /* 2047 */ &&obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_int64_t_O_long_core__AbstractSimpleVector_O_,
  /* 2051 */ &&obj_finalize_STAMP_core__SimpleVector_int64_t_O,
  /* 2055 */ &&obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_int8_t_O_signed_char_core__AbstractSimpleVector_O_,
  /* 2059 */ &&obj_finalize_STAMP_core__SimpleVector_int8_t_O,
  /* 2063 */ &&obj_finalize_STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_byte4_t_O_4_0_,
  /* 2067 */ &&obj_finalize_STAMP_core__SimpleVector_byte4_t_O,
  /* 2071 */ &&obj_finalize_STAMP_core__template_SimpleVector_geom__SimpleVectorCoordinate_O_Vector3_core__AbstractSimpleVector_O_,
  /* 2075 */ &&obj_finalize_STAMP_geom__SimpleVectorCoordinate_O,
  /* 2079 */ &&obj_finalize_STAMP_core__SimpleString_O,
  /* 2083 */ &&obj_finalize_STAMP_core__template_SimpleVector_core__SimpleBaseString_O_unsigned_char_core__SimpleString_O_,
  /* 2087 */ &&obj_finalize_STAMP_core__SimpleBaseString_O,
  /* 2091 */ &&obj_finalize_STAMP_core__template_SimpleVector_core__SimpleCharacterString_O_int_core__SimpleString_O_,
  /* 2095 */ &&obj_finalize_STAMP_core__SimpleCharacterString_O,
  /* 2099 */ &&obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_int16_t_O_short_core__AbstractSimpleVector_O_,
  /* 2103 */ &&obj_finalize_STAMP_core__SimpleVector_int16_t_O,
  /* 2107 */ &&obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_byte16_t_O_unsigned_short_core__AbstractSimpleVector_O_,
  /* 2111 */ &&obj_finalize_STAMP_core__SimpleVector_byte16_t_O,
  /* 2115 */ &&obj_finalize_STAMP_core__template_SimpleBitUnitVector_core__SimpleBitVector_O_1_0_,
  /* 2119 */ &&obj_finalize_STAMP_core__SimpleBitVector_O,
  /* 2123 */ &&obj_finalize_STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_int4_t_O_4_1_,
  /* 2127 */ &&obj_finalize_STAMP_core__SimpleVector_int4_t_O,
  /* 2131 */ &&obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_byte64_t_O_unsigned_long_core__AbstractSimpleVector_O_,
  /* 2135 */ &&obj_finalize_STAMP_core__SimpleVector_byte64_t_O,
  /* 2139 */ &&obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_fixnum_O_long_core__AbstractSimpleVector_O_,
  /* 2143 */ &&obj_finalize_STAMP_core__SimpleVector_fixnum_O,
  /* 2147 */ &&obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_float_O_float_core__AbstractSimpleVector_O_,
  /* 2151 */ &&obj_finalize_STAMP_core__SimpleVector_float_O,
  /* 2155 */ &&obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_O_gctools__smart_ptr_core__T_O__core__AbstractSimpleVector_O_,
  /* 2159 */ &&obj_finalize_STAMP_core__SimpleVector_O,
  /* 2163 */ &&obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_byte8_t_O_unsigned_char_core__AbstractSimpleVector_O_,
  /* 2167 */ &&obj_finalize_STAMP_core__SimpleVector_byte8_t_O,
  /* 2171 */ &&obj_finalize_STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_byte2_t_O_2_0_,
  /* 2175 */ &&obj_finalize_STAMP_core__SimpleVector_byte2_t_O,
  /* 2179 */ &&obj_finalize_STAMP_core__template_SimpleVector_core__SimpleVector_int32_t_O_int_core__AbstractSimpleVector_O_,
  /* 2183 */ &&obj_finalize_STAMP_core__SimpleVector_int32_t_O,
  /* 2187 */ &&obj_finalize_STAMP_core__Character_dummy_O,
  /* 2191 */ &&obj_finalize_STAMP_llvmo__DataLayout_O,
  /* 2195 */ &&obj_finalize_STAMP_core__LoadTimeValues_O,
  /* 2199 */ &&obj_finalize_STAMP_core__Readtable_O,
  /* 2203 */ &&obj_finalize_STAMP_core__PosixTime_O,
  /* 2207 */ &&obj_finalize_STAMP_llvmo__StructLayout_O,
  /* 2211 */ &&obj_finalize_STAMP_core__ExternalObject_O,
  /* 2215 */ &&obj_finalize_STAMP_llvmo__Pass_O,
  /* 2219 */ &&obj_finalize_STAMP_llvmo__ModulePass_O,
  /* 2223 */ &&obj_finalize_STAMP_llvmo__ImmutablePass_O,
  /* 2227 */ &&obj_finalize_STAMP_llvmo__TargetLibraryInfoWrapperPass_O,
  /* 2231 */ &&obj_finalize_STAMP_llvmo__FunctionPass_O,
  /* 2235 */ &&obj_finalize_STAMP_llvmo__MCSubtargetInfo_O,
  /* 2239 */ &&obj_finalize_STAMP_llvmo__TargetSubtargetInfo_O,
  /* 2243 */ &&obj_finalize_STAMP_llvmo__JITDylib_O,
  /* 2247 */ &&obj_finalize_STAMP_llvmo__IRBuilderBase_O,
  /* 2251 */ &&obj_finalize_STAMP_llvmo__IRBuilder_O,
  /* 2255 */ &&obj_finalize_STAMP_llvmo__APInt_O,
  /* 2259 */ &&obj_finalize_STAMP_llvmo__DIBuilder_O,
  /* 2263 */ &&obj_finalize_STAMP_llvmo__EngineBuilder_O,
  /* 2267 */ &&obj_finalize_STAMP_llvmo__PassManagerBase_O,
  /* 2271 */ &&obj_finalize_STAMP_llvmo__PassManager_O,
  /* 2275 */ &&obj_finalize_STAMP_llvmo__FunctionPassManager_O,
  /* 2279 */ &&obj_finalize_STAMP_llvmo__Value_O,
  /* 2283 */ &&obj_finalize_STAMP_llvmo__User_O,
  /* 2287 */ &&obj_finalize_STAMP_llvmo__Instruction_O,
  /* 2291 */ &&obj_finalize_STAMP_llvmo__StoreInst_O,
  /* 2295 */ &&obj_finalize_STAMP_llvmo__UnreachableInst_O,
  /* 2299 */ &&obj_finalize_STAMP_llvmo__ResumeInst_O,
  /* 2303 */ &&obj_finalize_STAMP_llvmo__AtomicCmpXchgInst_O,
  /* 2307 */ &&obj_finalize_STAMP_llvmo__FenceInst_O,
  /* 2311 */ &&obj_finalize_STAMP_llvmo__CallBase_O,
  /* 2315 */ &&obj_finalize_STAMP_llvmo__CallInst_O,
  /* 2319 */ &&obj_finalize_STAMP_llvmo__InvokeInst_O,
  /* 2323 */ &&obj_finalize_STAMP_llvmo__BranchInst_O,
  /* 2327 */ &&obj_finalize_STAMP_llvmo__UnaryInstruction_O,
  /* 2331 */ &&obj_finalize_STAMP_llvmo__VAArgInst_O,
  /* 2335 */ &&obj_finalize_STAMP_llvmo__AllocaInst_O,
  /* 2339 */ &&obj_finalize_STAMP_llvmo__LoadInst_O,
  /* 2343 */ &&obj_finalize_STAMP_llvmo__SwitchInst_O,
  /* 2347 */ &&obj_finalize_STAMP_llvmo__AtomicRMWInst_O,
  /* 2351 */ &&obj_finalize_STAMP_llvmo__LandingPadInst_O,
  /* 2355 */ &&obj_finalize_STAMP_llvmo__ReturnInst_O,
  /* 2359 */ &&obj_finalize_STAMP_llvmo__PHINode_O,
  /* 2363 */ &&obj_finalize_STAMP_llvmo__IndirectBrInst_O,
  /* 2367 */ &&obj_finalize_STAMP_llvmo__Constant_O,
  /* 2371 */ &&obj_finalize_STAMP_llvmo__GlobalValue_O,
  /* 2375 */ &&obj_finalize_STAMP_llvmo__Function_O,
  /* 2379 */ &&obj_finalize_STAMP_llvmo__GlobalVariable_O,
  /* 2383 */ &&obj_finalize_STAMP_llvmo__BlockAddress_O,
  /* 2387 */ &&obj_finalize_STAMP_llvmo__ConstantStruct_O,
  /* 2391 */ &&obj_finalize_STAMP_llvmo__ConstantInt_O,
  /* 2395 */ &&obj_finalize_STAMP_llvmo__ConstantFP_O,
  /* 2399 */ &&obj_finalize_STAMP_llvmo__ConstantPointerNull_O,
  /* 2403 */ &&obj_finalize_STAMP_llvmo__ConstantDataSequential_O,
  /* 2407 */ &&obj_finalize_STAMP_llvmo__ConstantDataArray_O,
  /* 2411 */ &&obj_finalize_STAMP_llvmo__ConstantExpr_O,
  /* 2415 */ &&obj_finalize_STAMP_llvmo__UndefValue_O,
  /* 2419 */ &&obj_finalize_STAMP_llvmo__ConstantArray_O,
  /* 2423 */ &&obj_finalize_STAMP_llvmo__Argument_O,
  /* 2427 */ &&obj_finalize_STAMP_llvmo__BasicBlock_O,
  /* 2431 */ &&obj_finalize_STAMP_llvmo__MetadataAsValue_O,
  /* 2435 */ &&obj_finalize_STAMP_llvmo__ThreadSafeContext_O,
  /* 2439 */ &&obj_finalize_STAMP_llvmo__TargetMachine_O,
  /* 2443 */ &&obj_finalize_STAMP_llvmo__LLVMTargetMachine_O,
  /* 2447 */ &&obj_finalize_STAMP_llvmo__Triple_O,
  /* 2451 */ &&obj_finalize_STAMP_llvmo__LLVMContext_O,
  /* 2455 */ &&obj_finalize_STAMP_llvmo__PassManagerBuilder_O,
  /* 2459 */ &&obj_finalize_STAMP_llvmo__ExecutionEngine_O,
  /* 2463 */ &&obj_finalize_STAMP_llvmo__Type_O,
  /* 2467 */ &&obj_finalize_STAMP_llvmo__FunctionType_O,
  /* 2471 */ &&obj_finalize_STAMP_llvmo__IntegerType_O,
  /* 2475 */ &&obj_finalize_STAMP_llvmo__CompositeType_O,
  /* 2479 */ &&obj_finalize_STAMP_llvmo__SequentialType_O,
  /* 2483 */ &&obj_finalize_STAMP_llvmo__PointerType_O,
  /* 2487 */ &&obj_finalize_STAMP_llvmo__ArrayType_O,
  /* 2491 */ &&obj_finalize_STAMP_llvmo__VectorType_O,
  /* 2495 */ &&obj_finalize_STAMP_llvmo__StructType_O,
  /* 2499 */ &&obj_finalize_STAMP_llvmo__TargetPassConfig_O,
  /* 2503 */ &&obj_finalize_STAMP_llvmo__APFloat_O,
  /* 2507 */ &&obj_finalize_STAMP_llvmo__Metadata_O,
  /* 2511 */ &&obj_finalize_STAMP_llvmo__MDNode_O,
  /* 2515 */ &&obj_finalize_STAMP_llvmo__DILocation_O,
  /* 2519 */ &&obj_finalize_STAMP_llvmo__DINode_O,
  /* 2523 */ &&obj_finalize_STAMP_llvmo__DIVariable_O,
  /* 2527 */ &&obj_finalize_STAMP_llvmo__DILocalVariable_O,
  /* 2531 */ &&obj_finalize_STAMP_llvmo__DIScope_O,
  /* 2535 */ &&obj_finalize_STAMP_llvmo__DIFile_O,
  /* 2539 */ &&obj_finalize_STAMP_llvmo__DILocalScope_O,
  /* 2543 */ &&obj_finalize_STAMP_llvmo__DISubprogram_O,
  /* 2547 */ &&obj_finalize_STAMP_llvmo__DILexicalBlockBase_O,
  /* 2551 */ &&obj_finalize_STAMP_llvmo__DILexicalBlock_O,
  /* 2555 */ &&obj_finalize_STAMP_llvmo__DICompileUnit_O,
  /* 2559 */ &&obj_finalize_STAMP_llvmo__DIType_O,
  /* 2563 */ &&obj_finalize_STAMP_llvmo__DICompositeType_O,
  /* 2567 */ &&obj_finalize_STAMP_llvmo__DIDerivedType_O,
  /* 2571 */ &&obj_finalize_STAMP_llvmo__DISubroutineType_O,
  /* 2575 */ &&obj_finalize_STAMP_llvmo__DIBasicType_O,
  /* 2579 */ &&obj_finalize_STAMP_llvmo__DIExpression_O,
  /* 2583 */ &&obj_finalize_STAMP_llvmo__ValueAsMetadata_O,
  /* 2587 */ &&obj_finalize_STAMP_llvmo__MDString_O,
  /* 2591 */ &&obj_finalize_STAMP_llvmo__NamedMDNode_O,
  /* 2595 */ &&obj_finalize_STAMP_llvmo__TargetOptions_O,
  /* 2599 */ &&obj_finalize_STAMP_llvmo__Module_O,
  /* 2603 */ &&obj_finalize_STAMP_llvmo__Target_O,
  /* 2607 */ &&obj_finalize_STAMP_llvmo__Linker_O,
  /* 2611 */ &&obj_finalize_STAMP_core__Rack_O,
  /* 2615 */ &&obj_finalize_STAMP_core__SmallMultimap_O,
  /* 2619 */ &&obj_finalize_STAMP_core__AtomicFixnumHolder_O,
  /* 2623 */ &&obj_finalize_STAMP_core__Scope_O,
  /* 2627 */ &&obj_finalize_STAMP_core__FileScope_O,
  /* 2631 */ &&obj_finalize_STAMP_core__Path_O,
  /* 2635 */ &&obj_finalize_STAMP_core__Pathname_O,
  /* 2639 */ &&obj_finalize_STAMP_core__LogicalPathname_O,
  /* 2643 */ &&obj_finalize_STAMP_core__Cache_O,
  /* 2647 */ &&obj_finalize_STAMP_core__Stream_O,
  /* 2651 */ &&obj_finalize_STAMP_core__AnsiStream_O,
  /* 2655 */ &&obj_finalize_STAMP_core__SynonymStream_O,
  /* 2659 */ &&obj_finalize_STAMP_core__StringStream_O,
  /* 2663 */ &&obj_finalize_STAMP_core__StringOutputStream_O,
  /* 2667 */ &&obj_finalize_STAMP_core__StringInputStream_O,
  /* 2671 */ &&obj_finalize_STAMP_core__EchoStream_O,
  /* 2675 */ &&obj_finalize_STAMP_core__ConcatenatedStream_O,
  /* 2679 */ &&obj_finalize_STAMP_core__FileStream_O,
  /* 2683 */ &&obj_finalize_STAMP_core__IOFileStream_O,
  /* 2687 */ &&obj_finalize_STAMP_core__IOStreamStream_O,
  /* 2691 */ &&obj_finalize_STAMP_core__BroadcastStream_O,
  /* 2695 */ &&obj_finalize_STAMP_core__TwoWayStream_O,
  /* 2699 */ &&obj_finalize_STAMP_core__Package_O,
  /* 2703 */ &&obj_finalize_STAMP_core__FileStatus_O,
  /* 2707 */ &&obj_finalize_STAMP_core__InvocationHistoryFrameIterator_O,
  /* 2711 */ &&obj_finalize_STAMP_core__DirectoryEntry_O,
  /* 2715 */ &&obj_finalize_STAMP_core__LightUserData_O,
  /* 2719 */ &&obj_finalize_STAMP_core__UserData_O,
  /* 2723 */ &&obj_finalize_STAMP_core__Cons_O,
  /* 2727 */ &&obj_finalize_STAMP_core__VaList_dummy_O,
  /* 2731 */ &&obj_finalize_STAMP_core__Lisp_O,
  /* 2735 */ &&obj_finalize_STAMP_clang__RecursiveASTVisitor_asttooling__AstVisitor_O_,
  /* 2739 */ &&obj_finalize_STAMP_asttooling__AstVisitor_O,
  /* 2743 */ &&obj_finalize_STAMP_gctools__GCContainer,
  /* 2747 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__,
  /* 2751 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__,
  /* 2755 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyChiralRestraint_,
  /* 2759 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__,
  /* 2763 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__,
  /* 2767 */ &&obj_finalize_STAMP_gctools__GCArray_moveable_short_,
  /* 2771 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__,
  /* 2775 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___,
  /* 2779 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__,
  /* 2783 */ &&obj_finalize_STAMP_gctools__GCBitUnitArray_moveable_4_0_,
  /* 2787 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_core__SymbolClassHolderPair_,
  /* 2791 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___,
  /* 2795 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__,
  /* 2799 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___,
  /* 2803 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__,
  /* 2807 */ &&obj_finalize_STAMP_gctools__GCArray_moveable_unsigned_char_,
  /* 2811 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___,
  /* 2815 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___,
  /* 2819 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_,
  /* 2823 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__,
  /* 2827 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyAngle_,
  /* 2831 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__,
  /* 2835 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__,
  /* 2839 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__,
  /* 2843 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___,
  /* 2847 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__,
  /* 2851 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_core__OptionalArgument_,
  /* 2855 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_core__KeywordArgument_,
  /* 2859 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__KeyEntry_,
  /* 2863 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___,
  /* 2867 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__,
  /* 2871 */ &&obj_finalize_STAMP_gctools__GCArray_moveable_Vector3_,
  /* 2875 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_,
  /* 2879 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__,
  /* 2883 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___,
  /* 2887 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__,
  /* 2891 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___,
  /* 2895 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyImproperRestraint_,
  /* 2899 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__,
  /* 2903 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__,
  /* 2907 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__,
  /* 2911 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__,
  /* 2915 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___,
  /* 2919 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___,
  /* 2923 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__,
  /* 2927 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___,
  /* 2931 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__,
  /* 2935 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__,
  /* 2939 */ &&obj_finalize_STAMP_gctools__GCBitUnitArray_moveable_2_0_,
  /* 2943 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__,
  /* 2947 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__,
  /* 2951 */ &&obj_finalize_STAMP_gctools__GCBitUnitArray_moveable_1_0_,
  /* 2955 */ &&obj_finalize_STAMP_gctools__GCBitUnitArray_moveable_2_1_,
  /* 2959 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__,
  /* 2963 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_int_,
  /* 2967 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___,
  /* 2971 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__,
  /* 2975 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__,
  /* 2979 */ &&obj_finalize_STAMP_gctools__GCArray_moveable_float_,
  /* 2983 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__,
  /* 2987 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__,
  /* 2991 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_core__T_O___,
  /* 2995 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyDihedral_,
  /* 2999 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___,
  /* 3003 */ &&obj_finalize_STAMP_gctools__GCArray_moveable_unsigned_int_,
  /* 3007 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__,
  /* 3011 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__,
  /* 3015 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_core__CacheRecord_,
  /* 3019 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__,
  /* 3023 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_double_,
  /* 3027 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__,
  /* 3031 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__,
  /* 3035 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___,
  /* 3039 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__,
  /* 3043 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__AtomPdbRec_,
  /* 3047 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_core__Cons_O_,
  /* 3051 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergySketchStretch_,
  /* 3055 */ &&obj_finalize_STAMP_gctools__GCArray_moveable_signed_char_,
  /* 3059 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_,
  /* 3063 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__,
  /* 3067 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___,
  /* 3071 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__,
  /* 3075 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__,
  /* 3079 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergySketchNonbond_,
  /* 3083 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__,
  /* 3087 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__,
  /* 3091 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__FixedNonbondRestraint_,
  /* 3095 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__,
  /* 3099 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__,
  /* 3103 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__,
  /* 3107 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___,
  /* 3111 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__,
  /* 3115 */ &&obj_finalize_STAMP_gctools__GCArray_moveable_double_,
  /* 3119 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___,
  /* 3123 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___,
  /* 3127 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__,
  /* 3131 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__,
  /* 3135 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_core__RequiredArgument_,
  /* 3139 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__,
  /* 3143 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__,
  /* 3147 */ &&obj_finalize_STAMP_gctools__GCBitUnitArray_moveable_4_1_,
  /* 3151 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_core__SymbolStorage_,
  /* 3155 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_,
  /* 3159 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___,
  /* 3163 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___,
  /* 3167 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__,
  /* 3171 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__,
  /* 3175 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___,
  /* 3179 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__,
  /* 3183 */ &&obj_finalize_STAMP_gctools__GCArray_moveable_unsigned_long_,
  /* 3187 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyNonbond_,
  /* 3191 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___,
  /* 3195 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__AtomInfo_,
  /* 3199 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__,
  /* 3203 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__,
  /* 3207 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyAtom_,
  /* 3211 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___,
  /* 3215 */ &&obj_finalize_STAMP_gctools__GCArray_moveable_int_,
  /* 3219 */ &&obj_finalize_STAMP_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__,
  /* 3223 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_core__AuxArgument_,
  /* 3227 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__ResidueOut_,
  /* 3231 */ &&obj_finalize_STAMP_gctools__GCArray_moveable_long_,
  /* 3235 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__,
  /* 3239 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_,
  /* 3243 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___,
  /* 3247 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__,
  /* 3251 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__,
  /* 3255 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_chem__EnergyStretch_,
  /* 3259 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__,
  /* 3263 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__,
  /* 3267 */ &&obj_finalize_STAMP_gctools__GCArray_moveable_unsigned_short_,
  /* 3271 */ &&obj_finalize_STAMP_gctools__GCVector_moveable_float_,
  /* 3275 */ &&obj_finalize_STAMP_clang__FrontendAction,
  /* 3279 */ &&obj_finalize_STAMP_clang__ASTFrontendAction,
  /* 3283 */ &&obj_finalize_STAMP_clang__SyntaxOnlyAction,
  /* 3287 */ &&obj_finalize_STAMP_clang__tooling__ToolAction,
  /* 3291 */ &&obj_finalize_STAMP_clang__tooling__FrontendActionFactory,
  /* 3295 */ &&obj_finalize_STAMP_clang__ast_matchers__MatchFinder__MatchCallback,
   NULL
};
#endif // defined(GC_OBJ_FINALIZE_TABLE)
#if defined(GC_OBJ_DEALLOCATOR)
obj_deallocate_unmanaged_instance_STAMP_core__T_O:
{
     // stamp value 7
    core::T_O* obj_gc_safe = reinterpret_cast<core::T_O*>(client);
    GC<core::T_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Unused_dummy_O:
{
     // stamp value 11
    core::Unused_dummy_O* obj_gc_safe = reinterpret_cast<core::Unused_dummy_O*>(client);
    GC<core::Unused_dummy_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__General_O:
{
     // stamp value 15
    core::General_O* obj_gc_safe = reinterpret_cast<core::General_O*>(client);
    GC<core::General_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__MultiStringBuffer_O:
{
     // stamp value 19
    core::MultiStringBuffer_O* obj_gc_safe = reinterpret_cast<core::MultiStringBuffer_O*>(client);
    GC<core::MultiStringBuffer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__LambdaListHandler_O:
{
     // stamp value 23
    core::LambdaListHandler_O* obj_gc_safe = reinterpret_cast<core::LambdaListHandler_O*>(client);
    GC<core::LambdaListHandler_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__AttributeSet_O:
{
     // stamp value 27
    llvmo::AttributeSet_O* obj_gc_safe = reinterpret_cast<llvmo::AttributeSet_O*>(client);
    GC<llvmo::AttributeSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__AtomicT_Holder_O:
{
     // stamp value 31
    core::AtomicT_Holder_O* obj_gc_safe = reinterpret_cast<core::AtomicT_Holder_O*>(client);
    GC<core::AtomicT_Holder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Pointer_O:
{
     // stamp value 35
    core::Pointer_O* obj_gc_safe = reinterpret_cast<core::Pointer_O*>(client);
    GC<core::Pointer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_clasp_ffi__ForeignData_O:
{
     // stamp value 39
    clasp_ffi::ForeignData_O* obj_gc_safe = reinterpret_cast<clasp_ffi::ForeignData_O*>(client);
    GC<clasp_ffi::ForeignData_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__CxxObject_O:
{
     // stamp value 43
    core::CxxObject_O* obj_gc_safe = reinterpret_cast<core::CxxObject_O*>(client);
    GC<core::CxxObject_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__ChiList_O:
{
     // stamp value 47
    kinematics::ChiList_O* obj_gc_safe = reinterpret_cast<kinematics::ChiList_O*>(client);
    GC<kinematics::ChiList_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__NumericalFunction_O:
{
     // stamp value 51
    chem::NumericalFunction_O* obj_gc_safe = reinterpret_cast<chem::NumericalFunction_O*>(client);
    GC<chem::NumericalFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__FoldTree_O:
{
     // stamp value 55
    kinematics::FoldTree_O* obj_gc_safe = reinterpret_cast<kinematics::FoldTree_O*>(client);
    GC<kinematics::FoldTree_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__StatusTracker_O:
{
     // stamp value 59
    chem::StatusTracker_O* obj_gc_safe = reinterpret_cast<chem::StatusTracker_O*>(client);
    GC<chem::StatusTracker_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__RotamerSetBase_O:
{
     // stamp value 63
    kinematics::RotamerSetBase_O* obj_gc_safe = reinterpret_cast<kinematics::RotamerSetBase_O*>(client);
    GC<kinematics::RotamerSetBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__BackboneDependentRotamerSet_O:
{
     // stamp value 67
    kinematics::BackboneDependentRotamerSet_O* obj_gc_safe = reinterpret_cast<kinematics::BackboneDependentRotamerSet_O*>(client);
    GC<kinematics::BackboneDependentRotamerSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__RotamerSet_O:
{
     // stamp value 71
    kinematics::RotamerSet_O* obj_gc_safe = reinterpret_cast<kinematics::RotamerSet_O*>(client);
    GC<kinematics::RotamerSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergyComponent_O:
{
     // stamp value 75
    chem::EnergyComponent_O* obj_gc_safe = reinterpret_cast<chem::EnergyComponent_O*>(client);
    GC<chem::EnergyComponent_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergyStretch_O:
{
     // stamp value 79
    chem::EnergyStretch_O* obj_gc_safe = reinterpret_cast<chem::EnergyStretch_O*>(client);
    GC<chem::EnergyStretch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergyRigidBodyComponent_O:
{
     // stamp value 83
    chem::EnergyRigidBodyComponent_O* obj_gc_safe = reinterpret_cast<chem::EnergyRigidBodyComponent_O*>(client);
    GC<chem::EnergyRigidBodyComponent_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergyRigidBodyStaple_O:
{
     // stamp value 87
    chem::EnergyRigidBodyStaple_O* obj_gc_safe = reinterpret_cast<chem::EnergyRigidBodyStaple_O*>(client);
    GC<chem::EnergyRigidBodyStaple_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergyRigidBodyNonbond_O:
{
     // stamp value 91
    chem::EnergyRigidBodyNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergyRigidBodyNonbond_O*>(client);
    GC<chem::EnergyRigidBodyNonbond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergyOutOfZPlane_O:
{
     // stamp value 95
    chem::EnergyOutOfZPlane_O* obj_gc_safe = reinterpret_cast<chem::EnergyOutOfZPlane_O*>(client);
    GC<chem::EnergyOutOfZPlane_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergySketchNonbond_O:
{
     // stamp value 99
    chem::EnergySketchNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergySketchNonbond_O*>(client);
    GC<chem::EnergySketchNonbond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergyChiralRestraint_O:
{
     // stamp value 103
    chem::EnergyChiralRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyChiralRestraint_O*>(client);
    GC<chem::EnergyChiralRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergyPointToLineRestraint_O:
{
     // stamp value 107
    chem::EnergyPointToLineRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyPointToLineRestraint_O*>(client);
    GC<chem::EnergyPointToLineRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergyDihedral_O:
{
     // stamp value 111
    chem::EnergyDihedral_O* obj_gc_safe = reinterpret_cast<chem::EnergyDihedral_O*>(client);
    GC<chem::EnergyDihedral_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergyNonbond_O:
{
     // stamp value 115
    chem::EnergyNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergyNonbond_O*>(client);
    GC<chem::EnergyNonbond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergyPeriodicBoundaryConditionsNonbond_O:
{
     // stamp value 119
    chem::EnergyPeriodicBoundaryConditionsNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergyPeriodicBoundaryConditionsNonbond_O*>(client);
    GC<chem::EnergyPeriodicBoundaryConditionsNonbond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergyAnchorRestraint_O:
{
     // stamp value 123
    chem::EnergyAnchorRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyAnchorRestraint_O*>(client);
    GC<chem::EnergyAnchorRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergyFixedNonbondRestraint_O:
{
     // stamp value 127
    chem::EnergyFixedNonbondRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyFixedNonbondRestraint_O*>(client);
    GC<chem::EnergyFixedNonbondRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergySketchStretch_O:
{
     // stamp value 131
    chem::EnergySketchStretch_O* obj_gc_safe = reinterpret_cast<chem::EnergySketchStretch_O*>(client);
    GC<chem::EnergySketchStretch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergyImproperRestraint_O:
{
     // stamp value 135
    chem::EnergyImproperRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyImproperRestraint_O*>(client);
    GC<chem::EnergyImproperRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergyAngle_O:
{
     // stamp value 139
    chem::EnergyAngle_O* obj_gc_safe = reinterpret_cast<chem::EnergyAngle_O*>(client);
    GC<chem::EnergyAngle_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Matter_O:
{
     // stamp value 143
    chem::Matter_O* obj_gc_safe = reinterpret_cast<chem::Matter_O*>(client);
    GC<chem::Matter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Aggregate_O:
{
     // stamp value 147
    chem::Aggregate_O* obj_gc_safe = reinterpret_cast<chem::Aggregate_O*>(client);
    GC<chem::Aggregate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Atom_O:
{
     // stamp value 151
    chem::Atom_O* obj_gc_safe = reinterpret_cast<chem::Atom_O*>(client);
    GC<chem::Atom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__VirtualAtom_O:
{
     // stamp value 155
    chem::VirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::VirtualAtom_O*>(client);
    GC<chem::VirtualAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Residue_O:
{
     // stamp value 159
    chem::Residue_O* obj_gc_safe = reinterpret_cast<chem::Residue_O*>(client);
    GC<chem::Residue_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Molecule_O:
{
     // stamp value 163
    chem::Molecule_O* obj_gc_safe = reinterpret_cast<chem::Molecule_O*>(client);
    GC<chem::Molecule_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__PdbWriter_O:
{
     // stamp value 167
    chem::PdbWriter_O* obj_gc_safe = reinterpret_cast<chem::PdbWriter_O*>(client);
    GC<chem::PdbWriter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__TrajectoryFrame_O:
{
     // stamp value 171
    chem::TrajectoryFrame_O* obj_gc_safe = reinterpret_cast<chem::TrajectoryFrame_O*>(client);
    GC<chem::TrajectoryFrame_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__MDBuilder_O:
{
     // stamp value 175
    llvmo::MDBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::MDBuilder_O*>(client);
    GC<llvmo::MDBuilder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Topology_O:
{
     // stamp value 179
    chem::Topology_O* obj_gc_safe = reinterpret_cast<chem::Topology_O*>(client);
    GC<chem::Topology_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__AtomTable_O:
{
     // stamp value 183
    chem::AtomTable_O* obj_gc_safe = reinterpret_cast<chem::AtomTable_O*>(client);
    GC<chem::AtomTable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__CipPrioritizer_O:
{
     // stamp value 187
    chem::CipPrioritizer_O* obj_gc_safe = reinterpret_cast<chem::CipPrioritizer_O*>(client);
    GC<chem::CipPrioritizer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_adapt__IndexedObjectBag_O:
{
     // stamp value 191
    adapt::IndexedObjectBag_O* obj_gc_safe = reinterpret_cast<adapt::IndexedObjectBag_O*>(client);
    GC<adapt::IndexedObjectBag_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__VirtualSphere_O:
{
     // stamp value 195
    chem::VirtualSphere_O* obj_gc_safe = reinterpret_cast<chem::VirtualSphere_O*>(client);
    GC<chem::VirtualSphere_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__TwisterDriver_O:
{
     // stamp value 199
    chem::TwisterDriver_O* obj_gc_safe = reinterpret_cast<chem::TwisterDriver_O*>(client);
    GC<chem::TwisterDriver_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__NativeVector_double_O:
{
     // stamp value 203
    core::NativeVector_double_O* obj_gc_safe = reinterpret_cast<core::NativeVector_double_O*>(client);
    GC<core::NativeVector_double_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__RingFinder_O:
{
     // stamp value 207
    chem::RingFinder_O* obj_gc_safe = reinterpret_cast<chem::RingFinder_O*>(client);
    GC<chem::RingFinder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__FunctionCallee_O:
{
     // stamp value 211
    llvmo::FunctionCallee_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionCallee_O*>(client);
    GC<llvmo::FunctionCallee_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__Joint_O:
{
     // stamp value 215
    kinematics::Joint_O* obj_gc_safe = reinterpret_cast<kinematics::Joint_O*>(client);
    GC<kinematics::Joint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__JumpJoint_O:
{
     // stamp value 219
    kinematics::JumpJoint_O* obj_gc_safe = reinterpret_cast<kinematics::JumpJoint_O*>(client);
    GC<kinematics::JumpJoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__OriginJumpJoint_O:
{
     // stamp value 223
    kinematics::OriginJumpJoint_O* obj_gc_safe = reinterpret_cast<kinematics::OriginJumpJoint_O*>(client);
    GC<kinematics::OriginJumpJoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__BondedJoint_O:
{
     // stamp value 227
    kinematics::BondedJoint_O* obj_gc_safe = reinterpret_cast<kinematics::BondedJoint_O*>(client);
    GC<kinematics::BondedJoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__RootBondedJoint_O:
{
     // stamp value 231
    kinematics::RootBondedJoint_O* obj_gc_safe = reinterpret_cast<kinematics::RootBondedJoint_O*>(client);
    GC<kinematics::RootBondedJoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__DelayedBondedJoint_O:
{
     // stamp value 235
    kinematics::DelayedBondedJoint_O* obj_gc_safe = reinterpret_cast<kinematics::DelayedBondedJoint_O*>(client);
    GC<kinematics::DelayedBondedJoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__SearchStatistics_O:
{
     // stamp value 239
    chem::SearchStatistics_O* obj_gc_safe = reinterpret_cast<chem::SearchStatistics_O*>(client);
    GC<chem::SearchStatistics_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__PdbMonomerDatabase_O:
{
     // stamp value 243
    chem::PdbMonomerDatabase_O* obj_gc_safe = reinterpret_cast<chem::PdbMonomerDatabase_O*>(client);
    GC<chem::PdbMonomerDatabase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Twister_O:
{
     // stamp value 247
    chem::Twister_O* obj_gc_safe = reinterpret_cast<chem::Twister_O*>(client);
    GC<chem::Twister_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__MonomerCoordinates_O:
{
     // stamp value 251
    chem::MonomerCoordinates_O* obj_gc_safe = reinterpret_cast<chem::MonomerCoordinates_O*>(client);
    GC<chem::MonomerCoordinates_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFParameter_O:
{
     // stamp value 255
    chem::FFParameter_O* obj_gc_safe = reinterpret_cast<chem::FFParameter_O*>(client);
    GC<chem::FFParameter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFVdw_O:
{
     // stamp value 259
    chem::FFVdw_O* obj_gc_safe = reinterpret_cast<chem::FFVdw_O*>(client);
    GC<chem::FFVdw_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFStretch_O:
{
     // stamp value 263
    chem::FFStretch_O* obj_gc_safe = reinterpret_cast<chem::FFStretch_O*>(client);
    GC<chem::FFStretch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFPtor_O:
{
     // stamp value 267
    chem::FFPtor_O* obj_gc_safe = reinterpret_cast<chem::FFPtor_O*>(client);
    GC<chem::FFPtor_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFItor_O:
{
     // stamp value 271
    chem::FFItor_O* obj_gc_safe = reinterpret_cast<chem::FFItor_O*>(client);
    GC<chem::FFItor_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFNonbond_O:
{
     // stamp value 275
    chem::FFNonbond_O* obj_gc_safe = reinterpret_cast<chem::FFNonbond_O*>(client);
    GC<chem::FFNonbond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFAngle_O:
{
     // stamp value 279
    chem::FFAngle_O* obj_gc_safe = reinterpret_cast<chem::FFAngle_O*>(client);
    GC<chem::FFAngle_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Restraint_O:
{
     // stamp value 283
    chem::Restraint_O* obj_gc_safe = reinterpret_cast<chem::Restraint_O*>(client);
    GC<chem::Restraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__RestraintChiral_O:
{
     // stamp value 287
    chem::RestraintChiral_O* obj_gc_safe = reinterpret_cast<chem::RestraintChiral_O*>(client);
    GC<chem::RestraintChiral_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__RestraintDistance_O:
{
     // stamp value 291
    chem::RestraintDistance_O* obj_gc_safe = reinterpret_cast<chem::RestraintDistance_O*>(client);
    GC<chem::RestraintDistance_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__RestraintAngle_O:
{
     // stamp value 295
    chem::RestraintAngle_O* obj_gc_safe = reinterpret_cast<chem::RestraintAngle_O*>(client);
    GC<chem::RestraintAngle_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__RestraintAnchor_O:
{
     // stamp value 299
    chem::RestraintAnchor_O* obj_gc_safe = reinterpret_cast<chem::RestraintAnchor_O*>(client);
    GC<chem::RestraintAnchor_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__RestraintFixedNonbond_O:
{
     // stamp value 303
    chem::RestraintFixedNonbond_O* obj_gc_safe = reinterpret_cast<chem::RestraintFixedNonbond_O*>(client);
    GC<chem::RestraintFixedNonbond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__RestraintDihedral_O:
{
     // stamp value 307
    chem::RestraintDihedral_O* obj_gc_safe = reinterpret_cast<chem::RestraintDihedral_O*>(client);
    GC<chem::RestraintDihedral_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__AtomIndexer_O:
{
     // stamp value 311
    chem::AtomIndexer_O* obj_gc_safe = reinterpret_cast<chem::AtomIndexer_O*>(client);
    GC<chem::AtomIndexer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_geom__BoundingCuboid_O:
{
     // stamp value 315
    geom::BoundingCuboid_O* obj_gc_safe = reinterpret_cast<geom::BoundingCuboid_O*>(client);
    GC<geom::BoundingCuboid_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__StereoInformation_O:
{
     // stamp value 319
    chem::StereoInformation_O* obj_gc_safe = reinterpret_cast<chem::StereoInformation_O*>(client);
    GC<chem::StereoInformation_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__AddIonOctree_O:
{
     // stamp value 323
    chem::AddIonOctree_O* obj_gc_safe = reinterpret_cast<chem::AddIonOctree_O*>(client);
    GC<chem::AddIonOctree_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__CDNode_O:
{
     // stamp value 327
    chem::CDNode_O* obj_gc_safe = reinterpret_cast<chem::CDNode_O*>(client);
    GC<chem::CDNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__OligomerPart_Base_O:
{
     // stamp value 331
    chem::OligomerPart_Base_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Base_O*>(client);
    GC<chem::OligomerPart_Base_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__OligomerPart_Link_O:
{
     // stamp value 335
    chem::OligomerPart_Link_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Link_O*>(client);
    GC<chem::OligomerPart_Link_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__OligomerPart_Monomer_O:
{
     // stamp value 339
    chem::OligomerPart_Monomer_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Monomer_O*>(client);
    GC<chem::OligomerPart_Monomer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__BondId_O:
{
     // stamp value 343
    kinematics::BondId_O* obj_gc_safe = reinterpret_cast<kinematics::BondId_O*>(client);
    GC<kinematics::BondId_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Serializer_O:
{
     // stamp value 347
    core::Serializer_O* obj_gc_safe = reinterpret_cast<core::Serializer_O*>(client);
    GC<core::Serializer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__CoordinateSystem_O:
{
     // stamp value 351
    chem::CoordinateSystem_O* obj_gc_safe = reinterpret_cast<chem::CoordinateSystem_O*>(client);
    GC<chem::CoordinateSystem_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Bond_O:
{
     // stamp value 355
    chem::Bond_O* obj_gc_safe = reinterpret_cast<chem::Bond_O*>(client);
    GC<chem::Bond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__CandoDatabase_O:
{
     // stamp value 359
    chem::CandoDatabase_O* obj_gc_safe = reinterpret_cast<chem::CandoDatabase_O*>(client);
    GC<chem::CandoDatabase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__AbstractLargeSquareMatrix_O:
{
     // stamp value 363
    chem::AbstractLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::AbstractLargeSquareMatrix_O*>(client);
    GC<chem::AbstractLargeSquareMatrix_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__SparseLargeSquareMatrix_O:
{
     // stamp value 367
    chem::SparseLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::SparseLargeSquareMatrix_O*>(client);
    GC<chem::SparseLargeSquareMatrix_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FullLargeSquareMatrix_O:
{
     // stamp value 371
    chem::FullLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::FullLargeSquareMatrix_O*>(client);
    GC<chem::FullLargeSquareMatrix_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFBaseDb_O:
{
     // stamp value 375
    chem::FFBaseDb_O* obj_gc_safe = reinterpret_cast<chem::FFBaseDb_O*>(client);
    GC<chem::FFBaseDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFParameterBaseDb_O:
{
     // stamp value 379
    chem::FFParameterBaseDb_O* obj_gc_safe = reinterpret_cast<chem::FFParameterBaseDb_O*>(client);
    GC<chem::FFParameterBaseDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFItorDb_O:
{
     // stamp value 383
    chem::FFItorDb_O* obj_gc_safe = reinterpret_cast<chem::FFItorDb_O*>(client);
    GC<chem::FFItorDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFStretchDb_O:
{
     // stamp value 387
    chem::FFStretchDb_O* obj_gc_safe = reinterpret_cast<chem::FFStretchDb_O*>(client);
    GC<chem::FFStretchDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFAngleDb_O:
{
     // stamp value 391
    chem::FFAngleDb_O* obj_gc_safe = reinterpret_cast<chem::FFAngleDb_O*>(client);
    GC<chem::FFAngleDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFNonbondDb_O:
{
     // stamp value 395
    chem::FFNonbondDb_O* obj_gc_safe = reinterpret_cast<chem::FFNonbondDb_O*>(client);
    GC<chem::FFNonbondDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFPtorDb_O:
{
     // stamp value 399
    chem::FFPtorDb_O* obj_gc_safe = reinterpret_cast<chem::FFPtorDb_O*>(client);
    GC<chem::FFPtorDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFVdwDb_O:
{
     // stamp value 403
    chem::FFVdwDb_O* obj_gc_safe = reinterpret_cast<chem::FFVdwDb_O*>(client);
    GC<chem::FFVdwDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFTypesDb_O:
{
     // stamp value 407
    chem::FFTypesDb_O* obj_gc_safe = reinterpret_cast<chem::FFTypesDb_O*>(client);
    GC<chem::FFTypesDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__AGVertex_O:
{
     // stamp value 411
    chem::AGVertex_O* obj_gc_safe = reinterpret_cast<chem::AGVertex_O*>(client);
    GC<chem::AGVertex_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ForceField_O:
{
     // stamp value 415
    chem::ForceField_O* obj_gc_safe = reinterpret_cast<chem::ForceField_O*>(client);
    GC<chem::ForceField_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__AtomReferenceBase_O:
{
     // stamp value 419
    chem::AtomReferenceBase_O* obj_gc_safe = reinterpret_cast<chem::AtomReferenceBase_O*>(client);
    GC<chem::AtomReferenceBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__AtomReference_O:
{
     // stamp value 423
    chem::AtomReference_O* obj_gc_safe = reinterpret_cast<chem::AtomReference_O*>(client);
    GC<chem::AtomReference_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ScoringFunction_O:
{
     // stamp value 427
    chem::ScoringFunction_O* obj_gc_safe = reinterpret_cast<chem::ScoringFunction_O*>(client);
    GC<chem::ScoringFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EnergyFunction_O:
{
     // stamp value 431
    chem::EnergyFunction_O* obj_gc_safe = reinterpret_cast<chem::EnergyFunction_O*>(client);
    GC<chem::EnergyFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__SketchFunction_O:
{
     // stamp value 435
    chem::SketchFunction_O* obj_gc_safe = reinterpret_cast<chem::SketchFunction_O*>(client);
    GC<chem::SketchFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__RigidBodyEnergyFunction_O:
{
     // stamp value 439
    chem::RigidBodyEnergyFunction_O* obj_gc_safe = reinterpret_cast<chem::RigidBodyEnergyFunction_O*>(client);
    GC<chem::RigidBodyEnergyFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__WildElementDict_O:
{
     // stamp value 443
    chem::WildElementDict_O* obj_gc_safe = reinterpret_cast<chem::WildElementDict_O*>(client);
    GC<chem::WildElementDict_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DITypeRefArray_O:
{
     // stamp value 447
    llvmo::DITypeRefArray_O* obj_gc_safe = reinterpret_cast<llvmo::DITypeRefArray_O*>(client);
    GC<llvmo::DITypeRefArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_geom__OVector3_O:
{
     // stamp value 451
    geom::OVector3_O* obj_gc_safe = reinterpret_cast<geom::OVector3_O*>(client);
    GC<geom::OVector3_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_geom__OVector2_O:
{
     // stamp value 455
    geom::OVector2_O* obj_gc_safe = reinterpret_cast<geom::OVector2_O*>(client);
    GC<geom::OVector2_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Structure_Old_ListEntry_O:
{
     // stamp value 459
    chem::Structure_Old_ListEntry_O* obj_gc_safe = reinterpret_cast<chem::Structure_Old_ListEntry_O*>(client);
    GC<chem::Structure_Old_ListEntry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFTypeRule_O:
{
     // stamp value 463
    chem::FFTypeRule_O* obj_gc_safe = reinterpret_cast<chem::FFTypeRule_O*>(client);
    GC<chem::FFTypeRule_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_adapt__QDomNode_O:
{
     // stamp value 467
    adapt::QDomNode_O* obj_gc_safe = reinterpret_cast<adapt::QDomNode_O*>(client);
    GC<adapt::QDomNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_mp__SharedMutex_O:
{
     // stamp value 471
    mp::SharedMutex_O* obj_gc_safe = reinterpret_cast<mp::SharedMutex_O*>(client);
    GC<mp::SharedMutex_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ConstitutionAtom_O:
{
     // stamp value 475
    chem::ConstitutionAtom_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionAtom_O*>(client);
    GC<chem::ConstitutionAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ConstitutionVirtualAtom_O:
{
     // stamp value 479
    chem::ConstitutionVirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionVirtualAtom_O*>(client);
    GC<chem::ConstitutionVirtualAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ReadAmberParameters_O:
{
     // stamp value 483
    chem::ReadAmberParameters_O* obj_gc_safe = reinterpret_cast<chem::ReadAmberParameters_O*>(client);
    GC<chem::ReadAmberParameters_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__AGEdge_O:
{
     // stamp value 487
    chem::AGEdge_O* obj_gc_safe = reinterpret_cast<chem::AGEdge_O*>(client);
    GC<chem::AGEdge_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Entity_O:
{
     // stamp value 491
    chem::Entity_O* obj_gc_safe = reinterpret_cast<chem::Entity_O*>(client);
    GC<chem::Entity_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Stereoisomer_O:
{
     // stamp value 495
    chem::Stereoisomer_O* obj_gc_safe = reinterpret_cast<chem::Stereoisomer_O*>(client);
    GC<chem::Stereoisomer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EntityNameSetBase_O:
{
     // stamp value 499
    chem::EntityNameSetBase_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSetBase_O*>(client);
    GC<chem::EntityNameSetBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EntityNameSetWithCap_O:
{
     // stamp value 503
    chem::EntityNameSetWithCap_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSetWithCap_O*>(client);
    GC<chem::EntityNameSetWithCap_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Mate_O:
{
     // stamp value 507
    chem::Mate_O* obj_gc_safe = reinterpret_cast<chem::Mate_O*>(client);
    GC<chem::Mate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__RingClosingMate_O:
{
     // stamp value 511
    chem::RingClosingMate_O* obj_gc_safe = reinterpret_cast<chem::RingClosingMate_O*>(client);
    GC<chem::RingClosingMate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__EntityNameSet_O:
{
     // stamp value 515
    chem::EntityNameSet_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSet_O*>(client);
    GC<chem::EntityNameSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__RepresentedEntityNameSet_O:
{
     // stamp value 519
    chem::RepresentedEntityNameSet_O* obj_gc_safe = reinterpret_cast<chem::RepresentedEntityNameSet_O*>(client);
    GC<chem::RepresentedEntityNameSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__MonomerPack_O:
{
     // stamp value 523
    chem::MonomerPack_O* obj_gc_safe = reinterpret_cast<chem::MonomerPack_O*>(client);
    GC<chem::MonomerPack_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Constitution_O:
{
     // stamp value 527
    chem::Constitution_O* obj_gc_safe = reinterpret_cast<chem::Constitution_O*>(client);
    GC<chem::Constitution_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Monomer_O:
{
     // stamp value 531
    chem::Monomer_O* obj_gc_safe = reinterpret_cast<chem::Monomer_O*>(client);
    GC<chem::Monomer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__OctNode_O:
{
     // stamp value 535
    chem::OctNode_O* obj_gc_safe = reinterpret_cast<chem::OctNode_O*>(client);
    GC<chem::OctNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Structure_Old_List_O:
{
     // stamp value 539
    chem::Structure_Old_List_O* obj_gc_safe = reinterpret_cast<chem::Structure_Old_List_O*>(client);
    GC<chem::Structure_Old_List_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__BackboneDependentRotamerLibrary_O:
{
     // stamp value 543
    kinematics::BackboneDependentRotamerLibrary_O* obj_gc_safe = reinterpret_cast<kinematics::BackboneDependentRotamerLibrary_O*>(client);
    GC<kinematics::BackboneDependentRotamerLibrary_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ReportBase_O:
{
     // stamp value 547
    chem::ReportBase_O* obj_gc_safe = reinterpret_cast<chem::ReportBase_O*>(client);
    GC<chem::ReportBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__StepReport_O:
{
     // stamp value 551
    chem::StepReport_O* obj_gc_safe = reinterpret_cast<chem::StepReport_O*>(client);
    GC<chem::StepReport_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__MessageReport_O:
{
     // stamp value 555
    chem::MessageReport_O* obj_gc_safe = reinterpret_cast<chem::MessageReport_O*>(client);
    GC<chem::MessageReport_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ForceMatchReport_O:
{
     // stamp value 559
    chem::ForceMatchReport_O* obj_gc_safe = reinterpret_cast<chem::ForceMatchReport_O*>(client);
    GC<chem::ForceMatchReport_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ChemDraw_O:
{
     // stamp value 563
    chem::ChemDraw_O* obj_gc_safe = reinterpret_cast<chem::ChemDraw_O*>(client);
    GC<chem::ChemDraw_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ZMatrixInternal_O:
{
     // stamp value 567
    chem::ZMatrixInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixInternal_O*>(client);
    GC<chem::ZMatrixInternal_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ZMatrixBondInternal_O:
{
     // stamp value 571
    chem::ZMatrixBondInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixBondInternal_O*>(client);
    GC<chem::ZMatrixBondInternal_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ZMatrixDihedralInternal_O:
{
     // stamp value 575
    chem::ZMatrixDihedralInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixDihedralInternal_O*>(client);
    GC<chem::ZMatrixDihedralInternal_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ZMatrixAngleInternal_O:
{
     // stamp value 579
    chem::ZMatrixAngleInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixAngleInternal_O*>(client);
    GC<chem::ZMatrixAngleInternal_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__StereoisomerAtom_O:
{
     // stamp value 583
    chem::StereoisomerAtom_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerAtom_O*>(client);
    GC<chem::StereoisomerAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__StereoisomerVirtualAtom_O:
{
     // stamp value 587
    chem::StereoisomerVirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerVirtualAtom_O*>(client);
    GC<chem::StereoisomerVirtualAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ZMatrix_O:
{
     // stamp value 591
    chem::ZMatrix_O* obj_gc_safe = reinterpret_cast<chem::ZMatrix_O*>(client);
    GC<chem::ZMatrix_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Isoname_O:
{
     // stamp value 595
    chem::Isoname_O* obj_gc_safe = reinterpret_cast<chem::Isoname_O*>(client);
    GC<chem::Isoname_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__PathMessage_O:
{
     // stamp value 599
    chem::PathMessage_O* obj_gc_safe = reinterpret_cast<chem::PathMessage_O*>(client);
    GC<chem::PathMessage_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__MonomerId_O:
{
     // stamp value 603
    kinematics::MonomerId_O* obj_gc_safe = reinterpret_cast<kinematics::MonomerId_O*>(client);
    GC<kinematics::MonomerId_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__JointTemplate_O:
{
     // stamp value 607
    kinematics::JointTemplate_O* obj_gc_safe = reinterpret_cast<kinematics::JointTemplate_O*>(client);
    GC<kinematics::JointTemplate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__BondedJointTemplate_O:
{
     // stamp value 611
    kinematics::BondedJointTemplate_O* obj_gc_safe = reinterpret_cast<kinematics::BondedJointTemplate_O*>(client);
    GC<kinematics::BondedJointTemplate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__DelayedBondedJointTemplate_O:
{
     // stamp value 615
    kinematics::DelayedBondedJointTemplate_O* obj_gc_safe = reinterpret_cast<kinematics::DelayedBondedJointTemplate_O*>(client);
    GC<kinematics::DelayedBondedJointTemplate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__RootBondedJointTemplate_O:
{
     // stamp value 619
    kinematics::RootBondedJointTemplate_O* obj_gc_safe = reinterpret_cast<kinematics::RootBondedJointTemplate_O*>(client);
    GC<kinematics::RootBondedJointTemplate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_geom__Color_O:
{
     // stamp value 623
    geom::Color_O* obj_gc_safe = reinterpret_cast<geom::Color_O*>(client);
    GC<geom::Color_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ConformationCollection_O:
{
     // stamp value 627
    chem::ConformationCollection_O* obj_gc_safe = reinterpret_cast<chem::ConformationCollection_O*>(client);
    GC<chem::ConformationCollection_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__SuperposableConformationCollection_O:
{
     // stamp value 631
    chem::SuperposableConformationCollection_O* obj_gc_safe = reinterpret_cast<chem::SuperposableConformationCollection_O*>(client);
    GC<chem::SuperposableConformationCollection_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__NativeVector_float_O:
{
     // stamp value 635
    core::NativeVector_float_O* obj_gc_safe = reinterpret_cast<core::NativeVector_float_O*>(client);
    GC<core::NativeVector_float_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Coupling_O:
{
     // stamp value 639
    chem::Coupling_O* obj_gc_safe = reinterpret_cast<chem::Coupling_O*>(client);
    GC<chem::Coupling_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__RingCoupling_O:
{
     // stamp value 643
    chem::RingCoupling_O* obj_gc_safe = reinterpret_cast<chem::RingCoupling_O*>(client);
    GC<chem::RingCoupling_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__DirectionalCoupling_O:
{
     // stamp value 647
    chem::DirectionalCoupling_O* obj_gc_safe = reinterpret_cast<chem::DirectionalCoupling_O*>(client);
    GC<chem::DirectionalCoupling_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_adapt__ObjectSet_O:
{
     // stamp value 651
    adapt::ObjectSet_O* obj_gc_safe = reinterpret_cast<adapt::ObjectSet_O*>(client);
    GC<adapt::ObjectSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Oligomer_O:
{
     // stamp value 655
    chem::Oligomer_O* obj_gc_safe = reinterpret_cast<chem::Oligomer_O*>(client);
    GC<chem::Oligomer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__PdbMonomerConnectivity_O:
{
     // stamp value 659
    chem::PdbMonomerConnectivity_O* obj_gc_safe = reinterpret_cast<chem::PdbMonomerConnectivity_O*>(client);
    GC<chem::PdbMonomerConnectivity_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_units__Dimension_O:
{
     // stamp value 663
    units::Dimension_O* obj_gc_safe = reinterpret_cast<units::Dimension_O*>(client);
    GC<units::Dimension_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ConformationExplorerEntry_O:
{
     // stamp value 667
    chem::ConformationExplorerEntry_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerEntry_O*>(client);
    GC<chem::ConformationExplorerEntry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_mp__ConditionVariable_O:
{
     // stamp value 671
    mp::ConditionVariable_O* obj_gc_safe = reinterpret_cast<mp::ConditionVariable_O*>(client);
    GC<mp::ConditionVariable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__PdbReader_O:
{
     // stamp value 675
    chem::PdbReader_O* obj_gc_safe = reinterpret_cast<chem::PdbReader_O*>(client);
    GC<chem::PdbReader_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__SpanningLoop_O:
{
     // stamp value 679
    chem::SpanningLoop_O* obj_gc_safe = reinterpret_cast<chem::SpanningLoop_O*>(client);
    GC<chem::SpanningLoop_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ProperTorsion_O:
{
     // stamp value 683
    chem::ProperTorsion_O* obj_gc_safe = reinterpret_cast<chem::ProperTorsion_O*>(client);
    GC<chem::ProperTorsion_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ResidueList_O:
{
     // stamp value 687
    chem::ResidueList_O* obj_gc_safe = reinterpret_cast<chem::ResidueList_O*>(client);
    GC<chem::ResidueList_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__SuperposeEngine_O:
{
     // stamp value 691
    chem::SuperposeEngine_O* obj_gc_safe = reinterpret_cast<chem::SuperposeEngine_O*>(client);
    GC<chem::SuperposeEngine_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__SuperposeSelectedAtoms_O:
{
     // stamp value 695
    chem::SuperposeSelectedAtoms_O* obj_gc_safe = reinterpret_cast<chem::SuperposeSelectedAtoms_O*>(client);
    GC<chem::SuperposeSelectedAtoms_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_adapt__StringSet_O:
{
     // stamp value 699
    adapt::StringSet_O* obj_gc_safe = reinterpret_cast<adapt::StringSet_O*>(client);
    GC<adapt::StringSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Command_O:
{
     // stamp value 703
    chem::Command_O* obj_gc_safe = reinterpret_cast<chem::Command_O*>(client);
    GC<chem::Command_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__StereoConfiguration_O:
{
     // stamp value 707
    chem::StereoConfiguration_O* obj_gc_safe = reinterpret_cast<chem::StereoConfiguration_O*>(client);
    GC<chem::StereoConfiguration_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__MonomerBaseNode_O:
{
     // stamp value 711
    kinematics::MonomerBaseNode_O* obj_gc_safe = reinterpret_cast<kinematics::MonomerBaseNode_O*>(client);
    GC<kinematics::MonomerBaseNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__AggregateNode_O:
{
     // stamp value 715
    kinematics::AggregateNode_O* obj_gc_safe = reinterpret_cast<kinematics::AggregateNode_O*>(client);
    GC<kinematics::AggregateNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__ChainNode_O:
{
     // stamp value 719
    kinematics::ChainNode_O* obj_gc_safe = reinterpret_cast<kinematics::ChainNode_O*>(client);
    GC<kinematics::ChainNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__MonomerNode_O:
{
     // stamp value 723
    kinematics::MonomerNode_O* obj_gc_safe = reinterpret_cast<kinematics::MonomerNode_O*>(client);
    GC<kinematics::MonomerNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__RingClosingMonomerNode_O:
{
     // stamp value 727
    kinematics::RingClosingMonomerNode_O* obj_gc_safe = reinterpret_cast<kinematics::RingClosingMonomerNode_O*>(client);
    GC<kinematics::RingClosingMonomerNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FFNonbondCrossTermTable_O:
{
     // stamp value 731
    chem::FFNonbondCrossTermTable_O* obj_gc_safe = reinterpret_cast<chem::FFNonbondCrossTermTable_O*>(client);
    GC<chem::FFNonbondCrossTermTable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Plug_O:
{
     // stamp value 735
    chem::Plug_O* obj_gc_safe = reinterpret_cast<chem::Plug_O*>(client);
    GC<chem::Plug_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__JumpPlug_O:
{
     // stamp value 739
    chem::JumpPlug_O* obj_gc_safe = reinterpret_cast<chem::JumpPlug_O*>(client);
    GC<chem::JumpPlug_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__PlugWithMates_O:
{
     // stamp value 743
    chem::PlugWithMates_O* obj_gc_safe = reinterpret_cast<chem::PlugWithMates_O*>(client);
    GC<chem::PlugWithMates_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__InPlug_O:
{
     // stamp value 747
    chem::InPlug_O* obj_gc_safe = reinterpret_cast<chem::InPlug_O*>(client);
    GC<chem::InPlug_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__OutPlug_O:
{
     // stamp value 751
    chem::OutPlug_O* obj_gc_safe = reinterpret_cast<chem::OutPlug_O*>(client);
    GC<chem::OutPlug_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__OriginPlug_O:
{
     // stamp value 755
    chem::OriginPlug_O* obj_gc_safe = reinterpret_cast<chem::OriginPlug_O*>(client);
    GC<chem::OriginPlug_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__Rotamer_O:
{
     // stamp value 759
    kinematics::Rotamer_O* obj_gc_safe = reinterpret_cast<kinematics::Rotamer_O*>(client);
    GC<kinematics::Rotamer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__MonomerContext_O:
{
     // stamp value 763
    chem::MonomerContext_O* obj_gc_safe = reinterpret_cast<chem::MonomerContext_O*>(client);
    GC<chem::MonomerContext_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__CDFragment_O:
{
     // stamp value 767
    chem::CDFragment_O* obj_gc_safe = reinterpret_cast<chem::CDFragment_O*>(client);
    GC<chem::CDFragment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_units__Unit_O:
{
     // stamp value 771
    units::Unit_O* obj_gc_safe = reinterpret_cast<units::Unit_O*>(client);
    GC<units::Unit_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_units__NamedUnit_O:
{
     // stamp value 775
    units::NamedUnit_O* obj_gc_safe = reinterpret_cast<units::NamedUnit_O*>(client);
    GC<units::NamedUnit_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_adapt__StringList_O:
{
     // stamp value 779
    adapt::StringList_O* obj_gc_safe = reinterpret_cast<adapt::StringList_O*>(client);
    GC<adapt::StringList_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__NativeVector_int_O:
{
     // stamp value 783
    core::NativeVector_int_O* obj_gc_safe = reinterpret_cast<core::NativeVector_int_O*>(client);
    GC<core::NativeVector_int_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__InfoDb_O:
{
     // stamp value 787
    chem::InfoDb_O* obj_gc_safe = reinterpret_cast<chem::InfoDb_O*>(client);
    GC<chem::InfoDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__MinimizerLog_O:
{
     // stamp value 791
    chem::MinimizerLog_O* obj_gc_safe = reinterpret_cast<chem::MinimizerLog_O*>(client);
    GC<chem::MinimizerLog_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__GenericOctree_O:
{
     // stamp value 795
    chem::GenericOctree_O* obj_gc_safe = reinterpret_cast<chem::GenericOctree_O*>(client);
    GC<chem::GenericOctree_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__AtomTree_O:
{
     // stamp value 799
    kinematics::AtomTree_O* obj_gc_safe = reinterpret_cast<kinematics::AtomTree_O*>(client);
    GC<kinematics::AtomTree_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_units__Quantity_O:
{
     // stamp value 803
    units::Quantity_O* obj_gc_safe = reinterpret_cast<units::Quantity_O*>(client);
    GC<units::Quantity_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ChemInfoMatch_O:
{
     // stamp value 807
    chem::ChemInfoMatch_O* obj_gc_safe = reinterpret_cast<chem::ChemInfoMatch_O*>(client);
    GC<chem::ChemInfoMatch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ZMatrixEntry_O:
{
     // stamp value 811
    chem::ZMatrixEntry_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixEntry_O*>(client);
    GC<chem::ZMatrixEntry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__SpecificContextSet_O:
{
     // stamp value 815
    chem::SpecificContextSet_O* obj_gc_safe = reinterpret_cast<chem::SpecificContextSet_O*>(client);
    GC<chem::SpecificContextSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Angle_O:
{
     // stamp value 819
    chem::Angle_O* obj_gc_safe = reinterpret_cast<chem::Angle_O*>(client);
    GC<chem::Angle_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__MacroModelFile_O:
{
     // stamp value 823
    chem::MacroModelFile_O* obj_gc_safe = reinterpret_cast<chem::MacroModelFile_O*>(client);
    GC<chem::MacroModelFile_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__BondList_O:
{
     // stamp value 827
    chem::BondList_O* obj_gc_safe = reinterpret_cast<chem::BondList_O*>(client);
    GC<chem::BondList_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ConformationExplorer_O:
{
     // stamp value 831
    chem::ConformationExplorer_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorer_O*>(client);
    GC<chem::ConformationExplorer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ChemInfoGraph_O:
{
     // stamp value 835
    chem::ChemInfoGraph_O* obj_gc_safe = reinterpret_cast<chem::ChemInfoGraph_O*>(client);
    GC<chem::ChemInfoGraph_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__CDText_O:
{
     // stamp value 839
    chem::CDText_O* obj_gc_safe = reinterpret_cast<chem::CDText_O*>(client);
    GC<chem::CDText_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DINodeArray_O:
{
     // stamp value 843
    llvmo::DINodeArray_O* obj_gc_safe = reinterpret_cast<llvmo::DINodeArray_O*>(client);
    GC<llvmo::DINodeArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__Checkpoint_O:
{
     // stamp value 847
    kinematics::Checkpoint_O* obj_gc_safe = reinterpret_cast<kinematics::Checkpoint_O*>(client);
    GC<kinematics::Checkpoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__CheckpointJoint_O:
{
     // stamp value 851
    kinematics::CheckpointJoint_O* obj_gc_safe = reinterpret_cast<kinematics::CheckpointJoint_O*>(client);
    GC<kinematics::CheckpointJoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__CheckpointOutPlugJoint_O:
{
     // stamp value 855
    kinematics::CheckpointOutPlugJoint_O* obj_gc_safe = reinterpret_cast<kinematics::CheckpointOutPlugJoint_O*>(client);
    GC<kinematics::CheckpointOutPlugJoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ConformationExplorerMatch_O:
{
     // stamp value 859
    chem::ConformationExplorerMatch_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerMatch_O*>(client);
    GC<chem::ConformationExplorerMatch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__StereoisomerAtoms_O:
{
     // stamp value 863
    chem::StereoisomerAtoms_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerAtoms_O*>(client);
    GC<chem::StereoisomerAtoms_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Rotamer_O:
{
     // stamp value 867
    chem::Rotamer_O* obj_gc_safe = reinterpret_cast<chem::Rotamer_O*>(client);
    GC<chem::Rotamer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ImproperTorsion_O:
{
     // stamp value 871
    chem::ImproperTorsion_O* obj_gc_safe = reinterpret_cast<chem::ImproperTorsion_O*>(client);
    GC<chem::ImproperTorsion_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_adapt__SymbolList_O:
{
     // stamp value 875
    adapt::SymbolList_O* obj_gc_safe = reinterpret_cast<adapt::SymbolList_O*>(client);
    GC<adapt::SymbolList_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__FrameRecognizer_O:
{
     // stamp value 879
    chem::FrameRecognizer_O* obj_gc_safe = reinterpret_cast<chem::FrameRecognizer_O*>(client);
    GC<chem::FrameRecognizer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ConformationExplorerEntryStage_O:
{
     // stamp value 883
    chem::ConformationExplorerEntryStage_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerEntryStage_O*>(client);
    GC<chem::ConformationExplorerEntryStage_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Trajectory_O:
{
     // stamp value 887
    chem::Trajectory_O* obj_gc_safe = reinterpret_cast<chem::Trajectory_O*>(client);
    GC<chem::Trajectory_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__CalculatePosition_O:
{
     // stamp value 891
    chem::CalculatePosition_O* obj_gc_safe = reinterpret_cast<chem::CalculatePosition_O*>(client);
    GC<chem::CalculatePosition_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__CalculatePositionRelativeToOrigin_O:
{
     // stamp value 895
    chem::CalculatePositionRelativeToOrigin_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionRelativeToOrigin_O*>(client);
    GC<chem::CalculatePositionRelativeToOrigin_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__CalculatePositionUsingInternals_O:
{
     // stamp value 899
    chem::CalculatePositionUsingInternals_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionUsingInternals_O*>(client);
    GC<chem::CalculatePositionUsingInternals_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__CalculatePositionAlongBond_O:
{
     // stamp value 903
    chem::CalculatePositionAlongBond_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionAlongBond_O*>(client);
    GC<chem::CalculatePositionAlongBond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_geom__OMatrix_O:
{
     // stamp value 907
    geom::OMatrix_O* obj_gc_safe = reinterpret_cast<geom::OMatrix_O*>(client);
    GC<geom::OMatrix_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ConformationCollectionEntry_O:
{
     // stamp value 911
    chem::ConformationCollectionEntry_O* obj_gc_safe = reinterpret_cast<chem::ConformationCollectionEntry_O*>(client);
    GC<chem::ConformationCollectionEntry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ComplexRestraint_O:
{
     // stamp value 915
    chem::ComplexRestraint_O* obj_gc_safe = reinterpret_cast<chem::ComplexRestraint_O*>(client);
    GC<chem::ComplexRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__RestrainedExoCyclicAtom_O:
{
     // stamp value 919
    chem::RestrainedExoCyclicAtom_O* obj_gc_safe = reinterpret_cast<chem::RestrainedExoCyclicAtom_O*>(client);
    GC<chem::RestrainedExoCyclicAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__RestrainedPiBond_O:
{
     // stamp value 923
    chem::RestrainedPiBond_O* obj_gc_safe = reinterpret_cast<chem::RestrainedPiBond_O*>(client);
    GC<chem::RestrainedPiBond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_mp__Mutex_O:
{
     // stamp value 927
    mp::Mutex_O* obj_gc_safe = reinterpret_cast<mp::Mutex_O*>(client);
    GC<mp::Mutex_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_mp__RecursiveMutex_O:
{
     // stamp value 931
    mp::RecursiveMutex_O* obj_gc_safe = reinterpret_cast<mp::RecursiveMutex_O*>(client);
    GC<mp::RecursiveMutex_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__CombinedForceField_O:
{
     // stamp value 935
    chem::CombinedForceField_O* obj_gc_safe = reinterpret_cast<chem::CombinedForceField_O*>(client);
    GC<chem::CombinedForceField_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__CDBond_O:
{
     // stamp value 939
    chem::CDBond_O* obj_gc_safe = reinterpret_cast<chem::CDBond_O*>(client);
    GC<chem::CDBond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ConstitutionBond_O:
{
     // stamp value 943
    chem::ConstitutionBond_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionBond_O*>(client);
    GC<chem::ConstitutionBond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__ChiDihedral_O:
{
     // stamp value 947
    kinematics::ChiDihedral_O* obj_gc_safe = reinterpret_cast<kinematics::ChiDihedral_O*>(client);
    GC<kinematics::ChiDihedral_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ConstitutionAtoms_O:
{
     // stamp value 951
    chem::ConstitutionAtoms_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionAtoms_O*>(client);
    GC<chem::ConstitutionAtoms_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__Conformation_O:
{
     // stamp value 955
    kinematics::Conformation_O* obj_gc_safe = reinterpret_cast<kinematics::Conformation_O*>(client);
    GC<kinematics::Conformation_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__MoleculeGraph_O:
{
     // stamp value 959
    chem::MoleculeGraph_O* obj_gc_safe = reinterpret_cast<chem::MoleculeGraph_O*>(client);
    GC<chem::MoleculeGraph_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__StructureComparer_O:
{
     // stamp value 963
    chem::StructureComparer_O* obj_gc_safe = reinterpret_cast<chem::StructureComparer_O*>(client);
    GC<chem::StructureComparer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__BoundingBox_O:
{
     // stamp value 967
    chem::BoundingBox_O* obj_gc_safe = reinterpret_cast<chem::BoundingBox_O*>(client);
    GC<chem::BoundingBox_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ChemInfoNode_O:
{
     // stamp value 971
    chem::ChemInfoNode_O* obj_gc_safe = reinterpret_cast<chem::ChemInfoNode_O*>(client);
    GC<chem::ChemInfoNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__BondMatcher_O:
{
     // stamp value 975
    chem::BondMatcher_O* obj_gc_safe = reinterpret_cast<chem::BondMatcher_O*>(client);
    GC<chem::BondMatcher_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__BondTest_O:
{
     // stamp value 979
    chem::BondTest_O* obj_gc_safe = reinterpret_cast<chem::BondTest_O*>(client);
    GC<chem::BondTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__BondLogical_O:
{
     // stamp value 983
    chem::BondLogical_O* obj_gc_safe = reinterpret_cast<chem::BondLogical_O*>(client);
    GC<chem::BondLogical_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__BondMatchNode_O:
{
     // stamp value 987
    chem::BondMatchNode_O* obj_gc_safe = reinterpret_cast<chem::BondMatchNode_O*>(client);
    GC<chem::BondMatchNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__AtomOrBondMatchNode_O:
{
     // stamp value 991
    chem::AtomOrBondMatchNode_O* obj_gc_safe = reinterpret_cast<chem::AtomOrBondMatchNode_O*>(client);
    GC<chem::AtomOrBondMatchNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Root_O:
{
     // stamp value 995
    chem::Root_O* obj_gc_safe = reinterpret_cast<chem::Root_O*>(client);
    GC<chem::Root_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__SmartsRoot_O:
{
     // stamp value 999
    chem::SmartsRoot_O* obj_gc_safe = reinterpret_cast<chem::SmartsRoot_O*>(client);
    GC<chem::SmartsRoot_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__AntechamberRoot_O:
{
     // stamp value 1003
    chem::AntechamberRoot_O* obj_gc_safe = reinterpret_cast<chem::AntechamberRoot_O*>(client);
    GC<chem::AntechamberRoot_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ResidueTest_O:
{
     // stamp value 1007
    chem::ResidueTest_O* obj_gc_safe = reinterpret_cast<chem::ResidueTest_O*>(client);
    GC<chem::ResidueTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__AntechamberFocusAtomMatch_O:
{
     // stamp value 1011
    chem::AntechamberFocusAtomMatch_O* obj_gc_safe = reinterpret_cast<chem::AntechamberFocusAtomMatch_O*>(client);
    GC<chem::AntechamberFocusAtomMatch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Logical_O:
{
     // stamp value 1015
    chem::Logical_O* obj_gc_safe = reinterpret_cast<chem::Logical_O*>(client);
    GC<chem::Logical_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__AtomTest_O:
{
     // stamp value 1019
    chem::AtomTest_O* obj_gc_safe = reinterpret_cast<chem::AtomTest_O*>(client);
    GC<chem::AtomTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__BondToAtomTest_O:
{
     // stamp value 1023
    chem::BondToAtomTest_O* obj_gc_safe = reinterpret_cast<chem::BondToAtomTest_O*>(client);
    GC<chem::BondToAtomTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__AntechamberBondToAtomTest_O:
{
     // stamp value 1027
    chem::AntechamberBondToAtomTest_O* obj_gc_safe = reinterpret_cast<chem::AntechamberBondToAtomTest_O*>(client);
    GC<chem::AntechamberBondToAtomTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__BondListMatchNode_O:
{
     // stamp value 1031
    chem::BondListMatchNode_O* obj_gc_safe = reinterpret_cast<chem::BondListMatchNode_O*>(client);
    GC<chem::BondListMatchNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Chain_O:
{
     // stamp value 1035
    chem::Chain_O* obj_gc_safe = reinterpret_cast<chem::Chain_O*>(client);
    GC<chem::Chain_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Branch_O:
{
     // stamp value 1039
    chem::Branch_O* obj_gc_safe = reinterpret_cast<chem::Branch_O*>(client);
    GC<chem::Branch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__RootMatchNode_O:
{
     // stamp value 1043
    chem::RootMatchNode_O* obj_gc_safe = reinterpret_cast<chem::RootMatchNode_O*>(client);
    GC<chem::RootMatchNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__AfterMatchBondToAtomTest_O:
{
     // stamp value 1047
    chem::AfterMatchBondToAtomTest_O* obj_gc_safe = reinterpret_cast<chem::AfterMatchBondToAtomTest_O*>(client);
    GC<chem::AfterMatchBondToAtomTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Dimacs_O:
{
     // stamp value 1051
    chem::Dimacs_O* obj_gc_safe = reinterpret_cast<chem::Dimacs_O*>(client);
    GC<chem::Dimacs_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__SpecificContext_O:
{
     // stamp value 1055
    chem::SpecificContext_O* obj_gc_safe = reinterpret_cast<chem::SpecificContext_O*>(client);
    GC<chem::SpecificContext_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Minimizer_O:
{
     // stamp value 1059
    chem::Minimizer_O* obj_gc_safe = reinterpret_cast<chem::Minimizer_O*>(client);
    GC<chem::Minimizer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_adapt__SymbolSet_O:
{
     // stamp value 1063
    adapt::SymbolSet_O* obj_gc_safe = reinterpret_cast<adapt::SymbolSet_O*>(client);
    GC<adapt::SymbolSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__MapOfMonomerNamesToAtomIndexers_O:
{
     // stamp value 1067
    chem::MapOfMonomerNamesToAtomIndexers_O* obj_gc_safe = reinterpret_cast<chem::MapOfMonomerNamesToAtomIndexers_O*>(client);
    GC<chem::MapOfMonomerNamesToAtomIndexers_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__Alias_O:
{
     // stamp value 1071
    chem::Alias_O* obj_gc_safe = reinterpret_cast<chem::Alias_O*>(client);
    GC<chem::Alias_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__AtomIdToAtomMap_O:
{
     // stamp value 1075
    chem::AtomIdToAtomMap_O* obj_gc_safe = reinterpret_cast<chem::AtomIdToAtomMap_O*>(client);
    GC<chem::AtomIdToAtomMap_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_mp__Process_O:
{
     // stamp value 1079
    mp::Process_O* obj_gc_safe = reinterpret_cast<mp::Process_O*>(client);
    GC<mp::Process_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__SingleDispatchMethod_O:
{
     // stamp value 1083
    core::SingleDispatchMethod_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchMethod_O*>(client);
    GC<core::SingleDispatchMethod_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Iterator_O:
{
     // stamp value 1087
    core::Iterator_O* obj_gc_safe = reinterpret_cast<core::Iterator_O*>(client);
    GC<core::Iterator_O>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_STAMP_core__DirectoryIterator_O:
{
     // stamp value 1091
    core::DirectoryIterator_O* obj_gc_safe = reinterpret_cast<core::DirectoryIterator_O*>(client);
    GC<core::DirectoryIterator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__IterateRestraints_O:
{
     // stamp value 1095
    chem::IterateRestraints_O* obj_gc_safe = reinterpret_cast<chem::IterateRestraints_O*>(client);
    GC<chem::IterateRestraints_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_adapt__IterateCons_O:
{
     // stamp value 1099
    adapt::IterateCons_O* obj_gc_safe = reinterpret_cast<adapt::IterateCons_O*>(client);
    GC<adapt::IterateCons_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__RecursiveDirectoryIterator_O:
{
     // stamp value 1103
    core::RecursiveDirectoryIterator_O* obj_gc_safe = reinterpret_cast<core::RecursiveDirectoryIterator_O*>(client);
    GC<core::RecursiveDirectoryIterator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__IterateMatter_O:
{
     // stamp value 1107
    chem::IterateMatter_O* obj_gc_safe = reinterpret_cast<chem::IterateMatter_O*>(client);
    GC<chem::IterateMatter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__IterateResidues_O:
{
     // stamp value 1111
    chem::IterateResidues_O* obj_gc_safe = reinterpret_cast<chem::IterateResidues_O*>(client);
    GC<chem::IterateResidues_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__IterateBonds_O:
{
     // stamp value 1115
    chem::IterateBonds_O* obj_gc_safe = reinterpret_cast<chem::IterateBonds_O*>(client);
    GC<chem::IterateBonds_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__IterateAtoms_O:
{
     // stamp value 1119
    chem::IterateAtoms_O* obj_gc_safe = reinterpret_cast<chem::IterateAtoms_O*>(client);
    GC<chem::IterateAtoms_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Symbol_O:
{
     // stamp value 1123
    core::Symbol_O* obj_gc_safe = reinterpret_cast<core::Symbol_O*>(client);
    GC<core::Symbol_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Null_O:
{
     // stamp value 1127
    core::Null_O* obj_gc_safe = reinterpret_cast<core::Null_O*>(client);
    GC<core::Null_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__SharpEqualWrapper_O:
{
     // stamp value 1131
    core::SharpEqualWrapper_O* obj_gc_safe = reinterpret_cast<core::SharpEqualWrapper_O*>(client);
    GC<core::SharpEqualWrapper_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ClaspJIT_O:
{
     // stamp value 1135
    llvmo::ClaspJIT_O* obj_gc_safe = reinterpret_cast<llvmo::ClaspJIT_O*>(client);
    GC<llvmo::ClaspJIT_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Exposer_O:
{
     // stamp value 1139
    core::Exposer_O* obj_gc_safe = reinterpret_cast<core::Exposer_O*>(client);
    GC<core::Exposer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_units__UnitsExposer_O:
{
     // stamp value 1143
    units::UnitsExposer_O* obj_gc_safe = reinterpret_cast<units::UnitsExposer_O*>(client);
    GC<units::UnitsExposer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__CoreExposer_O:
{
     // stamp value 1147
    core::CoreExposer_O* obj_gc_safe = reinterpret_cast<core::CoreExposer_O*>(client);
    GC<core::CoreExposer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_geom__GeomExposer_O:
{
     // stamp value 1151
    geom::GeomExposer_O* obj_gc_safe = reinterpret_cast<geom::GeomExposer_O*>(client);
    GC<geom::GeomExposer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_adapt__AdaptExposer_O:
{
     // stamp value 1155
    adapt::AdaptExposer_O* obj_gc_safe = reinterpret_cast<adapt::AdaptExposer_O*>(client);
    GC<adapt::AdaptExposer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_kinematics__KinematicsExposer_O:
{
     // stamp value 1159
    kinematics::KinematicsExposer_O* obj_gc_safe = reinterpret_cast<kinematics::KinematicsExposer_O*>(client);
    GC<kinematics::KinematicsExposer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_chem__ChemExposer_O:
{
     // stamp value 1163
    chem::ChemExposer_O* obj_gc_safe = reinterpret_cast<chem::ChemExposer_O*>(client);
    GC<chem::ChemExposer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_asttooling__AsttoolingExposer_O:
{
     // stamp value 1167
    asttooling::AsttoolingExposer_O* obj_gc_safe = reinterpret_cast<asttooling::AsttoolingExposer_O*>(client);
    GC<asttooling::AsttoolingExposer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__PosixTimeDuration_O:
{
     // stamp value 1171
    core::PosixTimeDuration_O* obj_gc_safe = reinterpret_cast<core::PosixTimeDuration_O*>(client);
    GC<core::PosixTimeDuration_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_clasp_ffi__ForeignTypeSpec_O:
{
     // stamp value 1175
    clasp_ffi::ForeignTypeSpec_O* obj_gc_safe = reinterpret_cast<clasp_ffi::ForeignTypeSpec_O*>(client);
    GC<clasp_ffi::ForeignTypeSpec_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__SmallMap_O:
{
     // stamp value 1179
    core::SmallMap_O* obj_gc_safe = reinterpret_cast<core::SmallMap_O*>(client);
    GC<core::SmallMap_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Instance_O:
{
     // stamp value 1181
    core::Instance_O* obj_gc_safe = reinterpret_cast<core::Instance_O*>(client);
    GC<core::Instance_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_clbind__ClassRep_O:
{
     // stamp value 1185
    clbind::ClassRep_O* obj_gc_safe = reinterpret_cast<clbind::ClassRep_O*>(client);
    GC<clbind::ClassRep_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__DerivableCxxObject_O:
{
     // stamp value 1188
    core::DerivableCxxObject_O* obj_gc_safe = reinterpret_cast<core::DerivableCxxObject_O*>(client);
    GC<core::DerivableCxxObject_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_mpip__Mpi_O:
{
     // stamp value 1195
    mpip::Mpi_O* obj_gc_safe = reinterpret_cast<mpip::Mpi_O*>(client);
    GC<mpip::Mpi_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Sigset_O:
{
     // stamp value 1199
    core::Sigset_O* obj_gc_safe = reinterpret_cast<core::Sigset_O*>(client);
    GC<core::Sigset_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Environment_O:
{
     // stamp value 1203
    core::Environment_O* obj_gc_safe = reinterpret_cast<core::Environment_O*>(client);
    GC<core::Environment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__GlueEnvironment_O:
{
     // stamp value 1207
    core::GlueEnvironment_O* obj_gc_safe = reinterpret_cast<core::GlueEnvironment_O*>(client);
    GC<core::GlueEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__LexicalEnvironment_O:
{
     // stamp value 1211
    core::LexicalEnvironment_O* obj_gc_safe = reinterpret_cast<core::LexicalEnvironment_O*>(client);
    GC<core::LexicalEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__CompileTimeEnvironment_O:
{
     // stamp value 1215
    core::CompileTimeEnvironment_O* obj_gc_safe = reinterpret_cast<core::CompileTimeEnvironment_O*>(client);
    GC<core::CompileTimeEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__CatchEnvironment_O:
{
     // stamp value 1219
    core::CatchEnvironment_O* obj_gc_safe = reinterpret_cast<core::CatchEnvironment_O*>(client);
    GC<core::CatchEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__SymbolMacroletEnvironment_O:
{
     // stamp value 1223
    core::SymbolMacroletEnvironment_O* obj_gc_safe = reinterpret_cast<core::SymbolMacroletEnvironment_O*>(client);
    GC<core::SymbolMacroletEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__FunctionContainerEnvironment_O:
{
     // stamp value 1227
    core::FunctionContainerEnvironment_O* obj_gc_safe = reinterpret_cast<core::FunctionContainerEnvironment_O*>(client);
    GC<core::FunctionContainerEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__UnwindProtectEnvironment_O:
{
     // stamp value 1231
    core::UnwindProtectEnvironment_O* obj_gc_safe = reinterpret_cast<core::UnwindProtectEnvironment_O*>(client);
    GC<core::UnwindProtectEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__MacroletEnvironment_O:
{
     // stamp value 1235
    core::MacroletEnvironment_O* obj_gc_safe = reinterpret_cast<core::MacroletEnvironment_O*>(client);
    GC<core::MacroletEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__RuntimeVisibleEnvironment_O:
{
     // stamp value 1239
    core::RuntimeVisibleEnvironment_O* obj_gc_safe = reinterpret_cast<core::RuntimeVisibleEnvironment_O*>(client);
    GC<core::RuntimeVisibleEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__TagbodyEnvironment_O:
{
     // stamp value 1243
    core::TagbodyEnvironment_O* obj_gc_safe = reinterpret_cast<core::TagbodyEnvironment_O*>(client);
    GC<core::TagbodyEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__BlockEnvironment_O:
{
     // stamp value 1247
    core::BlockEnvironment_O* obj_gc_safe = reinterpret_cast<core::BlockEnvironment_O*>(client);
    GC<core::BlockEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__FunctionValueEnvironment_O:
{
     // stamp value 1251
    core::FunctionValueEnvironment_O* obj_gc_safe = reinterpret_cast<core::FunctionValueEnvironment_O*>(client);
    GC<core::FunctionValueEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__ValueEnvironment_O:
{
     // stamp value 1255
    core::ValueEnvironment_O* obj_gc_safe = reinterpret_cast<core::ValueEnvironment_O*>(client);
    GC<core::ValueEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__ActivationFrame_O:
{
     // stamp value 1259
    core::ActivationFrame_O* obj_gc_safe = reinterpret_cast<core::ActivationFrame_O*>(client);
    GC<core::ActivationFrame_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__ValueFrame_O:
{
     // stamp value 1263
    core::ValueFrame_O* obj_gc_safe = reinterpret_cast<core::ValueFrame_O*>(client);
    GC<core::ValueFrame_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__FunctionFrame_O:
{
     // stamp value 1267
    core::FunctionFrame_O* obj_gc_safe = reinterpret_cast<core::FunctionFrame_O*>(client);
    GC<core::FunctionFrame_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__RandomState_O:
{
     // stamp value 1271
    core::RandomState_O* obj_gc_safe = reinterpret_cast<core::RandomState_O*>(client);
    GC<core::RandomState_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__HashTableBase_O:
{
     // stamp value 1275
    core::HashTableBase_O* obj_gc_safe = reinterpret_cast<core::HashTableBase_O*>(client);
    GC<core::HashTableBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__HashTable_O:
{
     // stamp value 1279
    core::HashTable_O* obj_gc_safe = reinterpret_cast<core::HashTable_O*>(client);
    GC<core::HashTable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__HashTableEqualp_O:
{
     // stamp value 1283
    core::HashTableEqualp_O* obj_gc_safe = reinterpret_cast<core::HashTableEqualp_O*>(client);
    GC<core::HashTableEqualp_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__HashTableEq_O:
{
     // stamp value 1287
    core::HashTableEq_O* obj_gc_safe = reinterpret_cast<core::HashTableEq_O*>(client);
    GC<core::HashTableEq_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__HashTableEqual_O:
{
     // stamp value 1291
    core::HashTableEqual_O* obj_gc_safe = reinterpret_cast<core::HashTableEqual_O*>(client);
    GC<core::HashTableEqual_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__HashTableEql_O:
{
     // stamp value 1295
    core::HashTableEql_O* obj_gc_safe = reinterpret_cast<core::HashTableEql_O*>(client);
    GC<core::HashTableEql_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__WeakKeyHashTable_O:
{
     // stamp value 1299
    core::WeakKeyHashTable_O* obj_gc_safe = reinterpret_cast<core::WeakKeyHashTable_O*>(client);
    GC<core::WeakKeyHashTable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__InsertPoint_O:
{
     // stamp value 1303
    llvmo::InsertPoint_O* obj_gc_safe = reinterpret_cast<llvmo::InsertPoint_O*>(client);
    GC<llvmo::InsertPoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Number_O:
{
     // stamp value 1307
    core::Number_O* obj_gc_safe = reinterpret_cast<core::Number_O*>(client);
    GC<core::Number_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Real_O:
{
     // stamp value 1311
    core::Real_O* obj_gc_safe = reinterpret_cast<core::Real_O*>(client);
    GC<core::Real_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Rational_O:
{
     // stamp value 1315
    core::Rational_O* obj_gc_safe = reinterpret_cast<core::Rational_O*>(client);
    GC<core::Rational_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Ratio_O:
{
     // stamp value 1319
    core::Ratio_O* obj_gc_safe = reinterpret_cast<core::Ratio_O*>(client);
    GC<core::Ratio_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Integer_O:
{
     // stamp value 1323
    core::Integer_O* obj_gc_safe = reinterpret_cast<core::Integer_O*>(client);
    GC<core::Integer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Bignum_O:
{
     // stamp value 1327
    core::Bignum_O* obj_gc_safe = reinterpret_cast<core::Bignum_O*>(client);
    GC<core::Bignum_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Fixnum_dummy_O:
{
     // stamp value 1331
    core::Fixnum_dummy_O* obj_gc_safe = reinterpret_cast<core::Fixnum_dummy_O*>(client);
    GC<core::Fixnum_dummy_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Float_O:
{
     // stamp value 1335
    core::Float_O* obj_gc_safe = reinterpret_cast<core::Float_O*>(client);
    GC<core::Float_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__DoubleFloat_O:
{
     // stamp value 1339
    core::DoubleFloat_O* obj_gc_safe = reinterpret_cast<core::DoubleFloat_O*>(client);
    GC<core::DoubleFloat_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__SingleFloat_dummy_O:
{
     // stamp value 1343
    core::SingleFloat_dummy_O* obj_gc_safe = reinterpret_cast<core::SingleFloat_dummy_O*>(client);
    GC<core::SingleFloat_dummy_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__LongFloat_O:
{
     // stamp value 1347
    core::LongFloat_O* obj_gc_safe = reinterpret_cast<core::LongFloat_O*>(client);
    GC<core::LongFloat_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__ShortFloat_O:
{
     // stamp value 1351
    core::ShortFloat_O* obj_gc_safe = reinterpret_cast<core::ShortFloat_O*>(client);
    GC<core::ShortFloat_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Complex_O:
{
     // stamp value 1355
    core::Complex_O* obj_gc_safe = reinterpret_cast<core::Complex_O*>(client);
    GC<core::Complex_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__SourcePosInfo_O:
{
     // stamp value 1359
    core::SourcePosInfo_O* obj_gc_safe = reinterpret_cast<core::SourcePosInfo_O*>(client);
    GC<core::SourcePosInfo_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__IntArray_O:
{
     // stamp value 1363
    core::IntArray_O* obj_gc_safe = reinterpret_cast<core::IntArray_O*>(client);
    GC<core::IntArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Record_O:
{
     // stamp value 1367
    core::Record_O* obj_gc_safe = reinterpret_cast<core::Record_O*>(client);
    GC<core::Record_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_clbind__ClassRegistry_O:
{
     // stamp value 1371
    clbind::ClassRegistry_O* obj_gc_safe = reinterpret_cast<clbind::ClassRegistry_O*>(client);
    GC<clbind::ClassRegistry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__ClassHolder_O:
{
     // stamp value 1375
    core::ClassHolder_O* obj_gc_safe = reinterpret_cast<core::ClassHolder_O*>(client);
    GC<core::ClassHolder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__WrappedPointer_O:
{
     // stamp value 1378
    core::WrappedPointer_O* obj_gc_safe = reinterpret_cast<core::WrappedPointer_O*>(client);
    GC<core::WrappedPointer_O>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_STAMP_core__FdSet_O:
{
     // stamp value 1383
    core::FdSet_O* obj_gc_safe = reinterpret_cast<core::FdSet_O*>(client);
    GC<core::FdSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__SymbolToEnumConverter_O:
{
     // stamp value 1387
    core::SymbolToEnumConverter_O* obj_gc_safe = reinterpret_cast<core::SymbolToEnumConverter_O*>(client);
    GC<core::SymbolToEnumConverter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__Attribute_O:
{
     // stamp value 1391
    llvmo::Attribute_O* obj_gc_safe = reinterpret_cast<llvmo::Attribute_O*>(client);
    GC<llvmo::Attribute_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__ObjectFile_O:
{
     // stamp value 1395
    core::ObjectFile_O* obj_gc_safe = reinterpret_cast<core::ObjectFile_O*>(client);
    GC<core::ObjectFile_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Function_O:
{
     // stamp value 1399
    core::Function_O* obj_gc_safe = reinterpret_cast<core::Function_O*>(client);
    GC<core::Function_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__FuncallableInstance_O:
{
     // stamp value 1401
    core::FuncallableInstance_O* obj_gc_safe = reinterpret_cast<core::FuncallableInstance_O*>(client);
    GC<core::FuncallableInstance_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Creator_O:
{
     // stamp value 1407
    core::Creator_O* obj_gc_safe = reinterpret_cast<core::Creator_O*>(client);
    GC<core::Creator_O>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_STAMP_core__FuncallableInstanceCreator_O:
{
     // stamp value 1411
    core::FuncallableInstanceCreator_O* obj_gc_safe = reinterpret_cast<core::FuncallableInstanceCreator_O*>(client);
    GC<core::FuncallableInstanceCreator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_clbind__ConstructorCreator_O:
{
     // stamp value 1415
    clbind::ConstructorCreator_O* obj_gc_safe = reinterpret_cast<clbind::ConstructorCreator_O*>(client);
    GC<clbind::ConstructorCreator_O>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_STAMP_clbind__DummyCreator_O:
{
     // stamp value 1419
    clbind::DummyCreator_O* obj_gc_safe = reinterpret_cast<clbind::DummyCreator_O*>(client);
    GC<clbind::DummyCreator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__InstanceCreator_O:
{
     // stamp value 1423
    core::InstanceCreator_O* obj_gc_safe = reinterpret_cast<core::InstanceCreator_O*>(client);
    GC<core::InstanceCreator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__ClassRepCreator_O:
{
     // stamp value 1427
    core::ClassRepCreator_O* obj_gc_safe = reinterpret_cast<core::ClassRepCreator_O*>(client);
    GC<core::ClassRepCreator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__DerivableCxxClassCreator_O:
{
     // stamp value 1431
    core::DerivableCxxClassCreator_O* obj_gc_safe = reinterpret_cast<core::DerivableCxxClassCreator_O*>(client);
    GC<core::DerivableCxxClassCreator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__StandardClassCreator_O:
{
     // stamp value 1435
    core::StandardClassCreator_O* obj_gc_safe = reinterpret_cast<core::StandardClassCreator_O*>(client);
    GC<core::StandardClassCreator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__SpecialForm_O:
{
     // stamp value 1439
    core::SpecialForm_O* obj_gc_safe = reinterpret_cast<core::SpecialForm_O*>(client);
    GC<core::SpecialForm_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Closure_O:
{
     // stamp value 1443
    core::Closure_O* obj_gc_safe = reinterpret_cast<core::Closure_O*>(client);
    GC<core::Closure_O>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_STAMP_core__SingleDispatchCxxEffectiveMethodFunction_O:
{
     // stamp value 1447
    core::SingleDispatchCxxEffectiveMethodFunction_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchCxxEffectiveMethodFunction_O*>(client);
    GC<core::SingleDispatchCxxEffectiveMethodFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__SingleDispatchMethodFunction_O:
{
     // stamp value 1451
    core::SingleDispatchMethodFunction_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchMethodFunction_O*>(client);
    GC<core::SingleDispatchMethodFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__CxxMethodFunction_O:
{
     // stamp value 1455
    core::CxxMethodFunction_O* obj_gc_safe = reinterpret_cast<core::CxxMethodFunction_O*>(client);
    GC<core::CxxMethodFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__BuiltinClosure_O:
{
     // stamp value 1459
    core::BuiltinClosure_O* obj_gc_safe = reinterpret_cast<core::BuiltinClosure_O*>(client);
    GC<core::BuiltinClosure_O>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_STAMP_core__TranslationFunctor_O:
{
     // stamp value 1463
    core::TranslationFunctor_O* obj_gc_safe = reinterpret_cast<core::TranslationFunctor_O*>(client);
    GC<core::TranslationFunctor_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__ClosureWithSlots_O:
{
     // stamp value 1467
    core::ClosureWithSlots_O* obj_gc_safe = reinterpret_cast<core::ClosureWithSlots_O*>(client);
    GC<core::ClosureWithSlots_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__SingleDispatchGenericFunctionClosure_O:
{
     // stamp value 1471
    core::SingleDispatchGenericFunctionClosure_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchGenericFunctionClosure_O*>(client);
    GC<core::SingleDispatchGenericFunctionClosure_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__SingleDispatchEffectiveMethodFunction_O:
{
     // stamp value 1475
    core::SingleDispatchEffectiveMethodFunction_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchEffectiveMethodFunction_O*>(client);
    GC<core::SingleDispatchEffectiveMethodFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__WeakPointer_O:
{
     // stamp value 1479
    core::WeakPointer_O* obj_gc_safe = reinterpret_cast<core::WeakPointer_O*>(client);
    GC<core::WeakPointer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DebugLoc_O:
{
     // stamp value 1483
    llvmo::DebugLoc_O* obj_gc_safe = reinterpret_cast<llvmo::DebugLoc_O*>(client);
    GC<llvmo::DebugLoc_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Array_O:
{
     // stamp value 1487
    core::Array_O* obj_gc_safe = reinterpret_cast<core::Array_O*>(client);
    GC<core::Array_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_O:
{
     // stamp value 1491
    core::MDArray_O* obj_gc_safe = reinterpret_cast<core::MDArray_O*>(client);
    GC<core::MDArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_int16_t_O_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1495
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_int16_t_O,core::SimpleMDArray_int16_t_O,core::SimpleVector_int16_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_int16_t_O:
{
     // stamp value 1499
    core::MDArray_int16_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int16_t_O*>(client);
    GC<core::MDArray_int16_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_int8_t_O_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1503
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_int8_t_O,core::SimpleMDArray_int8_t_O,core::SimpleVector_int8_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_int8_t_O:
{
     // stamp value 1507
    core::MDArray_int8_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int8_t_O*>(client);
    GC<core::MDArray_int8_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_int32_t_O_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1511
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_int32_t_O,core::SimpleMDArray_int32_t_O,core::SimpleVector_int32_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_int32_t_O:
{
     // stamp value 1515
    core::MDArray_int32_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int32_t_O*>(client);
    GC<core::MDArray_int32_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_byte4_t_O_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1519
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_byte4_t_O,core::SimpleMDArray_byte4_t_O,core::SimpleVector_byte4_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_byte4_t_O:
{
     // stamp value 1523
    core::MDArray_byte4_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte4_t_O*>(client);
    GC<core::MDArray_byte4_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_float_O_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__MDArray_O_:
{
     // do nothing stamp value 1527
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_float_O,core::SimpleMDArray_float_O,core::SimpleVector_float_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_float_O:
{
     // stamp value 1531
    core::MDArray_float_O* obj_gc_safe = reinterpret_cast<core::MDArray_float_O*>(client);
    GC<core::MDArray_float_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_size_t_O_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1535
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_size_t_O,core::SimpleMDArray_size_t_O,core::SimpleVector_size_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_size_t_O:
{
     // stamp value 1539
    core::MDArray_size_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_size_t_O*>(client);
    GC<core::MDArray_size_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_byte8_t_O_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1543
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_byte8_t_O,core::SimpleMDArray_byte8_t_O,core::SimpleVector_byte8_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_byte8_t_O:
{
     // stamp value 1547
    core::MDArray_byte8_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte8_t_O*>(client);
    GC<core::MDArray_byte8_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_int2_t_O_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1551
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_int2_t_O,core::SimpleMDArray_int2_t_O,core::SimpleVector_int2_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_int2_t_O:
{
     // stamp value 1555
    core::MDArray_int2_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int2_t_O*>(client);
    GC<core::MDArray_int2_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_fixnum_O_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__MDArray_O_:
{
     // do nothing stamp value 1559
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_fixnum_O,core::SimpleMDArray_fixnum_O,core::SimpleVector_fixnum_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_fixnum_O:
{
     // stamp value 1563
    core::MDArray_fixnum_O* obj_gc_safe = reinterpret_cast<core::MDArray_fixnum_O*>(client);
    GC<core::MDArray_fixnum_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArrayBaseChar_O_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__MDArray_O_:
{
     // do nothing stamp value 1567
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArrayBaseChar_O,core::SimpleMDArrayBaseChar_O,core::SimpleBaseString_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArrayBaseChar_O:
{
     // stamp value 1571
    core::MDArrayBaseChar_O* obj_gc_safe = reinterpret_cast<core::MDArrayBaseChar_O*>(client);
    GC<core::MDArrayBaseChar_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_byte64_t_O_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1575
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_byte64_t_O,core::SimpleMDArray_byte64_t_O,core::SimpleVector_byte64_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_byte64_t_O:
{
     // stamp value 1579
    core::MDArray_byte64_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte64_t_O*>(client);
    GC<core::MDArray_byte64_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_geom__MDArrayCoordinate_O_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__MDArray_O_:
{
     // do nothing stamp value 1583
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<geom::MDArrayCoordinate_O,geom::SimpleMDArrayCoordinate_O,geom::SimpleVectorCoordinate_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_geom__MDArrayCoordinate_O:
{
     // stamp value 1587
    geom::MDArrayCoordinate_O* obj_gc_safe = reinterpret_cast<geom::MDArrayCoordinate_O*>(client);
    GC<geom::MDArrayCoordinate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArrayT_O_core__SimpleMDArrayT_O_core__SimpleVector_O_core__MDArray_O_:
{
     // do nothing stamp value 1591
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArrayT_O,core::SimpleMDArrayT_O,core::SimpleVector_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArrayT_O:
{
     // stamp value 1595
    core::MDArrayT_O* obj_gc_safe = reinterpret_cast<core::MDArrayT_O*>(client);
    GC<core::MDArrayT_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_O:
{
     // stamp value 1599
    core::SimpleMDArray_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_O*>(client);
    GC<core::SimpleMDArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1603
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_int8_t_O,core::SimpleVector_int8_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_int8_t_O:
{
     // stamp value 1607
    core::SimpleMDArray_int8_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int8_t_O*>(client);
    GC<core::SimpleMDArray_int8_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1611
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_byte32_t_O,core::SimpleVector_byte32_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_byte32_t_O:
{
     // stamp value 1615
    core::SimpleMDArray_byte32_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte32_t_O*>(client);
    GC<core::SimpleMDArray_byte32_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1619
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_int2_t_O,core::SimpleVector_int2_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_int2_t_O:
{
     // stamp value 1623
    core::SimpleMDArray_int2_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int2_t_O*>(client);
    GC<core::SimpleMDArray_int2_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1627
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_byte4_t_O,core::SimpleVector_byte4_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_byte4_t_O:
{
     // stamp value 1631
    core::SimpleMDArray_byte4_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte4_t_O*>(client);
    GC<core::SimpleMDArray_byte4_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1635
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_int32_t_O,core::SimpleVector_int32_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_int32_t_O:
{
     // stamp value 1639
    core::SimpleMDArray_int32_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int32_t_O*>(client);
    GC<core::SimpleMDArray_int32_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1643
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_float_O,core::SimpleVector_float_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_float_O:
{
     // stamp value 1647
    core::SimpleMDArray_float_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_float_O*>(client);
    GC<core::SimpleMDArray_float_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1651
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_int16_t_O,core::SimpleVector_int16_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_int16_t_O:
{
     // stamp value 1655
    core::SimpleMDArray_int16_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int16_t_O*>(client);
    GC<core::SimpleMDArray_int16_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1659
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_size_t_O,core::SimpleVector_size_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_size_t_O:
{
     // stamp value 1663
    core::SimpleMDArray_size_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_size_t_O*>(client);
    GC<core::SimpleMDArray_size_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1667
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArrayCharacter_O,core::SimpleCharacterString_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArrayCharacter_O:
{
     // stamp value 1671
    core::SimpleMDArrayCharacter_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArrayCharacter_O*>(client);
    GC<core::SimpleMDArrayCharacter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1675
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_byte2_t_O,core::SimpleVector_byte2_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_byte2_t_O:
{
     // stamp value 1679
    core::SimpleMDArray_byte2_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte2_t_O*>(client);
    GC<core::SimpleMDArray_byte2_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1683
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_byte16_t_O,core::SimpleVector_byte16_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_byte16_t_O:
{
     // stamp value 1687
    core::SimpleMDArray_byte16_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte16_t_O*>(client);
    GC<core::SimpleMDArray_byte16_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1691
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArrayBaseChar_O,core::SimpleBaseString_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArrayBaseChar_O:
{
     // stamp value 1695
    core::SimpleMDArrayBaseChar_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArrayBaseChar_O*>(client);
    GC<core::SimpleMDArrayBaseChar_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1699
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_byte64_t_O,core::SimpleVector_byte64_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_byte64_t_O:
{
     // stamp value 1703
    core::SimpleMDArray_byte64_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte64_t_O*>(client);
    GC<core::SimpleMDArray_byte64_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1707
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_double_O,core::SimpleVector_double_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_double_O:
{
     // stamp value 1711
    core::SimpleMDArray_double_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_double_O*>(client);
    GC<core::SimpleMDArray_double_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArrayT_O_core__SimpleVector_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1715
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArrayT_O,core::SimpleVector_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArrayT_O:
{
     // stamp value 1719
    core::SimpleMDArrayT_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArrayT_O*>(client);
    GC<core::SimpleMDArrayT_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1723
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_int4_t_O,core::SimpleVector_int4_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_int4_t_O:
{
     // stamp value 1727
    core::SimpleMDArray_int4_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int4_t_O*>(client);
    GC<core::SimpleMDArray_int4_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1731
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<geom::SimpleMDArrayCoordinate_O,geom::SimpleVectorCoordinate_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_geom__SimpleMDArrayCoordinate_O:
{
     // stamp value 1735
    geom::SimpleMDArrayCoordinate_O* obj_gc_safe = reinterpret_cast<geom::SimpleMDArrayCoordinate_O*>(client);
    GC<geom::SimpleMDArrayCoordinate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1739
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_fixnum_O,core::SimpleVector_fixnum_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_fixnum_O:
{
     // stamp value 1743
    core::SimpleMDArray_fixnum_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_fixnum_O*>(client);
    GC<core::SimpleMDArray_fixnum_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1747
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArrayBit_O,core::SimpleBitVector_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArrayBit_O:
{
     // stamp value 1751
    core::SimpleMDArrayBit_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArrayBit_O*>(client);
    GC<core::SimpleMDArrayBit_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1755
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_byte8_t_O,core::SimpleVector_byte8_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_byte8_t_O:
{
     // stamp value 1759
    core::SimpleMDArray_byte8_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte8_t_O*>(client);
    GC<core::SimpleMDArray_byte8_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1763
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_int64_t_O,core::SimpleVector_int64_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_int64_t_O:
{
     // stamp value 1767
    core::SimpleMDArray_int64_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int64_t_O*>(client);
    GC<core::SimpleMDArray_int64_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_O:
{
     // stamp value 1771
    core::ComplexVector_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_O*>(client);
    GC<core::ComplexVector_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_double_O_core__SimpleVector_double_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1775
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_double_O,core::SimpleVector_double_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_double_O:
{
     // stamp value 1779
    core::ComplexVector_double_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_double_O*>(client);
    GC<core::ComplexVector_double_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_int8_t_O_core__SimpleVector_int8_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1783
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_int8_t_O,core::SimpleVector_int8_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_int8_t_O:
{
     // stamp value 1787
    core::ComplexVector_int8_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int8_t_O*>(client);
    GC<core::ComplexVector_int8_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_T_O_core__SimpleVector_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1791
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_T_O,core::SimpleVector_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_T_O:
{
     // stamp value 1795
    core::ComplexVector_T_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_T_O*>(client);
    GC<core::ComplexVector_T_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_int32_t_O_core__SimpleVector_int32_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1799
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_int32_t_O,core::SimpleVector_int32_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_int32_t_O:
{
     // stamp value 1803
    core::ComplexVector_int32_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int32_t_O*>(client);
    GC<core::ComplexVector_int32_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_byte16_t_O_core__SimpleVector_byte16_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1807
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_byte16_t_O,core::SimpleVector_byte16_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_byte16_t_O:
{
     // stamp value 1811
    core::ComplexVector_byte16_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte16_t_O*>(client);
    GC<core::ComplexVector_byte16_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_geom__ComplexVectorCoordinate_O_geom__SimpleVectorCoordinate_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1815
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<geom::ComplexVectorCoordinate_O,geom::SimpleVectorCoordinate_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_geom__ComplexVectorCoordinate_O:
{
     // stamp value 1819
    geom::ComplexVectorCoordinate_O* obj_gc_safe = reinterpret_cast<geom::ComplexVectorCoordinate_O*>(client);
    GC<geom::ComplexVectorCoordinate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_byte4_t_O_core__SimpleVector_byte4_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1823
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_byte4_t_O,core::SimpleVector_byte4_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_byte4_t_O:
{
     // stamp value 1827
    core::ComplexVector_byte4_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte4_t_O*>(client);
    GC<core::ComplexVector_byte4_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_byte64_t_O_core__SimpleVector_byte64_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1831
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_byte64_t_O,core::SimpleVector_byte64_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_byte64_t_O:
{
     // stamp value 1835
    core::ComplexVector_byte64_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte64_t_O*>(client);
    GC<core::ComplexVector_byte64_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_int2_t_O_core__SimpleVector_int2_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1839
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_int2_t_O,core::SimpleVector_int2_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_int2_t_O:
{
     // stamp value 1843
    core::ComplexVector_int2_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int2_t_O*>(client);
    GC<core::ComplexVector_int2_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_float_O_core__SimpleVector_float_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1847
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_float_O,core::SimpleVector_float_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_float_O:
{
     // stamp value 1851
    core::ComplexVector_float_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_float_O*>(client);
    GC<core::ComplexVector_float_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_int16_t_O_core__SimpleVector_int16_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1855
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_int16_t_O,core::SimpleVector_int16_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_int16_t_O:
{
     // stamp value 1859
    core::ComplexVector_int16_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int16_t_O*>(client);
    GC<core::ComplexVector_int16_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_int4_t_O_core__SimpleVector_int4_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1863
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_int4_t_O,core::SimpleVector_int4_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_int4_t_O:
{
     // stamp value 1867
    core::ComplexVector_int4_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int4_t_O*>(client);
    GC<core::ComplexVector_int4_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_size_t_O_core__SimpleVector_size_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1871
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_size_t_O,core::SimpleVector_size_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_size_t_O:
{
     // stamp value 1875
    core::ComplexVector_size_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_size_t_O*>(client);
    GC<core::ComplexVector_size_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_byte2_t_O_core__SimpleVector_byte2_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1879
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_byte2_t_O,core::SimpleVector_byte2_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_byte2_t_O:
{
     // stamp value 1883
    core::ComplexVector_byte2_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte2_t_O*>(client);
    GC<core::ComplexVector_byte2_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_byte8_t_O_core__SimpleVector_byte8_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1887
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_byte8_t_O,core::SimpleVector_byte8_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_byte8_t_O:
{
     // stamp value 1891
    core::ComplexVector_byte8_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte8_t_O*>(client);
    GC<core::ComplexVector_byte8_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_byte32_t_O_core__SimpleVector_byte32_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1895
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_byte32_t_O,core::SimpleVector_byte32_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_byte32_t_O:
{
     // stamp value 1899
    core::ComplexVector_byte32_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte32_t_O*>(client);
    GC<core::ComplexVector_byte32_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__BitVectorNs_O_core__SimpleBitVector_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1903
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::BitVectorNs_O,core::SimpleBitVector_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__BitVectorNs_O:
{
     // stamp value 1907
    core::BitVectorNs_O* obj_gc_safe = reinterpret_cast<core::BitVectorNs_O*>(client);
    GC<core::BitVectorNs_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__StrNs_O:
{
     // stamp value 1911
    core::StrNs_O* obj_gc_safe = reinterpret_cast<core::StrNs_O*>(client);
    GC<core::StrNs_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__Str8Ns_O_core__SimpleBaseString_O_core__StrNs_O_:
{
     // do nothing stamp value 1915
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::Str8Ns_O,core::SimpleBaseString_O,core::StrNs_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__Str8Ns_O:
{
     // stamp value 1919
    core::Str8Ns_O* obj_gc_safe = reinterpret_cast<core::Str8Ns_O*>(client);
    GC<core::Str8Ns_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__StrWNs_O_core__SimpleCharacterString_O_core__StrNs_O_:
{
     // do nothing stamp value 1923
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::StrWNs_O,core::SimpleCharacterString_O,core::StrNs_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__StrWNs_O:
{
     // stamp value 1927
    core::StrWNs_O* obj_gc_safe = reinterpret_cast<core::StrWNs_O*>(client);
    GC<core::StrWNs_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_fixnum_O_core__SimpleVector_fixnum_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1931
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_fixnum_O,core::SimpleVector_fixnum_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_fixnum_O:
{
     // stamp value 1935
    core::ComplexVector_fixnum_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_fixnum_O*>(client);
    GC<core::ComplexVector_fixnum_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_int64_t_O_core__SimpleVector_int64_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1939
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_int64_t_O,core::SimpleVector_int64_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_int64_t_O:
{
     // stamp value 1943
    core::ComplexVector_int64_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int64_t_O*>(client);
    GC<core::ComplexVector_int64_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_int64_t_O_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1947
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_int64_t_O,core::SimpleMDArray_int64_t_O,core::SimpleVector_int64_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_int64_t_O:
{
     // stamp value 1951
    core::MDArray_int64_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int64_t_O*>(client);
    GC<core::MDArray_int64_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_byte32_t_O_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1955
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_byte32_t_O,core::SimpleMDArray_byte32_t_O,core::SimpleVector_byte32_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_byte32_t_O:
{
     // stamp value 1959
    core::MDArray_byte32_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte32_t_O*>(client);
    GC<core::MDArray_byte32_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_byte2_t_O_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1963
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_byte2_t_O,core::SimpleMDArray_byte2_t_O,core::SimpleVector_byte2_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_byte2_t_O:
{
     // stamp value 1967
    core::MDArray_byte2_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte2_t_O*>(client);
    GC<core::MDArray_byte2_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArrayCharacter_O_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__MDArray_O_:
{
     // do nothing stamp value 1971
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArrayCharacter_O,core::SimpleMDArrayCharacter_O,core::SimpleCharacterString_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArrayCharacter_O:
{
     // stamp value 1975
    core::MDArrayCharacter_O* obj_gc_safe = reinterpret_cast<core::MDArrayCharacter_O*>(client);
    GC<core::MDArrayCharacter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArrayBit_O_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__MDArray_O_:
{
     // do nothing stamp value 1979
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArrayBit_O,core::SimpleMDArrayBit_O,core::SimpleBitVector_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArrayBit_O:
{
     // stamp value 1983
    core::MDArrayBit_O* obj_gc_safe = reinterpret_cast<core::MDArrayBit_O*>(client);
    GC<core::MDArrayBit_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_byte16_t_O_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1987
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_byte16_t_O,core::SimpleMDArray_byte16_t_O,core::SimpleVector_byte16_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_byte16_t_O:
{
     // stamp value 1991
    core::MDArray_byte16_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte16_t_O*>(client);
    GC<core::MDArray_byte16_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_int4_t_O_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1995
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_int4_t_O,core::SimpleMDArray_int4_t_O,core::SimpleVector_int4_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_int4_t_O:
{
     // stamp value 1999
    core::MDArray_int4_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int4_t_O*>(client);
    GC<core::MDArray_int4_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_double_O_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__MDArray_O_:
{
     // do nothing stamp value 2003
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_double_O,core::SimpleMDArray_double_O,core::SimpleVector_double_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__MDArray_double_O:
{
     // stamp value 2007
    core::MDArray_double_O* obj_gc_safe = reinterpret_cast<core::MDArray_double_O*>(client);
    GC<core::MDArray_double_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__AbstractSimpleVector_O:
{
     // stamp value 2011
    core::AbstractSimpleVector_O* obj_gc_safe = reinterpret_cast<core::AbstractSimpleVector_O*>(client);
    GC<core::AbstractSimpleVector_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_byte32_t_O_unsigned_int_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2015
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_byte32_t_O,unsigned int,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_byte32_t_O:
{
     // stamp value 2019
    core::SimpleVector_byte32_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte32_t_O*>(client);
    GC<core::SimpleVector_byte32_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_size_t_O_unsigned_long_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2023
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_size_t_O,unsigned long,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_size_t_O:
{
     // stamp value 2027
    core::SimpleVector_size_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_size_t_O*>(client);
    GC<core::SimpleVector_size_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_double_O_double_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2031
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_double_O,double,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_double_O:
{
     // stamp value 2035
    core::SimpleVector_double_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_double_O*>(client);
    GC<core::SimpleVector_double_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_int2_t_O_2_1_:
{
     // do nothing stamp value 2039
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleBitUnitVector<core::SimpleVector_int2_t_O,2,1>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_int2_t_O:
{
     // stamp value 2043
    core::SimpleVector_int2_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int2_t_O*>(client);
    GC<core::SimpleVector_int2_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_int64_t_O_long_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2047
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_int64_t_O,long,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_int64_t_O:
{
     // stamp value 2051
    core::SimpleVector_int64_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int64_t_O*>(client);
    GC<core::SimpleVector_int64_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_int8_t_O_signed_char_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2055
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_int8_t_O,signed char,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_int8_t_O:
{
     // stamp value 2059
    core::SimpleVector_int8_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int8_t_O*>(client);
    GC<core::SimpleVector_int8_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_byte4_t_O_4_0_:
{
     // do nothing stamp value 2063
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleBitUnitVector<core::SimpleVector_byte4_t_O,4,0>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_byte4_t_O:
{
     // stamp value 2067
    core::SimpleVector_byte4_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte4_t_O*>(client);
    GC<core::SimpleVector_byte4_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_geom__SimpleVectorCoordinate_O_Vector3_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2071
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<geom::SimpleVectorCoordinate_O,Vector3,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_geom__SimpleVectorCoordinate_O:
{
     // stamp value 2075
    geom::SimpleVectorCoordinate_O* obj_gc_safe = reinterpret_cast<geom::SimpleVectorCoordinate_O*>(client);
    GC<geom::SimpleVectorCoordinate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleString_O:
{
     // stamp value 2079
    core::SimpleString_O* obj_gc_safe = reinterpret_cast<core::SimpleString_O*>(client);
    GC<core::SimpleString_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleBaseString_O_unsigned_char_core__SimpleString_O_:
{
     // do nothing stamp value 2083
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleBaseString_O,unsigned char,core::SimpleString_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleBaseString_O:
{
     // stamp value 2087
    core::SimpleBaseString_O* obj_gc_safe = reinterpret_cast<core::SimpleBaseString_O*>(client);
    GC<core::SimpleBaseString_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleCharacterString_O_int_core__SimpleString_O_:
{
     // do nothing stamp value 2091
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleCharacterString_O,int,core::SimpleString_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleCharacterString_O:
{
     // stamp value 2095
    core::SimpleCharacterString_O* obj_gc_safe = reinterpret_cast<core::SimpleCharacterString_O*>(client);
    GC<core::SimpleCharacterString_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_int16_t_O_short_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2099
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_int16_t_O,short,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_int16_t_O:
{
     // stamp value 2103
    core::SimpleVector_int16_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int16_t_O*>(client);
    GC<core::SimpleVector_int16_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_byte16_t_O_unsigned_short_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2107
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_byte16_t_O,unsigned short,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_byte16_t_O:
{
     // stamp value 2111
    core::SimpleVector_byte16_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte16_t_O*>(client);
    GC<core::SimpleVector_byte16_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleBitUnitVector_core__SimpleBitVector_O_1_0_:
{
     // do nothing stamp value 2115
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleBitUnitVector<core::SimpleBitVector_O,1,0>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleBitVector_O:
{
     // stamp value 2119
    core::SimpleBitVector_O* obj_gc_safe = reinterpret_cast<core::SimpleBitVector_O*>(client);
    GC<core::SimpleBitVector_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_int4_t_O_4_1_:
{
     // do nothing stamp value 2123
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleBitUnitVector<core::SimpleVector_int4_t_O,4,1>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_int4_t_O:
{
     // stamp value 2127
    core::SimpleVector_int4_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int4_t_O*>(client);
    GC<core::SimpleVector_int4_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_byte64_t_O_unsigned_long_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2131
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_byte64_t_O,unsigned long,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_byte64_t_O:
{
     // stamp value 2135
    core::SimpleVector_byte64_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte64_t_O*>(client);
    GC<core::SimpleVector_byte64_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_fixnum_O_long_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2139
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_fixnum_O,long,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_fixnum_O:
{
     // stamp value 2143
    core::SimpleVector_fixnum_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_fixnum_O*>(client);
    GC<core::SimpleVector_fixnum_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_float_O_float_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2147
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_float_O,float,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_float_O:
{
     // stamp value 2151
    core::SimpleVector_float_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_float_O*>(client);
    GC<core::SimpleVector_float_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_O_gctools__smart_ptr_core__T_O__core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2155
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_O,gctools::smart_ptr<core::T_O>,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_O:
{
     // stamp value 2159
    core::SimpleVector_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_O*>(client);
    GC<core::SimpleVector_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_byte8_t_O_unsigned_char_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2163
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_byte8_t_O,unsigned char,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_byte8_t_O:
{
     // stamp value 2167
    core::SimpleVector_byte8_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte8_t_O*>(client);
    GC<core::SimpleVector_byte8_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_byte2_t_O_2_0_:
{
     // do nothing stamp value 2171
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleBitUnitVector<core::SimpleVector_byte2_t_O,2,0>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_byte2_t_O:
{
     // stamp value 2175
    core::SimpleVector_byte2_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte2_t_O*>(client);
    GC<core::SimpleVector_byte2_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_int32_t_O_int_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2179
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_int32_t_O,int,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_int32_t_O:
{
     // stamp value 2183
    core::SimpleVector_int32_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int32_t_O*>(client);
    GC<core::SimpleVector_int32_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Character_dummy_O:
{
     // stamp value 2187
    core::Character_dummy_O* obj_gc_safe = reinterpret_cast<core::Character_dummy_O*>(client);
    GC<core::Character_dummy_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DataLayout_O:
{
     // stamp value 2191
    llvmo::DataLayout_O* obj_gc_safe = reinterpret_cast<llvmo::DataLayout_O*>(client);
    GC<llvmo::DataLayout_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__LoadTimeValues_O:
{
     // stamp value 2195
    core::LoadTimeValues_O* obj_gc_safe = reinterpret_cast<core::LoadTimeValues_O*>(client);
    GC<core::LoadTimeValues_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Readtable_O:
{
     // stamp value 2199
    core::Readtable_O* obj_gc_safe = reinterpret_cast<core::Readtable_O*>(client);
    GC<core::Readtable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__PosixTime_O:
{
     // stamp value 2203
    core::PosixTime_O* obj_gc_safe = reinterpret_cast<core::PosixTime_O*>(client);
    GC<core::PosixTime_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__StructLayout_O:
{
     // stamp value 2207
    llvmo::StructLayout_O* obj_gc_safe = reinterpret_cast<llvmo::StructLayout_O*>(client);
    GC<llvmo::StructLayout_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__ExternalObject_O:
{
     // stamp value 2211
    core::ExternalObject_O* obj_gc_safe = reinterpret_cast<core::ExternalObject_O*>(client);
    GC<core::ExternalObject_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__Pass_O:
{
     // stamp value 2215
    llvmo::Pass_O* obj_gc_safe = reinterpret_cast<llvmo::Pass_O*>(client);
    GC<llvmo::Pass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ModulePass_O:
{
     // stamp value 2219
    llvmo::ModulePass_O* obj_gc_safe = reinterpret_cast<llvmo::ModulePass_O*>(client);
    GC<llvmo::ModulePass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ImmutablePass_O:
{
     // stamp value 2223
    llvmo::ImmutablePass_O* obj_gc_safe = reinterpret_cast<llvmo::ImmutablePass_O*>(client);
    GC<llvmo::ImmutablePass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__TargetLibraryInfoWrapperPass_O:
{
     // stamp value 2227
    llvmo::TargetLibraryInfoWrapperPass_O* obj_gc_safe = reinterpret_cast<llvmo::TargetLibraryInfoWrapperPass_O*>(client);
    GC<llvmo::TargetLibraryInfoWrapperPass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__FunctionPass_O:
{
     // stamp value 2231
    llvmo::FunctionPass_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionPass_O*>(client);
    GC<llvmo::FunctionPass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__MCSubtargetInfo_O:
{
     // stamp value 2235
    llvmo::MCSubtargetInfo_O* obj_gc_safe = reinterpret_cast<llvmo::MCSubtargetInfo_O*>(client);
    GC<llvmo::MCSubtargetInfo_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__TargetSubtargetInfo_O:
{
     // stamp value 2239
    llvmo::TargetSubtargetInfo_O* obj_gc_safe = reinterpret_cast<llvmo::TargetSubtargetInfo_O*>(client);
    GC<llvmo::TargetSubtargetInfo_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__JITDylib_O:
{
     // stamp value 2243
    llvmo::JITDylib_O* obj_gc_safe = reinterpret_cast<llvmo::JITDylib_O*>(client);
    GC<llvmo::JITDylib_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__IRBuilderBase_O:
{
     // stamp value 2247
    llvmo::IRBuilderBase_O* obj_gc_safe = reinterpret_cast<llvmo::IRBuilderBase_O*>(client);
    GC<llvmo::IRBuilderBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__IRBuilder_O:
{
     // stamp value 2251
    llvmo::IRBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::IRBuilder_O*>(client);
    GC<llvmo::IRBuilder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__APInt_O:
{
     // stamp value 2255
    llvmo::APInt_O* obj_gc_safe = reinterpret_cast<llvmo::APInt_O*>(client);
    GC<llvmo::APInt_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DIBuilder_O:
{
     // stamp value 2259
    llvmo::DIBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::DIBuilder_O*>(client);
    GC<llvmo::DIBuilder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__EngineBuilder_O:
{
     // stamp value 2263
    llvmo::EngineBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::EngineBuilder_O*>(client);
    GC<llvmo::EngineBuilder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__PassManagerBase_O:
{
     // stamp value 2267
    llvmo::PassManagerBase_O* obj_gc_safe = reinterpret_cast<llvmo::PassManagerBase_O*>(client);
    GC<llvmo::PassManagerBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__PassManager_O:
{
     // stamp value 2271
    llvmo::PassManager_O* obj_gc_safe = reinterpret_cast<llvmo::PassManager_O*>(client);
    GC<llvmo::PassManager_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__FunctionPassManager_O:
{
     // stamp value 2275
    llvmo::FunctionPassManager_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionPassManager_O*>(client);
    GC<llvmo::FunctionPassManager_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__Value_O:
{
     // stamp value 2279
    llvmo::Value_O* obj_gc_safe = reinterpret_cast<llvmo::Value_O*>(client);
    GC<llvmo::Value_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__User_O:
{
     // stamp value 2283
    llvmo::User_O* obj_gc_safe = reinterpret_cast<llvmo::User_O*>(client);
    GC<llvmo::User_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__Instruction_O:
{
     // stamp value 2287
    llvmo::Instruction_O* obj_gc_safe = reinterpret_cast<llvmo::Instruction_O*>(client);
    GC<llvmo::Instruction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__StoreInst_O:
{
     // stamp value 2291
    llvmo::StoreInst_O* obj_gc_safe = reinterpret_cast<llvmo::StoreInst_O*>(client);
    GC<llvmo::StoreInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__UnreachableInst_O:
{
     // stamp value 2295
    llvmo::UnreachableInst_O* obj_gc_safe = reinterpret_cast<llvmo::UnreachableInst_O*>(client);
    GC<llvmo::UnreachableInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ResumeInst_O:
{
     // stamp value 2299
    llvmo::ResumeInst_O* obj_gc_safe = reinterpret_cast<llvmo::ResumeInst_O*>(client);
    GC<llvmo::ResumeInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__AtomicCmpXchgInst_O:
{
     // stamp value 2303
    llvmo::AtomicCmpXchgInst_O* obj_gc_safe = reinterpret_cast<llvmo::AtomicCmpXchgInst_O*>(client);
    GC<llvmo::AtomicCmpXchgInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__FenceInst_O:
{
     // stamp value 2307
    llvmo::FenceInst_O* obj_gc_safe = reinterpret_cast<llvmo::FenceInst_O*>(client);
    GC<llvmo::FenceInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__CallBase_O:
{
     // stamp value 2311
    llvmo::CallBase_O* obj_gc_safe = reinterpret_cast<llvmo::CallBase_O*>(client);
    GC<llvmo::CallBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__CallInst_O:
{
     // stamp value 2315
    llvmo::CallInst_O* obj_gc_safe = reinterpret_cast<llvmo::CallInst_O*>(client);
    GC<llvmo::CallInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__InvokeInst_O:
{
     // stamp value 2319
    llvmo::InvokeInst_O* obj_gc_safe = reinterpret_cast<llvmo::InvokeInst_O*>(client);
    GC<llvmo::InvokeInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__BranchInst_O:
{
     // stamp value 2323
    llvmo::BranchInst_O* obj_gc_safe = reinterpret_cast<llvmo::BranchInst_O*>(client);
    GC<llvmo::BranchInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__UnaryInstruction_O:
{
     // stamp value 2327
    llvmo::UnaryInstruction_O* obj_gc_safe = reinterpret_cast<llvmo::UnaryInstruction_O*>(client);
    GC<llvmo::UnaryInstruction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__VAArgInst_O:
{
     // stamp value 2331
    llvmo::VAArgInst_O* obj_gc_safe = reinterpret_cast<llvmo::VAArgInst_O*>(client);
    GC<llvmo::VAArgInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__AllocaInst_O:
{
     // stamp value 2335
    llvmo::AllocaInst_O* obj_gc_safe = reinterpret_cast<llvmo::AllocaInst_O*>(client);
    GC<llvmo::AllocaInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__LoadInst_O:
{
     // stamp value 2339
    llvmo::LoadInst_O* obj_gc_safe = reinterpret_cast<llvmo::LoadInst_O*>(client);
    GC<llvmo::LoadInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__SwitchInst_O:
{
     // stamp value 2343
    llvmo::SwitchInst_O* obj_gc_safe = reinterpret_cast<llvmo::SwitchInst_O*>(client);
    GC<llvmo::SwitchInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__AtomicRMWInst_O:
{
     // stamp value 2347
    llvmo::AtomicRMWInst_O* obj_gc_safe = reinterpret_cast<llvmo::AtomicRMWInst_O*>(client);
    GC<llvmo::AtomicRMWInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__LandingPadInst_O:
{
     // stamp value 2351
    llvmo::LandingPadInst_O* obj_gc_safe = reinterpret_cast<llvmo::LandingPadInst_O*>(client);
    GC<llvmo::LandingPadInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ReturnInst_O:
{
     // stamp value 2355
    llvmo::ReturnInst_O* obj_gc_safe = reinterpret_cast<llvmo::ReturnInst_O*>(client);
    GC<llvmo::ReturnInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__PHINode_O:
{
     // stamp value 2359
    llvmo::PHINode_O* obj_gc_safe = reinterpret_cast<llvmo::PHINode_O*>(client);
    GC<llvmo::PHINode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__IndirectBrInst_O:
{
     // stamp value 2363
    llvmo::IndirectBrInst_O* obj_gc_safe = reinterpret_cast<llvmo::IndirectBrInst_O*>(client);
    GC<llvmo::IndirectBrInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__Constant_O:
{
     // stamp value 2367
    llvmo::Constant_O* obj_gc_safe = reinterpret_cast<llvmo::Constant_O*>(client);
    GC<llvmo::Constant_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__GlobalValue_O:
{
     // stamp value 2371
    llvmo::GlobalValue_O* obj_gc_safe = reinterpret_cast<llvmo::GlobalValue_O*>(client);
    GC<llvmo::GlobalValue_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__Function_O:
{
     // stamp value 2375
    llvmo::Function_O* obj_gc_safe = reinterpret_cast<llvmo::Function_O*>(client);
    GC<llvmo::Function_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__GlobalVariable_O:
{
     // stamp value 2379
    llvmo::GlobalVariable_O* obj_gc_safe = reinterpret_cast<llvmo::GlobalVariable_O*>(client);
    GC<llvmo::GlobalVariable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__BlockAddress_O:
{
     // stamp value 2383
    llvmo::BlockAddress_O* obj_gc_safe = reinterpret_cast<llvmo::BlockAddress_O*>(client);
    GC<llvmo::BlockAddress_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ConstantStruct_O:
{
     // stamp value 2387
    llvmo::ConstantStruct_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantStruct_O*>(client);
    GC<llvmo::ConstantStruct_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ConstantInt_O:
{
     // stamp value 2391
    llvmo::ConstantInt_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantInt_O*>(client);
    GC<llvmo::ConstantInt_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ConstantFP_O:
{
     // stamp value 2395
    llvmo::ConstantFP_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantFP_O*>(client);
    GC<llvmo::ConstantFP_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ConstantPointerNull_O:
{
     // stamp value 2399
    llvmo::ConstantPointerNull_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantPointerNull_O*>(client);
    GC<llvmo::ConstantPointerNull_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ConstantDataSequential_O:
{
     // stamp value 2403
    llvmo::ConstantDataSequential_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantDataSequential_O*>(client);
    GC<llvmo::ConstantDataSequential_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ConstantDataArray_O:
{
     // stamp value 2407
    llvmo::ConstantDataArray_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantDataArray_O*>(client);
    GC<llvmo::ConstantDataArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ConstantExpr_O:
{
     // stamp value 2411
    llvmo::ConstantExpr_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantExpr_O*>(client);
    GC<llvmo::ConstantExpr_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__UndefValue_O:
{
     // stamp value 2415
    llvmo::UndefValue_O* obj_gc_safe = reinterpret_cast<llvmo::UndefValue_O*>(client);
    GC<llvmo::UndefValue_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ConstantArray_O:
{
     // stamp value 2419
    llvmo::ConstantArray_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantArray_O*>(client);
    GC<llvmo::ConstantArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__Argument_O:
{
     // stamp value 2423
    llvmo::Argument_O* obj_gc_safe = reinterpret_cast<llvmo::Argument_O*>(client);
    GC<llvmo::Argument_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__BasicBlock_O:
{
     // stamp value 2427
    llvmo::BasicBlock_O* obj_gc_safe = reinterpret_cast<llvmo::BasicBlock_O*>(client);
    GC<llvmo::BasicBlock_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__MetadataAsValue_O:
{
     // stamp value 2431
    llvmo::MetadataAsValue_O* obj_gc_safe = reinterpret_cast<llvmo::MetadataAsValue_O*>(client);
    GC<llvmo::MetadataAsValue_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ThreadSafeContext_O:
{
     // stamp value 2435
    llvmo::ThreadSafeContext_O* obj_gc_safe = reinterpret_cast<llvmo::ThreadSafeContext_O*>(client);
    GC<llvmo::ThreadSafeContext_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__TargetMachine_O:
{
     // stamp value 2439
    llvmo::TargetMachine_O* obj_gc_safe = reinterpret_cast<llvmo::TargetMachine_O*>(client);
    GC<llvmo::TargetMachine_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__LLVMTargetMachine_O:
{
     // stamp value 2443
    llvmo::LLVMTargetMachine_O* obj_gc_safe = reinterpret_cast<llvmo::LLVMTargetMachine_O*>(client);
    GC<llvmo::LLVMTargetMachine_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__Triple_O:
{
     // stamp value 2447
    llvmo::Triple_O* obj_gc_safe = reinterpret_cast<llvmo::Triple_O*>(client);
    GC<llvmo::Triple_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__LLVMContext_O:
{
     // stamp value 2451
    llvmo::LLVMContext_O* obj_gc_safe = reinterpret_cast<llvmo::LLVMContext_O*>(client);
    GC<llvmo::LLVMContext_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__PassManagerBuilder_O:
{
     // stamp value 2455
    llvmo::PassManagerBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::PassManagerBuilder_O*>(client);
    GC<llvmo::PassManagerBuilder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ExecutionEngine_O:
{
     // stamp value 2459
    llvmo::ExecutionEngine_O* obj_gc_safe = reinterpret_cast<llvmo::ExecutionEngine_O*>(client);
    GC<llvmo::ExecutionEngine_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__Type_O:
{
     // stamp value 2463
    llvmo::Type_O* obj_gc_safe = reinterpret_cast<llvmo::Type_O*>(client);
    GC<llvmo::Type_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__FunctionType_O:
{
     // stamp value 2467
    llvmo::FunctionType_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionType_O*>(client);
    GC<llvmo::FunctionType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__IntegerType_O:
{
     // stamp value 2471
    llvmo::IntegerType_O* obj_gc_safe = reinterpret_cast<llvmo::IntegerType_O*>(client);
    GC<llvmo::IntegerType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__CompositeType_O:
{
     // stamp value 2475
    llvmo::CompositeType_O* obj_gc_safe = reinterpret_cast<llvmo::CompositeType_O*>(client);
    GC<llvmo::CompositeType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__SequentialType_O:
{
     // stamp value 2479
    llvmo::SequentialType_O* obj_gc_safe = reinterpret_cast<llvmo::SequentialType_O*>(client);
    GC<llvmo::SequentialType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__PointerType_O:
{
     // stamp value 2483
    llvmo::PointerType_O* obj_gc_safe = reinterpret_cast<llvmo::PointerType_O*>(client);
    GC<llvmo::PointerType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ArrayType_O:
{
     // stamp value 2487
    llvmo::ArrayType_O* obj_gc_safe = reinterpret_cast<llvmo::ArrayType_O*>(client);
    GC<llvmo::ArrayType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__VectorType_O:
{
     // stamp value 2491
    llvmo::VectorType_O* obj_gc_safe = reinterpret_cast<llvmo::VectorType_O*>(client);
    GC<llvmo::VectorType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__StructType_O:
{
     // stamp value 2495
    llvmo::StructType_O* obj_gc_safe = reinterpret_cast<llvmo::StructType_O*>(client);
    GC<llvmo::StructType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__TargetPassConfig_O:
{
     // stamp value 2499
    llvmo::TargetPassConfig_O* obj_gc_safe = reinterpret_cast<llvmo::TargetPassConfig_O*>(client);
    GC<llvmo::TargetPassConfig_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__APFloat_O:
{
     // stamp value 2503
    llvmo::APFloat_O* obj_gc_safe = reinterpret_cast<llvmo::APFloat_O*>(client);
    GC<llvmo::APFloat_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__Metadata_O:
{
     // stamp value 2507
    llvmo::Metadata_O* obj_gc_safe = reinterpret_cast<llvmo::Metadata_O*>(client);
    GC<llvmo::Metadata_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__MDNode_O:
{
     // stamp value 2511
    llvmo::MDNode_O* obj_gc_safe = reinterpret_cast<llvmo::MDNode_O*>(client);
    GC<llvmo::MDNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DILocation_O:
{
     // stamp value 2515
    llvmo::DILocation_O* obj_gc_safe = reinterpret_cast<llvmo::DILocation_O*>(client);
    GC<llvmo::DILocation_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DINode_O:
{
     // stamp value 2519
    llvmo::DINode_O* obj_gc_safe = reinterpret_cast<llvmo::DINode_O*>(client);
    GC<llvmo::DINode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DIVariable_O:
{
     // stamp value 2523
    llvmo::DIVariable_O* obj_gc_safe = reinterpret_cast<llvmo::DIVariable_O*>(client);
    GC<llvmo::DIVariable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DILocalVariable_O:
{
     // stamp value 2527
    llvmo::DILocalVariable_O* obj_gc_safe = reinterpret_cast<llvmo::DILocalVariable_O*>(client);
    GC<llvmo::DILocalVariable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DIScope_O:
{
     // stamp value 2531
    llvmo::DIScope_O* obj_gc_safe = reinterpret_cast<llvmo::DIScope_O*>(client);
    GC<llvmo::DIScope_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DIFile_O:
{
     // stamp value 2535
    llvmo::DIFile_O* obj_gc_safe = reinterpret_cast<llvmo::DIFile_O*>(client);
    GC<llvmo::DIFile_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DILocalScope_O:
{
     // stamp value 2539
    llvmo::DILocalScope_O* obj_gc_safe = reinterpret_cast<llvmo::DILocalScope_O*>(client);
    GC<llvmo::DILocalScope_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DISubprogram_O:
{
     // stamp value 2543
    llvmo::DISubprogram_O* obj_gc_safe = reinterpret_cast<llvmo::DISubprogram_O*>(client);
    GC<llvmo::DISubprogram_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DILexicalBlockBase_O:
{
     // stamp value 2547
    llvmo::DILexicalBlockBase_O* obj_gc_safe = reinterpret_cast<llvmo::DILexicalBlockBase_O*>(client);
    GC<llvmo::DILexicalBlockBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DILexicalBlock_O:
{
     // stamp value 2551
    llvmo::DILexicalBlock_O* obj_gc_safe = reinterpret_cast<llvmo::DILexicalBlock_O*>(client);
    GC<llvmo::DILexicalBlock_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DICompileUnit_O:
{
     // stamp value 2555
    llvmo::DICompileUnit_O* obj_gc_safe = reinterpret_cast<llvmo::DICompileUnit_O*>(client);
    GC<llvmo::DICompileUnit_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DIType_O:
{
     // stamp value 2559
    llvmo::DIType_O* obj_gc_safe = reinterpret_cast<llvmo::DIType_O*>(client);
    GC<llvmo::DIType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DICompositeType_O:
{
     // stamp value 2563
    llvmo::DICompositeType_O* obj_gc_safe = reinterpret_cast<llvmo::DICompositeType_O*>(client);
    GC<llvmo::DICompositeType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DIDerivedType_O:
{
     // stamp value 2567
    llvmo::DIDerivedType_O* obj_gc_safe = reinterpret_cast<llvmo::DIDerivedType_O*>(client);
    GC<llvmo::DIDerivedType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DISubroutineType_O:
{
     // stamp value 2571
    llvmo::DISubroutineType_O* obj_gc_safe = reinterpret_cast<llvmo::DISubroutineType_O*>(client);
    GC<llvmo::DISubroutineType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DIBasicType_O:
{
     // stamp value 2575
    llvmo::DIBasicType_O* obj_gc_safe = reinterpret_cast<llvmo::DIBasicType_O*>(client);
    GC<llvmo::DIBasicType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__DIExpression_O:
{
     // stamp value 2579
    llvmo::DIExpression_O* obj_gc_safe = reinterpret_cast<llvmo::DIExpression_O*>(client);
    GC<llvmo::DIExpression_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__ValueAsMetadata_O:
{
     // stamp value 2583
    llvmo::ValueAsMetadata_O* obj_gc_safe = reinterpret_cast<llvmo::ValueAsMetadata_O*>(client);
    GC<llvmo::ValueAsMetadata_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__MDString_O:
{
     // stamp value 2587
    llvmo::MDString_O* obj_gc_safe = reinterpret_cast<llvmo::MDString_O*>(client);
    GC<llvmo::MDString_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__NamedMDNode_O:
{
     // stamp value 2591
    llvmo::NamedMDNode_O* obj_gc_safe = reinterpret_cast<llvmo::NamedMDNode_O*>(client);
    GC<llvmo::NamedMDNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__TargetOptions_O:
{
     // stamp value 2595
    llvmo::TargetOptions_O* obj_gc_safe = reinterpret_cast<llvmo::TargetOptions_O*>(client);
    GC<llvmo::TargetOptions_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__Module_O:
{
     // stamp value 2599
    llvmo::Module_O* obj_gc_safe = reinterpret_cast<llvmo::Module_O*>(client);
    GC<llvmo::Module_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__Target_O:
{
     // stamp value 2603
    llvmo::Target_O* obj_gc_safe = reinterpret_cast<llvmo::Target_O*>(client);
    GC<llvmo::Target_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_llvmo__Linker_O:
{
     // stamp value 2607
    llvmo::Linker_O* obj_gc_safe = reinterpret_cast<llvmo::Linker_O*>(client);
    GC<llvmo::Linker_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Rack_O:
{
     // stamp value 2611
    core::Rack_O* obj_gc_safe = reinterpret_cast<core::Rack_O*>(client);
    GC<core::Rack_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__SmallMultimap_O:
{
     // stamp value 2615
    core::SmallMultimap_O* obj_gc_safe = reinterpret_cast<core::SmallMultimap_O*>(client);
    GC<core::SmallMultimap_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__AtomicFixnumHolder_O:
{
     // stamp value 2619
    core::AtomicFixnumHolder_O* obj_gc_safe = reinterpret_cast<core::AtomicFixnumHolder_O*>(client);
    GC<core::AtomicFixnumHolder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Scope_O:
{
     // stamp value 2623
    core::Scope_O* obj_gc_safe = reinterpret_cast<core::Scope_O*>(client);
    GC<core::Scope_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__FileScope_O:
{
     // stamp value 2627
    core::FileScope_O* obj_gc_safe = reinterpret_cast<core::FileScope_O*>(client);
    GC<core::FileScope_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Path_O:
{
     // stamp value 2631
    core::Path_O* obj_gc_safe = reinterpret_cast<core::Path_O*>(client);
    GC<core::Path_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Pathname_O:
{
     // stamp value 2635
    core::Pathname_O* obj_gc_safe = reinterpret_cast<core::Pathname_O*>(client);
    GC<core::Pathname_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__LogicalPathname_O:
{
     // stamp value 2639
    core::LogicalPathname_O* obj_gc_safe = reinterpret_cast<core::LogicalPathname_O*>(client);
    GC<core::LogicalPathname_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Cache_O:
{
     // stamp value 2643
    core::Cache_O* obj_gc_safe = reinterpret_cast<core::Cache_O*>(client);
    GC<core::Cache_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Stream_O:
{
     // stamp value 2647
    core::Stream_O* obj_gc_safe = reinterpret_cast<core::Stream_O*>(client);
    GC<core::Stream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__AnsiStream_O:
{
     // stamp value 2651
    core::AnsiStream_O* obj_gc_safe = reinterpret_cast<core::AnsiStream_O*>(client);
    GC<core::AnsiStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__SynonymStream_O:
{
     // stamp value 2655
    core::SynonymStream_O* obj_gc_safe = reinterpret_cast<core::SynonymStream_O*>(client);
    GC<core::SynonymStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__StringStream_O:
{
     // stamp value 2659
    core::StringStream_O* obj_gc_safe = reinterpret_cast<core::StringStream_O*>(client);
    GC<core::StringStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__StringOutputStream_O:
{
     // stamp value 2663
    core::StringOutputStream_O* obj_gc_safe = reinterpret_cast<core::StringOutputStream_O*>(client);
    GC<core::StringOutputStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__StringInputStream_O:
{
     // stamp value 2667
    core::StringInputStream_O* obj_gc_safe = reinterpret_cast<core::StringInputStream_O*>(client);
    GC<core::StringInputStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__EchoStream_O:
{
     // stamp value 2671
    core::EchoStream_O* obj_gc_safe = reinterpret_cast<core::EchoStream_O*>(client);
    GC<core::EchoStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__ConcatenatedStream_O:
{
     // stamp value 2675
    core::ConcatenatedStream_O* obj_gc_safe = reinterpret_cast<core::ConcatenatedStream_O*>(client);
    GC<core::ConcatenatedStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__FileStream_O:
{
     // stamp value 2679
    core::FileStream_O* obj_gc_safe = reinterpret_cast<core::FileStream_O*>(client);
    GC<core::FileStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__IOFileStream_O:
{
     // stamp value 2683
    core::IOFileStream_O* obj_gc_safe = reinterpret_cast<core::IOFileStream_O*>(client);
    GC<core::IOFileStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__IOStreamStream_O:
{
     // stamp value 2687
    core::IOStreamStream_O* obj_gc_safe = reinterpret_cast<core::IOStreamStream_O*>(client);
    GC<core::IOStreamStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__BroadcastStream_O:
{
     // stamp value 2691
    core::BroadcastStream_O* obj_gc_safe = reinterpret_cast<core::BroadcastStream_O*>(client);
    GC<core::BroadcastStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__TwoWayStream_O:
{
     // stamp value 2695
    core::TwoWayStream_O* obj_gc_safe = reinterpret_cast<core::TwoWayStream_O*>(client);
    GC<core::TwoWayStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Package_O:
{
     // stamp value 2699
    core::Package_O* obj_gc_safe = reinterpret_cast<core::Package_O*>(client);
    GC<core::Package_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__FileStatus_O:
{
     // stamp value 2703
    core::FileStatus_O* obj_gc_safe = reinterpret_cast<core::FileStatus_O*>(client);
    GC<core::FileStatus_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__InvocationHistoryFrameIterator_O:
{
     // stamp value 2707
    core::InvocationHistoryFrameIterator_O* obj_gc_safe = reinterpret_cast<core::InvocationHistoryFrameIterator_O*>(client);
    GC<core::InvocationHistoryFrameIterator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__DirectoryEntry_O:
{
     // stamp value 2711
    core::DirectoryEntry_O* obj_gc_safe = reinterpret_cast<core::DirectoryEntry_O*>(client);
    GC<core::DirectoryEntry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__LightUserData_O:
{
     // stamp value 2715
    core::LightUserData_O* obj_gc_safe = reinterpret_cast<core::LightUserData_O*>(client);
    GC<core::LightUserData_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__UserData_O:
{
     // stamp value 2719
    core::UserData_O* obj_gc_safe = reinterpret_cast<core::UserData_O*>(client);
    GC<core::UserData_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Cons_O:
{
     // stamp value 2723
    core::Cons_O* obj_gc_safe = reinterpret_cast<core::Cons_O*>(client);
    GC<core::Cons_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__VaList_dummy_O:
{
     // stamp value 2727
    core::VaList_dummy_O* obj_gc_safe = reinterpret_cast<core::VaList_dummy_O*>(client);
    GC<core::VaList_dummy_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_core__Lisp_O:
{
     // stamp value 2731
    core::Lisp_O* obj_gc_safe = reinterpret_cast<core::Lisp_O*>(client);
    GC<core::Lisp_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_clang__RecursiveASTVisitor_asttooling__AstVisitor_O_:
{
     // do nothing stamp value 2735
    THROW_HARD_ERROR(BF("Should never deallocate object clang::RecursiveASTVisitor<asttooling::AstVisitor_O>"));
}
obj_deallocate_unmanaged_instance_STAMP_asttooling__AstVisitor_O:
{
     // stamp value 2739
    asttooling::AstVisitor_O* obj_gc_safe = reinterpret_cast<asttooling::AstVisitor_O*>(client);
    GC<asttooling::AstVisitor_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCContainer:
{
     // do nothing stamp value 2743
    THROW_HARD_ERROR(BF("Should never deallocate object gctools::GCContainer"));
}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__:
{
     // stamp value 2747
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__:
{
     // stamp value 2751
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyChiralRestraint_:
{
     // stamp value 2755
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyChiralRestraint>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__:
{
     // stamp value 2759
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__:
{
     // stamp value 2763
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_short_:
{
     // stamp value 2767
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<short>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__:
{
     // stamp value 2771
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___:
{
     // stamp value 2775
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__:
{
     // stamp value 2779
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCBitUnitArray_moveable_4_0_:
{
     // stamp value 2783
    THROW_HARD_ERROR(BF("Should never deallocate gcbitunits gctools::GCBitUnitArray_moveable<4,0>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__SymbolClassHolderPair_:
{
     // stamp value 2787
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::SymbolClassHolderPair>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___:
{
     // stamp value 2791
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__:
{
     // stamp value 2795
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___:
{
     // stamp value 2799
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__:
{
     // stamp value 2803
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_unsigned_char_:
{
     // stamp value 2807
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<unsigned char>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___:
{
     // stamp value 2811
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___:
{
     // stamp value 2815
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_:
{
     // stamp value 2819
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__:
{
     // stamp value 2823
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyAngle_:
{
     // stamp value 2827
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyAngle>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__:
{
     // stamp value 2831
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__:
{
     // stamp value 2835
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__:
{
     // stamp value 2839
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___:
{
     // stamp value 2843
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__:
{
     // stamp value 2847
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__OptionalArgument_:
{
     // stamp value 2851
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::OptionalArgument>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__KeywordArgument_:
{
     // stamp value 2855
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::KeywordArgument>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__KeyEntry_:
{
     // stamp value 2859
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::KeyEntry>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___:
{
     // stamp value 2863
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__:
{
     // stamp value 2867
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_Vector3_:
{
     // stamp value 2871
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<Vector3>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_:
{
     // stamp value 2875
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyAnchorRestraint>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__:
{
     // stamp value 2879
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___:
{
     // stamp value 2883
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__:
{
     // stamp value 2887
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___:
{
     // stamp value 2891
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyImproperRestraint_:
{
     // stamp value 2895
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyImproperRestraint>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__:
{
     // stamp value 2899
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__:
{
     // stamp value 2903
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__:
{
     // stamp value 2907
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__:
{
     // stamp value 2911
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___:
{
     // stamp value 2915
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___:
{
     // stamp value 2919
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__:
{
     // stamp value 2923
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___:
{
     // stamp value 2927
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__:
{
     // stamp value 2931
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__:
{
     // stamp value 2935
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCBitUnitArray_moveable_2_0_:
{
     // stamp value 2939
    THROW_HARD_ERROR(BF("Should never deallocate gcbitunits gctools::GCBitUnitArray_moveable<2,0>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__:
{
     // stamp value 2943
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__:
{
     // stamp value 2947
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCBitUnitArray_moveable_1_0_:
{
     // stamp value 2951
    THROW_HARD_ERROR(BF("Should never deallocate gcbitunits gctools::GCBitUnitArray_moveable<1,0>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCBitUnitArray_moveable_2_1_:
{
     // stamp value 2955
    THROW_HARD_ERROR(BF("Should never deallocate gcbitunits gctools::GCBitUnitArray_moveable<2,1>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__:
{
     // stamp value 2959
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_int_:
{
     // stamp value 2963
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<int>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___:
{
     // stamp value 2967
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__:
{
     // stamp value 2971
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__:
{
     // stamp value 2975
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_float_:
{
     // stamp value 2979
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<float>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__:
{
     // stamp value 2983
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__:
{
     // stamp value 2987
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__T_O___:
{
     // stamp value 2991
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::T_O *>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyDihedral_:
{
     // stamp value 2995
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyDihedral>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___:
{
     // stamp value 2999
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_unsigned_int_:
{
     // stamp value 3003
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<unsigned int>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__:
{
     // stamp value 3007
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__:
{
     // stamp value 3011
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__CacheRecord_:
{
     // stamp value 3015
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::CacheRecord>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__:
{
     // stamp value 3019
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_double_:
{
     // stamp value 3023
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<double>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__:
{
     // stamp value 3027
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__:
{
     // stamp value 3031
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___:
{
     // stamp value 3035
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__:
{
     // stamp value 3039
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__AtomPdbRec_:
{
     // stamp value 3043
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::AtomPdbRec>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__Cons_O_:
{
     // stamp value 3047
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::Cons_O>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergySketchStretch_:
{
     // stamp value 3051
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergySketchStretch>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_signed_char_:
{
     // stamp value 3055
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<signed char>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_:
{
     // stamp value 3059
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyOutOfZPlane>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__:
{
     // stamp value 3063
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___:
{
     // stamp value 3067
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__:
{
     // stamp value 3071
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__:
{
     // stamp value 3075
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergySketchNonbond_:
{
     // stamp value 3079
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergySketchNonbond>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__:
{
     // stamp value 3083
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__:
{
     // stamp value 3087
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__FixedNonbondRestraint_:
{
     // stamp value 3091
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::FixedNonbondRestraint>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__:
{
     // stamp value 3095
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::SingleDispatchMethod_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__:
{
     // stamp value 3099
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__:
{
     // stamp value 3103
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___:
{
     // stamp value 3107
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__:
{
     // stamp value 3111
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_double_:
{
     // stamp value 3115
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<double>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___:
{
     // stamp value 3119
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___:
{
     // stamp value 3123
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__:
{
     // stamp value 3127
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__:
{
     // stamp value 3131
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__RequiredArgument_:
{
     // stamp value 3135
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::RequiredArgument>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__:
{
     // stamp value 3139
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__:
{
     // stamp value 3143
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCBitUnitArray_moveable_4_1_:
{
     // stamp value 3147
    THROW_HARD_ERROR(BF("Should never deallocate gcbitunits gctools::GCBitUnitArray_moveable<4,1>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__SymbolStorage_:
{
     // stamp value 3151
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::SymbolStorage>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_:
{
     // stamp value 3155
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___:
{
     // stamp value 3159
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___:
{
     // stamp value 3163
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__:
{
     // stamp value 3167
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__:
{
     // stamp value 3171
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___:
{
     // stamp value 3175
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__:
{
     // stamp value 3179
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_unsigned_long_:
{
     // stamp value 3183
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<unsigned long>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyNonbond_:
{
     // stamp value 3187
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyNonbond>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___:
{
     // stamp value 3191
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__AtomInfo_:
{
     // stamp value 3195
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::AtomInfo>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__:
{
     // stamp value 3199
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__:
{
     // stamp value 3203
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyAtom_:
{
     // stamp value 3207
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyAtom>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___:
{
     // stamp value 3211
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_int_:
{
     // stamp value 3215
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<int>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__:
{
     // stamp value 3219
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__AuxArgument_:
{
     // stamp value 3223
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::AuxArgument>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__ResidueOut_:
{
     // stamp value 3227
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::ResidueOut>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_long_:
{
     // stamp value 3231
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<long>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__:
{
     // stamp value 3235
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_:
{
     // stamp value 3239
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::RigidBodyAtomInfo>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___:
{
     // stamp value 3243
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__:
{
     // stamp value 3247
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__:
{
     // stamp value 3251
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyStretch_:
{
     // stamp value 3255
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyStretch>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__:
{
     // stamp value 3259
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__:
{
     // stamp value 3263
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_unsigned_short_:
{
     // stamp value 3267
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<unsigned short>"));}
obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_float_:
{
     // stamp value 3271
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<float>"));}
obj_deallocate_unmanaged_instance_STAMP_clang__FrontendAction:
{
     // do nothing stamp value 3275
    THROW_HARD_ERROR(BF("Should never deallocate object clang::FrontendAction"));
}
obj_deallocate_unmanaged_instance_STAMP_clang__ASTFrontendAction:
{
     // do nothing stamp value 3279
    THROW_HARD_ERROR(BF("Should never deallocate object clang::ASTFrontendAction"));
}
obj_deallocate_unmanaged_instance_STAMP_clang__SyntaxOnlyAction:
{
     // do nothing stamp value 3283
    THROW_HARD_ERROR(BF("Should never deallocate object clang::SyntaxOnlyAction"));
}
obj_deallocate_unmanaged_instance_STAMP_clang__tooling__ToolAction:
{
     // do nothing stamp value 3287
    THROW_HARD_ERROR(BF("Should never deallocate object clang::tooling::ToolAction"));
}
obj_deallocate_unmanaged_instance_STAMP_clang__tooling__FrontendActionFactory:
{
     // do nothing stamp value 3291
    THROW_HARD_ERROR(BF("Should never deallocate object clang::tooling::FrontendActionFactory"));
}
obj_deallocate_unmanaged_instance_STAMP_clang__ast_matchers__MatchFinder__MatchCallback:
{
     // do nothing stamp value 3295
    THROW_HARD_ERROR(BF("Should never deallocate object clang::ast_matchers::MatchFinder::MatchCallback"));
}
#endif // defined(GC_OBJ_DEALLOCATOR)
#if defined(GC_OBJ_DEALLOCATOR_HELPERS)

#endif // defined(GC_OBJ_DEALLOCATOR_HELPERS)
#if defined(GC_OBJ_DEALLOCATOR_TABLE)
static void* OBJ_DEALLOCATOR_table[] = { 
  /* 0 */ NULL,
  /* 7 */ &&obj_deallocate_unmanaged_instance_STAMP_core__T_O,
  /* 11 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Unused_dummy_O,
  /* 15 */ &&obj_deallocate_unmanaged_instance_STAMP_core__General_O,
  /* 19 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MultiStringBuffer_O,
  /* 23 */ &&obj_deallocate_unmanaged_instance_STAMP_core__LambdaListHandler_O,
  /* 27 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__AttributeSet_O,
  /* 31 */ &&obj_deallocate_unmanaged_instance_STAMP_core__AtomicT_Holder_O,
  /* 35 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Pointer_O,
  /* 39 */ &&obj_deallocate_unmanaged_instance_STAMP_clasp_ffi__ForeignData_O,
  /* 43 */ &&obj_deallocate_unmanaged_instance_STAMP_core__CxxObject_O,
  /* 47 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__ChiList_O,
  /* 51 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__NumericalFunction_O,
  /* 55 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__FoldTree_O,
  /* 59 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__StatusTracker_O,
  /* 63 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__RotamerSetBase_O,
  /* 67 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__BackboneDependentRotamerSet_O,
  /* 71 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__RotamerSet_O,
  /* 75 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergyComponent_O,
  /* 79 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergyStretch_O,
  /* 83 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergyRigidBodyComponent_O,
  /* 87 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergyRigidBodyStaple_O,
  /* 91 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergyRigidBodyNonbond_O,
  /* 95 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergyOutOfZPlane_O,
  /* 99 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergySketchNonbond_O,
  /* 103 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergyChiralRestraint_O,
  /* 107 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergyPointToLineRestraint_O,
  /* 111 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergyDihedral_O,
  /* 115 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergyNonbond_O,
  /* 119 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergyPeriodicBoundaryConditionsNonbond_O,
  /* 123 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergyAnchorRestraint_O,
  /* 127 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergyFixedNonbondRestraint_O,
  /* 131 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergySketchStretch_O,
  /* 135 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergyImproperRestraint_O,
  /* 139 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergyAngle_O,
  /* 143 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Matter_O,
  /* 147 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Aggregate_O,
  /* 151 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Atom_O,
  /* 155 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__VirtualAtom_O,
  /* 159 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Residue_O,
  /* 163 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Molecule_O,
  /* 167 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__PdbWriter_O,
  /* 171 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__TrajectoryFrame_O,
  /* 175 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__MDBuilder_O,
  /* 179 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Topology_O,
  /* 183 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__AtomTable_O,
  /* 187 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__CipPrioritizer_O,
  /* 191 */ &&obj_deallocate_unmanaged_instance_STAMP_adapt__IndexedObjectBag_O,
  /* 195 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__VirtualSphere_O,
  /* 199 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__TwisterDriver_O,
  /* 203 */ &&obj_deallocate_unmanaged_instance_STAMP_core__NativeVector_double_O,
  /* 207 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__RingFinder_O,
  /* 211 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__FunctionCallee_O,
  /* 215 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__Joint_O,
  /* 219 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__JumpJoint_O,
  /* 223 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__OriginJumpJoint_O,
  /* 227 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__BondedJoint_O,
  /* 231 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__RootBondedJoint_O,
  /* 235 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__DelayedBondedJoint_O,
  /* 239 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__SearchStatistics_O,
  /* 243 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__PdbMonomerDatabase_O,
  /* 247 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Twister_O,
  /* 251 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__MonomerCoordinates_O,
  /* 255 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFParameter_O,
  /* 259 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFVdw_O,
  /* 263 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFStretch_O,
  /* 267 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFPtor_O,
  /* 271 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFItor_O,
  /* 275 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFNonbond_O,
  /* 279 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFAngle_O,
  /* 283 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Restraint_O,
  /* 287 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__RestraintChiral_O,
  /* 291 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__RestraintDistance_O,
  /* 295 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__RestraintAngle_O,
  /* 299 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__RestraintAnchor_O,
  /* 303 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__RestraintFixedNonbond_O,
  /* 307 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__RestraintDihedral_O,
  /* 311 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__AtomIndexer_O,
  /* 315 */ &&obj_deallocate_unmanaged_instance_STAMP_geom__BoundingCuboid_O,
  /* 319 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__StereoInformation_O,
  /* 323 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__AddIonOctree_O,
  /* 327 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__CDNode_O,
  /* 331 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__OligomerPart_Base_O,
  /* 335 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__OligomerPart_Link_O,
  /* 339 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__OligomerPart_Monomer_O,
  /* 343 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__BondId_O,
  /* 347 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Serializer_O,
  /* 351 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__CoordinateSystem_O,
  /* 355 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Bond_O,
  /* 359 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__CandoDatabase_O,
  /* 363 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__AbstractLargeSquareMatrix_O,
  /* 367 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__SparseLargeSquareMatrix_O,
  /* 371 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FullLargeSquareMatrix_O,
  /* 375 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFBaseDb_O,
  /* 379 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFParameterBaseDb_O,
  /* 383 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFItorDb_O,
  /* 387 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFStretchDb_O,
  /* 391 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFAngleDb_O,
  /* 395 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFNonbondDb_O,
  /* 399 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFPtorDb_O,
  /* 403 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFVdwDb_O,
  /* 407 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFTypesDb_O,
  /* 411 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__AGVertex_O,
  /* 415 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ForceField_O,
  /* 419 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__AtomReferenceBase_O,
  /* 423 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__AtomReference_O,
  /* 427 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ScoringFunction_O,
  /* 431 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EnergyFunction_O,
  /* 435 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__SketchFunction_O,
  /* 439 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__RigidBodyEnergyFunction_O,
  /* 443 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__WildElementDict_O,
  /* 447 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DITypeRefArray_O,
  /* 451 */ &&obj_deallocate_unmanaged_instance_STAMP_geom__OVector3_O,
  /* 455 */ &&obj_deallocate_unmanaged_instance_STAMP_geom__OVector2_O,
  /* 459 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Structure_Old_ListEntry_O,
  /* 463 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFTypeRule_O,
  /* 467 */ &&obj_deallocate_unmanaged_instance_STAMP_adapt__QDomNode_O,
  /* 471 */ &&obj_deallocate_unmanaged_instance_STAMP_mp__SharedMutex_O,
  /* 475 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ConstitutionAtom_O,
  /* 479 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ConstitutionVirtualAtom_O,
  /* 483 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ReadAmberParameters_O,
  /* 487 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__AGEdge_O,
  /* 491 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Entity_O,
  /* 495 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Stereoisomer_O,
  /* 499 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EntityNameSetBase_O,
  /* 503 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EntityNameSetWithCap_O,
  /* 507 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Mate_O,
  /* 511 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__RingClosingMate_O,
  /* 515 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__EntityNameSet_O,
  /* 519 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__RepresentedEntityNameSet_O,
  /* 523 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__MonomerPack_O,
  /* 527 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Constitution_O,
  /* 531 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Monomer_O,
  /* 535 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__OctNode_O,
  /* 539 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Structure_Old_List_O,
  /* 543 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__BackboneDependentRotamerLibrary_O,
  /* 547 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ReportBase_O,
  /* 551 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__StepReport_O,
  /* 555 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__MessageReport_O,
  /* 559 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ForceMatchReport_O,
  /* 563 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ChemDraw_O,
  /* 567 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ZMatrixInternal_O,
  /* 571 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ZMatrixBondInternal_O,
  /* 575 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ZMatrixDihedralInternal_O,
  /* 579 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ZMatrixAngleInternal_O,
  /* 583 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__StereoisomerAtom_O,
  /* 587 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__StereoisomerVirtualAtom_O,
  /* 591 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ZMatrix_O,
  /* 595 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Isoname_O,
  /* 599 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__PathMessage_O,
  /* 603 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__MonomerId_O,
  /* 607 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__JointTemplate_O,
  /* 611 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__BondedJointTemplate_O,
  /* 615 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__DelayedBondedJointTemplate_O,
  /* 619 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__RootBondedJointTemplate_O,
  /* 623 */ &&obj_deallocate_unmanaged_instance_STAMP_geom__Color_O,
  /* 627 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ConformationCollection_O,
  /* 631 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__SuperposableConformationCollection_O,
  /* 635 */ &&obj_deallocate_unmanaged_instance_STAMP_core__NativeVector_float_O,
  /* 639 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Coupling_O,
  /* 643 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__RingCoupling_O,
  /* 647 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__DirectionalCoupling_O,
  /* 651 */ &&obj_deallocate_unmanaged_instance_STAMP_adapt__ObjectSet_O,
  /* 655 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Oligomer_O,
  /* 659 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__PdbMonomerConnectivity_O,
  /* 663 */ &&obj_deallocate_unmanaged_instance_STAMP_units__Dimension_O,
  /* 667 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ConformationExplorerEntry_O,
  /* 671 */ &&obj_deallocate_unmanaged_instance_STAMP_mp__ConditionVariable_O,
  /* 675 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__PdbReader_O,
  /* 679 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__SpanningLoop_O,
  /* 683 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ProperTorsion_O,
  /* 687 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ResidueList_O,
  /* 691 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__SuperposeEngine_O,
  /* 695 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__SuperposeSelectedAtoms_O,
  /* 699 */ &&obj_deallocate_unmanaged_instance_STAMP_adapt__StringSet_O,
  /* 703 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Command_O,
  /* 707 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__StereoConfiguration_O,
  /* 711 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__MonomerBaseNode_O,
  /* 715 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__AggregateNode_O,
  /* 719 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__ChainNode_O,
  /* 723 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__MonomerNode_O,
  /* 727 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__RingClosingMonomerNode_O,
  /* 731 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FFNonbondCrossTermTable_O,
  /* 735 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Plug_O,
  /* 739 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__JumpPlug_O,
  /* 743 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__PlugWithMates_O,
  /* 747 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__InPlug_O,
  /* 751 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__OutPlug_O,
  /* 755 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__OriginPlug_O,
  /* 759 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__Rotamer_O,
  /* 763 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__MonomerContext_O,
  /* 767 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__CDFragment_O,
  /* 771 */ &&obj_deallocate_unmanaged_instance_STAMP_units__Unit_O,
  /* 775 */ &&obj_deallocate_unmanaged_instance_STAMP_units__NamedUnit_O,
  /* 779 */ &&obj_deallocate_unmanaged_instance_STAMP_adapt__StringList_O,
  /* 783 */ &&obj_deallocate_unmanaged_instance_STAMP_core__NativeVector_int_O,
  /* 787 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__InfoDb_O,
  /* 791 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__MinimizerLog_O,
  /* 795 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__GenericOctree_O,
  /* 799 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__AtomTree_O,
  /* 803 */ &&obj_deallocate_unmanaged_instance_STAMP_units__Quantity_O,
  /* 807 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ChemInfoMatch_O,
  /* 811 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ZMatrixEntry_O,
  /* 815 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__SpecificContextSet_O,
  /* 819 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Angle_O,
  /* 823 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__MacroModelFile_O,
  /* 827 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__BondList_O,
  /* 831 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ConformationExplorer_O,
  /* 835 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ChemInfoGraph_O,
  /* 839 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__CDText_O,
  /* 843 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DINodeArray_O,
  /* 847 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__Checkpoint_O,
  /* 851 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__CheckpointJoint_O,
  /* 855 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__CheckpointOutPlugJoint_O,
  /* 859 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ConformationExplorerMatch_O,
  /* 863 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__StereoisomerAtoms_O,
  /* 867 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Rotamer_O,
  /* 871 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ImproperTorsion_O,
  /* 875 */ &&obj_deallocate_unmanaged_instance_STAMP_adapt__SymbolList_O,
  /* 879 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__FrameRecognizer_O,
  /* 883 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ConformationExplorerEntryStage_O,
  /* 887 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Trajectory_O,
  /* 891 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__CalculatePosition_O,
  /* 895 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__CalculatePositionRelativeToOrigin_O,
  /* 899 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__CalculatePositionUsingInternals_O,
  /* 903 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__CalculatePositionAlongBond_O,
  /* 907 */ &&obj_deallocate_unmanaged_instance_STAMP_geom__OMatrix_O,
  /* 911 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ConformationCollectionEntry_O,
  /* 915 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ComplexRestraint_O,
  /* 919 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__RestrainedExoCyclicAtom_O,
  /* 923 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__RestrainedPiBond_O,
  /* 927 */ &&obj_deallocate_unmanaged_instance_STAMP_mp__Mutex_O,
  /* 931 */ &&obj_deallocate_unmanaged_instance_STAMP_mp__RecursiveMutex_O,
  /* 935 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__CombinedForceField_O,
  /* 939 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__CDBond_O,
  /* 943 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ConstitutionBond_O,
  /* 947 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__ChiDihedral_O,
  /* 951 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ConstitutionAtoms_O,
  /* 955 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__Conformation_O,
  /* 959 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__MoleculeGraph_O,
  /* 963 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__StructureComparer_O,
  /* 967 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__BoundingBox_O,
  /* 971 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ChemInfoNode_O,
  /* 975 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__BondMatcher_O,
  /* 979 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__BondTest_O,
  /* 983 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__BondLogical_O,
  /* 987 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__BondMatchNode_O,
  /* 991 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__AtomOrBondMatchNode_O,
  /* 995 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Root_O,
  /* 999 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__SmartsRoot_O,
  /* 1003 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__AntechamberRoot_O,
  /* 1007 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ResidueTest_O,
  /* 1011 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__AntechamberFocusAtomMatch_O,
  /* 1015 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Logical_O,
  /* 1019 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__AtomTest_O,
  /* 1023 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__BondToAtomTest_O,
  /* 1027 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__AntechamberBondToAtomTest_O,
  /* 1031 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__BondListMatchNode_O,
  /* 1035 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Chain_O,
  /* 1039 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Branch_O,
  /* 1043 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__RootMatchNode_O,
  /* 1047 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__AfterMatchBondToAtomTest_O,
  /* 1051 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Dimacs_O,
  /* 1055 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__SpecificContext_O,
  /* 1059 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Minimizer_O,
  /* 1063 */ &&obj_deallocate_unmanaged_instance_STAMP_adapt__SymbolSet_O,
  /* 1067 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__MapOfMonomerNamesToAtomIndexers_O,
  /* 1071 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__Alias_O,
  /* 1075 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__AtomIdToAtomMap_O,
  /* 1079 */ &&obj_deallocate_unmanaged_instance_STAMP_mp__Process_O,
  /* 1083 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SingleDispatchMethod_O,
  /* 1087 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Iterator_O,
  /* 1091 */ &&obj_deallocate_unmanaged_instance_STAMP_core__DirectoryIterator_O,
  /* 1095 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__IterateRestraints_O,
  /* 1099 */ &&obj_deallocate_unmanaged_instance_STAMP_adapt__IterateCons_O,
  /* 1103 */ &&obj_deallocate_unmanaged_instance_STAMP_core__RecursiveDirectoryIterator_O,
  /* 1107 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__IterateMatter_O,
  /* 1111 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__IterateResidues_O,
  /* 1115 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__IterateBonds_O,
  /* 1119 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__IterateAtoms_O,
  /* 1123 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Symbol_O,
  /* 1127 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Null_O,
  /* 1131 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SharpEqualWrapper_O,
  /* 1135 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ClaspJIT_O,
  /* 1139 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Exposer_O,
  /* 1143 */ &&obj_deallocate_unmanaged_instance_STAMP_units__UnitsExposer_O,
  /* 1147 */ &&obj_deallocate_unmanaged_instance_STAMP_core__CoreExposer_O,
  /* 1151 */ &&obj_deallocate_unmanaged_instance_STAMP_geom__GeomExposer_O,
  /* 1155 */ &&obj_deallocate_unmanaged_instance_STAMP_adapt__AdaptExposer_O,
  /* 1159 */ &&obj_deallocate_unmanaged_instance_STAMP_kinematics__KinematicsExposer_O,
  /* 1163 */ &&obj_deallocate_unmanaged_instance_STAMP_chem__ChemExposer_O,
  /* 1167 */ &&obj_deallocate_unmanaged_instance_STAMP_asttooling__AsttoolingExposer_O,
  /* 1171 */ &&obj_deallocate_unmanaged_instance_STAMP_core__PosixTimeDuration_O,
  /* 1175 */ &&obj_deallocate_unmanaged_instance_STAMP_clasp_ffi__ForeignTypeSpec_O,
  /* 1179 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SmallMap_O,
  /* 1181 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Instance_O,
  /* 1185 */ &&obj_deallocate_unmanaged_instance_STAMP_clbind__ClassRep_O,
  /* 1188 */ &&obj_deallocate_unmanaged_instance_STAMP_core__DerivableCxxObject_O,
  /* 1195 */ &&obj_deallocate_unmanaged_instance_STAMP_mpip__Mpi_O,
  /* 1199 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Sigset_O,
  /* 1203 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Environment_O,
  /* 1207 */ &&obj_deallocate_unmanaged_instance_STAMP_core__GlueEnvironment_O,
  /* 1211 */ &&obj_deallocate_unmanaged_instance_STAMP_core__LexicalEnvironment_O,
  /* 1215 */ &&obj_deallocate_unmanaged_instance_STAMP_core__CompileTimeEnvironment_O,
  /* 1219 */ &&obj_deallocate_unmanaged_instance_STAMP_core__CatchEnvironment_O,
  /* 1223 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SymbolMacroletEnvironment_O,
  /* 1227 */ &&obj_deallocate_unmanaged_instance_STAMP_core__FunctionContainerEnvironment_O,
  /* 1231 */ &&obj_deallocate_unmanaged_instance_STAMP_core__UnwindProtectEnvironment_O,
  /* 1235 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MacroletEnvironment_O,
  /* 1239 */ &&obj_deallocate_unmanaged_instance_STAMP_core__RuntimeVisibleEnvironment_O,
  /* 1243 */ &&obj_deallocate_unmanaged_instance_STAMP_core__TagbodyEnvironment_O,
  /* 1247 */ &&obj_deallocate_unmanaged_instance_STAMP_core__BlockEnvironment_O,
  /* 1251 */ &&obj_deallocate_unmanaged_instance_STAMP_core__FunctionValueEnvironment_O,
  /* 1255 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ValueEnvironment_O,
  /* 1259 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ActivationFrame_O,
  /* 1263 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ValueFrame_O,
  /* 1267 */ &&obj_deallocate_unmanaged_instance_STAMP_core__FunctionFrame_O,
  /* 1271 */ &&obj_deallocate_unmanaged_instance_STAMP_core__RandomState_O,
  /* 1275 */ &&obj_deallocate_unmanaged_instance_STAMP_core__HashTableBase_O,
  /* 1279 */ &&obj_deallocate_unmanaged_instance_STAMP_core__HashTable_O,
  /* 1283 */ &&obj_deallocate_unmanaged_instance_STAMP_core__HashTableEqualp_O,
  /* 1287 */ &&obj_deallocate_unmanaged_instance_STAMP_core__HashTableEq_O,
  /* 1291 */ &&obj_deallocate_unmanaged_instance_STAMP_core__HashTableEqual_O,
  /* 1295 */ &&obj_deallocate_unmanaged_instance_STAMP_core__HashTableEql_O,
  /* 1299 */ &&obj_deallocate_unmanaged_instance_STAMP_core__WeakKeyHashTable_O,
  /* 1303 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__InsertPoint_O,
  /* 1307 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Number_O,
  /* 1311 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Real_O,
  /* 1315 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Rational_O,
  /* 1319 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Ratio_O,
  /* 1323 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Integer_O,
  /* 1327 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Bignum_O,
  /* 1331 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Fixnum_dummy_O,
  /* 1335 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Float_O,
  /* 1339 */ &&obj_deallocate_unmanaged_instance_STAMP_core__DoubleFloat_O,
  /* 1343 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SingleFloat_dummy_O,
  /* 1347 */ &&obj_deallocate_unmanaged_instance_STAMP_core__LongFloat_O,
  /* 1351 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ShortFloat_O,
  /* 1355 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Complex_O,
  /* 1359 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SourcePosInfo_O,
  /* 1363 */ &&obj_deallocate_unmanaged_instance_STAMP_core__IntArray_O,
  /* 1367 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Record_O,
  /* 1371 */ &&obj_deallocate_unmanaged_instance_STAMP_clbind__ClassRegistry_O,
  /* 1375 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ClassHolder_O,
  /* 1378 */ &&obj_deallocate_unmanaged_instance_STAMP_core__WrappedPointer_O,
  /* 1383 */ &&obj_deallocate_unmanaged_instance_STAMP_core__FdSet_O,
  /* 1387 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SymbolToEnumConverter_O,
  /* 1391 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__Attribute_O,
  /* 1395 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ObjectFile_O,
  /* 1399 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Function_O,
  /* 1401 */ &&obj_deallocate_unmanaged_instance_STAMP_core__FuncallableInstance_O,
  /* 1407 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Creator_O,
  /* 1411 */ &&obj_deallocate_unmanaged_instance_STAMP_core__FuncallableInstanceCreator_O,
  /* 1415 */ &&obj_deallocate_unmanaged_instance_STAMP_clbind__ConstructorCreator_O,
  /* 1419 */ &&obj_deallocate_unmanaged_instance_STAMP_clbind__DummyCreator_O,
  /* 1423 */ &&obj_deallocate_unmanaged_instance_STAMP_core__InstanceCreator_O,
  /* 1427 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ClassRepCreator_O,
  /* 1431 */ &&obj_deallocate_unmanaged_instance_STAMP_core__DerivableCxxClassCreator_O,
  /* 1435 */ &&obj_deallocate_unmanaged_instance_STAMP_core__StandardClassCreator_O,
  /* 1439 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SpecialForm_O,
  /* 1443 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Closure_O,
  /* 1447 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SingleDispatchCxxEffectiveMethodFunction_O,
  /* 1451 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SingleDispatchMethodFunction_O,
  /* 1455 */ &&obj_deallocate_unmanaged_instance_STAMP_core__CxxMethodFunction_O,
  /* 1459 */ &&obj_deallocate_unmanaged_instance_STAMP_core__BuiltinClosure_O,
  /* 1463 */ &&obj_deallocate_unmanaged_instance_STAMP_core__TranslationFunctor_O,
  /* 1467 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ClosureWithSlots_O,
  /* 1471 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SingleDispatchGenericFunctionClosure_O,
  /* 1475 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SingleDispatchEffectiveMethodFunction_O,
  /* 1479 */ &&obj_deallocate_unmanaged_instance_STAMP_core__WeakPointer_O,
  /* 1483 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DebugLoc_O,
  /* 1487 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Array_O,
  /* 1491 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_O,
  /* 1495 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_int16_t_O_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__MDArray_O_,
  /* 1499 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_int16_t_O,
  /* 1503 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_int8_t_O_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__MDArray_O_,
  /* 1507 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_int8_t_O,
  /* 1511 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_int32_t_O_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__MDArray_O_,
  /* 1515 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_int32_t_O,
  /* 1519 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_byte4_t_O_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__MDArray_O_,
  /* 1523 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_byte4_t_O,
  /* 1527 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_float_O_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__MDArray_O_,
  /* 1531 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_float_O,
  /* 1535 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_size_t_O_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__MDArray_O_,
  /* 1539 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_size_t_O,
  /* 1543 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_byte8_t_O_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__MDArray_O_,
  /* 1547 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_byte8_t_O,
  /* 1551 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_int2_t_O_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__MDArray_O_,
  /* 1555 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_int2_t_O,
  /* 1559 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_fixnum_O_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__MDArray_O_,
  /* 1563 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_fixnum_O,
  /* 1567 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArrayBaseChar_O_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__MDArray_O_,
  /* 1571 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArrayBaseChar_O,
  /* 1575 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_byte64_t_O_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__MDArray_O_,
  /* 1579 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_byte64_t_O,
  /* 1583 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_geom__MDArrayCoordinate_O_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__MDArray_O_,
  /* 1587 */ &&obj_deallocate_unmanaged_instance_STAMP_geom__MDArrayCoordinate_O,
  /* 1591 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArrayT_O_core__SimpleMDArrayT_O_core__SimpleVector_O_core__MDArray_O_,
  /* 1595 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArrayT_O,
  /* 1599 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_O,
  /* 1603 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__SimpleMDArray_O_,
  /* 1607 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_int8_t_O,
  /* 1611 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__SimpleMDArray_O_,
  /* 1615 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_byte32_t_O,
  /* 1619 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__SimpleMDArray_O_,
  /* 1623 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_int2_t_O,
  /* 1627 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__SimpleMDArray_O_,
  /* 1631 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_byte4_t_O,
  /* 1635 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__SimpleMDArray_O_,
  /* 1639 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_int32_t_O,
  /* 1643 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__SimpleMDArray_O_,
  /* 1647 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_float_O,
  /* 1651 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__SimpleMDArray_O_,
  /* 1655 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_int16_t_O,
  /* 1659 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__SimpleMDArray_O_,
  /* 1663 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_size_t_O,
  /* 1667 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__SimpleMDArray_O_,
  /* 1671 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArrayCharacter_O,
  /* 1675 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__SimpleMDArray_O_,
  /* 1679 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_byte2_t_O,
  /* 1683 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__SimpleMDArray_O_,
  /* 1687 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_byte16_t_O,
  /* 1691 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__SimpleMDArray_O_,
  /* 1695 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArrayBaseChar_O,
  /* 1699 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__SimpleMDArray_O_,
  /* 1703 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_byte64_t_O,
  /* 1707 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__SimpleMDArray_O_,
  /* 1711 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_double_O,
  /* 1715 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArrayT_O_core__SimpleVector_O_core__SimpleMDArray_O_,
  /* 1719 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArrayT_O,
  /* 1723 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__SimpleMDArray_O_,
  /* 1727 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_int4_t_O,
  /* 1731 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__SimpleMDArray_O_,
  /* 1735 */ &&obj_deallocate_unmanaged_instance_STAMP_geom__SimpleMDArrayCoordinate_O,
  /* 1739 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__SimpleMDArray_O_,
  /* 1743 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_fixnum_O,
  /* 1747 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__SimpleMDArray_O_,
  /* 1751 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArrayBit_O,
  /* 1755 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__SimpleMDArray_O_,
  /* 1759 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_byte8_t_O,
  /* 1763 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleArray_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__SimpleMDArray_O_,
  /* 1767 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleMDArray_int64_t_O,
  /* 1771 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_O,
  /* 1775 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_double_O_core__SimpleVector_double_O_core__ComplexVector_O_,
  /* 1779 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_double_O,
  /* 1783 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_int8_t_O_core__SimpleVector_int8_t_O_core__ComplexVector_O_,
  /* 1787 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_int8_t_O,
  /* 1791 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_T_O_core__SimpleVector_O_core__ComplexVector_O_,
  /* 1795 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_T_O,
  /* 1799 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_int32_t_O_core__SimpleVector_int32_t_O_core__ComplexVector_O_,
  /* 1803 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_int32_t_O,
  /* 1807 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_byte16_t_O_core__SimpleVector_byte16_t_O_core__ComplexVector_O_,
  /* 1811 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_byte16_t_O,
  /* 1815 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_geom__ComplexVectorCoordinate_O_geom__SimpleVectorCoordinate_O_core__ComplexVector_O_,
  /* 1819 */ &&obj_deallocate_unmanaged_instance_STAMP_geom__ComplexVectorCoordinate_O,
  /* 1823 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_byte4_t_O_core__SimpleVector_byte4_t_O_core__ComplexVector_O_,
  /* 1827 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_byte4_t_O,
  /* 1831 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_byte64_t_O_core__SimpleVector_byte64_t_O_core__ComplexVector_O_,
  /* 1835 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_byte64_t_O,
  /* 1839 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_int2_t_O_core__SimpleVector_int2_t_O_core__ComplexVector_O_,
  /* 1843 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_int2_t_O,
  /* 1847 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_float_O_core__SimpleVector_float_O_core__ComplexVector_O_,
  /* 1851 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_float_O,
  /* 1855 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_int16_t_O_core__SimpleVector_int16_t_O_core__ComplexVector_O_,
  /* 1859 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_int16_t_O,
  /* 1863 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_int4_t_O_core__SimpleVector_int4_t_O_core__ComplexVector_O_,
  /* 1867 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_int4_t_O,
  /* 1871 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_size_t_O_core__SimpleVector_size_t_O_core__ComplexVector_O_,
  /* 1875 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_size_t_O,
  /* 1879 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_byte2_t_O_core__SimpleVector_byte2_t_O_core__ComplexVector_O_,
  /* 1883 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_byte2_t_O,
  /* 1887 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_byte8_t_O_core__SimpleVector_byte8_t_O_core__ComplexVector_O_,
  /* 1891 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_byte8_t_O,
  /* 1895 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_byte32_t_O_core__SimpleVector_byte32_t_O_core__ComplexVector_O_,
  /* 1899 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_byte32_t_O,
  /* 1903 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__BitVectorNs_O_core__SimpleBitVector_O_core__ComplexVector_O_,
  /* 1907 */ &&obj_deallocate_unmanaged_instance_STAMP_core__BitVectorNs_O,
  /* 1911 */ &&obj_deallocate_unmanaged_instance_STAMP_core__StrNs_O,
  /* 1915 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__Str8Ns_O_core__SimpleBaseString_O_core__StrNs_O_,
  /* 1919 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Str8Ns_O,
  /* 1923 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__StrWNs_O_core__SimpleCharacterString_O_core__StrNs_O_,
  /* 1927 */ &&obj_deallocate_unmanaged_instance_STAMP_core__StrWNs_O,
  /* 1931 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_fixnum_O_core__SimpleVector_fixnum_O_core__ComplexVector_O_,
  /* 1935 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_fixnum_O,
  /* 1939 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Vector_core__ComplexVector_int64_t_O_core__SimpleVector_int64_t_O_core__ComplexVector_O_,
  /* 1943 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ComplexVector_int64_t_O,
  /* 1947 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_int64_t_O_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__MDArray_O_,
  /* 1951 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_int64_t_O,
  /* 1955 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_byte32_t_O_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__MDArray_O_,
  /* 1959 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_byte32_t_O,
  /* 1963 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_byte2_t_O_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__MDArray_O_,
  /* 1967 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_byte2_t_O,
  /* 1971 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArrayCharacter_O_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__MDArray_O_,
  /* 1975 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArrayCharacter_O,
  /* 1979 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArrayBit_O_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__MDArray_O_,
  /* 1983 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArrayBit_O,
  /* 1987 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_byte16_t_O_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__MDArray_O_,
  /* 1991 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_byte16_t_O,
  /* 1995 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_int4_t_O_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__MDArray_O_,
  /* 1999 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_int4_t_O,
  /* 2003 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_Array_core__MDArray_double_O_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__MDArray_O_,
  /* 2007 */ &&obj_deallocate_unmanaged_instance_STAMP_core__MDArray_double_O,
  /* 2011 */ &&obj_deallocate_unmanaged_instance_STAMP_core__AbstractSimpleVector_O,
  /* 2015 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_byte32_t_O_unsigned_int_core__AbstractSimpleVector_O_,
  /* 2019 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_byte32_t_O,
  /* 2023 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_size_t_O_unsigned_long_core__AbstractSimpleVector_O_,
  /* 2027 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_size_t_O,
  /* 2031 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_double_O_double_core__AbstractSimpleVector_O_,
  /* 2035 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_double_O,
  /* 2039 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_int2_t_O_2_1_,
  /* 2043 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_int2_t_O,
  /* 2047 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_int64_t_O_long_core__AbstractSimpleVector_O_,
  /* 2051 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_int64_t_O,
  /* 2055 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_int8_t_O_signed_char_core__AbstractSimpleVector_O_,
  /* 2059 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_int8_t_O,
  /* 2063 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_byte4_t_O_4_0_,
  /* 2067 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_byte4_t_O,
  /* 2071 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_geom__SimpleVectorCoordinate_O_Vector3_core__AbstractSimpleVector_O_,
  /* 2075 */ &&obj_deallocate_unmanaged_instance_STAMP_geom__SimpleVectorCoordinate_O,
  /* 2079 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleString_O,
  /* 2083 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleBaseString_O_unsigned_char_core__SimpleString_O_,
  /* 2087 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleBaseString_O,
  /* 2091 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleCharacterString_O_int_core__SimpleString_O_,
  /* 2095 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleCharacterString_O,
  /* 2099 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_int16_t_O_short_core__AbstractSimpleVector_O_,
  /* 2103 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_int16_t_O,
  /* 2107 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_byte16_t_O_unsigned_short_core__AbstractSimpleVector_O_,
  /* 2111 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_byte16_t_O,
  /* 2115 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleBitUnitVector_core__SimpleBitVector_O_1_0_,
  /* 2119 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleBitVector_O,
  /* 2123 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_int4_t_O_4_1_,
  /* 2127 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_int4_t_O,
  /* 2131 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_byte64_t_O_unsigned_long_core__AbstractSimpleVector_O_,
  /* 2135 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_byte64_t_O,
  /* 2139 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_fixnum_O_long_core__AbstractSimpleVector_O_,
  /* 2143 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_fixnum_O,
  /* 2147 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_float_O_float_core__AbstractSimpleVector_O_,
  /* 2151 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_float_O,
  /* 2155 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_O_gctools__smart_ptr_core__T_O__core__AbstractSimpleVector_O_,
  /* 2159 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_O,
  /* 2163 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_byte8_t_O_unsigned_char_core__AbstractSimpleVector_O_,
  /* 2167 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_byte8_t_O,
  /* 2171 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleBitUnitVector_core__SimpleVector_byte2_t_O_2_0_,
  /* 2175 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_byte2_t_O,
  /* 2179 */ &&obj_deallocate_unmanaged_instance_STAMP_core__template_SimpleVector_core__SimpleVector_int32_t_O_int_core__AbstractSimpleVector_O_,
  /* 2183 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SimpleVector_int32_t_O,
  /* 2187 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Character_dummy_O,
  /* 2191 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DataLayout_O,
  /* 2195 */ &&obj_deallocate_unmanaged_instance_STAMP_core__LoadTimeValues_O,
  /* 2199 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Readtable_O,
  /* 2203 */ &&obj_deallocate_unmanaged_instance_STAMP_core__PosixTime_O,
  /* 2207 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__StructLayout_O,
  /* 2211 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ExternalObject_O,
  /* 2215 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__Pass_O,
  /* 2219 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ModulePass_O,
  /* 2223 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ImmutablePass_O,
  /* 2227 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__TargetLibraryInfoWrapperPass_O,
  /* 2231 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__FunctionPass_O,
  /* 2235 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__MCSubtargetInfo_O,
  /* 2239 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__TargetSubtargetInfo_O,
  /* 2243 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__JITDylib_O,
  /* 2247 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__IRBuilderBase_O,
  /* 2251 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__IRBuilder_O,
  /* 2255 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__APInt_O,
  /* 2259 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DIBuilder_O,
  /* 2263 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__EngineBuilder_O,
  /* 2267 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__PassManagerBase_O,
  /* 2271 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__PassManager_O,
  /* 2275 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__FunctionPassManager_O,
  /* 2279 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__Value_O,
  /* 2283 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__User_O,
  /* 2287 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__Instruction_O,
  /* 2291 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__StoreInst_O,
  /* 2295 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__UnreachableInst_O,
  /* 2299 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ResumeInst_O,
  /* 2303 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__AtomicCmpXchgInst_O,
  /* 2307 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__FenceInst_O,
  /* 2311 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__CallBase_O,
  /* 2315 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__CallInst_O,
  /* 2319 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__InvokeInst_O,
  /* 2323 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__BranchInst_O,
  /* 2327 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__UnaryInstruction_O,
  /* 2331 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__VAArgInst_O,
  /* 2335 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__AllocaInst_O,
  /* 2339 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__LoadInst_O,
  /* 2343 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__SwitchInst_O,
  /* 2347 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__AtomicRMWInst_O,
  /* 2351 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__LandingPadInst_O,
  /* 2355 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ReturnInst_O,
  /* 2359 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__PHINode_O,
  /* 2363 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__IndirectBrInst_O,
  /* 2367 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__Constant_O,
  /* 2371 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__GlobalValue_O,
  /* 2375 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__Function_O,
  /* 2379 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__GlobalVariable_O,
  /* 2383 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__BlockAddress_O,
  /* 2387 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ConstantStruct_O,
  /* 2391 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ConstantInt_O,
  /* 2395 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ConstantFP_O,
  /* 2399 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ConstantPointerNull_O,
  /* 2403 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ConstantDataSequential_O,
  /* 2407 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ConstantDataArray_O,
  /* 2411 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ConstantExpr_O,
  /* 2415 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__UndefValue_O,
  /* 2419 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ConstantArray_O,
  /* 2423 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__Argument_O,
  /* 2427 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__BasicBlock_O,
  /* 2431 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__MetadataAsValue_O,
  /* 2435 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ThreadSafeContext_O,
  /* 2439 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__TargetMachine_O,
  /* 2443 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__LLVMTargetMachine_O,
  /* 2447 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__Triple_O,
  /* 2451 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__LLVMContext_O,
  /* 2455 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__PassManagerBuilder_O,
  /* 2459 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ExecutionEngine_O,
  /* 2463 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__Type_O,
  /* 2467 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__FunctionType_O,
  /* 2471 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__IntegerType_O,
  /* 2475 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__CompositeType_O,
  /* 2479 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__SequentialType_O,
  /* 2483 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__PointerType_O,
  /* 2487 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ArrayType_O,
  /* 2491 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__VectorType_O,
  /* 2495 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__StructType_O,
  /* 2499 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__TargetPassConfig_O,
  /* 2503 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__APFloat_O,
  /* 2507 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__Metadata_O,
  /* 2511 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__MDNode_O,
  /* 2515 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DILocation_O,
  /* 2519 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DINode_O,
  /* 2523 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DIVariable_O,
  /* 2527 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DILocalVariable_O,
  /* 2531 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DIScope_O,
  /* 2535 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DIFile_O,
  /* 2539 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DILocalScope_O,
  /* 2543 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DISubprogram_O,
  /* 2547 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DILexicalBlockBase_O,
  /* 2551 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DILexicalBlock_O,
  /* 2555 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DICompileUnit_O,
  /* 2559 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DIType_O,
  /* 2563 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DICompositeType_O,
  /* 2567 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DIDerivedType_O,
  /* 2571 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DISubroutineType_O,
  /* 2575 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DIBasicType_O,
  /* 2579 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__DIExpression_O,
  /* 2583 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__ValueAsMetadata_O,
  /* 2587 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__MDString_O,
  /* 2591 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__NamedMDNode_O,
  /* 2595 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__TargetOptions_O,
  /* 2599 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__Module_O,
  /* 2603 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__Target_O,
  /* 2607 */ &&obj_deallocate_unmanaged_instance_STAMP_llvmo__Linker_O,
  /* 2611 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Rack_O,
  /* 2615 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SmallMultimap_O,
  /* 2619 */ &&obj_deallocate_unmanaged_instance_STAMP_core__AtomicFixnumHolder_O,
  /* 2623 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Scope_O,
  /* 2627 */ &&obj_deallocate_unmanaged_instance_STAMP_core__FileScope_O,
  /* 2631 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Path_O,
  /* 2635 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Pathname_O,
  /* 2639 */ &&obj_deallocate_unmanaged_instance_STAMP_core__LogicalPathname_O,
  /* 2643 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Cache_O,
  /* 2647 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Stream_O,
  /* 2651 */ &&obj_deallocate_unmanaged_instance_STAMP_core__AnsiStream_O,
  /* 2655 */ &&obj_deallocate_unmanaged_instance_STAMP_core__SynonymStream_O,
  /* 2659 */ &&obj_deallocate_unmanaged_instance_STAMP_core__StringStream_O,
  /* 2663 */ &&obj_deallocate_unmanaged_instance_STAMP_core__StringOutputStream_O,
  /* 2667 */ &&obj_deallocate_unmanaged_instance_STAMP_core__StringInputStream_O,
  /* 2671 */ &&obj_deallocate_unmanaged_instance_STAMP_core__EchoStream_O,
  /* 2675 */ &&obj_deallocate_unmanaged_instance_STAMP_core__ConcatenatedStream_O,
  /* 2679 */ &&obj_deallocate_unmanaged_instance_STAMP_core__FileStream_O,
  /* 2683 */ &&obj_deallocate_unmanaged_instance_STAMP_core__IOFileStream_O,
  /* 2687 */ &&obj_deallocate_unmanaged_instance_STAMP_core__IOStreamStream_O,
  /* 2691 */ &&obj_deallocate_unmanaged_instance_STAMP_core__BroadcastStream_O,
  /* 2695 */ &&obj_deallocate_unmanaged_instance_STAMP_core__TwoWayStream_O,
  /* 2699 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Package_O,
  /* 2703 */ &&obj_deallocate_unmanaged_instance_STAMP_core__FileStatus_O,
  /* 2707 */ &&obj_deallocate_unmanaged_instance_STAMP_core__InvocationHistoryFrameIterator_O,
  /* 2711 */ &&obj_deallocate_unmanaged_instance_STAMP_core__DirectoryEntry_O,
  /* 2715 */ &&obj_deallocate_unmanaged_instance_STAMP_core__LightUserData_O,
  /* 2719 */ &&obj_deallocate_unmanaged_instance_STAMP_core__UserData_O,
  /* 2723 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Cons_O,
  /* 2727 */ &&obj_deallocate_unmanaged_instance_STAMP_core__VaList_dummy_O,
  /* 2731 */ &&obj_deallocate_unmanaged_instance_STAMP_core__Lisp_O,
  /* 2735 */ &&obj_deallocate_unmanaged_instance_STAMP_clang__RecursiveASTVisitor_asttooling__AstVisitor_O_,
  /* 2739 */ &&obj_deallocate_unmanaged_instance_STAMP_asttooling__AstVisitor_O,
  /* 2743 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCContainer,
  /* 2747 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__,
  /* 2751 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__,
  /* 2755 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyChiralRestraint_,
  /* 2759 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__,
  /* 2763 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__,
  /* 2767 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_short_,
  /* 2771 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__,
  /* 2775 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___,
  /* 2779 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__,
  /* 2783 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCBitUnitArray_moveable_4_0_,
  /* 2787 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__SymbolClassHolderPair_,
  /* 2791 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___,
  /* 2795 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__,
  /* 2799 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___,
  /* 2803 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__,
  /* 2807 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_unsigned_char_,
  /* 2811 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___,
  /* 2815 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___,
  /* 2819 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_,
  /* 2823 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__,
  /* 2827 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyAngle_,
  /* 2831 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__,
  /* 2835 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__,
  /* 2839 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__,
  /* 2843 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___,
  /* 2847 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__,
  /* 2851 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__OptionalArgument_,
  /* 2855 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__KeywordArgument_,
  /* 2859 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__KeyEntry_,
  /* 2863 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___,
  /* 2867 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__,
  /* 2871 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_Vector3_,
  /* 2875 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_,
  /* 2879 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__,
  /* 2883 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___,
  /* 2887 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__,
  /* 2891 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___,
  /* 2895 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyImproperRestraint_,
  /* 2899 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__,
  /* 2903 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__,
  /* 2907 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__,
  /* 2911 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__,
  /* 2915 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___,
  /* 2919 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___,
  /* 2923 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__,
  /* 2927 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___,
  /* 2931 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__,
  /* 2935 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__,
  /* 2939 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCBitUnitArray_moveable_2_0_,
  /* 2943 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__,
  /* 2947 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__,
  /* 2951 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCBitUnitArray_moveable_1_0_,
  /* 2955 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCBitUnitArray_moveable_2_1_,
  /* 2959 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__,
  /* 2963 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_int_,
  /* 2967 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___,
  /* 2971 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__,
  /* 2975 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__,
  /* 2979 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_float_,
  /* 2983 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__,
  /* 2987 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__,
  /* 2991 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__T_O___,
  /* 2995 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyDihedral_,
  /* 2999 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___,
  /* 3003 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_unsigned_int_,
  /* 3007 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__,
  /* 3011 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__,
  /* 3015 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__CacheRecord_,
  /* 3019 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__,
  /* 3023 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_double_,
  /* 3027 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__,
  /* 3031 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__,
  /* 3035 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___,
  /* 3039 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__,
  /* 3043 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__AtomPdbRec_,
  /* 3047 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__Cons_O_,
  /* 3051 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergySketchStretch_,
  /* 3055 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_signed_char_,
  /* 3059 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_,
  /* 3063 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__,
  /* 3067 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___,
  /* 3071 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__,
  /* 3075 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__,
  /* 3079 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergySketchNonbond_,
  /* 3083 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__,
  /* 3087 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__,
  /* 3091 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__FixedNonbondRestraint_,
  /* 3095 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__,
  /* 3099 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__,
  /* 3103 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__,
  /* 3107 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___,
  /* 3111 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__,
  /* 3115 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_double_,
  /* 3119 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___,
  /* 3123 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___,
  /* 3127 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__,
  /* 3131 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__,
  /* 3135 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__RequiredArgument_,
  /* 3139 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__,
  /* 3143 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__,
  /* 3147 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCBitUnitArray_moveable_4_1_,
  /* 3151 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__SymbolStorage_,
  /* 3155 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_,
  /* 3159 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___,
  /* 3163 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___,
  /* 3167 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__,
  /* 3171 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__,
  /* 3175 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___,
  /* 3179 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__,
  /* 3183 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_unsigned_long_,
  /* 3187 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyNonbond_,
  /* 3191 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___,
  /* 3195 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__AtomInfo_,
  /* 3199 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__,
  /* 3203 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__,
  /* 3207 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyAtom_,
  /* 3211 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___,
  /* 3215 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_int_,
  /* 3219 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__,
  /* 3223 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_core__AuxArgument_,
  /* 3227 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__ResidueOut_,
  /* 3231 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_long_,
  /* 3235 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__,
  /* 3239 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_,
  /* 3243 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___,
  /* 3247 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__,
  /* 3251 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__,
  /* 3255 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_chem__EnergyStretch_,
  /* 3259 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__,
  /* 3263 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__,
  /* 3267 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCArray_moveable_unsigned_short_,
  /* 3271 */ &&obj_deallocate_unmanaged_instance_STAMP_gctools__GCVector_moveable_float_,
  /* 3275 */ &&obj_deallocate_unmanaged_instance_STAMP_clang__FrontendAction,
  /* 3279 */ &&obj_deallocate_unmanaged_instance_STAMP_clang__ASTFrontendAction,
  /* 3283 */ &&obj_deallocate_unmanaged_instance_STAMP_clang__SyntaxOnlyAction,
  /* 3287 */ &&obj_deallocate_unmanaged_instance_STAMP_clang__tooling__ToolAction,
  /* 3291 */ &&obj_deallocate_unmanaged_instance_STAMP_clang__tooling__FrontendActionFactory,
  /* 3295 */ &&obj_deallocate_unmanaged_instance_STAMP_clang__ast_matchers__MatchFinder__MatchCallback,
   NULL
};
#endif // defined(GC_OBJ_DEALLOCATOR_TABLE)
#if defined(GC_GLOBAL_SYMBOLS)
#endif // defined(GC_GLOBAL_SYMBOLS)
#if defined(GC_GLOBALS)
 TAGGED_POINTER_FIX(_lisp);
#endif // defined(GC_GLOBALS)
